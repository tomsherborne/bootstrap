一个 赛季 球员 的 助攻 数不到 三次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 本赛季 至少 和 科比 · 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 球员 科比 布莱恩特 赛季 的 得 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
科比 · 布莱恩特 在 他 3 次 助攻 的 赛季 中 打出 了 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
这个 赛季 球员 有 3 个 或 更 少 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 平均 失误 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
一个 赛季 助攻 数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 最少 的 全季 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 拉 湖人队 效力 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
不 打 控球 后卫 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 抢断 不 超过 三次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 中 ， 他们 的 盖帽 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
请 注意 在 任何 一个 赛季 中 获得 最 多 篮板 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 打 控球 后卫	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 年度 科比 布莱恩特 有 三个 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
在 他 打球 的 那些 赛季 中 ， 哪些 球员 比 科比 布莱恩特 打得 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 三次 犯规 的 季节 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
哪个 位置 让 科比 的 抢断 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
科比 布莱恩特 本赛季 的 篮板 总数 是 多少 ， 他 只有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
2004 年 科比 布莱恩特 打 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
说出 本赛季 至少 有 3 个 篮板 球员 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 他们 在 大多数 失误 中 领先	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 同样 数量 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 参加 了 2004 赛季 或 2010 赛季 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 ， 哪支 队伍 参加 了 科比 布莱恩特 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
谁 每 赛季 打 不到 4 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 季节 是 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
科比 布莱恩特 制造 了 多少 块	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
什么 球队 为 科比 布莱恩特 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
什么 球员 与 科比 布莱恩特 相同 或 更 少 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 获得 了 相同 数量 的 抢断 ， 或者 比 科比 · 布莱恩特 少得 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 的 篮板 总数 是 多少 ， 他 只有 三个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
球员 得分 超过 2 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 用 三个 盖帽 打 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
04 赛季 科比 布莱恩特 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
将 赛季 中 阻挡 最多 的 球员 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 3 个 或 更 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 场 比赛 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
在 一个 赛季 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
为 每个 赛季 少于 3 次 助攻 的 球员 命名	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
如果 不是 更 多 的话 ， 哪个 球员 能 获得 与 科比 布莱恩特 一样 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 不 超过 3 个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 的 抢断 次数 少于 一个 赛季 的 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 犯 了 多于 或 少于 3 次 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 取得 了 多少 盖帽 ， 他 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
少于 3 次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 的 三场 比赛 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
上赛季 科比 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 有 3 个 盖帽 时有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
任何 一个 赛季 的 营业额 都 低于 任何 一个 赛季 可 归因于 科比 布莱恩特 的 营业额 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 与 科比 布莱恩特 有 同样 数量 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 的 篮板 数最多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
四季 都 有 超过 3 次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 与 科比 · 布莱恩特 的 失误 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 3 个 盖帽 时 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
什么 季节 科比 布莱恩特 只有 三个 街区	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
哪些 球员 与 科比 布莱恩特 在 同 一支 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 · 布莱恩特 在 2004 年 的 表现 如何 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
每个 赛季 有 多少 抢断 ， 科比 布莱恩特 平均 得到 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_steals ) ) )
什么 玩家 玩 了 多少 或 少于 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
拥有 最 多 两队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
发现 那些 球员 的 抢断 总数 大于 科比 布莱恩特 在 任何 一个 赛季 的 抢断 总数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 已经 打 过 两个 或 更 少 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 得分 多于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 2004 赛季 的 表现 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
在 多少 场 比赛 中 科比 布莱恩特 打出 了 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
什么 球员 的 抢断 数量 与 科比 · 布莱恩特 在 一个 赛季 中 的 抢断 次数 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 3 个 整个 赛季 的 篮板 时 ， 谁 做 了 科比 布莱恩特 的 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
什么 球员 至少 和 科比 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 一个 赛季 他 有 3 个 盖帽 时 ， 哪支 球队 是 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
04 年 科比 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
有 3 次 助攻 的 犯规 次数 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
一个 赛季 犯规 次数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 哪支 球队 做 了 三个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
这个 赛季 球员 犯规 次数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
科比 · 布莱恩特 在 他 犯下 3 次 犯规 的 赛季 中有 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
什么 球员 每 赛季 的 盖帽 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 玩家 命名 为 总数 小于 3 的 助手	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 本赛季 取得 了 超过 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那里 有 多少 队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
哪个 球员 在 一个 赛季 中 没有 比 科比 布莱恩特 更 多 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 助攻 数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 的 位置 不到 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 打 过 相同 或 更 少 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 次数 少于 一个 赛季 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 失误 次数 与 球员 科比 布莱恩特 的 失误 次数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
3 场 比赛 后 科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
谁 有 多于 或 少于 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
在 整个 赛季 中 ， 球员 有 多少 篮板 和 科比 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 多于 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 3 次 失误 的 赛季 中 ， 科比 布莱恩特 队 是 谁	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
其他 球员 与 科比 布莱恩特 的 位置 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 犯规 3 次 助攻 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
科比 布莱恩特 每个 赛季 的 助攻 时间 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
一个 赛季 抢断 的 球员 不会 超过 一个 赛季 的 抢断 球员 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 三次 抢断 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
在 一个 赛季 中 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一名 少于 三次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 球员 的 比赛场 均 不到 3 场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 职位 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
什么 位置 让 科比 布莱恩特 获得 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
在 至少 3 场 比赛 中 ， 科比 布莱恩特 在 赛季 中 取得 了 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
哪个 球员 在 一个 赛季 中有 最少 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 一个 有 3 次 或 更 多 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 街区	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
无论是 科比 布莱恩特 还是 勒布朗 詹姆斯	( call SW.listValue ( call SW.concat en.player.kobe_bryant en.player.lebron_james ) )
哪个 球员 是 科比 布莱恩特 或 勒布朗 詹姆斯	( call SW.listValue ( call SW.concat en.player.kobe_bryant en.player.lebron_james ) )
一个 赛季 球员 科比 布莱恩特 一个 赛季 3 个 盖帽 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
当 科比 布莱恩特 拿到 三个 篮板 时 ， 他 就 说出 了 这个 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
在 一个 赛季 中 ， 科比 布莱恩特 为 湖人队 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
哪位 球员 没有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 场 比赛 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 2004 赛季 取得 了 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
列出 2004 年 kobe   bryant 取得 的 失误 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
在 哪个 赛季 科比 布莱恩特 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
在 3 次 犯规 后 ， 科比 得到 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
一个 赛季 球员 的 犯规 次数 多于 或 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 的 篮板 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 不 超过 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 2004 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
球队 科比 布莱恩特 效力	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
在 哪个 赛季 ， 科比 布莱恩特 打出 了 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
科比 布莱恩特 打 了 多少 场 比赛 ， 他 有 超过 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
所有 赛季 球员 都 有 比 科比 布莱恩特 更 多 或 更 多 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 最少 的 积木	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 哪个 球员 和 科比 · 布莱恩特 一样 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 不 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 在 一个 赛季 中有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
每个 赛季 哪个 球员 放弃 了 与 科比 布莱恩特 相同 的 失误 次数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 打得少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 比 科比 布莱恩特 更 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 每 赛季 的 抢断 次数 都 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 有 多少 场 比赛 都 有 科比 布莱恩特 出场	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) )
一个 赛季 超过 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 玩家 拥有 比块 数为 3 的 kobe   bryant 更 多 的 块	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
2004 年 科比 布莱恩特 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
什么 是 科比 布莱恩特 只有 3 个 篮板 的 赛季 总数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 至少 3 分 的 赛季 中输 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
科比 布莱恩特 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
科比 布莱恩特 本赛季 有 多少 盖帽 ， 他 还有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
在 得到 3 个 篮板 后 ， 科比 · 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
列出 科比 布莱恩特 的 总 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
控卫 科比 布莱恩特 制造 了 多少 块	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
科比 布莱恩特 在 三分 中犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
找到 一个 特定 赛季 篮板 总数 超过 一个 赛季 篮板 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 得分 低于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 一名 没有 三次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 的 犯规 次数 少于 4 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 不是 控球 后卫	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 篮板 数比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 本赛季 有 多少 助攻 得到 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
一个 赛季 犯规 次数 比 科比 布莱恩特 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 任何 一个 赛季 犯规 总数 等于 或 高于 科比 布莱恩特 的 球员 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 比 一名 球员 科比 布莱恩特 的 失误 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一年 科比 布莱恩特 为 拉 湖人队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
2004 年 ， 哪支 球队 为 科比 布莱恩特 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 赛季 科比 布莱恩特 只有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
本赛季 有 很多 篮板球 的 控球 后卫 科比 布莱恩特 出场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
哪些 球员 最多 有 2 个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 少于 3 个 街区	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 三场 总 比赛 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
将 那些 在 任何 一个 赛季 得分 至少 3 分 的 球员 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 得分 最低	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 为 湖人队 比赛 时 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
一个 赛季 少于 4 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
拉湖 球员 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 在 得到 3 分时 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
什么 玩家 玩 了 3 场 或 更 多 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
与 科比 布莱恩特 有过 相同 或 更 多 失误 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 得到 了 超过 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那些 在 特定 赛季 中 营业额 最 多 等于 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 超过 3 次 抢断 的 赛季 中 ， 科比 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
什么 球员 比 科比 布莱恩特 有 更 少 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 3 次 抢断 后 ， 科比 布莱恩特 打出 了 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 多少 场 比赛 中 出场 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
一个 赛季 没有 打过 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 的 总 犯规 数 低于 3	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 的 失误 等于 3 时 ， 科比 布莱恩特 有 多少 个 赛季 的 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
在 一个 赛季 中有 3 个 篮板 的 球员 科比 布莱恩特 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
什么 球员 每 赛季 的 助攻 数比 控球 后卫 科比 · 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 年 ， 科比 布莱恩特 有 多少 个 全场 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
在 一个 赛季 中 得到 同等 数量 助攻 的 球员 最低 助攻 总数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 ， 什么 球员 比 科比 布莱恩特 打得 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
什么 玩家 有 3 个 或 更 多块	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 任何 一个 赛季 的 篮板 数 与 科比 · 布莱恩特 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
科比 · 布莱恩特 在 本赛季 为 洛杉矶 湖人队 效力 的 比赛 中 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
在 整个 赛季 中 ， 哪些 球员 比 科比 布莱恩特 少得 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最 多 抢断 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
与 科比 布莱恩特 有 相同 数量 或 更少 助攻 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那些 在 特定 赛季 中 总 抢断 次数 低于 特定 赛季 科比 布莱恩特 获得 的 抢断 总数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 队	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
科比 布莱恩特 在 什么 位置 得到 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
哪位 球员 的 位置 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 多 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这 被 认为 是 3 个 盖帽 的 球员 科比 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
一个 赛季 球员 科比 布莱恩特 的 比赛 数量 超过 一个 赛季 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
找到 那些 在 任何 赛季 中 负责 少于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 做出 了 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
什么 球队 科比 布莱恩特 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
有 多少 职位	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
当 他 有 三个 盖帽 时 ， 科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
科比 · 布莱恩特 在 本赛季 得到 3 次 助攻 时有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
所有 赛季 球员 的 失误 都 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 哪个 赛季 科比 布莱恩特 得到 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
在 一个 赛季 中 没有 三次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
来自 洛杉矶 湖人队 或 克利夫兰 骑士队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 的 比赛 中 比 科比 布莱恩特 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 3 次 或 更 少 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 个 全季 助攻 ， 有 多少 全季 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
哪个 球员 与 科比 布莱恩特 的 位置 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 获得 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
谁 每个 赛季 有 3 次 或 更 多 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 到 目前为止 谁 领跑 积分 赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 都 比 科比 布莱恩特 得分 更 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 为 洛杉矶 湖人队 效力 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 在 他 的 三个 赛季 中为 球队 做 了 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
本赛季 中 哪位 球员 和 科比 布莱恩特 队 一起 打出 了 很多 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一个 得分 不是 三分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那个 属于 洛杉矶 湖人队 的 科比 布莱恩特 制造 了 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
在 一个 赛季 中有 3 次 犯规 的 球员 科比 布莱恩特 的 一个 赛季 中 的 盖帽 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
无论是 2004 年 还是 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
在 一个 赛季 中比 在 科比 布莱恩特 场上 打更 多 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 球员 科比 布莱恩特 队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 所有 赛季 都 有 较 少 的 反弹	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 哪些 球员 的 犯规 次数 与 科比 · 布莱恩特 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一个 犯规 少于 三次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
科比 · 布莱恩特 在 哪个 赛季 共 参加 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
什么 球队 让 科比 布莱恩特 得到 3 个 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
命名 至少 有 三个 玩过 的 游戏 的 玩家	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 多少 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
本赛季 到 目前为止 ， 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
一名 球员 科比 布莱恩特 在 控卫 位置 上 犯规 的 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
科比 在 哪个 赛季 取得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
除了 控球 后卫 以外 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
球员 在 一个 赛季 犯规 不 超过 一个 球员 科比 布莱恩特 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 作为 一名 湖人队 有 多少 赛季 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
什么 球员 在 整个 赛季 中 打 了 不到 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
为 每个 赛季 不 超过 三分 的 球员 命名	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 不少 于 3 个 赛季 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 科比 布莱恩特 抢断 的 数量 超过 一个 赛季 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
哪个 球员 在 一个 赛季 犯下 了 3 次 以上 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 职业 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
在 一个 赛季 中 ， 球员 的 名字 比 球员 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 不 超过 三次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 每场 比赛 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 赛季 的 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
科比 布莱恩特 为 湖人队 效力 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
在 一个 赛季 球员 kobe   bryant 上 打过 更 多 比赛 的 球员 已经 打 了 一个 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 与 科比 布莱恩特 相同 数量 或 更 少 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 什么 球员 比 科比 布莱恩特 有 更 多 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 每个 赛季 都 有 超过 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 本赛季 打出 了 3 个 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
科比 在 职业生涯 中为 球队 效力 的 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
什么 球员 有 超过 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 玩家 最多 有 3 个 街区	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 场 比赛 中有 多少 次 全场 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
谁 的 失误 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 属于 科比 布莱恩特 · 蒸汽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 哪一年 有 三次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
每年 不会 比 科比 布莱恩特 犯规 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
无论是 2004 年 还是 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
科比 布莱恩特 在 季后赛 中有 多少 次 失误 超过 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
2004 年 科比 布莱恩特 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
哪个 球员 有 三个 或 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 整个 赛季 都 有 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 比 一名 球员 科比 布莱恩特 打 了 更 多 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 有 更 多 的 分数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 拥有 相同 或 更 多 的 块 比 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球队 是 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
哪些 球员 为 湖人队 或 骑士队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 控球 后卫 或 前锋	( call SW.listValue ( call SW.concat en.position.point_guard en.position.forward ) )
哪个 球员 为 最少 的 球队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
什么 球员 在 一个 赛季 中 打出 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 赛季 ， 球员 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 本赛季 犯 了 多少 失误 ， 他 犯 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
在 2004 年 ， 科比 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
在 他 只有 三次 犯规 的 赛季 中 ， 科比 布莱恩特 的 盖帽 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
在 本赛季 他 有 3 次 盖帽 ， 科比 布莱恩特 正在 为什么 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
前锋 或 控卫 的 球员	( call SW.listValue ( call SW.concat en.position.point_guard en.position.forward ) )
科比 布莱恩特 犯 三次 犯规 时有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
科比 布莱恩特 队 在 一个 赛季 中 贡献 了 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
在 一个 赛季 中有 3 次 助攻 的 球员 科比 布莱恩特 的 得 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
科比 布莱恩特 作为 控球 后卫 放弃 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
哪支 球队 做过 科比 布莱恩特 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
科比 · 布莱恩特 在 3 场 比赛 中 制造 了 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
谁 得到 了 最少 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 犯规 作为 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
说出 一个 赛季 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
从 赛季 开始 ， 他们 的 助攻 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪支 队伍 让 科比 布莱恩特 担任 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
科比 · 布莱恩特 在 职业生涯 中 得到 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
科比 布莱恩特 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 一场 有 三次 失误 的 比赛 中有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
球队 得分 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 3 次 抢断 的 赛季 中 ， 有 多少 场 比赛 是 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
科比 布莱恩特 犯 3 次 犯规 时有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
科比 布莱恩特 对 湖人 有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
哪位 球员 打 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 次数 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪支 队伍 为 科比 布莱恩特 打 控卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
本赛季 科比 有 多少 场 比赛 有 三次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
本赛季 科比 布莱恩特 的 篮板 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
在 这个 赛季 中 ， 科比 · 布莱恩特 的 助攻 总数 是 3 支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
在 给定 的 赛季 中 ， 科比 布莱恩特 的 平均数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
在 哪个 赛季 ， 科比 布莱恩特 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
在 科比 布莱恩特 打 了 3 场 比赛 的 赛季 中 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
科比 在 比赛 中有 多少 篮板 ， 他 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
在 他 得分 3 分 的 赛季 中 ， 他 负责 科比 布莱恩特 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
在 一个 赛季 中 与 科比 布莱恩特 有 相同 失误 次数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 得分 最多 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 总 篮板 数 不 超过 三个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 2004 年 或 2010 年 打 过球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 与 洛杉矶 湖人队 的 赛季 中 ， 科比 · 布莱恩特 获得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
在 多少 场 比赛 中 ， 科比 · 布莱恩特 获得 了 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 拥有 最 多 盖帽 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 科比 布莱恩特 总共 有 3 次 抢断 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_steals ) ) )
在 一个 赛季 中 哪个 球员 拥有 最多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 与 科比 布莱恩特 相同 的 赛季 中所 打过 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 赛季 中 只 打 了 3 个 盖帽 ， 对 他 只有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 赛季 有 3 次 助攻 时有 多少 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
哪位 球员 的 得分 至少 与 科比 · 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 比 科比 布莱恩特 打 了 更 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 抢断 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 场 比赛 中 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
说出 一个 没有 三次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 平均 每场 比赛 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
科比 布莱恩特 在 一个 赛季 犯下 3 次 犯规 的 篮板球 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
哪个 球员 每个 赛季 的 抢断 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 拥有 与 科比 布莱恩特 一样 多 的 全 季节 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 上场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
球员 科比 布莱恩特 的 赛季 ， 他 在 一个 赛季 中 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
在 3 次 犯规 后 ， 科比 布莱恩特 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_assists ) ) )
科比 布莱恩特 在 赛季 中有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
谁 在 一个 赛季 中 拥有 最多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 超过 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
洛杉矶 湖人队 在 一个 赛季 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
2004 年 ， 科比 · 布莱恩特 制造 了 多少 块	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
哪个 球员 拥有 最少 数量 的 kobe   bryant	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 打 控卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 多少 场 比赛 犯规 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
2004 年 科比 布莱恩特 队 效力 于 什么 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 球员 没有 得到 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
洛杉矶 队 的 科比 布莱恩特 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
科比 布莱恩特 有 三次 失误 ， 有 三次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
科比 从 任何 一支 球队 的 控卫 那里 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
3 场 比赛 后 科比 布莱恩特 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
至少 犯规 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 助攻 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
在 他 负责 3 次 抢断 的 赛季 中 ， 科比 布莱恩特 队 的 名字 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
科比 布莱恩特 作为 一名 湖人队 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
说出 一个 赛季 中 属于 科比 布莱恩特 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
科比 布莱恩特 作为 洛杉矶 湖人队 有 多少 场 全季 反弹	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
在 哪个 赛季 ， 科比 布莱恩特 参加 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
哪位 球员 的 位置 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
nba 中有 多少 队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
什么 赛季 科比 布莱恩特 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
找到 那些 在 特定 赛季 中 游戏 时间 不 超过 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 比 一名 球员 科比 布莱恩特 更 多 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 科比 布莱恩特 与 洛杉矶 湖人队 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
找到 科比 布莱恩特 犯下 3 次 犯规 的 赛季 ， 并 注意 同一 时期 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
哪个 球员 不 在 控卫 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 扮演 控卫 或 前锋 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
04 年 科比 得到 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
哪个 球员 没有 比 科比 布莱恩特 更 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 球员 比 科比 布莱恩特 得分 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 有 多少 场 比赛 有 三次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
科比 布莱恩特 有 3 次 助攻 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
来自 洛杉矶 湖人队 的 球员 科比 布莱恩特 一个 赛季 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
科比 布莱恩特 有 3 次 盖帽 时有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
本赛季 球员 科比 布莱恩特 有 3 次 助攻 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
哪些 球员 不到 两支 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 球员 的 篮板 数 超过 球员 科比 布莱恩特 的 一个 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_steals ) ) )
那些 在 2004 年 没有 上场 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 有 3 次 或 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 多少 或 少于 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 同一 赛季 ， 他 获得 了 3 分 ， 科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
哪支 球队 做过 科比 布莱恩特 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
与 科比 布莱恩特 在 同 一支 球队 打球 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 已经 获得 3 个 或 更 少 的 块	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 中 至少 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 最 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 次 助攻 时 他 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
谁 有 抢断 记录	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 助攻 超过 一个 赛季 不 低于 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 控卫 位置 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
哪个 球员 每个 赛季 的 平均 失误 比 科比 布莱恩特 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
什么 球员 是 控卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 与 科比 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 拥有 最多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 时候 科比 布莱恩特 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
在 一个 赛季 中 ， 哪些 球员 拥有 和 科比 布莱恩特 一样 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 球员 科比 布莱恩特 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
什么 位置 是 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
所有 赛季 犯规 次数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 获得 了 多少 积分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
在 2004 赛季 ， 科比 布莱恩特 打 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
什么 球队 科比 布莱恩特 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string team ) ) )
什么 赛季 科比 布莱恩特 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
什么 是 科比 布莱恩特 在 赛季 中 只有 3 个 篮板 的 比赛 总数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
这个 职位 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
科比 布莱恩特 得到 3 分时 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
一个 赛季 与 球员 科比 布莱恩特 相同 的 篮板 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 或 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
谁 本赛季 有 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 那些 造成 3 次 或 更少 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 为 洛杉矶 湖人队 效力 的 那 一年 里 ， 科比 布莱恩特 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
科比 · 布莱恩特 在 他 打 控卫 的 那个 赛季 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
对于 他 负责 3 个 盖帽 的 赛季 ， 科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
科比 · 布莱恩特 在 一个 赛季 中 抢断 3 次 助攻 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
科比 布莱恩特 在 赛季 中 创造 了 多少 次 盖帽 ， 只有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
在 哪个 赛季 ， 科比 布莱恩特 犯 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
科比 · 布莱恩特 作为 控球 后卫 在 各个 赛季 都 有所 反弹	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
哪个 球员 每个 赛季 都 有 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 最多 3 次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 块	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 只有 三场 比赛 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
一个 赛季 犯规 不 超过 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 3 次 或 更 少 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 整个 赛季 的 比赛 数量 不亚于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 每个 赛季 有 更 多 的 盖帽 比 科比 布莱恩特 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 的 球员 科比 布莱恩特 在 一个 赛季 中有 3 个 失误 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
与 科比 布莱恩特 相同 或 更少 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 赛季 期间 ， 有 3 个 篮板球 的 科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
哪个 球员 处于 控卫 或 前锋 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 最多 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 每个 赛季 做出 3 次 助攻 的 比赛 中 表现出色	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
一个 赛季 从未 打过 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 队有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
在 3 个 以上 的 值班 比赛 中 ， 有 多少 失误 让 科比 布莱恩特 放弃 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
科比 布莱恩特 上赛季 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 · 布莱恩特 为 这些 湖人队 效力 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
哪个 球员 每 赛季 犯规 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 大多数 比赛 中 球员 的 表现	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 洛杉矶 湖人队 带来 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 整个 赛季 获得 了 多少 积分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
科比 布莱恩特 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
科比 布莱恩特 打 控卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string position ) ) )
什么 球员 一个 赛季 超过 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 拥有 和 科比 · 布莱恩特 一样 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 获得 3 分 的 球员 科比 布莱恩特 的 一个 赛季 的 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
每个 赛季 哪位 球员 带领 科比 布莱恩特 获得 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
当 科比 布莱恩特 有 三次 助攻 时 他 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
一个 赛季 总共 最多 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 助攻 数量 超过 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 不 低于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一个 赛季 得到 3 分后 有 多少 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
科比 布莱恩特 在 3 场 比赛 中 得到 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
本赛季 到 目前为止 ， 他 的 比赛 时间 不到 3 场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 2004 年 科比 布莱恩特 队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
所有 赛季 球员 都 有 比 科比 布莱恩特 更 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 的 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
科比 布莱恩特 作为 控卫有 多少 赛季 积分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
与 科比 布莱恩特 扮演 同样 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 那些 在 任何 一个 赛季 中 负责 少于 3 个 盖帽 的 球员 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
在 哪个 赛季 ， 科比 布莱恩特 平均 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
kobe   bryant 获得 了 多少 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
得到 3 次 助攻 后 ， 科比 · 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
在 什么 位置 科比 能够 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
在 一个 赛季 中 ， 一个 赛季 的 盖帽 数量 少于 球员 科比 布莱恩特 的 盖帽 数量	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 球员 的 助攻 总数 超过 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
是否 存在 任何 一个 赛季 助攻 总数 最 多 等于 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 全 季节 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 和 科比 布莱恩特 打 过 相同 数量 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 本赛季 打 了 不到 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
四季 都 比 科比 布莱恩特 有 更 多 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 的 球员 有 3 次 或 更 少 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 本赛季 打 三次 犯规 时犯 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
在 2004 年 没有 参加 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 3 次 抢断 后 科比 布莱恩特 得到 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
能够 摆 出 一两个 不同 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一名 球员 科比 布莱恩特 在 控卫 位置 上 的 得 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
什么 年度 科比 布莱恩特 上场	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
什么 是 一个 球员 的 名字 ， 每个 赛季 的 失误 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 那个 时候 ， 科比 布莱恩特 是 控球 后卫 的 名字 ， 那个 赛季 他 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
一个 赛季 没有 比 一名 球员 科比 布莱恩特 更 多 的 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 多少 个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
球员 科比 布莱恩特 本赛季 有 3 个 篮板球 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
科比 布莱恩特 在 3 次 抢断 时有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 三场 比赛 中 打出 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 · 布莱恩特 在 哪一年 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
什么 球员 是 最 多才多艺 的 ， 并且 占据 最多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 玩家 玩过 最少 数量 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 最多 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 3 次 失误 时 ， 科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
拥有 一支 球队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 哪个 赛季 ， 科比 布莱恩特 有 三次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
这个 赛季 球员 的 失误 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 在 与 科比 布莱恩特 相同 的 赛季 中 获得 相同 或 更少 助攻 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 取得 3 分 的 失误 次数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
在 多少 场 比赛 中 ， 科比 · 布莱恩特 犯 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 一个 赛季 取得 了 多少 分 ， 当时 他 得到 了 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
什么 球员 与 科比 布莱恩特 有 同样 数量 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 赛季 中有 多少 失误 ， 他 平均 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 3 次 盖帽 时有 多少 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
科比 布莱恩特 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中场 均 3 次 犯规 和 3 次 封盖	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
有 多少 街区 让 科比 布莱恩特 成为 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
这个 赛季 球员 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 一个 赛季 中 只有 3 次 犯规 的 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
科比 布莱恩特 得到 3 分时 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
本赛季 场均 13 个 篮板 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 打出 3 个 篮板 的 比赛 数量 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
科比 · 布莱恩特 打 控卫 的 一个 赛季 助攻 总数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
有 多少 场 比赛 让 科比 放弃 了 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
如果 他 已经 得到 3 分 ， 那么 科比 · 布莱恩特 通常 会 打 多少 块	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
有 多少 玩家 获得 了 少于 或 多于 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 参加 过 多场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 球员 都 有 三次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 一个 赛季 中 的 数量 与 球员 科比 布莱恩特 的 数量 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 科比 布莱恩特 的 球队 是 洛杉矶 队 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
这是 科比 布莱恩特 队 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
一个 赛季 少于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 得分 不到 三分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 与 科比 布莱恩特 队 比赛 次数 相同 的 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 代表 大多数 球队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
请 注意 那些 在 任何 一个 赛季 累积 积分 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
哪个 球员 每 赛季 的 篮板 数比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 玩家 得分 多于 或 少于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 至 2010 年 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 比 科比 布莱恩特 有 更 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一年 科比 布莱恩特 打 控卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
谁 的 犯规 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
提到 本赛季 有 3 个 篮板 的 球员 科比 布莱恩特 得分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
科比 在 3 次 失误 后 获得 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 一个 赛季 中 做出 了 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
哪个 赛季 科比 布莱恩特 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
当 他 有 三个 篮板 时 科比 布莱恩特 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
什么 球员 在 一个 赛季 中 打 了 不到 4 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
团队 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
一个 赛季 球员 的 犯规 次数 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 中 阵容 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 赛季 中有 3 次 助攻 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
哪位 球员 至少 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 都 有 与 科比 布莱恩特 相同 数量 的 篮板 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 多 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 犯规 次数 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 助攻 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 打出 了 3 个 篮板球 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
哪个 球员 在 任何 一个 赛季 都 有 最少 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
犯规 次数 最少 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那些 在 特定 赛季 中 抢断 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 一个 赛季 中 没有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 得分 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 位置 是 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
哪个 球员 平均 每个 赛季 的 得分 少于 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 场均 得分 与 科比 布莱恩特 相同 的 助攻 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 是 每季 平均 积木 最少 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 最多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 助攻 数量 与 球员 科比 布莱恩特 赛季 数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 一个 赛季 他 只 得到 三个 篮板 时 ， 哪支 球队 做过 科比 布莱恩特 的 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
四季 都 有 少于 3 个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
在 他 参加 3 场 比赛 的 赛季 中 ， 科比 布莱恩特 的 表现 总是 如此	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
科比 布莱恩特 在 一个 赛季 中 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
为 一两个 NBA 球队 效力 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 洛杉矶 湖人队 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
所有 赛季 得分 最高 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 3 次 犯规 时有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
哪个 球员 每场 比赛 平均 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 没有 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 只 得到 3 分 的 季节 里 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
谁 比 科比 布莱恩特 有 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 的 助攻 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
注意 那些 在 任何 一个 赛季 中 总 阻挡 数量 超过 kobe   bryant 获得 的 任何 一个 赛季 总 积数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 抢断 不 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 次 封盖 后 得到 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
一个 赛季 球员 科比 布莱恩特 在 一个 赛季 中有 3 个 盖帽 犯规 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
在 一个 赛季 中 ， 什么 球员 比 科比 布莱恩特 有 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
四季 都 是 失误 最多 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 犯规 次数 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 本赛季 已经 犯 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_steals ) ) )
列出 本赛季 科比 布莱恩特 的 总得分 ， 并 注意 与 整个 赛季 总盖数 为 3 的 球员 的 比较	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
什么 球员 在 一个 赛季 中 得分 不 超过 三分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 和 科比 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 赛季 中 命名 一名 失误 比 科比 布莱恩特 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 所有 赛季 都 有 3 分 或 以上 的 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
在 一个 叫 科比 布莱恩特 的 赛季 中 ， 一名 球员 没有 更 多 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
科比 · 布莱恩特 在 本赛季 为 洛杉矶 湖人队 效力 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
哪些 球员 不为 拉 湖人队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一年 科比 布莱恩特 在 三场 比赛 中 出场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
在 一个 赛季 中 ， 有 3 个 盖帽 的 球员 科比 布莱恩特 的 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
哪个 球员 不 超过 三个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 至少 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 场 比赛 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
来自 洛杉矶 队 湖人队 的 球员 科比 布莱恩特 赛季 的 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
在 他 的 助攻 总数 为 3 的 同一 赛季 中 ， 科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
2004 年 科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
在 一个 赛季 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 一个 赛季 犯规 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
哪个 球员 的 数量 不 超过 科比 · 布莱恩特 的 抢断 数量	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 分时 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
什么 球员 有 3 个 全季 最佳 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 与 科比 布莱恩特 有 同样 数量 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 本赛季 的 助攻 数最多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
某支 球队 的 球员 号码 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
科比 布莱恩特 犯 3 次 犯规 时有 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
在 他 有 三个 篮板 的 赛季 中 ， 科比 布莱恩特 助攻 的 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
什么 球员 在 至少 3 场 比赛 中 得到 了 时间	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 得分 不到 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 名字 命名 为 比 kobe   bryant 少 的 玩家	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 场 比赛 的 球员 科比 布莱恩特 的 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
谁 是 一个 赛季 少于 3 个 盖帽 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 得到 3 次 助攻 时 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 队 在 一个 赛季 中 打出 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
在 三场 比赛 中 ， 科比 布莱恩特 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
抢得 最 多 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 拿下 3 分 得到 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
科比 布莱恩特 打 了 三场 比赛 的 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
什么 球员 有 3 或 更 少 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 和 科比 · 布莱恩特 一样 多 的 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这是 3 场 比赛 的 球员 科比 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
当 他 有 3 个 盖帽 时 ， 科比 布莱恩特 队 的 表现 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
科比 布莱恩特 作为 控卫 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
科比 得到 3 分后 得到 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中 取得 了 多少 成绩	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 多少 次 全场 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
什么 球员 拥有 与 科比 布莱恩特 相同 或 更 少 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 为 洛杉矶 湖人队 效力 的 赛季 中有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
什么 球员 不 超过 三个 全 季节 块	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 都 有 抢断 或者 击败 科比 布莱恩特 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 失误 次数 多于 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那些 在 2004 年 没有 上场 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 超过 三个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 3 次 抢断 季后赛 中 的 表现 如何 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
哪位 球员 的 位置 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 与 科比 布莱恩特 相同 或 更 少 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 每 赛季 平均 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
说出 科比 布莱恩特 执行 3 次 盖帽 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
本赛季 球员 的 犯规 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 三次 助攻 时 科比 球员 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 2004 赛季 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
科比 布莱恩特 在 打 控球 后 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
科比 布莱恩特 在 整个 赛季 中有 多少 场 比赛 失误 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
说出 一个 至少 和 科比 布莱恩特 一样 多 的 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 至少 有 3 次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 季节 科比 布莱恩特 发挥	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
在 一个 赛季 中 ， 球员 的 数量 与 科比 布莱恩特 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 获得 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
每个 赛季 都 和 科比 布莱恩特 一样 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 对 洛杉矶 湖人队 有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
当 一个 赛季 只有 三次 抢断 时 ， 球员 科比 布莱恩特 的 失误 次数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
当 科比 布莱恩特 制造 3 个 盖帽 时 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
哪个 球员 在 一个 赛季 中 没有 三个 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 是 篮板球 少于 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 只有 三个 盖帽 时 ， 科比 布莱恩特 在 一个 赛季 犯规 的 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
本赛季 哪个 球员 的 得分 少于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 没有 制造 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 的 篮板 数 上升 了 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 一个 赛季 中 的 总得分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
谁 玩 过 最少 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 次 抢断 时 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
在 整个 赛季 的 三场 比赛 中 ， 科比 平均 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
哪个 玩家 玩 了 不 超过 三场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 属于 洛杉矶 湖人队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string team ) ) )
在 一个 赛季 中 打 了 3 场 比赛 的 球员 科比 布莱恩特 上场比赛 的 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
将 每个 赛季 没有 得分 的 球员 命名 为 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
不是 洛杉矶 队员 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 3 个 篮板 的 盖帽 数量 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 盖帽 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
2004 赛季 科比 布莱恩特 的 统计数据	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
什么 数字 是 科比 布莱恩特 ， 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
科比 布莱恩特 在 赛季 总共 3 次 抢断 时犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
什么 球员 打 控卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 科比 布莱恩特 助攻 的 数量 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
哪个 球员 在 任何 一个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 ， 找到 总数 少于 kobe   bryant 执行 的 总 拦截 数 的 玩家	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
比 科比 布莱恩特 犯下 更 多 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 三个 盖帽 时 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
谁 是 更好 的 科比 布莱恩特 或 勒布朗 詹姆斯	( call SW.listValue ( call SW.concat en.player.kobe_bryant en.player.lebron_james ) )
这场 比赛 对 大多数 球队 都 有效	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 季节 科比 布莱恩特 只有 三次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
谁 抢 得 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球队 是 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
那里 有 多少 个 不同 的 职位	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
当 科比 布莱恩特 得到 3 个 篮板 时 ， 他 的 位置 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
科比 布莱恩特 在 湖人队 的 位置 上 发挥 了 什么 作用	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
哪个 球员 在 2004 年 或 2010 年 没有 上场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
不是 洛杉矶 湖人 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 3 分 或 更 少分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 次 助攻 时 ， 球队 的 表现 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
什么 季节 科比 布莱恩特 打 控卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
什么 球员 的 得分 少于 或 等于 篮板球 的 数量	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 赛季 只有 3 个 篮板球 ， 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_steals ) ) )
是否 有 球员 的 助攻 总数 少于 同一 赛季 科比 布莱恩特 获得 的 助攻 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 任何 一个 赛季 的 助攻 都 可以 帮助 球员 获得 超过 科比 布莱恩特 在 任何 一个 赛季 中 助攻 总数 的 记录	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 任何 一个 赛季 得分 不 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 球员 在 一个 赛季 中有 少于 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 中 阵容 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 ， 任何 一个 赛季 的 犯规 总数 相当于 科比 布莱恩特 的 犯规 总数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 的 篮板 数 上升 了 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
2004 赛季 科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
上赛季 哪位 球员 至少 有过 三次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 是 控球 后卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 失误 与 科比 · 布莱恩特 在 一个 赛季 中 失误 最少 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 赛季 积分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 的 得 分数 为 3 的 赛季 中 ， 有 多少 场 比赛 是 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
哪个 球员 在 赛季 中有 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 不是 控球 后卫	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 每场 比赛 有 三次 以上 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 作为 一名 湖人队 有 多少 场 全场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
当 篮板 数 等于 3 时 ， 科比 布莱恩特 的 得分 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
科比 布莱恩特 在 一个 赛季 取得 了 3 次 助攻 的 成绩	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
科比 布莱恩特 属于 哪支 球队 得 分为 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string team ) ) )
得到 3 次 助攻 后 科比 得到 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
多少 个 赛季 科比 布莱恩特 得分 超过 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
一个 赛季 犯规 次数 与 一个 赛季 球员 科比 布莱恩特 犯规 次数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 比 科比 布莱恩特 更少 的 全 季节 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 同一 赛季 中 ， 他 参加 了 3 场 比赛 ， 并 指出 了 科比 · 布莱恩特 犯规 的 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
哪些 球员 在 两个 位置 上 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 两个 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 取得 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
在 两个 位置 上 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 本赛季 有 超过 3 个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
科比 布莱恩特 在 赛季 中 打 了 多少 场 比赛 他 的 总 积数 等于 3	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
是否 有 球员 在 任何 一个 赛季 的 得分 都 低于 科比 布莱恩特 的 得分 总分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 得分 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 3 次 抢断 时 科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
一个 赛季 球员 科比 布莱恩特 的 抢断 数量 超过 一个 赛季 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_steals ) ) )
有 多少 球员	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
在 一个 赛季 中 比 一名 球员 科比 布莱恩特 打得 更少 比赛 的 球员 已经 打 了 一个 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 多少 场 比赛 ， 科比 · 布莱恩特 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
什么 球员 有 最 多 的 全季 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 打 了 3 场 以上 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 超过 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 的 助攻 数 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 取得 了 3 个 篮板球 犯规 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
哪个 球员 比 科比 布莱恩特 犯规 更 多 ， 或者 每个 赛季 都 犯 同样 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 不 属于 洛杉矶 湖人队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 失误 时犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
在 他 有 三个 篮板 的 所有 赛季 中 ， 科比 布莱恩特 的 犯规 情况 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 三场 比赛 中 出场 时有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
在 他 的 赛季 中 打 控卫有 多少 次 助攻 是 科里 的 负责人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
扮演 控球 后卫 或 前锋 的 球员	( call SW.listValue ( call SW.concat en.position.point_guard en.position.forward ) )
一个 赛季 得分 少于 一个 赛季 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 每 赛季 少于 三个 盖帽 的 球员 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
自从 他 去 职业 球员 以来 ， 科比 有 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
说出 本赛季 至少 有 三次 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 没有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 3 个 街区 的 科比 布莱恩特 犯规 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
科比 布莱恩特 有 多少 三分 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
什么 赛季 科比 布莱恩特 打 控卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
科比 布莱恩特 在 控卫 位置 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
哪个 球员 有 最少 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
科比 布莱恩特 为 湖人队 效力 了 多少 个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
什么 位置 是 科比 在 三次 投篮 时 的 表现	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
哪个 球员 每 赛季 得分 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 的 球员 超过 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
什么 球员 发挥 最多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 犯规 次数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 对 洛杉矶 湖人 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
哪个 球员 的 赛季 总数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 个 篮板球 的 季节 里 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_steals ) ) )
在 他 有 三个 盖帽 的 比赛 中 ， 科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
一个 赛季 至少 3 次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 得分 等于 或 少于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 的 助攻 数比 科比 · 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 至少 和 科比 布莱恩特 一样 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 没有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 比 三个 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 控球 后卫 的 一个 赛季 中 ， 科比 · 布莱恩特 的 失误 总数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
科比 布莱恩特 在 一个 赛季 中能 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
谁 是 一个 每 赛季 甚至 没有 3 次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
他们 在 一个 赛季 中 领先 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 不少 于 3 次 的 球员 至少 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
有没有 像 科比 布莱恩特 那样 每 赛季 平均 得分 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 有 多少 同样 或 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 和 科比 · 布莱恩特 在 同一个 赛季 中 出场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 赛季 科比 布莱恩特 有 3 个 全季 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
哪位 球员 只 为 一支 球队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 少得 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一场 打 了 3 场 比赛 的 赛季 中有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 布莱恩特 得到 3 分时 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中 得到 了 多少 分 ， 他 只 得到 了 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
什么 球员 在 整个 赛季 都 有 与 科比 布莱恩特 相同 数量 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 超过 3 个 篮板 的 比赛 中 ， 科比 布莱恩特 平均 失误 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
玩家 玩游戏 的 次数 与 科比 布莱恩特 在 一个 赛季 中玩 的 游戏 次数 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 得分 少于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 比 kobe   bryant 更 多 或 相同 数量 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 的 犯规 次数 与 科比 布莱恩特 在 一个 赛季 犯规 时 的 犯规 次数 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 多少 场 比赛 ， 科比 布莱恩特 有 超过 三个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
什么 球员 没有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 分时 有 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
哪支 球队 做 了 不到 3 次 失误 的 科比 布莱恩特 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
谁 为 洛杉矶 湖人 或 克利夫兰 骑士队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 取得 了 与 科比 布莱恩特 一样 多 的 积分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 每个 赛季 的 职业生涯 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
科比 布莱恩特 在 赛季 中 打出 了 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
将 球员 命名 为 少于 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 控卫 位置 上 的 球员 科比 布莱恩特 队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
科比 布莱恩特 在 他 最好 的 得分 赛季 中 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
当 科比 布莱恩特 有 3 个 全季 助攻 时 他 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 盖帽 ， 助攻 数是 3	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
控卫 科比 布莱恩特 在 所有 赛季 的 抢断 总数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
一个 赛季 失误 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 多少 犯规 有 控球 后卫 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
科比 布莱恩特 在 三场 比赛 中有 多少 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
科比 · 布莱恩特 在 洛杉矶 湖人队 打球 的 那个 赛季 取得 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
科比 布莱恩特 在 本赛季 取得 了 3 次 助攻 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
科比 布莱恩特 在 本赛季 场均 3 次 助攻 的 情况 下 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
什么 球队 为 科比 布莱恩特 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
科比 布莱恩特 在 过去 3 个 赛季 中 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
科比 在 3 次 封盖 后 得到 了 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
科比 布莱恩特 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
什么 球员 在 2004 年 没有 参赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 拥有 最少 的 科比 布莱恩特 失误 次数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 得不到 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 打 了 3 场 比赛 时 打出 了 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
在 他 有 三次 犯规 的 那 一年 里 ， 科比 布莱恩特 打 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
当 科比 布莱恩特 在 一个 赛季 放弃 了 3 次 失误 时 ， 他 通常 会 给出 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 一个 赛季 犯 了 多少 次 犯规 ， 这比 三次 失误 还 多	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
什么 赛季 科比 布莱恩特 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
在 所有 赛季 中 ， 球员 的 得分 与 科比 布莱恩特 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 有 3 次 犯规 ， 他 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
团队 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
哪个 球员 每 赛季 的 失误 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 得分 少于 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 少于 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 控卫 球员 比 科比 布莱恩特 有 更 多 的 积分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
找到 那些 在 特定 赛季 中 参加 过 少于 或 超过 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 多 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 科比 布莱恩特 队 打 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
哪个 球员 在 一个 赛季 中 参加 过 最少 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 打 控卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 属于 洛杉矶 湖人队 或 克利夫兰 骑士队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 控卫 位置 上 的 球员 科比 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
球衣 号码 最低 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 得到 3 个 篮板 后 ， 科比 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
科比 布莱恩特 本赛季 取得 了 多少 分 ， 他 造成 了 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
在 什么 赛季 科比 布莱恩特 总共 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
一个 赛季 的 得分 超过 球员 科比 布莱恩特 的 一个 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 多少 场 比赛 中 ， 科比 · 布莱恩特 获得 了 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
这是 科比 · 布莱恩特 犯下 3 次 犯规 的 季节	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
什么 赛季 科比 布莱恩特 有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
在 哪个 位置 科比 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
本赛季 至少 3 场 比赛 中有 多少 球员 有 比赛 时间	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 总 抢断 次数 相当于 科比 布莱恩特 赛季 最低 抢断 次数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 在 一个 赛季 有 3 次 助攻 时 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 一个 赛季 中 获得 了 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 少 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 的 得分 超过 2 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 得分 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 是 科比 布莱恩 队友	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
什么 球员 每 赛季 没有 比 科比 布莱恩特 更 多 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 的 一个 赛季 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
在 赛季 期间 ， 科比 布莱恩特 的 得分 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 这个 赛季 得到 3 次 抢断 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
在 他 作为 控球 后卫 的 赛季 中 ， 科比 布莱恩特 执行 了 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
球员 在 赛季 中 总体 上 超越 了 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
哪个 球员 的 犯规 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 不是 3 的 赛季 中 ， 球员 的 犯规 总数 是 多少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 拥有 最少 的 科比 布莱恩特 抢断 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 比 科比 布莱恩特 有 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 打 了 3 场 比赛 时有 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 布莱恩特 平均 每场 比赛 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
这个 赛季 球员 比 科比 布莱恩特 有 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 任何 一个 赛季 都 参加 过 最少 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 是 最 多 的 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 哪位 球员 犯规 次数 超过 三次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
至少 与 科比 布莱恩特 一样 多 的 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 什么 位置 科比 能够 制造 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
在 3 次 抢断 后 科比 布莱恩特 获得 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
科比 布莱恩特 在 本赛季 补 3 次 助攻 的 助攻 数是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
科比 布莱恩特 作为 控球 后卫 得到 了 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
在 一名 球员 科比 布莱恩特 担任 控球 后卫 的 比赛 中 打过 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_games_played ) ) )
哪个 球员 至少 有 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 得分 多于 或 少于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 洛杉矶 队 的 球员 洛杉矶 湖人队 的 比赛 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
在 一个 赛季 中 比 科比 布莱恩特 少 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
作为 一名 湖人队 ， 每 赛季 平均 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
平均 每 赛季 抢断 次数 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 犯 了 最 多 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 3 个 盖帽 的 赛季 中 ， 有 多少 次 抢断 归因于 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
什么 球员 在 一个 赛季 只 参加 过 一场 或 两场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一个 赛季 担任 控球 后卫 时犯 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
在 3 次 抢断 后 ， 科比 · 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 本赛季 取得 了 多少 次 抢断 ， 他 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
2004 年 常规赛 期间 科比 布莱恩特 放弃 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
什么 球员 整个 赛季 犯规 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 洛杉矶 湖人队 的 球员 科比 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
科比 布莱恩特 为 洛杉矶 湖人队 效力 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
在 2004 赛季 ， 科比 布莱恩特 打 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
科比 布莱恩特 有 3 次 失误 时有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
当 科比 布莱恩特 犯 3 次 犯规 时 ， 他 的 位置 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
多少 个 赛季 科比 打 了 超过 3 场 比赛 ， 他 的 职业生涯 反弹 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
什么 球员 在 整个 赛季 最多 有 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 3 次 抢断 的 赛季 中 ， 科比 布莱恩特 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
命名 一名 本赛季 不 超过 3 个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
今年 科比 布莱恩特 将会 是 什么样 的 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
2004 年 科比 布莱恩特 获得 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 3 个 失误 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
有 三个 街区 的 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
哪位 球员 为 大多数 球队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 一个 赛季 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 分数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 洛杉矶 队 湖人队 的 球员 科比 布莱恩特 抢断 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
什么 球员 有 超过 3 个 全 季节 块	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 得到 3 分 的 时候 有 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
一个 赛季 球员 科比 布莱恩特 在 一个 赛季 中有 3 次 犯规 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_steals ) ) )
在 3 次 失误 之后 ， 科比 布莱恩特 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
一个 玩家 少玩 的 玩家 比 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 位置 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 赛季 期间 ， 科比 布莱恩特 获得 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
当 她 本赛季 三次 失误 时 ， 科比 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
什么 季节 科比 布莱恩特 为 拉 湖人队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
什么 是 洛杉矶 湖人队 的 科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
本赛季 球员 的 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 玩家 获得 了 最大 数量 的 棋子	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 分时 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
有 多少 职位	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
一个 赛季 没有 比 科比 布莱恩特 更 多 篮板球 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 球员 科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
说出 一名 2004 年 没 参加 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一名 助攻 一个 赛季 的 球员 至少 与 科比 布莱恩特 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球队 为 科比 布莱恩特 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
每个 赛季 平均 每场 不 超过 3 个 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 个 犯规 中 的 平均 得分 是 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
什么 是 科比 布莱恩特 队	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
将 那些 在 任何 一个 赛季 中有 篮板球 的 球员 命名 为 等于 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 持有 两个 或 更 少 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 本赛季 他 平均 三个 盖帽 让 科比 队 效力 于 什么 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
科比 布莱恩特 有 3 个 抢断 时 助攻 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
科比 布莱恩特 本赛季 的 助攻 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
与 科比 布莱恩特 相比 ， 失误 次数 少于 或 少于 同一 数量 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 本赛季 ， 科比 布莱恩特 有 3 次 助攻 ， 他 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
什么 球员 整个 赛季 的 抢断 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 那些 在 任何 一个 特定 赛季 中 犯规 总数 小于 3 的 球员 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 次 助攻 时 ， 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
谁 与 科比 布莱恩特 有 同样 或 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一个 控球 后卫 的 赛季 中 得分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
本赛季 球员 的 比赛 数量 与 比 科比 相同 或 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 为 任何 一支 球队 效力 时 ， 每个 赛季 场均 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
当 科比 布莱恩特 在 一个 赛季 中有 2 个 盖帽 时 ， 他 制造 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
什么 球员 在 2004 赛季 没有 参加 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 失误 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 抢断 次数 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 个 盖帽 的 球员 科比 布莱恩特 赛季 的 得 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
在 赛季 中 得分 与 科比 相同 或 更 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 3 场 比赛 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
科比 布莱恩特 做 了 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
哪支 球队 做 了 3 次 助攻 ， 科比 布莱恩特 上场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
四季 都 有 超过 3 次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 打 3 场 比赛 的 位置 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
这是 本赛季 科比 布莱恩特 造成 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
科比 布莱恩特 在 2004 赛季 取得 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 多少 助攻 谁 有 三个 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
在 哪个 赛季 科比 得到 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
一个 赛季 没有 比 球员 科比 布莱恩特 打得 更 多 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 在 2004 年 或 2010 年 参赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 得分 得分 的 每 赛季 平均值 ， 而 科比 布莱恩特 是 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
科比 布莱恩特 在 一个 赛季 犯 了 多少 盖帽 ， 他 犯 了 3 个 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
什么 是 玩家 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
每个 赛季 他们 都 有 与 科比 相同 数量 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 拥有 最少 的 科比 布莱恩特 点数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 那些 在 任何 一个 赛季 中 都 有 得分 的 球员 命名 为 小于 或 大于 3	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 控球 后卫 位置 上 得到 了 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
本赛季 与 科比 布莱恩特 的 得分 相同 或 更少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中将 科比 布莱恩特 的 季后赛 得分 最高	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 在 任何 一个 赛季 都 有 过 盖帽 的 球员 与 任何 一个 赛季 由 科比 布莱恩特 执行 的 盖帽 相同 的 数量	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 取得 了 多少 失误 ， 他 取得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
科比 布莱恩特 在 3 个 篮板 后 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
哪个 球员 在 本赛季 的 得分 与 科比 布莱恩特 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 有 3 次 失误 ， 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
在 一个 赛季 中 ， 科比 布莱恩特 有 多少 犯规 超过 三次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
哪个 球员 在 一个 赛季 中 得分 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
在 所有 赛季 中 ， 与 科比 布莱恩特 队 比赛 次数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 的 位置 是 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
哪位 球员 打 了 3 次 以上 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 的 三次 犯规 超过 三次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 街区	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
本赛季 哪位 球员 的 助攻 数 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 中 打出 了 创纪录 的 比赛 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 在 一个 赛季 中 打 不到 三场 比赛 时 ， 他 是 什么 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
科比 · 布莱恩特 为 洛杉矶 湖人队 打 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
在 科比 布莱恩特 在 3 场 比赛 中有 比赛 时间 的 那个 赛季 ， 他 负责 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
什么 是 科比 布莱恩特 赛季 的 平均 成交量	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
什么 球员 在 一个 赛季 中 抢断 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 哪一年 得到 三分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
找到 那些 参加 比赛 的 玩家 小于 kobe   bryant 玩游戏 时间 的 游戏 数量	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 得到 3 分时 ， 他 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
本赛季 控球 后卫 科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
说出 一个 比 kobe   bryant 拥有 更 多 积木 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 失误 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
什么 球员 的 积分 比 科比 布莱恩特 的 积分 多 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_points ) ) )
球员 科比 布莱恩特 队 在 一个 赛季 中 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string team ) ) )
科比 布莱恩特 队 本赛季 有 3 个 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 三分 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 2004 赛季 做出 了 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_assists ) ) )
什么 球员 的 位置 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 整个 赛季 都 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 助攻 时 的 表现 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 哪个 季节 做出 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
谁 的 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 获得 了 多少 积分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
科比 布莱恩特 在 他 的 所有 赛季 积分 均 为 3 分时 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
谁 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 的 得分 低于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 一个 3 个 或 更少 积木 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 科比 布莱恩特 的 失误 次数 为 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
什么 球员 至少 与 科比 布莱恩特 一样 多 的 赛季 积分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 打 了 3 场 或 更 少 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 助攻 最多为 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 抢断 少于 三次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 在 控卫 位置 上 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_games_played ) ) )
科比 布莱恩特 在 一个 赛季 中 打 了 多少 场 比赛 ， 他 拿下 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
2004 年 球员 比 科比 布莱恩特 得分 更 多	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
3 次 失误 之后 ， 科比 布莱恩特 得到 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
一个 赛季 的 盖帽 数量 不 低于 一个 赛季 球员 科比 布莱恩特 的 盖帽 数量	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 只有 3 次 失误 就 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
什么 是 科比 布莱恩特 全季 总分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
在 赛季 期间 ， 哪个 牌手 制造 了 最 少量 的 积木	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 打 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 得分 不到 4 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 场 比赛 中 造成 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
将 球员 命名 为 每 赛季 比 科比 布莱恩特 更 多 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 失误 ， 他 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
科比 · 布莱恩特 在 全场 比赛 中 得到 了 3 分 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
在 他 的 洛杉矶 湖人 赛季 期间 ， 科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 在 赛季 中有 3 次 抢断 ， 平均 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
科比 布莱恩特 在 哪个 赛季 取得 了 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
一个 赛季 的 积分 数 与 一个 赛季 球员 科比 布莱恩特 积分 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 与 kobe   bryant 相同 数量 的 块 命名 为 玩家	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 为 这些 湖人队 造成 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
玩家 最多 在 两个 位置 上玩过 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 都 有 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 洛杉矶 队 湖人队 的 球员 科比 布莱恩特 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 布莱恩特 只有 三分 的 助攻 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
什么 是 球员 科比 布莱恩特 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
科比 布莱恩特 在 一个 赛季 造成 3 次 失误 的 助攻 数量 上 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
谁 有 相当于 或 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断 作为 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
当 科比 布莱恩特 的 全季 失误 等于 3 时 ， 科比 布莱恩特 的 表现 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
谁 有 超过 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 不 等于 三个 赛季 的 总 篮板 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那里 有 多少 队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
谁 在 一个 赛季 中 打 了 3 场 以上 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 与 科比 布莱恩特 相同 的 赛季 中 出场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
谁 打 了 3 场 或 更 多场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 打 不到 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 球队 数量 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 打 了 不到 三场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 失误 时有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
谁 犯 了 3 次 或 更 多 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 场 比赛 让 科比 布莱恩特 出场 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
哪个 赛季 科比 布莱恩特 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
什么 年度 科比 布莱恩特 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
一个 赛季 最多 有 3 次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 与 科比 布莱恩特 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
无论是 洛杉矶 湖人队 还是 克利夫兰 骑士队	( call SW.listValue ( call SW.concat en.team.lakers en.team.cavaliers ) )
他们 在 一个 赛季 中 获得 了 大多数 篮板球 的 记录	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
什么 时候 科比 布莱恩特 出场	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
什么 球员 比 科比 布莱恩特 有 更 少 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 犯规 3 次 犯规 时 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
湖人 或 骑士队 中有 多少 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最少 的 抢断 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 中 ， 所有 球员 都 拥有 与 科比 布莱恩特 相同 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 赛季 ， 科比 布莱恩特 队 参加 了 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 球员 与 科比 布莱恩特 的 位置 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 个 篮板球 时有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
科比 布莱恩特 对 洛杉矶 湖人 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 布莱恩特 在 一个 赛季 中有 3 次 助攻 失误 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
哪个 球员 至少 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
到 目前为止 ， 本赛季 科比 布莱恩特 得到 了 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
科比 布莱恩特 有 多少 个 赛季 不 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
科比 布莱恩特 在 三个 盖帽 上 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 盖帽 ， 他 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
一个 赛季 失误 次数 不 超过 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最高分 的 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 球员	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
科比 布莱恩特 只 打 了 3 场 比赛 的 季节 抢断 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
什么 球员 有 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 的 位置 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 科比 布莱恩特 的 球队 是 本赛季 洛杉矶 湖人队 的 比赛 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
在 赛季 中有 超过 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 犯 了 更 多 的 犯规 ， 科比 布莱恩特 在 一个 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) )
科比 布莱恩特 在 2004 赛季 的 表现 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
在 整个 赛季 中 ， 球员 的 犯规 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 获得 更 多 的 块 或 至少 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 参赛 不 超过 两支 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 与 洛杉矶 湖人队 比赛 的 赛季 中 ， 有 多少 场 比赛 是 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
科比 · 布莱恩特 在 控球 后卫 时犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
科比 · 布莱恩特 在 本赛季 打 了 3 场 比赛 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
在 2004 赛季 ， 科比 布莱恩特 参加 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
找到 那些 在 任何 一个 特定 赛季 中 失误 总数 少于 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 三次 助攻 时 ， 他 在 一个 赛季 中 的 盖帽 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
科比 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
湖人 的 科比 布莱恩特 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
什么 球员 有 不少 于 3 个 全季 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 玩 了 最 多 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 篮板 球员 不是 3 号 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 打 了 超过 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最少 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 有 超过 3 次 助攻 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 得分 最低	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 科比 布莱恩特 在 一个 赛季 得到 3 个 或 更 多 盖帽 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
哪个 赛季 科比 · 布莱恩特 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
什么 是 科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 少于 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 得分 最少 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 多少 场 比赛 中 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
什么 球员 发挥 最少 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 同样 数量 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 占据 了 最 多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 还 拥有 3 个 盖帽 时 ， 科比 布莱恩特 有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
每个 赛季 与 kobe   bryant 相同 或 更 少 的 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 打 得 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 最多 与 两队 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 中 ， 球员 比 科比 布莱恩特 有 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
作为 控球 后卫 ， 科比 · 布莱恩特 有 多少 个 赛季 的 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
将 球员 命名 为 至少 与 科比 布莱恩特 一样 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 他 的 盖帽 数 超过 3 的 赛季 中 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
本赛季 科比 布莱恩特 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
将 科比 布莱恩特 总分 得 分为 3 的 赛季 命名	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_points ) ) )
什么 球员 至少 有 一个 赛季 中 科比 布莱恩特 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 的 得分 是 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
一个 赛季 助攻 数 不 等于 三 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 得到 3 分 的 赛季 中 ， 科比 布莱恩特 的 助攻 数 达到 了 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中 的 平均 犯规 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
球员 在 一个 赛季 中 的 助攻 数不到 4 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 2004 赛季 的 位置 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
在 2004 赛季 ， 科比 布莱恩特 队 的 表现 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
当 他 有 三次 失误 时 ， 他会 说出 科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
球员 在 一个 赛季 犯规 比 球员 科比 布莱恩特 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
拥有 最少 球队 数量 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 本赛季 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 一个 赛季 中 的 盖帽 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
什么 位置 是 科比 布莱恩特 在 他 有 3 次 抢断 的 赛季 中 的 表现	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
在 一个 赛季 中 ， 他 的 得分 低于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 赛季 期间 ， 他 得到 3 分 ， 科比 布莱恩特 负责 的 犯规 次数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
在 整个 赛季 中 与 科比 布莱恩特 犯规 次数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 赛季 中 的 平均 犯规 次数 仅限于 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
这是 一支 有 3 次 失误 的 科比 布莱恩特 队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
与 科比 布莱恩特 有 同样 数量 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 个 全季 失误 时 他 有 多少 全季分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
什么 球员 有 3 个 或 更 少 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 赛季 的 得 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
什么 球员 比 科比 布莱恩特 在 一个 赛季 取得 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 他 的 抢断 数比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 本赛季 得分 不到 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 拥有 总 积数 的 球员 等于 一个 赛季 中 对于 科比 布莱恩特 来说 最多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 比赛 中 得分 多少 ， 上赛季 他 有 三次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
科比 布莱恩特 在 3 次 抢断 时有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
2004 赛季 科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
谁 得分 最高	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那些 被 淘汰 出局 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 科比 布莱恩特 的 3 个 篮板 位置 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
每场 比赛 少于 三次 犯规 的 球员 ， 本赛季 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 中 打 得 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
控球 后卫 科比 布莱恩特 在 一个 赛季 中有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
找到 科比 布莱恩特 也 获得 3 次 抢断 的 赛季 中 的 盖帽 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 篮板 和 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 3 场 全季 比赛 中有 多少 场 全场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
有 三次 失误 的 科比 布莱恩特 有 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
四季 不到 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 少于 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 场均 至少 有 3 次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 的 抢断 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 为 拉 湖人 或 克利夫兰 骑士队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 球员 的 得分 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 盖帽 ， 他 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 2004 赛季 出场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
说出 一个 玩过 和 科比 布莱恩特 一样 多 的 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 少于 三次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
什么 赛季 科比 布莱恩特 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
科比 布莱恩特 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
在 什么 赛季 ， 科比 只 放弃 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
当 他 和 失去 的 安吉尔 湖人 一起 时 ， 球员 科比 布莱恩特 在 所有 赛季 的 助攻 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
谁 与 科比 布莱恩特 有 相同 或 更 多 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 拥有 与 科比 布莱恩特 相同 数量 的 全季 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 得分 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 三次 以上 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 全季 不到 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 位置 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
当 一个 赛季 犯规 3 次 犯规 时 ， 哪支 球队 为 科比 布莱恩特 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
什么 球员 全 季节 的 盖帽 都 不过 是 全 季节 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
命名 单一 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 助攻 的 犯规 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
2004 赛季 科比 布莱恩特 的 盖帽 总数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
在 一个 赛季 中 ， 多少 次 盖帽 超过 3 次 ， 科比 布莱恩特 上场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
在 他 有 3 次 失误 的 赛季 中 ， 他 指出 了 科比 · 布莱恩特 参加 的 比赛 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
是否 有 球员 在 一个 赛季 中 得分 总分 大于 同一 赛季 在 科比 布莱恩特 得分 的 总得 分数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 一个 赛季 得分 最高 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 为 洛杉矶 湖人队 效力 了 多少 个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
科比 布莱恩特 凭借 3 次 助攻 得到 了 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
什么 块 在 块 1 的 右边 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 与 块 1 具有 相同 宽度 的 块 具有 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
块 1 右边 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 最少 块 之上 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 与 块 1 宽度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 长度 为 3 个 icnhes 且 位于 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 长度 最多为 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
阻止 块 1 的 左边 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 宽度 小于 块 1 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 的 高度 小于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 之上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 1 留下 了 什么 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 比块 1 短 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 一块 最高 与 块 1 宽度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 的 上方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 位于 另外 两个 块 左侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 在 块 1 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
不 超过 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 长度 为 3 英寸 的 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 宽度 小于 块 1 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 所有 3 或 6 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
顶部 附近 有 3 英寸 的 挡 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 或块 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
特殊 街区 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 我长 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
什么 金字塔 形状 的 块 在 块 1 上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 街区 是 独特 的 ， 形状 像 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 两个 或 更 多块 右边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 最长 的 砖	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
找到 高度 为 3 的 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 是 块 1 左边 的 两个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
选择 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 超过 3 英寸 的 所有 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 宽度 为 3 英寸 的 块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 与 块 1 长度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 我 左边 超过 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 右边 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
阻止 块 1 的 上方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 块 1 左侧 的 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
第 1 块 有 多 宽	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
选择 块 1 右侧 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 1 右边 是否 有 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
是否 有 任何 块 的 高度 最多为 3 英寸 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 最 左边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 在 上面 的 块 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 所有 高于 3 英寸 高 的 街区 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
哪 块砖 短于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 具有 金字塔 形状 的 块 ， 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
第 3 块 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
阻止 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 下方 和 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 下面 三 英寸 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
块 1 右侧 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 任何 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 宽 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 的 左边 有 最 多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 的 正下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
选择 形状 最多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
块 1 右边 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 的 长度 是 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 块 1 左边 3 英寸 长 的 砖块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 特殊 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
什么 块 是 块 右边 的 块 1 或 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
金字塔 形 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 上方 和 下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪 块砖 的 长度 比砖 1 的 长度 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
命名 具有 两个 或 更 多 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string >= ) ( number 2 ) ) )
砖 1 或 2 留下 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪 块砖 不到 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 与 块 1 具有 相同 形状 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
右侧 和 左侧 有块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 在 高度 为 3 英寸 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 所有 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 与 块 1 高度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
找到 块 1 或块 2 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
阻挡 块 1 的 宽度 更 高 或 相同 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 一块 至少 与 砖 1 一样 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
得到 块 1 上方 的 第二个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 最 多 2 种颜色 的 所有 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
上面 没有 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string ! = ) en.block.block1 ) )
找到 我 上面 有 2 个 街区 的 所有 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 超过 两个 块 是 正确 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 砖像 砖 1 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 我 右边 少于 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 是 什么 颜色	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
找到 位于 3 英寸 高 的 块 顶部 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下面 的 所有 块 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
阻挡 其他 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
高度 为 3 英寸 的 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 砖 在 3 英寸 长 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
第 1 块 右边 2 个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 我 下面 至少 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 块 宽 至少 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 的 右边 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
阻止 比块 1 的 长度 更 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 3 英寸 宽 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 种 特殊 砖 是 金字塔 形 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
找到 块 1 左下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 块 1 下方 和 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
什么 块 是 3 英寸 或 更 小 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 上方 和 右侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 在 块 1 左侧 或 右侧 的 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 颜色 的 砖 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
什么 街区 位于 3 英寸 高 的 街区 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 高度 等于 3 英寸 的 块 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 不是 第 1 块 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string ! = ) en.block.block1 ) )
块 的 高度 至少 是 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪个 块 上面 有 最 多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 第 1 块 左边 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
左边 和 上面 的 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
什么 块 有 左边 和 右边 的 块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
块 1 的 形状 是 什么	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
一块 砖 ， 长度 在 3 到 6 英寸 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 位于 最小 数量 块 的 左侧 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 或 6 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
块 的 宽度 至少 是 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪个 块 位于 块 1 下方 ， 高度 至少 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
块 1 的 左侧 和 右侧 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 1 上方 有 哪些 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
选择 块 1 下方 和 右侧 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 宽度 最小 的 砖块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
哪个 特殊 的 砖 在 砖 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 超过 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 英寸 区块 右侧 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
块 的 长度 是 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
什么 是 块 高度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
阻止 两个 或 更 多块 的 左边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 砖 1 或 砖 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
找到 我 最 多 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 是 特殊 的 ， 并 在 块 1 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 不是 第 1 块 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string ! = ) en.block.block1 ) )
找到 第 1 块 未 离开 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
选择 最短 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
找到 块 1 上面 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 块 1 右侧 的 块 ， 高度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 至少 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 在 块 1 下面 和 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 的 总 高度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
阻止 两个 或 更 多块 的 右边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 块 与 块 1 的 颜色 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
找到 一个 小于 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪 块砖 是 3 英寸 高 的 砖 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 块 1 右侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 一个 大于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
第 1 区 左侧 3 英寸 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 的 宽度 小于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 一个 宽度 为 3 英寸 的 块 ， 块 1 位于 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 高 的 街区 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 左侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪 块砖 不比 砖 1 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 高于 3 英寸 的 块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 下方 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 另外 两个 街区 之下 是否 有 一个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
命名 一个 左边 有块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
什么 块 在 两个 块 之上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 最 多 只有 一个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 或 2 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 所有 特殊 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 最大 块数 左侧 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左边 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 宽度 最大 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string width ) ) ) )
哪个 块 位于 不 超过 两个 块 的 左侧	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
低于 最小 块数 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 在 3 英寸 宽 的 砖 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 所有 3 或 6 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 我 至少 两个 街区 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 长度 超过 3 或 6 英寸 的 那些 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 1 的 高度	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
块 比块 1 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 比块 1 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 块 1 下方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
什么 砖 左边 不 超过 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 最 少量 块 右侧 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 一个 不是 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
是否 有 一个 长度 的 块 ， 其 测量 值 等于 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 特殊 砖块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 顶部 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 和 块 1 一样 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
选择 一块 至少 3 英寸 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 街区 有 最大 的 高度	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
在 左边 2 个 街区 内 阻止	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 砖 右边 至少 有 2 块砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 是 特殊 砖 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 一个 宽度 等于 或 小于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
阻止 从块 1 向 右 和 向上 阻止	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
选择 具有 相同 宽度 和 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找到 我 在 块 1 下面 的 所有 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 或块 2 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 下方 和 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 左边 有 最少 块 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 右侧 块数 最少 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
什么 块 是 下面 和 左边 的 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 特殊 的 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 一个 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
只要 砖 1 宽 ， 什么 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
高度 为 3 英寸 ， 宽度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 块 比块 1 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
在 块 1 下 选择 具有 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 右边 和 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 街区 右侧 的 街区 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 块 1 高 的 块 很长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 上方 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 我 在 块 1 下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
让 我 在 3 英寸 街区 的 右边 一个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一块 至少 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
第 1 块 的 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 一个 至少 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 最 多 两个 块 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 不 超过 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 块 下面 的 块 数最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 3 或 6 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 我 最 多 2 个 街区 以上 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 右边 第 2 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 一个 左边 最多 2 个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 3 英寸 长 的 块 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
长度 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
块 的 长度 最小 为块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 金字塔 块 右边 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 我 所有 的 块 比 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 在 块 1 的 右边 和 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
在 块 1 下面 找到 一个 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 块 1 右侧 的 块 ， 块 1 位于 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
块 1 左侧 的 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 比块 1 更 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪 块砖 不 高于 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 我 上面 至少 有 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 区块 位于 区块 1 下方 的 区块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 我 上面 不到 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 高于 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 的 高度 小于 或 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 至少 3 英寸 宽 或 6 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 特殊 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) )
是否 有 一个 宽度 等于 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
只要 第 1 块 就 找到 我 所有 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 是 特殊 的 块 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 宽度 与 块 1s 长度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 块 1 下面 也 是 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 长度 为 3 英寸 且 高于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 形状 的 所有 块	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
块 的 长度 至少 是 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
是否 有 一个 块 位于 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
找到 我 下面 两个 或 更 多块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 块 1 的 左边 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 位于 块 1 左侧 ， 块 1 位于 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 2 区块 下面 的 区块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 宽度 小于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 位于 下方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
哪种 砖 的 颜色 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string color ) ) )
在 块 1 上方 的 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
一块 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 特殊 区块 下面 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 特殊 的 块 并 在 块 1 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
阻止 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string ! = ) en.block.block1 ) )
块 的 平均 高度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
哪个 块 在 块 1 的 上方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 块 1 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 阻止 1 块 的 所有 块 都 不 对	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string ! = ) en.block.block1 ) )
块 1 的 上方 和 左侧 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 右侧 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
选择 少于 两种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
块 下面 2 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻挡 在 3 英寸 宽 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
块 2 下 的 块 较 小	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 位于 块 1 上方 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 块 1 的 右边 和 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 长 的 块 ， 块 1 是 剩下 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
什么 块 最 多 有 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 和 块 1 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
块 有 两个 以上 的 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string > ) ( number 2 ) ) )
阻止 两个 或 更 多块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 金字塔 块 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
高度 至少 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪个 块 的 右侧 块 数最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 宽 的 块 ， 就 在 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 的 长度 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
在 最 多 两个 街区 找到 一个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 高 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 1 左下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
高度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 或块 2 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 在 块 1 左下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
什么 砖 至少 和 砖 1 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
两种 或 更 多种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string >= ) ( number 2 ) ) )
块 1 留下 三 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
块 1 在 块 1 的 右侧 ， 并且 在 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
块 上方 至少 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
从 第 1 块 开始 阻止 上方 和 下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪个 砖 是 金字塔 形砖 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
在 上面 两个 街区 阻挡	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 英寸 长 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 最 宽 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string width ) ) ) )
什么 块 在 块 1 的 右边 和 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 我 最 多 低于 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 短于 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 一个 低于 不 超过 两个 块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
在 右侧 和 下方 有块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 两个 以上 块 的 左边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
高度 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
只要 块 1 ， 最 多 找到 我 所有 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻止 位于 块 1 上方 的 块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
3x3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 以上 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
块 1 中 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 右侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 我 比块 1 的 高度 更 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 最 左边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 金字塔 块 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
哪个 块 至少 与 块 1 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
不能 相形见绌	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 块 2 下面 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 少于 2 个 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
选择 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 两个 块 左侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左边 的 块 ， 其 形状 是 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 下方 和 块 1 左侧 两个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 或 6 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 一个 特殊 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
找到 我 和 块 1 一样 长 的 所有 块 都 很长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 所有 与 块 1 宽度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
第 1 块 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 低于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 金字塔 块 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 宽度 为 3 英寸 ， 金字塔 形状 的 全部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 金字塔 块 左侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 块 1 右侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 一个 在 右边 有 一个 特殊 区块 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
位于 块 1 下方 的 块 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 块 1 右边 和 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 一块 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
阻止 块 1 右边 的 块 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 我 上面 超过 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
有 一块 测量 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) )
块 1 上方 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 比块 1 更 高 的 块 是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 位于 至少 两个 其他 块 右侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 下面 不到 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 特殊 的 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
块 1 右侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
块 1 下方 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
块 1 和 3 英寸 高度 留下 了 什么 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
特殊 的 块 ， 它 是 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
块 1 左侧 是 什么 块 ， 块 1 位于 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
块 比块 1 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 右边 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 位于 最大 数量 的 其他 块 顶部 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 低于 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 块 比块 1 长 ， 是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 3 英寸 宽 的 块 下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
什么 块 的 高度 不 等于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 之上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
阻挡 3 英寸 高和长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
是否 有 一块 位于 另 一块 3 英寸 长 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 下方 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
第 1 块 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 一个 短于 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 是 金字塔 形状 并且 在 块 1 之上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 身高 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 超过 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 高于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 小于 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 右侧 的 块 ， 其 形状 也 是 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 在 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
哪 块砖 的 宽度 小于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
第 1 块 的 权利	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 块 1 或 2 右侧 的 所有 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 所有 街区 和 街区 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
什么 砖 是 3 英寸 宽 和 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 超过 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻止 最 多 两个 块 是 对 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 块 1 ， 块 1 在 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 的 块 比块 1 宽 或 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 1 区 右侧 的 3 英寸 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 一个 块 下面 最 多 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 左边 有 2 个 以上 街区 的 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
选择 形状 数 最少 的 所有 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string shape ) ) )
哪 块砖 比 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 我 所有 3 英寸 高 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
在 特殊 区块 下面 阻止	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 位于 下方 并且 长度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 3 英寸 区块 以上 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 位于 最大 块数 右侧 的 单个 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 块 1 左下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 一个 3 英寸 的 lwide 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 砖 的 形状 像 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
在 块 1 上方 阻止 两个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 块 1 的 左下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 左侧 块数 最少 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 高 3 英寸 ， 高于 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
什么 块长 3 英寸 或 更 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 或 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
什么 砖 至少 3 或 6 英寸	( call SW.listValue ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) )
找到 位于 其 上方 的 第 1 块 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 不 高于 砖 1 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 在 块 1 上方 的 所有 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
在 块 1 上方 阻止 两个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
看到 块 1 上方 的 块 并 获得 该块 的 左侧 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
3 英寸 砖 在 砖 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 或块 2 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪 块砖 的 长度 小于 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
这是 特殊 区块 右侧 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
块 1 的 右边 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
块数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 在 块 1 下方 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 至少 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
块 1 下方 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
第 1 块 左边 第 2 个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
什么 块 的 宽度 为 3 英寸 ， 高于 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
块 1 位于 块 1 右侧 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 一个 低于 3 英寸 区块 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
高 3 英寸 ， 宽 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 不 高于 块 1 宽度 的 英寸 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
在 块 1 的 正下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 左边 有 两个 或 更 少块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 2 右侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 在 块 1 下方 和 左侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 一个 宽度 与 块 1s 长度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
选择 块 1 不 在 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string ! = ) en.block.block1 ) )
找到 我 所有 的 金字塔 块 ， 这 是 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 块 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
块 的 宽度 小于 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
什么 块 具有 金字塔 的 形状 ， 位于 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 在 块 1 下方 和 右侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 低于 块 1 或块 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
第 1 区 左侧 3 英寸 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 高于 最少 块数 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 或块 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
找到 块 1 右侧 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
什么 块 在 右边 和 左边 有块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 不 小于 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 不 比 任何 其他 块长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
选择 3 英寸 长 的 砖 1 下面 的 砖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
哪 块砖 在 左边 不到 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 区 左侧 3 英寸 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
哪块 特殊 砖 在 砖 1 之上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
找 我 一个 最 宽 6 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找 我 一个 3 英寸 长 的 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 1 的 下方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
在 块 1 下面 的 块 的 右边 是否 有 一个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
块 的 平均 宽度 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
找到 块 1 的 所有 特殊 块 是 对 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻挡 在 3 英寸 高 的 街区 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 左侧 块数 最少 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 块 1 的 上方 和 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
块 的 宽度 至少 是 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 块 1 左侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string is_special ) ) )
什么 块 在 块 1 上方 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 最短 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
找到 块 1 的 块 1 和 块 1 的 右块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
哪个 特殊 区块 位于 砖块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
砖 的 高度 是 多少 1	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
选择 金字塔 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
什么 块 不 在 块 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
任何 宽度 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
什么 块 至少 与 块 1 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 的 平均 高度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
找到 我 有 两个 形状 的 所有 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
找到 我 所有 宽度 小于 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 块 1 左侧 的 块 ， 块 1 位于 块 上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
哪 块砖 比砖 1 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 所有 的 金字塔 块 ， 块 1 是 正确 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 高度 为 3 英寸 的 块 ， 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
3 英寸 长 的 块 ， 位于 块 1 上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 留在 3 英寸 块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 所有 宽度 与 块 1 长度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
第 1 区 下方 2 个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
什么 块 在 两个 以上 块 的 右边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
让 我 在 块 1 下面 和 块 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
块 1 下面 的 块 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 比 第 1 块 更 靠岸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪 块砖 不 超过 2 种颜色	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
什么 块 是 3 英寸 或 更 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 两个 块 右边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 砖 比块 1 的 宽度 更长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 下面 的 块 是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 一个 像 块 1 或 更 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
第 1 块 右边 的 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
是否 有 与 块 1 颜色 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
找到 块 1 右下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
什么 块 是 大多数 块 的 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 宽度 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
块 长度 最多为 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
在 砖块 1 正下方 的 砖块 右侧 选择 一块 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 一块 长度 不 超过 3 英寸 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 上 方块 的 左侧 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
第 1 块 左边 第 2 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
哪个 街区 是 最高 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
具有 最少 颜色 数 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string color ) ) )
选择 块 2 右侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
金字塔 形块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
在 块 1 的 正下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
第 1 块 有 多 高	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
哪 一个 是 3 英寸 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 下面 有 少量 块 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 或 2 左边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 所有 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
这是 1 区 左侧 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 宽度 等于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
阻止 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
阻挡 超过 2 个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻挡 另外 两个 人 的 权利	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 以上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 一个 长度 不 超过 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
找到 3 英寸 宽 的 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 我 所有 的 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
阻止 块 1 左侧 的 块 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 我 下面 有 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 种 特殊 砖 是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 左边 最少 块 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
在 块 1 下方 阻止	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 特殊 的 块 ， 并 在 块 1 的 右侧 找到	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 特殊 区块 1 上方 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
宽度 小于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 块 有 两个 或 更 少 的 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
找到 长度 大于 块 1 的 块 很 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 一个 下方 有 金字塔 形块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
哪 块砖 最多 3 或 6 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 砖 的 左边 不 超过 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 高度 小于 或 等于 块 1s 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 右边 的 块 ， 它 有 一个 金字塔 的 形状	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
阻挡 了 另外 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 形状 是 金字塔 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 是 上面 的 块 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 上方 和 右侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 特殊 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪些 块 在 块 1 或 2 的 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
砖 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 是 砖 的 平均 宽度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
第 1 块 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
两个 街区 左边 是否 有 一个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
是否 有 一个 比块 1 更 宽 的 块 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 块砖 在 砖 1 右边 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 块 1 长于 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 左边 至少 有 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 总长度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
选择 块 1 和 块 2 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
什么 块 比块 1 更长 是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
挡住 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 宽度 为 3 英寸 且 高于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 高于 砖 1 是 长 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 长度 比 另 一个 块 高 2 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
阻止 最少 数量 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 上方 的 块 是 特殊 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 3 英寸 长 的 块 以下 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一个 宽度 为 3 英寸 的 块 ， 块 1 位于 下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 在 1 或 2 砖 之上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
块 宽度 小于 或 等于 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 下方 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 金字塔 形状 的 块 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 砖比 砖 1 宽 ， 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 我 所有 块 下面 的 块 1 是 对 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 一个 埋 在 至少 两个 其他 街区 下 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 块 都 像 块 1 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 最 右边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 比块 1 的 宽度 短 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 是 砖 的 平均 长度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
找到 块 1 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 左边 少于 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 以下 至少 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 块 下面 不到 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 下方 和 右侧 有 1 个块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
在 任何 其他 区块 上 堆积 了 一块 ， 但 只有 一块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 高度 等于 块 1 长度 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
哪个 砖 至少 与 砖 1 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
3 个 宽度 的 块 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 第二个 块 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 高 的 街区 左边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
第 1 区块 以上 区块 的 权利	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 比块 1s 高度 更 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 与 块 1 具有 相同 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
选择 特殊 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
位于 块 1 下 方块 的 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
看看 第 1 块 的 右边 ， 找到 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 不是 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string ! = ) en.block.block1 ) )
找到 我 左边 有 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 比块 1 高 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
什么 块 在 第一块 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 一个 高于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 右边 有 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
块 最 多 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
描述 块 1 的 形状	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
什么 砖 既 独特 又 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 一个 不 大于 块 1 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 右侧 的 块 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
选择 一块 至少 3 英寸 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 块 有 两个 或 更 少 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 不 在 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string ! = ) en.block.block1 ) )
看看 第 1 块 的 右下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 右边 3 英寸 长 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
什么 块 的 宽度 为 3 英寸 ， 块 1 的 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
长度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 的 长度 小于 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 右侧 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 比块 1 高 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 上方 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
高度 最多为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 比块 1 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 位于 块 1 下方 的 块 ， 其 直径 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 一个 平均 长度 的 街区	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
具有 最小 宽度 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
阻挡 3 英寸 以上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 所有 3 英寸 高 的 街区 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 的 金字塔 块 ， 块 1 位于 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 1 左侧 和 上方 的 块 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
高度 为块 1 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
找到 我下 方块 数 最少 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 在 块 1 右侧 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 一个 3 英寸 高 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 6 英寸 或 更 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 一个 与 块 1 一样 厚 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 一个 看起来 像 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
找到 我 下面 块 1 以上 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
块 的 长度 至少 是 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 下面 的 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 是 砖 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
块 1 的 上方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
高度 最小 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
块 1 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
找到 我 最 多 2 个 形状 的 所有 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
哪个 块 比块 1 宽 ， 是 长 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪个 块 的 宽度 为 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
选择 长度 为 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 最瘦 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
块 1 的 宽度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
找到 块 1 下面 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 位于 左侧 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 长 的 街区 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
bloch 比块 1 的 长度 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 剩下 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 留下 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 3 英寸 以上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 形状 像 金字塔 或 立方体 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
找到 我 在 块 顶部 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
阻止 块 1 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 一个 短于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 上方 的 块 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 1 右侧 的 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
哪个 块 是 最小 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
哪 块砖 最 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
是否 有 一个 块 位于 最少 数量 的 其他 块 之上	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 下方 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 块 在 块 1 下面 的 块 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
阻止 剩余 最多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 有 两种 或 更少 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
什么 砖 下面 有 2 块 以上 的 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 长度 最小 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
阻止 在 特殊 区块 的 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 块 1 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 所有 少于 2 种颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
找到 块 1 上方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 左右 两侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
什么 是 特殊 块 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 我 所有 的 块 ， 至少 只要 块 1 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 左边 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 块 1 上 方块 的 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 形状 像 立方体 或 金字塔 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
块 最 多 有 两个 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
阻止 并 从 第 1 块 开始 离开	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
块 1 左侧 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 至少 3 英寸 长 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 右侧 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
高度 块 不 超过 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 块 是 下面 和 右边 的 块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 长度 大于 块 1 宽度 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 右上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
第 1 块 的 第二个 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
阻止 第一块 和 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
块 的 总 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
阻止 至少 剩下 两个 区块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 长度 为 3 英寸 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 块 下面 的 块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
3 英寸 砖 是 砖 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 下面 有 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左边 两个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 我 右边 最多 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 的 所有 块 是 正确 的 和 下面 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
在 任何 金字塔 块 上方 都 有 一个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
块 最 多 剩下 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 更 短 然后 块 1 很长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
低于 最 多块 数 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 块 在 块 1 的 上方 和 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 小于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 左边 最少 块 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 阻止 一个 不是	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string ! = ) en.block.block1 ) )
找到 块 1 位于 上方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
在 块 1 上方 的 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
上面 和 下面 有块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
选择 块 1 右侧 块 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
阻挡 金字塔 块 的 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
块 是 特殊 的 ， 并且 是 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 长度 最大 为 6 英寸 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
第 1 块 的 右下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 高度 不 超过 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 是 最小 块 的 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 砖 的 形状 少于 两个	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
找到 我 右边 至少 有 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 高度 等于 块 1s 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
形状 为 金字塔 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 右侧 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 该块 上方 两个 块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 是 特殊 砖 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
两个 形状 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
有 多少 块	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 上面 不 超过 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 2 下方 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 颜色 是 什么	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
找到 块 1 下方 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 第 1 块 右侧 的 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
块 1 左侧 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 高于 3 英寸 高 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一个 至少 有 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 的 宽度 为 3 英寸 ， 位于 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选砖 2 砖 左边 砖 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 我 在 块 1 右侧 的 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻止 块 1 的 下方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻止 少于 两个 块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 长度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
找到 块 1 右侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 在 块 1 的 左下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 宽和长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 3 英寸 宽 的 块 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 长度 为 3 英寸 的 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 长度 比块 1 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻挡 不到 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 形状 像 金字塔 或 立方体 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
找到 两个 或 更少 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
块 1 下方 和 左侧 的 块 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
阻挡 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下方 的 块 ， 其 宽度 也 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
第 1 块 下方 3 英寸 高 的 博克	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 以上 的 块 ， 高度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 特殊 区块 剩下 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
在 特殊 区块 下面 阻止	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
什么 块 的 宽度 为 3 英寸 ， 块 1 的 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 的 高度 测量 值 至少 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 与 块 1 高度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 下面 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string below ) ( string = ) en.block.block1 ) )
选择 3 英寸 高 的 下部 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 金字塔 形块 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
阻止 最少 数量 的 块 在 上面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 上方 的 块 到 右侧 块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
收集 所有 不长 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 在 街区 1 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 块 1 上方 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 下面 至少 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 上面 的 块 1 的 所有 块 都 在 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 超过 2 个块 右侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 宽度 是 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找到 第 1 块 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
阻挡 3 英寸 以上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
它 是 金字塔 还是 立方体	( call SW.listValue ( call SW.concat en.shape.pyramid en.shape.cube ) )
找到 与 块 1 至少 相同 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 在 块 1 下面 的 所有 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 比块 1 更 高 的 块 很长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 所有 长度 超过 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 一个 位于 另外 两个 块 之上 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 一个 块 下面 有 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 左侧 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 砖 1 左侧 砖块 上方 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
在 块 1 下 选择 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 我 至少 3 英寸 宽 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 是 最 左边 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
选择 不 超过 2 个块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 在 最 顶层	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 或 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
阻止 一个 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
找到 宽度 超过 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 宽度 为 3 英寸 的 块 ， 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 左右 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 3 英寸 宽 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 比块 1 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
第 1 块 左侧 的 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪个 砖比 砖 1 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 的 宽度 与 块 1 的 宽度 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
阻挡 至少 2 个 街区 的 右侧	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 直径 不 超过 块 1 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
在 块 1 下方 阻止	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
块 1 上方 的 金字塔 块 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
第 1 块 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
哪 块砖 在 特殊 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
砖 的 总 宽度 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
位于 块 1 右侧 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 金字塔 形状 的 块 和 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 高度 等于 3 英寸 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
长度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找 一个 特殊 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string is_special ) ) )
上面 有块 1 和 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 形状 最多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
找到 位于 至少 一个 其他 块 顶部 且 长度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
选择 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 至少 3 英寸 长 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 我 所有 的 块 最 多 高达 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪 块砖 上面 有 不到 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 是 金字塔 形块 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 我 在 块 1 左边 和 上面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 右侧 的 块 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 左边 和 上面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
在 块 1 的 上方 和 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
位于 块 1 左侧 的 块 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 一个 具有 相同 高度 和 宽度 测量 值 的 块 ， 特别 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 块 1 下面 找到 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 块 1 左侧 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
特殊 的 块 ， 这是 特殊 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string is_special ) ) )
选择 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) )
块 位于 块 1 的 第二个 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 宽 3 英寸 ， 砖 1 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 宽度 为 3 英寸 的 块 ， 位于 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 最小 块 的 右边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 比块 1 更 瘦 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 长度 和 高度 为 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 宽度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 上面 有块 1 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 的 块 高达块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 3 或 6 英寸 之间 的 块	( call SW.listValue ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) )
找到 块 1 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 一个 3 英寸 长 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 少于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 的 高度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
找到 块 1 上方 和 右侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 块 1 左边 的 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
块 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
平均 块 的 高度 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
选择 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
只要 块 1 ， 找到 我 所有 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 一个 短于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 长于 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 大多数 块 右侧 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
3 英寸 长 的 块 在 块 1 之上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
阻止 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
什么 块 是 3 英寸 或 更 小 英寸 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻止 两个 块 是 对 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 至少 2 个 街区 以下 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪些 块 留下 单个 或 更 少 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 的 左侧 和 下方 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 和 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 至少 与 块 1 一样 高 的 块 是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
两种 以上 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string > ) ( number 2 ) ) )
哪 块砖 的 宽度 小于 砖 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪个 块 位于 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string ! = ) en.block.block1 ) )
什么 块 在 块 1 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
块 1 下面 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 高度 小于 6 英寸 的 所有 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) )
选择 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
阻挡 不到 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 最小 数量 的 其他 块 下面 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 长度 超过 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
3 英寸 长 的 块 位于 块 1 之上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 高于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 具有 两个 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
块 1 上方 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 所有 2 种颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( number 2 ) ) )
选择 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 高度 为 1 个块 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
块 1 左侧 的 特殊 块 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 长度 为 1 的 所有 块	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
块 1 的 颜色 是 什么	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
找到 我 所有 不长 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
阻止 在 最少 数量 的 块 的 左侧	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 第 1 块 右侧 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
只要 块 1 宽 ， 就 阻塞	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
什么 块 在 3 英寸 长 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 左边 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
什么 金字塔 形砖 是 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 下面 有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 比块 1 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 至少 3 英寸 高 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 一个 位于 左侧 最远 块 的 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 块 1 前后 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 宽度 小于 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 我 所有 比块 1 宽度 更 宽 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
独特 的 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
阻止 块 1 上方 的 两个 空格	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 高于 三 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 下方 有 一个 块 ， 上面 有 一个 块 找到 它	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 高度 不 超过 块 1 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
阻挡 在 3 英寸 宽 的 块 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一个 位于 两个 或 更 少块 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 比块 1 短 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 最短 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
只要 块 1 的 宽度 ， 最 多 找到 我 所有 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 的 右侧 是否 有块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
从 1 区块 开始 的 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
第 1 区 下方 2 个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 的 长度 短于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 3 英寸 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
选择 块 1 右侧 的 3 英寸 长块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 下面 和 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
在 块 1 下 选择 一个 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 特殊 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 在 块 1 右侧 和 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
选择 宽度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻止 在 块 1 的 右侧 及其 上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 左边 的 块 ， 高度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 不 低于 砖 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string ! = ) en.block.block1 ) )
得到 第 1 块 下方 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 3 英寸 长 的 块 以上 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
在 金字塔 形块 下方 阻挡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 块 1 右边 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
挡 在 底部	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 宽 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 1 下方 和 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻挡 两个 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
一块 3 到 6 英寸 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 右边 的 块 是 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
3 英寸 长 的 块 ， 左边 有块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 特别 的 3 英寸 长块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 下面 的 块 少于 两块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
从块 1 上方 和 右侧 阻止	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
选择 一个 特殊 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
选择 块 1 位于 左侧 并且 高度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 长度 大于 3 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 上方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 块 1 上方 的 所有 块 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 高度 为 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
从 3 英寸 的 街区 挡住 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 的 右边 和 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 宽 的 积木 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
阻止 最多 的 块 在 下面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
高度 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 在 块 1 左侧 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 高 的 块 ， 块 1 是 正确 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 在 金字塔 形块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
哪个 砖块 在 金字塔 形状 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
什么 块 在 特殊 块 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 一个 6 英寸 或 更长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 1 下面 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 不 超过 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 在 块 1 之上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 右边 最多 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 是 块 数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 宽度 为 3 英寸 且 低于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
在 块 1 的 右下方 找到 一个 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
哪 块砖 不 高于 砖 1 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 3 英寸 高 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻挡 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 下方 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 我 在 块 1 左侧 和 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
哪个 块 位于 块 1 右侧 的 块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
是否 有 一个 块 ， 其 直径 和 长度 在 这 两个 方向 上 等于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
选择 少于 两种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
哪个 街区 最 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
在 它 下方 找到 一块 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 两个 以上 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string > ) ( number 2 ) ) )
选择 金字塔 形状 的 块 和 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
选择 长度 为 1 的 所有 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
什么 块 是 块 1 右侧 和 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 左边 和 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪 块砖 是 3 英寸 砖 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
在 块 1 的 右边 和 块 1 的 左边 是否 有 一个 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
是否 有 一个 块 在 块 1 的 左侧 ， 也 是 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
什么 块 都 在 块 1 的 上方 和 下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 3 下面 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
与 块 1 具有 相同 颜色 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
在 块 1 下面 找到 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 或 2 下方 的 所有 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
得到 块 1 或块 2 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
多 色块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string > ) ( number 2 ) ) )
选择 块 1 右侧 高 的 块 3	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 在 块 1 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 一块 位于 人口 最多 的 砖块 之下 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 块 1 的 右边 ， 并且 是 金字塔 形状	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 与 块 1 一样 长 或 更长 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪个 块 最 接近 底部	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
双 色块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string > ) ( number 2 ) ) )
找到 块 1 右边 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
哪个 块 只有 一种 颜色	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
找到 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 在 3 英寸 宽 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
在 第 1 区 下方 获得 3 英寸 长 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 不是 金字塔 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
什么 块 在 块 1 的 右边 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 至少 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 下方 的 块 和 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
选择 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 块 2 右侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 高于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
只要 块 1 宽 ， 什么 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找到 我 最 多 和 块 1 一样 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 块 1 左侧 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 3 英寸 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 最 丰富多彩 的 街区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string color ) ) )
长度 不是 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 至少 有 2 种颜色 的 所有 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string >= ) ( number 2 ) ) )
找到 与 块 1 颜色 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
什么 块 是 两个 以上 块 的 左边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 一个 不 超过 2 个 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
砖块 位于 砖块 1 右侧 的 砖块 之上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
块 长度 为 3 英寸 的 块 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 所有 3 英寸 高 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 长度 超过 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 3 英寸 高 的 块 ， 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 左边 和 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 长 的 块 ， 块 1 是 正确 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
两种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( number 2 ) ) )
选择 块 1 左侧 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
块长 3 英寸 ， 低于 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 下面 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 特殊 的 ， 右边 有块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 两个 块 左边 的 块 或 一个 但 不 多 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪些 块 位于 块 1 右侧 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 所有 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 块 1 的 右侧 选择 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
选择 两种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( number 2 ) ) )
阻挡 2 个 街区 左侧	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 块 1 和 2 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 在 块 1 右侧 的 所有 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 街区 高于 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
哪个 块 是 最 短 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
阻止 块 1 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
将块 放置 在 宽度 为 3 英寸 的 块 的 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 金字塔 块 上方 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 长度 至少 为块 1 宽度 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 我 最 多 剩下 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 下面 有块 1 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪个 块长 至少 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 每块 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
一个 3 英寸 的 区块 顶部 有 一个 块 找到 那个 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 上方 和 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 下面 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 最少 颜色 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string color ) ) )
选择 块 1 左侧 的 块 ， 总 高度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 有 多长	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
哪种 砖 的 形状 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
块 1 上方 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
在 块 1 的 下方 和 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
在 块 1 下方 阻挡 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
高度 最多为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 左侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 在 第 1 区 左侧 的 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
是否 有 一个 宽度 等于 最大 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
具有 最 多 形状 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
什么 块 至少 和 块 1 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 一个 6 英寸 长 或 更 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
阻止 在 块 1 下方 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
阻挡 金字塔 块 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 块 1 上方 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 人口 最少 的 砖块 上方 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 上面 有 金字塔 形块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
阻挡 高度 不是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 比块 1 长 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
收集 所有 3 英寸 或 更 大 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
第 1 块 的 权利	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 右侧 的 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 块 在 块 1 右侧 的 块 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
阻止 1 块 以上 ， 1 块 阻止	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
什么 砖 左边 至少 有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 和 第 2 块 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
块 1 上方 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
哪 块砖 长 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
选择 宽度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
特别 区块 的 权利	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 我 所有 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 厚度 小于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 块 1 或 2 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪个 金字塔 形块 是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 的 总长度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
金字塔 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
从块 1 的 右边 获取 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 我 那个 街区 左边 的 所有 街区 都 在 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 比块 1 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 右边 的 所有 块 ， 块 1 的 左边 是 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 与 块 1 相同 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
找到 块 1 上方 和 左侧 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 两块 以上 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 右边 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 一个 长度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
在 块 1 和 块 1 上方 的 块 之间 找到 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
什么 块 在 块 1 下面 并且 高度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 1 留下 了 什么 块 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
长度 大于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
左边 第三个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
金字塔 形块 顶部 是否 有 一个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 长度 超过 块 1 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 位于 大多数 块 的 右侧	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 右边 有 第 1 个块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
阻止 剩下 两个 以上 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 宽度 和 高度 各为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 不是 金字塔 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
选择 大于 这 两个 块 右侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 上方 的 3 英寸 高 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
最 多 两种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
什么 块 在 两个 街区 之下	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 位于 大多数 块 的 右侧	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 区块 位于 3 英寸 高 区块 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
块 1 上方 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪些 金字塔 块 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 1 从块 1 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 3 英寸 宽 的 块 以上 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 在 它 左边 少于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 3 英寸 高 的 块 并 放在 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 有 上面 的 块 1 和 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
哪个 块 的 宽度 小于 或 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻止 块 1 的 上方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 高度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 下方 的 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
长度 为 3 英寸 ， 长度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 右边 的 块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 是 块 1 右边 的 两个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
一个 特殊 的 块 ， 其 形状 是 金字塔 形	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 块 在 块 1 或块 2 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
高度 不是 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 高于 3 英寸 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 的 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
哪 块砖 不比 砖 1 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 块砖 高 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
选择 最 不 多彩的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string color ) ) )
找到 一个 金字塔 或 立方体 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
什么 块 有 右边 的 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
块 超过 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 位于 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 block1 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 我 在 块 1 上方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
块 的 长度 大于 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 块 是 3 英寸 长块 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
将块 1 命名 为 下方 和 右侧 的 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 距离 右边 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
挡住 金字塔 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 最长 的 街区	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
阻挡 3 英寸 以上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
长度 至少 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 在 3 英寸 长 的 块 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 砖 不 在 砖 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
选择 最小 块 组 上方 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
是否 有 一个 不 超过 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
长度 为 3 英寸 ， 形状 为 金字塔 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
最低 宽度 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
块 1 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
什么 块 在 其 右侧 有块 1 并且 是 金字塔 形 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 一个 非 金字塔 形 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
将块 放在 宽度 为 3 英寸 的 块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
阻止 不 在 块 1 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string ! = ) en.block.block1 ) )
哪 块砖 最 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 宽 的 块 ， 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 形状 像 金字塔 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 位于 块 1 下方 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 宽度 小于 块 1 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
左边 和 上面 的 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
什么 块 是 3 英寸 高 和 金字塔 形	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 所有 3 英寸 长 的 块 ， 块 1 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
在 块 1 上方 阻止 两个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 块 1 下面 的 所有 块 2	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 宽 和 长块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 超过 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 低于 大多数 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 到 6 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 左边 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 一个 直径 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 左边 和 下面 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
哪个 块 下面 有 最 多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 比块 1 更 高 的 块 很长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻挡 3 英寸 以上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 右侧 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
哪 块砖 的 宽度 小于 砖 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪个 块 的 形状 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string shape ) ) )
选择 块 1 左侧 的 块 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 左侧 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 下面 的 所有 块 ， 块 1 也 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
选择 块 1 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
块 1 以上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 下面 最多 2 个 街区 的 所有 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 块 至少 与 块 1 相同 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 最高 6 英寸 高 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 金字塔 形砖 高 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 右侧 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪 块砖 在 砖 1 以上 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
选择 左侧 少于 2 个 区块 的 区块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 位于 第 1 区 右侧 的 3 英寸 长 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 上 方块 的 左侧 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 所有 的 金字塔 块 ， 块 1 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
高度 为 3 英寸 且 低于 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 我 上面 的 所有 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 块 1 左侧 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
选择 另 一个 块 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 我 所有 比块 1 的 长度 更 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 位于 块 1 左侧 的 块 另一侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
哪 块砖 不再 是 砖 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 在 块 1 正下方 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 块 1 上方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 一个 块 ， 只要 块 1 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
选择 高度 小于 6 英寸 的 砖块 ， 然后 选择 高度 小于 3 英寸 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 我 所有 3 英寸 高 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 一个 不 在 块 1 之上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string ! = ) en.block.block1 ) )
找到 我 下面 的 所有 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
块 1 上面 有 什么 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
块 1 低于 块 1 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
具有 块 1 或块 2 的 块 在 右侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 一个 3 英寸 高 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 下方 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
哪 块砖 高于 砖 1 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 种 类型 的 块 具有 最多 的 形状	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
找到 我 所有 3 英寸 高 的 块 ， 其中 1 块 是 剩下 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 最高 的 街区	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
选择 块 1 在 右侧 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
在 块 1 的 左侧 和 上方 找到 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 1 区 左侧 的 3 英寸 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 下方 和 左侧 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 一个 至少 3 到 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
长度 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找 我 一个 3 英寸 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 1 以上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 的 形状 是 金字塔 ， 这是 特殊 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
第 1 块 右边 2 个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
什么 特殊 块 的 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
哪 块砖 至少 和 砖 1 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪 块砖 在 砖 1 之上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 一个 块 ， 左边 最多 有 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 金字塔 块 rght	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
什么 块 在 块 1 上方 ， 高度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 位于 上方 和 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 至少 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 的 总 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
块 1 或块 2 右侧 是否 有块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 右侧 的 块 ， 宽度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 至少 与 块 1 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 上方 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
阻挡 至少 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 宽度	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
在 块 1 下方 找到 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string below ) ( string = ) en.block.block1 ) )
哪个 块 位于 块 1 下方 的 块 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
块 长度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下面 的 块 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
阻止 最少 数量 的 块 是 正确 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 下面 最多 2 个 街区 的 所有 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 块 2 或块 1 之上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 特殊 区块 上方 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 一个 长度 和 宽度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
选择 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
第 1 块 有 多 高	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
找到 我 所有 3 英寸 宽 的 块 ， 块 1 是 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 特殊 区块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
哪种 砖 的 形状 与 砖 1 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
比 每周 站立 会议 晚 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 的 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
每周 站立 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
告诉 我 在 爱丽丝 参加 的 格林 伯格 咖啡馆 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 当天 开始 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
告诉 我 所有 会议 都 没有 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
告诉 我 与 至少 两个 人 参加 的 所有 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
告诉 我 所有 会议 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
会议 从 上午 10 点 之前 或 下午 3 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
哪些 会议 不 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
会议 在 每周 站立 开始 前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
在 1 月 2 日 之后 向 我 展示 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
什么 会议 有 最早 的 开始 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
在 格林 伯格 咖啡馆 向 我 展示 三个 小时 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 所有 会议 不迟于 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
1 月 2 日 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 所有 会议 都 是 在 每周 例会 开始 之前 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
每周 的 站立 会议 有 多长	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
告诉 我 所有 3 小时 的 会议 ， 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 所有 会议 不是 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
当 每周 站立 计划 开始 时 哪些 会议 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
告诉 我 所有 至少 有 两次 会议 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 需要 3 个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 会议 有 最少 的 人 出现	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string attendee ) ) )
每周 站立 的 时间 结束	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
什么 会议 在 上午 10 点 结束 ， 爱丽丝 正在 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 平均 会议 长度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
参加 jan 第 2 次 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 所有 与 bob 或 alice 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
告诉 我 有 两位 与会者 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
告诉 我 所有 会议 在 同一时间 结束 或 比 每周 站立 开始 更 早	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 有 两位 与会者 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
告诉 我 1 月 2 日 的 所有 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
会议 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 重要 的 会议 在 格林 伯格 咖啡馆 有 一个 位置	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 1 月 3 日 的 所有 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
查找 从 1 月 2 日 或 1 月 3 日 开始 的 所有 会议	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) )
哪个 会议 最早 开始	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
告诉 我 所有 会议 在 上午 10 点 或 下午 3 点后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 会议 最多 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
location 的 会议 次数 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
哪些 会议 的 开始 时间 为 上午 10 点 或 下午 3 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
格林 伯格 咖啡馆 的 会议 由 爱丽丝 出席	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
向 我 展示 所有 每周 站立 会议 的 日期	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
什么 会议 的 结束 时间 与 每周 站立 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 与 每周 综合 会议 同时 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
爱丽丝 参加 的 会议 从 上午 1000 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 预定 不到 三 小时 或 不到 一 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
哪个 会议 安排 在 最早 的 日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string date ) ) ) )
会议 于 1 月 2 日晚 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
向 我 展示 需要 3 个 小时 并 与 爱丽丝 会面 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
参加 每周 创业 的 人 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
会议 在 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 会议 不迟于 每周 启动	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
什么 会议 比 每周 站立 更长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
什么 会议 有 一个 2 月 或 3 月 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
告诉 我 在 每周 站立 结束 后 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 的 开始 时间 是 多少	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
会议 有 多长	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
在 每周 启动 会议 开始 后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
有 爱丽丝 参加 的 会议 ， 长 达 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
谁 是 每周 站立 或 年度 审查	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
哪些 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 于 上午 10 点 结束 ， 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 于 1 月 1 日 或 1 月 1 日 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
告诉 我 参加 大多数 会议 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
上午 10 点 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 最早 开始	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
没有 举办 每周 站立 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
向 我 展示 从 上午 10 点 开始 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
每周 启动 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
告诉 我 所有 在 1 月 3 日 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
每周 站立 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) )
告诉 我 从 上午 10 点 开始 的 所有 会议 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 于 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 每周 站立 会议 的 日期	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
会议 在 每周 站立 结束 时 或 结束 后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
不 在 格林 伯格 咖啡馆 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
什么 会议 的 结束 时间 不 超过 每周 启动 的 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
会议 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
在 每周 例会 开始 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
与 每周 站立 会议 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
告诉 我 所有 标记 为 重要 的 会议 ， 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
告诉 我 所有 的 会议 都 比 每周 站立 时间 晚 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
会议 结束 的 时间 早 于 每周 站立 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 在 1 月 2 日 或 1 月 3 日 之前 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
是 上午 10 点 或 下午 3 点 的 会议	( call SW.listValue ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) )
至少 有 两位 与会者 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
告诉 我 从 上午 10 点 开始 的 所有 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
参加 每周 站立 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
会议 时间 超过 一 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
让 我 在 不到 两个 地点 举行 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string < ) ( number 2 ) ) )
选择 所有 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string is_important ) ) )
会议 在 上午 10 点 或 下午 3 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 在 每周 站立 会议 结束 时 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
什么 会议 与 每周 站立 时 的 位置 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
哪些 会议 的 开始 时间 与 周 启动 会议 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
1 月 3 日前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
告诉 我 所有 参加 会议 的 与会者 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
1 月 2 日 的 会议 ， 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 都 是 在 同一时间 或 早于 每周 站立 结束 时 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
会议 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 至少 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
每周 的 站立 会议 有 多长	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
在 每周 站立 之前 发生 的 会议 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
两个 以上 会议 的 举办 地点 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 1 月 2 日 所有 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 所有 与会者 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
告诉 我 上午 10 点 没有 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
参加 每周 站立 会议 的 人 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
什么 会议 在 格林 伯格 咖啡馆 的 1 月 2 日 举行	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
什么 会议 的 长度 与 每周 启动 的 长度 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) )
什么 人 没有 参加 每周 的 站立 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
格林 伯格 咖啡馆 的 会议 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
每周 站立 会议 当天 或 之后 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 在 同一天 或 每周 站立 之前 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 所有 参加 过 alice 或 bob 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
什么 会议 至少 在 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
找 我 一个 短于 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
什么 位置 是 大多数 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
每周 启动 参加者	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
告诉 我 从 上午 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 在 每周 站立 开始 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
与 每周 站立 的 人 分享 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
让 我 在 上午 10 点 与 爱丽丝 见面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
会议 没有 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
什么 会议 在 1 月 2 日 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
那些 没有 参加 每周 站立 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
三 小时 或 更 长时间 或 一 小时 或 更 长时间 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
1 月 2 日 上午 10 点 开会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 1 月 3 日 之前 向 我 展示 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
向 我 展示 最少 数量 的 不同 地点 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string location ) ) )
显示 所有 标记 为 重要 的 会议 的 位置	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
向 我 展示 参加 每周 站立 会议 的 人 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
参加 会议 的 人们 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 谁 参加 了 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
什么 会议 的 参加 人数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string attendee ) ) )
告诉 我 所有 重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string is_important ) ) )
两人 或 两人 以下 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
什么 会议 有人 去 每周 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
告诉 我 谁 不是 每周 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
告诉 我 所有 会议 在 上午 10 点 开始 和 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
alice 参加 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
比 每周 站立 会议 更 早 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会 在 格林 伯格 咖啡馆 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 三 小时 的 会议 有 爱丽丝 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 最长 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
告诉 我 所有 没有 举办 每周 站立 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
什么 是 重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string is_important ) ) )
告诉 我 所有 会议 从 上午 10 点 开始 ， 到 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 预定 为 三 小时 或 一 小时	( call SW.listValue ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) )
格林 伯格 咖啡馆 三 小时 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
人们 参加 爱丽丝 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 参加 1 月份 所有 会议 的 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 参加 会议 的 所有人 也 参加 了 alice	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
谁 是 参加 每周 站立 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
什么 会议 的 长度 大于 每周 启动	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
什么 人 是 超过 两次 会议 的 参加者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
在 1 月 1 日 之前 开会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 alice 参加 1 月 2 日 的 任何 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
什么 会议 的 结束 时间 早 于 每周 启动	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
向 我 展示 将 在 每周 站立 开始 前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
1 月 2 日 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
alice 参加 了 哪些 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
与 每周 站立 会议 长度 相同 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) )
会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
在 每周 站立 会议 开始 后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 有 最 短 的 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
会议 开始 的 时间 晚于 每周 站立 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 最多 有 两个 地点 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
什么 重要 会议 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
1 月 2 日 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
什么 会议 的 结束 时间 至少 是 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 会议 短于 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
什么 重要 的 会议 位于 格林 伯格 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string is_important ) ) )
什么 会议 的 结束 时间 小于 每周 站立 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 参加 过 两次 以上 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
1 月 2 日 或 之前 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 位置 有 两个 以上 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
在 大多数 地方 举行 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string location ) ) )
格林 伯格 咖啡馆 的 会议 结束 了 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
与 爱丽丝 作为 与会者 三 小时 会面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 会议 从 每周 站立 平均 开始 时间 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
显示 不早 于 每周 启动 会议 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 爱丽丝 参加 的 所有 会议 都 是 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 会议 在 每周 站立 开始 的 同时 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
什么 会议 在 每周 站立 结束 时有 一个 开始 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
重要 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 会议 从 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
在 每周 站立 结束 之前 会议 开始 了 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 三个 小时 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
至少 举行 两次 会议 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 会议 不是 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
会议 在 每周 站立 结束 后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 alice 参加 的 所有 会议 的 位置	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 1 月 2 日 上午 10 点 结束 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 在 格林 伯格 咖啡馆 结束 于 上午 10 点 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
三个 小时 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
什么 会议 有 爱丽丝 参加 并 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
从 上午 10 点 开始 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
有 多少 次 会议	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
每周 站立 结束 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
有 爱丽丝 出席会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 任何 爱丽丝 没有 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string ! = ) en.person.alice ) )
平均 会议 持续 多久	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
告诉 我 1 月 2 日 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
人 是 每周 站立 或 年度 审查 的 参加者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
三 小时 或 更 长时间 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
重要 会议 于 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
告诉 我 1 月 2 日 上午 10 点 结束 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 时间 短于 三 小时 或 短于 一 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
会议 于 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
会议 不会 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
会议 从 晚上 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 所有 会议 至少 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
告诉 我 在 1 月 1 日 之后 发生 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 会议 的 长度 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
告诉 我 所有 会议 结束 于 上午 10 点 ， 爱丽丝 正在 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
格林 伯格 咖啡馆 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 在 格林 伯格 咖啡馆 的 所有 餐点 ， 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
会议 时间 短于 三 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
告诉 我 所有 标记 为 重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) )
告诉 我 1 月 2 日 上午 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 参加 会议 的 人数 不 超过 两人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
谁 将 参加 重要 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
在 每周 站立 会议 结束 时 或 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 会议 的 与会者 都 很 重要	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 所有 的 会议 不会 超过 每周 的 站立 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
每周 站立 结束 时 会议 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
告诉 我 上午 10 点到 下午 3 点 之间 的 所有 会议	( call SW.listValue ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) )
告诉 我 会议 爱丽丝 将 参加 哪个 会议 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 最迟在 下午 3 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
哪个 会议 有 最早 的 结束 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
什么 重要 的 会议 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 于 上午 10 点 或 之后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪个 地点 举办 的 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 所有 会议 都 是 在 每周 站立 会议 结束 之前 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 在 每周 站立 日期 或 之后 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 所有 会议 从 晚上 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 会议 从 1 月 2 日 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
这次 会议 是 三 小时 或 一 小时	( call SW.listValue ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) )
告诉 我 alice 参加 的 所有 会议 ， 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
每周 站立 会议 前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
会议 于 上午 10 点 结束 ， 为期 三 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 每周 站立 后 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
会议 结束 不迟于 每周 站立 的 开始 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 位于 格林 伯格 咖啡馆 或 中央 办公室 的 任何 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
什么 会议 是 一 小时 或 更 长时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
三 小时 的 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
会议 时间 不 超过 每周 站立 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
告诉 我 所有 会议 的 长度 要 少于 或 超过 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
告诉 我 不 迟于 每周 站立 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 何时 开始	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
什么 会议 的 日期 早于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 会议 都 是 在 每周 站立 之前 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 爱丽丝 没有 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string ! = ) en.person.alice ) )
参加 会议 的 人 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
两人 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
什么 人 是 至少 两次 会议 的 参加者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
alice 参加 会议 的 地点 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 在 格林 伯格 咖啡馆 或 中央 办公室 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
会议 的 开始 时间 是 每周 站立 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
在 格林 伯格 咖啡馆 展示 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 会议 有 最新 的 开始 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
什么 会议 在 格林 伯格 咖啡馆 和 爱丽丝 将 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 是 最 短 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
告诉 我 任何 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
与 每周 站立 会议 相同 或 更 短 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
向 我 展示 与 每周 启动 时 位置 相同 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
告诉 我 三个 小时 的 所有 会议 都 被 标记 为 重要	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
会议 次数 最多 的 地点 是 什么 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
什么 会议 有 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
让 我 在 下午 3 点 之前 开始 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 所有 会议 晚于 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
谁 参加 了 最少 数量 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
向 我 展示 参加 每周 站立 的 人 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
参加 格林 伯格 咖啡馆 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
1 月 2 日 或 1 月 3 日 之前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
两位 与会者 参加 了 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
告诉 我 任何 会议 ， 每周 一次 或 每年 一次 的 审查	( call SW.listValue ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) )
最少 参加 人数 的 会议 地点 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 发生 在 比 每周 站立 更晚 的 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
显示 比 上午 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
三个 小时 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
什么 位置 是 在 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
在 格林 伯格 咖啡馆 或 中央 办公室 举行 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
哪些 会议 与 每周 站立 会议 同一天 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
告诉 我 1 月 2 日 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string is_important ) ) )
重要 会议 的 位置 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
在 每周 站立 会议 之前 或 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
三个 或 一个 小时	( call SW.listValue ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) )
什么 会议 的 日期 晚于 每周 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
每周 站立 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
什么 会议 不 超过 一到 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
告诉 我 1 月 2 日 或 之后 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
至少 两个 会议 的 位置 是 位置	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 爱丽丝 正在 参加 的 所有 上午 10 点 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 参加 greenberg 咖啡馆 会议 的 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
哪些 会议 的 开始 时间 与 每周 的 站立 会议 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
哪个 会议 由 大多数 人 参加	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string attendee ) ) )
会议 在 上午 10 点 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 所有 比 每周 站立 会议 更 早 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 有 更 晚 的 日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
在 每周 例会 上 或 之前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
在 每周 站立 之前 向 我 展示 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
会议 结束 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
告诉 我 所有 会议 都 在 同一时间 或 早于 每周 站立 会议 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 alice 在 上午 10 点 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
安排 了 多少 次 会议	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 所有 会议 持续时间 超过 三 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
什么 会议 的 结束 时间 大于 每周 站立 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 在 上午 10 点 结束 ， 爱丽丝 正在 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 会议 不迟于 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 重要 的 会议 有 三个 小时 的 长度	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
什么 会议 比 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 会议 日期 早于 1 月 2 日 或 3 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
告诉 我 所有 会议 都 是 在 每周 的 立场 会议 之前 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 在 每周 站立 会议 开始 后 结束 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
会议 的 次数 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
与 最新 结束 时间 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
alice 参加 的 会议 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
在 格林 伯格 举行 了 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
与 爱丽丝 作为 与会者 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
持续时间 最短 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
让 我 在 1 月 1 日 与 爱丽丝 见面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
参加 最少 会议 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
1 月 2 日 或 3 日	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) )
告诉 我 每周 站立 的 长度	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
告诉 我 在 1 月 2 日 或 之前 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 在 格林 伯格 咖啡馆 发生 重要 事件 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
上午 10 点 在 格林 伯格 咖啡馆 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 从 上午 10 点 或 更 早 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
三 小时 或 一 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) )
举行 两次 以上 会议 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
满足 最多 的 地点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string location ) ) )
会议 将 在 不 迟于 1 月 2 日 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
将 于 上午 10 点 结束 的 会议 将 在 何处 召开	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
什么 会议 在 格林 伯格 咖啡馆 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
向 我 展示 与 每周 站立 会议 共享 位置 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
什么 是 会议 的 平均 长度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
每周 站立 会议 的 结束 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
在 每周 站立 之前 会议 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 在 格林 伯 咖啡馆 的 所有 会议 ， 这些 会议 将 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
会议 在 1 月 2 日 或 3 日 之前 或 之前 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
哪个 会议 的 预定 地点 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string location ) ) )
每周 站立 起始 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
三 小时 或 更 短 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
会议 不是 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
什么 会议 有 大多数 每周 启动 会议 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
向 我 展示 在 每周 站立 会议 结束 前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 在 哪里	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) )
安排 会议 上午 10 点 或 下午 3 点	( call SW.listValue ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) )
告诉 我 所有 会议 ， 每周 一次 或 每年 一次 的 审查	( call SW.listValue ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) )
什么 会议 不 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
会议 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
两人 或 两人 以上 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
这是 1 月 2 日 或 1 月 3 日 的 会议	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) )
会议 从 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
参加 三 小时 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
哪个 人 参加 重要 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 本月 最新 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
找到 一个 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
参加 每周 站立 的 人 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
最早 的 开始 时间 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
每周 启动 的 位置 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) )
这次 会议 有 多长	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
告诉 我 所有 会议 不迟于 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 重要 的 会议 是 爱丽丝 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
告诉 我 所有 会议 都 没有 发生 在 格林 伯格 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
谁 参加 了 最 多 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
什么 会议 短于 或 长于 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
告诉 我 所有 三 小时 的 会议 ， 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 从 上午 10 点 开始 ， 所有 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
什么 重要 的 会议 安排 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 格林 伯格 咖啡馆 向 我 展示 1 月 1 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
谁 参加 每周 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
会议 的 持续时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
告诉 我 从 上午 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 与 爱丽丝 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
向 我 展示 比 每周 站立 会议 晚 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 会议 计划 运行 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
哪些 会议 与 每周 站立 会议 的 日期 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
什么 是 会议 的 长度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
什么 人 参加 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
告诉 我 在 每周 站立 前 几天 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
谁 参加 每周 站立	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
告诉 我 1 月 2 日 的 所有 会议 ， 也 是 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 所有 会议 安排 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
参加 两次 以上 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
什么 会议 的 开始 时间 早 于 每周 站立 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 结束 于 上午 10 点 是 爱丽丝 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 的 开始 时间 是 在 每周 站立 的 开始 时间 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
1 月 1 日 与 爱丽丝 出席会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 在 上午 10 点 或 之前 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 所有 重要 的 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
1 月 2 日 的 会议 是 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
什么 是 位置 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ) )
什么 会议 与 每周 启动 的 长度 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
告诉 我 不 在 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
爱丽丝 正在 参加 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 在 上午 10 点 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
格林 伯格 咖啡馆 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 1 月 2 日 上午 10 点 开始 的 任何 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
谁 将 参加 1 月 2 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
每周 站立 会议 的 开始 时间 是 什么 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
1 月 2 日 或 之后 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 与 每周 站立 时 在 同一 地点 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
告诉 我 所有 会议 早 于 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
会议 在 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 参加 会议 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 是 在 第一周 每周 站立 的 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
这个 人 的 人数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 正在 参加 格林 伯格 咖啡馆 参加 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
会议 从 早上 700 点 开始 ， 到 上午 000 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 的 开始 时间 不晚 于 上午 10 点 或 下午 3 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
谁 参加 了 上午 10 点 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
在 1 月 2 日 之前 向 我 展示 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 发生 在 1 月 1 日 或 1 月 3 日 的 事情	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
向 我 展示 与 每周 站立 会议 分享 与会者 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
告诉 我 所有 会议 从 1 月 1 日 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 所有 比 每周 站立 开始 更 早 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 是 爱丽丝 上午 10 点 参加 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
与 最新 开始 时间 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
告诉 我 alice 参加 并 在 格林 伯格 咖啡馆 举办 的 任何 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 会议 在 上午 10 点 结束 ， 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 有 一个 日期 jan   2 和 alice 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
让 我 参加 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 会议 拥有 最多 的 地点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string location ) ) )
在 每周 站立 的 地点 开会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
上午 10 点 开始 和 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
向 我 展示 最新 结束 时间 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
什么 会议 早 于 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 在 每周 站立 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
什么 会议 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
参加 每周 站立 会议 的 人 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
有 什么 重要 的 会议 有 爱丽丝 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
哪些 会议 在 格林 伯格 咖啡馆 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 在 会议 次数 最少 的 所有 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 至少 在 每周 综述 的 开始 时间 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
在 每周 站立 会议 的 同一天 向 我 展示 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
什么 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪些 会议 很 重要	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) )
告诉 我 所有 会议 发生 在 晚上 10 点 或 下午 3 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 参加 每周 站立 会议 或 年度 审查 的 所有人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
让 我 在 1 月 2 日 在 格林 伯格 咖啡馆 见面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 会议 次数 最多 的 地点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 晚于 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪个 会议 安排 在 最近 的 日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 所有 会议 在 格林 伯格 咖啡馆 发生 了 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 位置 与 每周 站立 不 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
会议 于 1 月 10 日 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
爱丽丝 出席 1 月 2 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
什么 会议 在 格林 伯格 咖啡馆 有 一个 位置 ， 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
哪些 会议 定于 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 上午 10 点 开始 和 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
1 月 1 日 会议 的 位置 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
会议 从 1 月 1 日 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
重要 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) )
会议 从 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
比 每周 站立 会议 晚 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
参加 会议 的 人员 从 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
会议 从 上午 1000 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
所有 会议 的 平均 长度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
什么 会议 有 两个 或 更 少 的 与会者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
告诉 我 所有 会议 时间 不 超过 三 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
什么 会议 在 每周 站立 开始 时 或 开始 后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 人 参加 每周 站立	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
什么 会议 的 结束 时间 是 1 月 1 日 上午 1 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
不 在 1 月 2 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
会议 是 三个 小时 ， 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 会议 不迟于 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
从 上午 10 点 开始 的 三 小时 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
格林 伯格 咖啡馆 会议 于 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 会议 至少 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
正在 举行 的 重要 会议 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
会议 开始 时间 是 在 每周 站立 结束 时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
哪些 会议 将 花费 与 每周 站立 时间 相同 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
在 每周 站立 开始 时间 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 爱丽丝 正在 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string attendee ) ( string = ) en.person.alice ) )
会议 至少 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
会议 开始 不迟于 每周 站立 的 开始 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
最 少数 人 参加 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string attendee ) ) )
位置 与 三 小时 会议 的 地点 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
1 月 2 日前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 与会者 的 会议 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 在 每周 站立 结束 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
什么 会议 是 在 1 月 2 日 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
参加 重要 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 所有 会议 都 是 在 每周 站立 结束 的 同时 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
什么 会议 不是 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
参加 大多数 会议 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 结束 于 每周 站立 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
每周 站立 和 年度 审查 将 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
告诉 我 1 月 3 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 上午 10 点 或 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 在 格林 伯格 咖啡馆 举行 会议 ， 爱丽丝 正在 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
什么 会议 在 当天 最快 结束	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
位置 不同于 每周 站立 的 位置	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
告诉 我 所有 会议 在 上午 10 点 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
在 两个 或 更少 地点 举行 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
什么 会议 是 有 意义 的 ， 并 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
三 小时 或 更 短时间 或 一 小时 或 更 短时间 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
在 1 月 2 日 举行 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 从 早上 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
会议 在 每周 站立 会议 开始 时 或 之后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
格林 伯格 咖啡馆 的 哪些 会议 将 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
位置 是 格林 伯格 咖啡馆 或 中央 办公室	( call SW.listValue ( call SW.concat en.location.greenberg_cafe en.location.central_office ) )
参加 至少 两次 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
至少 举行 一次 会议 的 地方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
上午 1000 点 在 格林 伯格 咖啡馆 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
在 一个 地方 开会	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string < ) ( number 2 ) ) )
会议 于 上午 10 点 或 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 位于 格林 伯格 咖啡馆 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
在 每周 例会 开始 时 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
什么 会议 在 最 短 的 时间 内 运行	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
她 我 所有 会议 的 持续时间 在 1 到 3 个 小时 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
什么 会议 有 粉丝 结束 时间 在 上午 10 点 或 下午 3 点 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 所有 会议 三个 小时 ， 结束 于 上午 10 点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
三 小时 的 会议 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
什么 人 参加 大多数 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 在 上午 10 点 之前 或 下午 3 点 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 爱丽丝 正在 参加 的 所有 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
什么 位置 是 每周 站立 和 年度 审查	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
和 爱丽丝 一样 出席 同 一次 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
谁 参加 了 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 所有 会议 都 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 没有 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
告诉 我 所有 会议 在 同一时间 结束 或 晚于 每周 站立 会议 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 会议 的 结束 时间 晚于 每周 的 立场 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
会议 开始 不迟于 每周 站立 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
什么 会议 在 上午 10 点 或 之后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 是 最近 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
比 123 芝麻街 大 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
告诉 我 住房 与 123 芝麻街 的 类型 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单位 每月 最低 租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
在 123 芝麻街 之前 或 当天 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 单位 数量 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
找到 租金 低于 2000 美元 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
哪个 住房 单元 有 两种 以上 的 房屋	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
每月 123 芝麻街 多少 钱	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
找到 最大 的 住房 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
什么 住房价格 为 1500 或 2000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
住房 设有 主卧室 和 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string has_private_room ) ) )
住房 单位 有 私人 浴室 和 1500 美元 的 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
哪个 住房 单位 允许 猫 ， 并 有 一个 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
找到 1 月 2 日 张贴 的 住房 单位 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_cats ) ) )
租金 大于 123 芝麻街 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
什么 住房 单位 定价 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
在 市中心 西区 附近 找到 带 私人 房间 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
住 在 1 月 2 日 的 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_bath ) ) )
哪个 住房 单位 类似 123 芝麻街 的 大小	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
公寓 设有 私人 客房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
房屋 面积 为 800 平方英尺 ， 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
中 城东区 的 住房 单位 也 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
公寓式 住房 单元 ， 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
什么样 的 房屋 是 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
哪个 住房 单位 的 月租金 低于 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
找到 1 月 2 日 发布 的 住房 单位 ， 租金 与 123   sesame   st 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string rent ) ) ( string = ) en.housing_unit.123_sesame_street ) )
公寓 设有 私人 房间 ， 每 月租金 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 的 同样 大小	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
800 平方英尺 的 住房 单元 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
住房 单位 有 一个 私人 房间 ， 发布 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
哪个 住房 单位 有 公寓 类 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
至少 有 两种 类型 的 房屋	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
找到 与 123 芝麻街 相同 或 更 小 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
哪个 住房 单位 每 月租金 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
在 1 月 2 日 或 2 月 3 日 发布 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
什么 是 123 芝麻街 住房 类型	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) )
哪个 住房 单位 提供 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string has_private_bath ) ) )
800 平方英尺 的 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
住房 单位 最多 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
外壳 类型 超过 两个 可用 的 外壳	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单元 ， 都 有 一个 私人 房间 ， 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_dogs ) ) )
123sesame 街 附近 的 区域	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
哪个 住房 单位 的 月租金 低于 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
告诉 我 允许 狗 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
住房 有 两种 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
公寓 租金 在 1500 到 2000 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
住房 单位 有 2 个 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
什么 公寓 花费 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
与 123 芝麻街 相同 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
哪些 住房 单位 允许 狗 和 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_dogs ) ) )
住房 至少 和 123 芝麻街 一样 贵	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
在 市中心 西部 的 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
住房 单位 超过 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
公寓 位于 市中心 西部 或 切尔西 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
住房 类型 如 123 芝麻街 或 900 任务 大道	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
住房面积 介于 800 至 1000 平方英尺 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
什么 住房 单位 与 123 芝麻街 的 住房 单位 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
找到 不是 公寓 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
哪个 区域 至少 有 两个 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住 在 123 芝麻街 附近	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
什么 住房 单元 包含 一个 私人 房间 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
找到 1 月 2 日前 发布 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
找到 除了 1 月 2 日 以外 的 其他 日期 发布 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
找到 宠物 友好 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
在 大多数 街区 找到 住房	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
公寓 每 月租金 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 社区 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
2 月 3 日 发布 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房 单位 是 800 或 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
住房 少于 两个 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
指定 具有 私人 浴室 的 房屋 单元 的 外壳 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
房屋 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
单位 大于 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
有 私人 房间 的 住房 类型 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
住房 单位 有 两个 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
哪个 住房 单位 面积 为 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
告诉 我 在 芝麻街 123 日 或 之前 发布 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
每 月租金 低于 1500 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
哪个 住宅区 位于 市中心 西部 ， 有 一个 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 住房 类型 号码	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
哪个 住房 单元 有 各种各样 的 房屋	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string housing_type ) ) )
住房 与 123 芝麻街 不 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
用 私人 浴室 命名 住房 单元 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
哪个 区域 的 住房 单位 数量 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
住 在 1 月 2 日 发布 的 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
公寓 设有 私人 浴室 ， 可 租用 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_bath ) ) )
位于 市中心 西部 的 住房 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 超过 1500 个 月 或 超过 2000 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
住房 单位 在 1 月 2 日 之后 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
邻近 123 芝麻街 或 900 任务 大道	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
什么 带 私人 浴室 的 住房 单位 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_bath ) ) )
1 月 2 日 在 芝麻街 123 号 的 一个 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
同一天 在 123 芝麻街 发布 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 1500 个 月 ， 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
允许 狗 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string allows_dogs ) ) )
公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住房 单位 在 1 月 2 日 发布 了 哪个 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
寻找 公寓 或 公寓 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
在 安静 的 街区 寻找 房屋	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
住房 费用 1500 美元 ， 是 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
住房 单位 有 多 大	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
800 平方英尺 的 单位 ， 每 月租金 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 市中心 西部 的 住房 单位 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_dogs ) ) )
住房面积 为 1500 个 月 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
住房 有 两个 以上 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
找到 大于 123 芝麻街 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
哪个 社区 拥有 最少 的 住房	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
中 城西区 的 哪个 住房 单元 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 住房 单位 与 1 月 发布 的 单位 租金 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
位于 市中心 西区 的 公寓 ， 租金 为 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪 种 住房 类型 允许 宠物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
最 便宜 的 住房	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
找到 1500 美元 到 2000 美元 的 住房 单位 作为 租金	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
找到 所有 独立式 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
在 123   sesame   street 之前 找到 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
800 平方英尺 或 更 大 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
位于 市中心 西区 的 住房 单位 ， 月租金 为 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 住房 单元 的 价格 低于 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
公寓 租金 在 1500 至 2000 美元 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
住房 单位 ， 发布 日期 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 住房 单元 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 或 900 任务 大街 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
位于 市中心 西部 的 住房 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
所 发布 的 住房 单位 发布 于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string posting_date ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么样 的 房屋 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
哪个 街区 是 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找到 允许 猫 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
哪个 住房 单位 有 最 多 的 房屋	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
允许 猫咪 的 住房 ， 包括 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
寻找 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
命名 有 两个 或 更 多 住房 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
面积 为 800 平方英尺 的 住房 单元 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 住房 单位 类似 于 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) ) )
找到 大小 超过 800 平方英尺 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
哪个 住房 在 1 月 2 日 以外 的 日期 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
什么 街区 有 800 平方英尺 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
什么 住房 单位 有 两个 或 更 多 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
什么样 的 房屋 类型 是 唯一 的 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么样 的 住房 提供 800 平方英尺 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_cats ) ) )
位于 市中心 西部 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
房屋 面积 为 800 平方米 ， 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
住宅 类型 位于 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
哪里 有 800 平方米 的 住房 单位 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
什么 住房 单位 发布 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
公寓 出租 在 1500	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
什么样 的 房屋 可用 1500 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
住房 单元 ， 允许 猫 与 市中心 西部 作为 邻居	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
房屋 贴 在 123 芝麻街 后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 设有 私人 房间 和 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
什么 是 最 多 的 住房 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string housing_type ) ) )
找到 所有 800 平方英尺 的 单位 与 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 两个 或 更 少 的 街区 找到 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
住宿 公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
什么样 的 房屋 是 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找到 公寓 类型 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
住房 单位 便宜 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 至少 1500 个 月 或 至少 2000 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
排除 与 123 芝麻街 在 同一 街区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
住房 单元 有 一个 私人 房间 ， 允许 猫咪	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
租金 不到 15002000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
允许 狗 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) )
猫 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) )
公寓 租金 比 123 芝麻街 贵	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
123 芝麻街 成为 什么 日子	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
什么 是 不 属于 西部 市中心 区域 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
在 2 月 2 日 发布 的 住房 单位 位于 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
外壳 类型 少于 2 个 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
与 1 月 2 日 公布 的 123 芝麻街 同 类型 的 住宅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
住房 单位 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_cats ) ) )
在 市中心 西部 附近 的 宠物 友好 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
住 在 市中心 西区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住房 在 1 月 2 日 或 2 月 3 日 之前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
找到 猫 友好 的 住房 单位 与 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
附近 有 一个 私人 房间 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
安静 的 公寓	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
位于 市中心 西部 的 住房 单位 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
允许 狗 和 猫 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_cats ) ) )
住房 与 123 芝麻街 一样 的 租金 或 便宜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
在 jan   2 发布 的 住房 单位 和 123 芝麻街 是 同 一种	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
公寓 或 公寓 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
住宅区 位于 市中心 西区 ， 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_bath ) ) )
住房 有 一个 私人 房间 ， 发布 于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
800 平方英尺 的 公寓 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
住房 不是 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string ! = ) ( number 800 en.square_feet ) ) )
公寓 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
两个 社区 附近 的 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
1 月 2 日 发布 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
什么 是 公寓 的 门牌号码	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么 住房 单位 发布 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
什么 是 允许 狗 的 住房 单位 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
单位 小于 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
住房 不是 1500 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
1 月 2 日 发布 的 123 芝麻街 住宅 的 典型 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么 住房 单位 与 1 月 发布 的 单位 在 同一 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
哪个 住房 单元 允许 狗 ， 并 有 私人 浴室 设施	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string has_private_bath ) ) )
哪个 住房 提供 不到 两种 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
住房 单位 少于 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
附近 至少 有 2 间 公寓	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
向 我 展示 800 平方英尺 的 空间 ， 猫 可以 接受	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
这个 公寓 大楼 的 电话号码 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
800 平方英尺 的 住房 单元 与 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
找到 最大 面积 800 平方英尺 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
在 1 月 2 日 发布 的 123 芝麻街 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
租金 在 1500 到 2000 美元 之间	( call SW.listValue ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) )
找到 住房 是 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住房 于 1 月 2 日 或 之前 张贴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 住房 单位 和 123   sesame   st 在 同一个 街区 ， 并于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
位于 西部 市中心 的 住房 单位 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 单位 于 1 月 2 日 或 2 月 3 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) )
住房面积 为 800 平方英尺 ， 1500 个 月	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
什么 类型 的 住房 是 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么 住房 有 最 便宜 的 租金	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
123 芝麻街 的 住房 类型	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) )
公寓 设有 私人 客房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
800 平方英尺 的 公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
公寓 设有 主 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) )
允许 狗 的 住房 ， 并于 1 月 2 日 张贴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
哪些 社区 有 狗 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
找到 带 私人 房间 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
什么 房屋 是 两个 单元 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
找到 类似 于 123 芝麻街 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ) )
住房 类型 最多 的 单位	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么 住房 单位 与 1 月 发布 的 单位 大小 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
位于 市中心 西区 的 住宅 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 区域 有 两个 以上 的 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
1 月 2 日 或 之后 发布 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
1 月 2 日 发布 的 住房 单元 是 哪个 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
住宅小区 靠近 市中心 西区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
猫咪 友好 的 公寓 ， 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
住房 单元 ， 面积 为 800 或 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
列出 所有 小于 800 平方英尺 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
在 1 月 2 日 或 2 月 3 日 之后 发布 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
两个 住房 单元 是 什么样 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
123 芝麻街 的 租金 是 多少 个 月	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
哪个 住房 不 超过 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
寻找 不是 公寓 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
最 稀有 的 房屋 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 少于 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
公寓 设有 主卧室 和 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
哪个 住房 单位 的 租金 为 每月 1500 美元 或 2000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
什么 中 城西区 住房 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
在 1 月 2 日 发布 的 住房 单位 与 123 芝麻街 的 面积 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
有 800 平方英尺 住房 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
寻找 一个 安静 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单位 800 平方英尺 或 1000 平方英尺	( call SW.listValue ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) )
住房 有 2 个 周边 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
找到 1 月 2 日 发布 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪些 社区 有 允许 狗 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
123 芝麻街 发布 之前 发布 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
宠物 友好 800 平方英尺 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
住房面积 不 超过 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
在 市中心 西部 的 住房 单位 ， 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_dogs ) ) )
面积 为 800 平方英尺 的 住房 单位 每 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
猫 友好 的 公寓 ， 租金 在 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
住 在 1 月 2 日 的 房屋 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
寻找 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
2 月 2 日 发布 的 住房 单位 是 多少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
哪个 住房 的 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 相同 大小 的 123 芝麻街 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
允许 狗 的 住房 ， 并于 1 月 2 日 张贴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_dogs ) ) )
住房 单位 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 123 芝麻街 之前 或 同一天 发布 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
什么 是 平均 找到 800 平方英尺 的 住房 单位 ， 允许 猫	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
住房 每 月租金 至少 1500	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
公寓 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
找 我 一个 房子 单位 ， 收取 1500 出租 和 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_room ) ) )
1500 个 月租金 是 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 住房 单元 允许 猫 在 里面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_cats ) ) )
一个 少于 两个 房屋 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 不 超过 两个 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
有 多少 街区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
这个 单位 在 123 芝麻街 有 多 大	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
公寓 出租 低于 1500	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
狗 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
哪个 住房 单位 比 123 芝麻街 更贵	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
住房 单位 至少 与 123 芝麻街 的 住房 单位 面积 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
123 芝麻街 有 哪些 住房 可 供选择	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么 住房 单位 允许 猫 张贴 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_cats ) ) )
住房 单位 有 2 种 类型 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
找到 带 私人 浴室 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
最小 可用 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string size ) ) ) )
住房 允许 猫咪 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
单位 在 1 月 2 日 之前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 房子 有 私人 房间 张贴 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
一个 最多 有 两个 房屋 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪 种 房屋 每 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
住房 单位 的 发布 日期 少于 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 单位 每月 的 平均 租金 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ) ) )
住房 比 1500 个 月 便宜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
公寓 大楼 最多 的 单位	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string housing_type ) ) )
在 1 月 2 日 之后 或 2 月 3 日 之后 发布 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房面积 比 123 芝麻街 更 多	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
住房面积 不到 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
带 一种 外壳 类型 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
两个 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( number 2 ) ) )
住房面积 为 800 平方英尺 ， 包括 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
什么 住房 使用 发布 在 1 月 2 日有 一个 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 1 月 2 日 发布 的 所有 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 远离 市中心 西部 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
800 英尺 的 公寓 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
住房 至少 800 平方英尺 或 至少 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
住房 单位 是 一个 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
找到 123 芝麻街 同一 住房 类型 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) ) )
找到 有 私人 房间 的 住房 单位 ， 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 尺寸 小于 800 平方英尺 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
公寓 的 租金 比 123 芝麻街 便宜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
哪个 住房 单元 的 面积 大 800 平方英尺 或 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
找到 不到 1500 美元 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
800 平方英尺 的 公寓 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
小于 123 芝麻街 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
这是 大多数 住房 单位 共享 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 与 123 芝麻街 一样 的 租金	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
公寓 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 允许 猫 进去	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) )
住房 有 私人 浴室 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
住房 单元 与 123 芝麻街 的 住房 类型 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) ) )
哪个 住房 单元 的 尺寸 最小	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string size ) ) ) )
123 芝麻街 是 什么样 的 住房	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
住房 单位 于 1 月 2 日 发布 ， 与 123   sesame   st 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单元 属于 公寓 类型 ， 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住 在 一个 大于 两个 房子 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
房屋 面积 超过 800 平方英尺 或 超过 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
住房 不是 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
什么 是 罕见 的 住房 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
命名 具有 多个 此类 住房 单元 的 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单位 与 私人 房间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) )
找到 1 月 2 日 发布 的 住房 单位 ， 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
寻求 公寓 或 公寓	( call SW.listValue ( call SW.concat en.housing.apartment en.housing.condo ) )
1500 个 月租金 是 狗 友好 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
住房 不 在 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
该 地区 的 哪个 住房 单位 允许 猫咪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
住房 有 私人 房间 ， 发布 于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
什么 是 最 常用 的 住房 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 住房 单位 面积 较大	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
什么 住房 单位 允许 狗 被 发布 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_dogs ) ) )
什么 是 123 芝麻街 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
狗 友好 的 住房 ， 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
找到 800 平方英尺 的 住房 单位 ， 对 猫 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
什么 是 公寓 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
哪个 住房 最多 由 两个 单元 组成	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么 是 住房 单位 大小	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
找到 800 平方英尺 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 房屋 在 芝麻街 123 号 张贴 了 2 号	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string posting_date ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找 一个 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
123 芝麻街 的 租金 是 多少 ？	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
市中心 西部 单位 ， 每 月租金 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
猫 友好 的 公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_cats ) ) )
列出 所有 住房 至少 800 或 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
仅 显示 800 平方英尺 的 社区 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
在 哪里 找到 最多 的 住房 单位	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
在 市中心 西区 找到 住房 单位 ， 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
哪个 社区 拥有 最多 的 公寓 大楼	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
猫 友好 的 住房 与 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
住房 与 私人 房间 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
住房 单位 最多 2 个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
哪个 住房 单元 位于 市中心 西部 附近	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 时候 被 123 芝麻街 贴 了	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
什么 住房 单位 有 两种 或 更 多 的 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string > ) ( number 2 ) ) )
告诉 我 在 市中心 西部 或 切尔西 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
什么样 的 住房 是 123 芝麻街 或 900 任务 大道	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
找到 800 平方英尺 的 住房 ， 位于 市中心 西区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 住房 单元 有 公寓 类型 的 房子 ， 面积 为 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 在 1 月 2 日 或 之前 张贴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
公寓 或 公寓 住房	( call SW.listValue ( call SW.concat en.housing.apartment en.housing.condo ) )
告诉 我 有 私人 房间 的 地方 ， 欢迎 猫咪	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) ) )
有 多少 住房 单位	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 住房 单位 在 123 芝麻街 的 发布 日期 之前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 单位 1 月 2 日 和 123 芝麻街 同样 的 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string rent ) ) ( string = ) en.housing_unit.123_sesame_street ) )
用 两种 或 更少 种类 的 单位 建造	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string <= ) ( number 2 ) ) )
平均 大小 的 单位	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
什么 街区 是 123 芝麻街	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
对 狗 友好 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
哪个 住房 单元 的 房屋 种类 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
住房 单位 允许 猫 和 每月 1500 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
公寓 出租 在 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪 种 类型 的 房屋 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
狗 友好 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
住宅 位于 市中心 西部 ， 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
名称 123 芝麻 街道 类型 以外 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
住房 单位 最多 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
住房 单位 于 1 月 2 日 在 任何 街区 张贴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
哪个 市中心 西部 住房 有 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 住房 的 发布 时间 不早 于 1 月 2 日 或 3 月 3 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房 单位 小于 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
哪个 房屋 贴 1 月 2 日 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
位于 市中心 西区 的 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
狗 友好 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
告诉 我 住房 有 私人 浴室 ， 允许 猫咪	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_cats ) ) )
住房面积 小于 800 平方英尺 或 小于 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
住房面积 超过 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string ! = ) ( number 800 en.square_feet ) ) )
带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
哪个 住房 单位 类似 于 123 芝麻街 或 900 个 任务 大道	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
什么 是 带 私人 房间 的 住房 单元 的 房屋 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
面积 为 800 平方英尺 的 住房 单元 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
西郊 或 切尔西 的 社区	( call SW.listValue ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) )
住房 于 1 月 2 日 或 2 月 3 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) )
住房 单位 的 发布 日期 大于 123 芝麻街 的 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
800 平方英尺 的 公寓 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_cats ) ) )
什么 住房 单位 有 一个 私人 房间 发布 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
什么 住房 单位 有 两种 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( number 2 ) ) )
什么 住房 单位 在 市中心 东区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
找到 123 芝麻街 后 发布 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
告诉 我 公寓 和 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
一个 带 私人 浴室 的 住房 单元 ， 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
宠物 友好 住房 ， 租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
什么 住房 与 1 月 2 日 发布 的 住房 类型 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
想要 一个 类似 123 芝麻街 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
每月 123 芝麻街 的 租金 是 多少 ？	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
哪个 房屋 贴 1 月 2 日 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
位于 市中心 西部 的 公寓 设有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
带 私人 房间 的 住房 单元 的 附近 区域 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
找到 租金 1500 至 2000 美元 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) )
有 私人 房间 的 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 前 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 允许 在 1 月 2 日 张贴 的 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_cats ) ) )
住房 1 月 2 日 发布 ， 包括 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
单位 大于 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
告诉 我 住房 每月 1500 美元 或 更少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 单位 ， 发布 日期 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
查找 发布 日期 为 1 月 2 日至 2 月 3 日 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
哪个 住房 单位 张贴 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
单元 有 一种 外壳 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
找到 与 123   sesame   street 或 更 晚 的 日期 相同 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
在 123 芝麻街 种类 的 1 月 2 日 刊登 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string posting_date ) ) ( string = ) en.housing_unit.123_sesame_street ) )
123 芝麻街 的 月租金 是 多少 ？	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
什么 是 123 芝麻街 的 面积	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
租金 1500 以上 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 1500 个 月 或 2000 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) )
什么 是 在 西部 市中心 的 社区 发现 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
公寓 介于 800 至 1000 平方英尺 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
找到 一个 不 超过 800 平方英尺 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
一个 住房 单元 ， 包括 两种 以上 的 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string > ) ( number 2 ) ) )
住房 单位 有 少量 住房	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
哪个 住房 单元 最多 有 两种 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string <= ) ( number 2 ) ) )
什么 住房 单位 在 1 月 2 日 发布 的 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
住房 单位 ， 发布 日期 为 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
寻找 一个 私人 浴室 和 狗 友好 的 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_dogs ) ) )
公寓 设有 私人 房间 出租 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
这是 允许 狗 在 里面 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
找到 最新 发布 日期 的 住房 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
住房 单位 大于 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
住房 至少 有 两个 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
住宅 单位 在 市中心 西部 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
住宿 单元 ， 允许 狗 和 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string has_private_bath ) ) )
西部 中城 的 私人 住宅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
位于 市中心 西部 的 公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
1 月 2 日 发布 的 800 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
什么 房屋 单位 张贴 在 1 月租金 是 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 带 私人 房间 和 浴室 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
找到 每月 不 等于 1500 美元 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
什么样 的 住房 在 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
房屋 当天 发布 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
哪个 社区 有 两个 以上 的 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
房屋 贴 在 当天 或 123 芝麻街 后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
找 房子 租金 1500 美元 ， 靠近 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 房屋 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) )
什么样 的 住房 允许 猫	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
什么 住房 单位 在 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
带 私人 浴室 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) )
找到 1 月 2 日 或 2 月 3 日 之间 发布 日期 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
哪个 房屋 与 123 芝麻街 同日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
什么 是 住房 单位 的 附近 ， 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
哪个 住房 单位 于 1 月 2 日 发布 ， 与 123   sesame   st 相同 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单元 最少 有 两种 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
两个 住房 单元 的 住房 类型 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
同样 大小 的 公寓 是 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
狗 友好 的 公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_dogs ) ) )
位于 市中心 西区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
找到 只有 一个 社区 的 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
住 在 1 月 2 日 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 住 在 市中心 西部 ， 欢迎 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_dogs ) ) )
有 多少 种 不同 的 住房 类型	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
没有 更高 租金 的 房屋 然后 是 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
住房 最近 发布 了	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 住房 单位 有 一套 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
123 芝麻街 发布 的 日期 是 什么	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
寻求 1500 至 2000 之间 的 公寓	( call SW.listValue ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) )
找到 800 到 1000 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
哪个 住房 单元 位于 市中心 西部 或 切尔西 地区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
住房 单位 与 私人 房间 和 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
单位 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
在 1 月 2 日 发布 的 住房 单位 是 哪个 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
在 市中心 西部 的 猫 友好 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
找到 租金 超过 123 芝麻街 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
哪个 住房 单位 在 123 芝麻街 的 过 帐 日期 上 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
哪个 住房 单元 有 公寓 类型 的 房子 ， 面积 为 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
什么样 的 住房 在 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
800 平方英尺 的 公寓 1500 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 住房 有 私人 房间 ， 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
告诉 我 住房 单位 不是 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
住房 单位 是 一个 狗 友好 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
公寓 设有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string has_private_bath ) ) )
在 1 月 2 日 发布 的 123 芝麻街 附近 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找到 具有 独特 住房 类型 的 住房 单元	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
寻找 宠物 友好 的 住房 单位 ， 租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_dogs ) ) )
公寓 住房 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 的 月租金 超过 1000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
什么 是 最 常见 的 住房 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单位 是 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
猫 在 西部 中 城 允许	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
邻近 123 芝麻街 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单位 有 一个 jan   2nd 帖子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 尺寸 小于 123 芝麻街 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
什么 是 西部 市中心 区域 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
租金 低于 1500 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
哪个 住房 单位 在 芝麻街 123 号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) ) )
公寓 类似 于 市中心 西区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
住房 1500 个 月 或 更 少 或 2000 个 月 或 更少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
西部 市中心 的 其他 地区 有 哪些 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 800 平方 的 房屋 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 市中心 西区 找到 800 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 1 月 2 日 和 2 月 3 日 之前 发布 日期 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
哪个 住房 单位 有 123 芝麻街 的 月租	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
什么 是 最大 的 住房 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
什么 住房 单位 允许 狗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) )
邻居 ， 我 可以 找到 一个 私人 房间 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
与 123 芝麻街 相同 或 更 大 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
位于 市中心 西区 的 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
房屋 未 在 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
住房 单位 800 平方英尺 ， 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
住 在 1 月 2 日 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
有 两个 以上 单位 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 住房 单元 不 属于 公寓 类型 ， 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 每 月租金 1500 美元 ， 还有 私人 浴室 设施	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_bath ) ) )
哪个 住房 单位 每 月租金 1500 美元 ， 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 800 平方英尺 的 住房 单位 与 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
公寓 的 平均 大小 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
附近 的 哪些 住房 单位 允许 在 里面 的 狗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
什么 住房 单位 与 1 月 发布 的 单位 类型 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
123 芝麻街 的 面积 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
比较 123 芝麻街 和 900 任务 大道	( call SW.listValue ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) )
猫 允许 在 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) )
找到 所有 单位 在 市中心 东部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
告诉 我 住房 ， 租金 1500 美元 ， 并 提供 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 月租 最多 的 住房 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
住房 单位 与 123 芝麻街 月租 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
住房 每月 花费 超过 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 列 在 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
位于 市中心 西区 的 公寓 ， 每 月租金 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
这 间 公寓 的 月租金 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ) ) )
住 在 两个 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
告诉 我 800 平方英尺 的 空间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
房屋 于 1 月 2 日 在 123 芝麻街 附近 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
住房 单位 的 发布 日期 早于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
哪个 住房 单元 面积 为 800 平方米 ， 允许 携带 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
允许 狗 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
西区 中城 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 单位 的 邻居 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
最 便宜 的 地方 出租	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
哪个 住房 单位 在 1 月 2 日前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
允许 住 在 西部 市中心 的 猫 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
这个 社区 的 哪个 住房 单元 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
123 芝麻街 的 住房 类型 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
告诉 我 有 最 多 空间 的 房屋	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
找到 猫 友好 的 住房 单位 与 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
什么 中 城 西部 住房 单位 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_bath ) ) )
找到 123 芝麻街 附近 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) ) )
有 多少 个 社区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
在 1 月 2 日 发布 的 住房 单位 与 123 芝麻街 的 租金 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string rent ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单元 位于 市中心 西部 ， 并于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 123 芝麻街 附近 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
在 1 月 2 日 或 之前 或 2 月 3 日 或 之前 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房 单元 ， 是 一个 公寓 住房 类型 ， 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
宠物 友好 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_cats ) ) )
什么样 的 房屋 有 两种 房屋 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
所有 住房 单位 于 1 月 2 日 公布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
住房 单位 有 私人 浴室 ， 租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
房屋 类型 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 123 芝麻街 以外 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
什么 住房 单位 发布 在 1 月 2 日有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
公寓 设有 私人 客房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
哪 种 公寓 住宿 单位 允许 猫咪 进入	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
在 找到 位于 市中心 西区 的 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 1500 个 月 或 更少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
位于 市中心 西区 的 住房 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
至少 有 2 个 单位 的 公寓	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 房屋 在 1 月 2 日后 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
住房面积 在 800 到 1000 平方英尺 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
公寓 设有 私人 客房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
公寓 面积 与 123 芝麻街 相似	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
住房 单位 ， 租金 1500 美元 ， 允许 猫咪	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
狗 和 猫 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_dogs ) ) )
在 市中心 西区 找到 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
公寓 800 平方英尺 及 以上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
123 芝麻街 附近	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
不同 单位 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
住房 公寓 ， 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
与 123 芝麻街 相同 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
哪个 社区 有 两个 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
123 芝麻街 有 多 大	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
住房 单位 在 1 月 2 日 或 2 月 3 日 之后 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
找到 两个 社区 的 住房 单位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
什么 是 123 芝麻街 发布 的 日期	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
公寓 于 1 月 2 日 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
哪个 住房 单元 允许 狗 和 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_cats ) ) )
作者 数量 最多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string author ) ) )
文章 引用 文章 发表 于 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
2004 年 的 哪 篇文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
找 一篇 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
发布 日期 接近 多 变量 数据分析 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
哪 篇文章 是 由 efron 撰写 的 ， 并 以 统计 年鉴 为 其 场地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string author ) ( string = ) en.person.efron ) )
只有 一篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 一 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
文章 的 作者 是 efron 或 lakoff	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
获奖 的 文章 引用 了 另 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪位 作者 写 的 文章 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 在 两个 以上 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
提及 两个 或 更 多 城市 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
发表 日期 小于 多 变量 数据分析 发布 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
多 变量 数据分析 引用 的 统计 年鉴 中 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 是 关于 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
在 不到 两个 出版物 中 找到 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
由 作者 efron 命名 一篇 关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 未 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
统计 年鉴 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
找到 我 在 两个 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
引用 最少 文章 数 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 一个 包含 两篇 以上 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 在 不到 两个 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
谁 不止一次 写过 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
哪些 文章 引用 不到 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
与 多 变量 数据分析 同时 或 之后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
什么 文章 引用 了 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
少于 两个 参考 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 多 变量 数据分析 ， 也 是 它 的 场所	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
有 两位 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
谁 是 多 变量 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
出版物 文章 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
场地 少于 两篇	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 引用 了 两次 或 更 少次	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 多 变量 数据分析 日期 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
由 统计 年鉴 出版 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string won_award ) ) )
在 关于 多 变量 数据分析 的 文章 发表 日期 之前 写 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
谁 是 引用 多 变量 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
什么 时候 发表 了 多 变量 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
2004 年 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
文章 引用 次数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
作者 最多 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 关于 统计 年鉴 的 其他 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
什么 地方 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多篇 文章 的 作者	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
多 变量 数据分析 中 引用 的 统计 年鉴 中 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
文章 引用 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 没有 在 2004 年 发表	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
多 变量 数据分析 引用 的 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
没有 写 多 变量 数据分析 的 作家	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
什么 文章 讨论 了 另 一篇 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
由 efron 撰写 并 由 多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 发表 于 2004 年 或 更 晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) )
谁 是 不到 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 2004 年 发表 的 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
将 一个 人 命名 为 关于 多 变量 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
命名 少于 两篇 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 撰写 的 文章 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获奖 文章 出版 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
文章 的 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
说出 一篇 赢得 奖项 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
有 两个 以上 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
谁 创作 了 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 的 作者 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string author ) ) )
在 哪个 出版物 中 发表 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
发表 日期 最多为 多 变量 数据分析 发布 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
两篇 或 更少 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
将 某人 撰写 关于 多 变量 数据分析 的 文章 命名	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
与 多 变量 数据分析 同日 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
哪位 作者 写 了 两篇 或 更 多 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 获奖 文章 的 场地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
任何 引用 统计 年鉴 中 发表 的 另 一篇 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
统计 年鉴 中 的 哪 篇文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
只有 一篇 文章 的 出版商	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 了 哪篇 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
场地 两篇 或 更少	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
一篇 文章 ， 他 也 撰写 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
引用 多 变量 数据分析 的 文章 命名	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 获奖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string won_award ) ) )
少于 两篇 文章 的 作家	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一位 撰写 少于 两篇 文章 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
从 有关 多 变量 数据分析 的 统计 年鉴 中 命名 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
多元 数据分析 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
可以 找到 efron 文章 的 出版物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
文章 引用 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
从 统计 年鉴 中 命名 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
发表 日期 为 2004 年 并 由 多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 的 出版日期 大于 多 变量 数据分析 的 出版日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
什么 文章 引用 了 一篇 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪个 出版物 包含 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 两篇 或 更少 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 讨论 了 统计 年鉴 ， 其 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 引用 了 多 变量 数据分析 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪篇 统计 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 关于 年鉴 和 统计 的 文章 有 一个 出版物 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
2004 年 发表 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 获奖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
命名 少于 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
多 变量 数据分析 中 没有 引用 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
谁 写 了 最 多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 两篇 或 更 多 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年 的 引文	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 文章 引用 了 最 多 的 其他 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 了 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
作者 写 了 两篇 或 更 多 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一篇 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
说出 一篇 赢得 奖项 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪 篇文章 发表 在 两本 以上 的 杂志 上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
命名 一篇 与 多 变量 数据分析 无关 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
没有 引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
引用 的 文章 不到 两次	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 与 多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
哪 篇文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
谁 是 撰写 有关 多 变量 数据分析 的 文章 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
找到 获奖 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
efron 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
efron 撰写 的 文章 获得 了 奖项	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string author ) ( string = ) en.person.efron ) )
谁 是 这 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年 ， 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
哪 篇文章 发表 于 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪个 场地 最多 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 在 多 变量 数据分析 之前 发表	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
找到 efron 没写 的 任何 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
什么 文章 没有 引用 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string ! = ) en.article.multivariate_data_analysis ) )
一位 作者 撰写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
在 两个 以上 的 出版物 中 找到 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
2004 年 或 之后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
命名 包含 不 超过 两篇 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 写 了 什么 文章 ， 其中 的 地点 是 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string author ) ( string = ) en.person.efron ) )
什么 文章 是 多 变量 数据分析 的 作者 写 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
efron 的 所有 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
2004 年 至 2010 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
在 统计 年鉴 中 找到 一篇 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
已 发表文章 最多 的 场所	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 在 最少 的 地方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string venue ) ) )
什么 时候 发表 了 多 变量 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
作者 用户数量 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 不是 由 efron 撰写 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
最 多 发表 两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 两位 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
包含 两个 或 更 多 发布者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
什么 文章 是 由 efron 撰写 并 获得 奖项	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
命名 一篇 关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 最 多 两篇 出版物 中 找到 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string <= ) ( number 2 ) ) )
大多数 文章 引用 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 引用 多 变量 数据分析 的 efron 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
多 变量 数据分析 引用 了 统计学 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
命名 由 两位 以上 作者 制作 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
什么 地方 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
具有 最大 场地 数量 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
谁 写 了 多 变量 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) )
什么 年代 的 统计 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
efron 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
至少 有 两篇 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 efron 编写 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
两位 作者 有 哪些 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
找 一篇 引用 两篇 以上 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 是 由 efron 写 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 引用 了 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
文章 的 地点 是 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
什么 efron 文章 赢得 了 奖项	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
作者 最 多 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
发表 两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
文章 引用 了 统计 年鉴 中 发表 的 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 被 大多数 文章 引用	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 在 两个 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
文章 史上 发表 的 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
未 在 统计 年鉴 中 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
多 变量 数据分析 未 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
什么 是 与 统计 年鉴 无关 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
efron 的 一篇 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
最早 发表 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
文章 引用 了 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 与 多 变量 数据分析 具有 相同 场所 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
多 变量 数据分析 引用 的 文章 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
作为 efron 的 文章 的 地点 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
哪些 文章 的 作者 是 efron	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
哪位 作者 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 的 文章 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 的 出版日期 大于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 关于 多 变量 数据分析 的 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
多 变量 数据分析 场所	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
什么 人 写文章 而 不是 获奖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
由 多元 数据分析 引用 并 由 efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
什么 文章 有 两个 引用	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 的 出版物	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
什么 文章 少于 两个 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
不到 两个 人写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
文章 由 两位 以上 作者 撰写	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
出版日期 为 2004 年 至 2010 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
本文 引用 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多元 数据分析 引用 的 文章 ， 其 地点 是 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
文章 未 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
引用 两篇 以上 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 了 哪篇 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 的 出版日期 至少 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
文章 没有 引用 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2004 年 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
少于 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
从 统计 年鉴 中 命名 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
从 统计 年鉴 中 命名 一篇 关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 没有 引用 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
哪 篇文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 有 多元 数据分析 的 场所	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
在 多 变量 数据分析 中 发表 了 哪些 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
文章 发表 在 最少 的 场地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string venue ) ) )
由 efron 撰写 并 发表 于 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
找到 2004 年 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
具有 最大 出版日期 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
引文 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 在 文章 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
什么 地方 有 两个 或 更 少 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 与 多 变量 数据分析 在 同一天 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
文章 不 在 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
不到 两篇 出版物 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
在 大多数 文章 中 提到 了 哪 篇文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
包含 两篇 以上 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 2004 年 或 2010 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
你 在 哪里 可以 看到 多 变量 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
文章 引用 了 efron 的 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
最近 发表 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
哪位 作者 没有 写 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
由 多元 数据分析 作者 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
超过 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
哪 篇文章 发表 于 2004 年 的 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
发表 于 引用 多 变量 数据分析 的 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
引用 多 变量 数据分析 引用 的 文章 是 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 少于 两位 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
说出 写过 两篇 文章 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
使用 多 变量 数据分析 的 研究 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
引用 三篇 或 更 多 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
最早 出版日期 的 文章 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
将 一篇 关于 多 变量 数据分析 的 文章 的 作者 命名 为	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪些 文章 引用 了 两篇 或 更 少 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一篇 有 两位 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
多 变量 数据分析 的 公布 日期	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
统计 年鉴 中 的 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
多元 数据分析 引用 的 文章 获奖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
什么 地方 不到 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 还有 其他 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 写 了 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 统计 年鉴 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
发表 在 统计 年鉴 和 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 发表 在 统计 年鉴 和 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 发表 于 2004 年 ， 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
获奖 文章 引用 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
efron 发布 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
哪些 文章 引用 至少 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一篇 关于 2004 年 出版 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
由 efron 或 lakoff 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
谁 撰写 了 两篇 或 更 少 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 的 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
在 2004 年 命名 一篇 关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 efron 或 lakoff 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
将 两篇 文章 的 作者 命名 为	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
至少 有 两位 作者 撰写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string >= ) ( number 2 ) ) )
获得 多元 数据分析 引用 奖项 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
本文 的 作者 是 efron ， 其 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
引用 2004 年 发表 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 提到 了 获奖 的 多元 数据分析 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
文章 少于 两个 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
2004 年 出版 的 场地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
引用 统计 年鉴 中 的 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 是 efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
一两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 2004 年 发表 的 统计 年鉴 中 找到 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
至少 有 两篇 文章 引用 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获得 奖项 并 引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
找 一篇 引用 两次 或 更少 引文 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
将 至少 两篇 文章 的 作者 命名 为	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 两个 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
引用 多元 数据分析 的 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪篇 efron 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
没有 创作 多 变量 数据分析 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
什么 文章 是 由 efron 撰写 的 ， 出版日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 不是 由 efron 撰写 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
引用 单篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
其他 两篇 文章 引用 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 哪些 文章 引用 了 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
最新 出版日期 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
与 多 变量 数据分析 在 同一 场所 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 有 超过 两位 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
文章 引用 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
一篇 文章 撰写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
什么 地方 至少 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
那里 有 多少 期刊	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ) )
在 统计 场地 的 年鉴 中 找到 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 是 有 两个 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
什么 文章 发表 于 2010 年 或 更 早	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
只有 一篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
场地 数量 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string venue ) ) )
什么 文章 引用 了 efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
有关 efron 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string author ) ( string = ) en.person.efron ) )
找到 没有 多 变量 数据分析 的 场所	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
这 篇文章 的 日期 是 什么 时候	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
2004 年 未 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
什么 文章 赢得 了 奖项 ， 关于 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
引用 两篇 以上 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 多 变量 数据分析 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
文章 在 两个 或 两个 以下 的 场地 发表	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string <= ) ( number 2 ) ) )
多 变量 数据分析 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
什么 文章 网站 只有 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多元 数据分析 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 有 最 多 的 场地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
文章 引用 的 文章 于 2004 年 出版	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
文章 作者 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
文章 引用 了 统计 年鉴 中 发表 的 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
将 作者 的 文章 命名 为 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
用 efron 命名 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
哪位 作者 最多 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 一位 或 两位 作者 撰写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
多 变量 数据分析 引用 的 文章 的 位置 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 地方 是 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 了 多篇 关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 文章 被 引用 了 两次	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
与 多 变量 数据分析 文章 具有 相同 发布 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
没有 引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string ! = ) en.article.multivariate_data_analysis ) )
多 变量 数据分析 的 发布 日期 是 什么	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
什么 文章 是 由 efron 写 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
2004 年 发表 的 文章 的 地点 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
引用 多 变量 数据分析 的 作家	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
在 多 变量 数据分析 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
谁 是 efron 撰写 的 文章 的 另 一位 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
什么 文章 的 作者 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
什么 文章 引用 了 至少 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 至少 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 于 2004 年 发表 了 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
文章 说 城市 最 多 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获奖 文章 是 由 efron 撰写 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string author ) ( string = ) en.person.efron ) )
文章 的 作者 是 efron	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
多 变量 数据分析 文章 的 发布 日期 是 什么	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
什么 文章 有 最早 的 出版日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
获奖 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) )
efron 于 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
引用 2004 年 发表 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
多元 数据分析 的 同一 篇文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
文章 引用 了 作者 efron 的 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
作者 写 了 一篇 关于 城市 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 是 人数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
文章 发表 于 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 是 只有 一位 作者 撰写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
在 最少 数量 的 其他 文章 中 提到 了 哪 篇文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 统计 年鉴 中 找到 一篇 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
有 efrons 文章 的 场地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
什么 是 场地 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ) )
2004 年 的 一篇 文章 引用 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 efron 撰写 并于 2004 年 出版 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string author ) ( string = ) en.person.efron ) )
命名 一篇 未 在 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪个 场地 是 两篇 以上 文章 发表 的 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 efron 撰写 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
2004 年 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
说出 写过 不 超过 两篇 文章 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 efron 撰写 的 文章 ， 并 以 统计 年鉴 为 其 场地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 的 出版日期 与 多 变量 数据分析 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
场地 少于 两篇	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 期刊 是 多 变量 数据分析 发表 在	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
有 两个 出版商 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
什么 是 少于 两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
efron 撰写 的 文章 ， 多元 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
除了 多 变量 数据分析 场地 之外 的 场地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
首发 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
提到 至少 另外 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 两个 或 多个 场地 中 找到 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
发表 日期 至少 为 2004 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 关于 多 变量 数据分析 的 出版物 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 引用 次数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 地方 有 文章 发表 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找到 一篇 efron 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
有 两个 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
谁 是 谁 的 地点 的 作者 是 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
有 两位 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
什么 文章 的 作者 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
什么 文章 是 由 efron 撰写 并 讨论 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
efron 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
文章 没有 引用 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2004 年 之前 或 2010 年 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 多 变量 数据分析 的 场所	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
文章 与 会场 作为 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
不 发布 多 变量 数据分析 的 出版物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string won_award ) ) )
多 变量 数据分析 作者 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
命名 一篇 关于 赢得 奖项 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
多元 数据分析 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
您 可以 在 哪个 场所 找到 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 引用 不到 两篇 其他 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 有 两个 以上 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
作者 写 了 关于 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
文章 的 场地 是 多元 数据分析 的 场所	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 地方 包括 多 变量 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
哪 篇文章 是 由 最少 数量 的 作者 撰写 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
谁 与 efron 合着 过 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
使用 多 变量 数据分析 在 文章 中 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪 篇文章 引用 了 一篇 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
谁 写 了 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
列出 2004 年 发表 的 关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
什么 地方 是 最 多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 多元 数据分析 引用 的 efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
与 多 变量 数据分析 同时 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
发表 日期 为 2004 年 的 文章 ， 并 作为 统计 年报 的 场地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
找到 一篇 有 两个 或 两个 以上 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
找到 efron 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
发表 日期 为 2004 年 或 2010 年 的 文章	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
什么 文章 有 两位 作者 或 更少	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
引用 多 变量 数据分析 的 文章 的 地点 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
文章 发表 于 2004 年 ， 并 被 多元 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 在 大多数 场地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
哪位 作者 在 两篇 文章 中写 过	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发现 于 大多数 出版物 中	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
提到 三个 或 更 多 城市 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 的 出版日期 是 2003 年 并 获得 了 奖项	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string won_award ) ) )
多 变量 数据分析 引用 的 文章 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
引用 的 文章 以及 引用 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
谁 写 了 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 统计 年鉴 中 命名 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
除 2004 年 以外 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 多 变量 数据分析 的 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
什么 文章 引用 了 统计 年鉴 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
2004 年 之后 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
文章 引用 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 文章 获奖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) )
多 变量 数据分析 中 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
在 2004 年 或 之前 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
2004 年 以后 发布 了 多 变量 数据分析 城市 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 引用 了 多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
引用 最少 文章 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多元 数据分析 的 文章 获奖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
在 至少 两篇 文章 中 提到 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 两篇 以上 的 其他 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
谁 写 了 一篇 引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
在 多 变量 数据分析 中 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
获奖 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
出版物 与 efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
2004 年 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 文章 获奖 并且 出版日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 发表 在 两个 或 两个 以上 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
有 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( number 2 ) ) )
什么 文章 是 关于 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
最 多 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 引用 了 统计 年鉴 中 发表 的 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 是 由 efron 和 城市 多元 数据分析 写 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
有 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 地方 有 最 多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
被 授予 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string won_award ) ) )
什么 文章 引用 了 2004 年 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
发表 日期 为 2004 年 ， 作者 为 efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string author ) ( string = ) en.person.efron ) )
什么 是 最新 发表 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
多元 数据分析 引用 并 在 统计 年鉴 中 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
统计 年鉴 或 计算 语言学	( call SW.listValue ( call SW.concat en.venue.annals_of_statistics en.venue.computational_linguistics ) )
只有 一篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
2004 年 之前 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
efron 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string author ) ( string = ) en.person.efron ) )
在 多 变量 数据分析 之前 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
说出 一些 非 efron 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
引用 两篇 或 更少 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 多 变量 数据分析 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
作家 于 2004 年 出版	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
引用 最少 数量 文章 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 数量 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
有 三个 或 更 多 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
efron 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
提到 一篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪 篇文章 是 由 不到 两位 作者 撰写 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
没有 发布 多 变量 数据分析 的 期刊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2010 年 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
将 某人 不是 一篇 关于 多 变量 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
文章 中 至少 有 两个 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
什么 获奖 文章 有 统计 年鉴 作为 场地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 地方 有 两篇 或 更 多 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多元 数据分析 引用 并 在 统计 年鉴 中 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
不到 两篇 文章 引用 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
说出 一篇 写过 不 超过 两篇 文章 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 作者 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
2004 年 至 2010 年 期间 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
文章 引用 了 两次 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 餐有 两个 或 更 少 的 食谱 指定	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 等于 或 大于 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
找 一个 能 喂 两个 人 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 成分 是 两个 或 更 少 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 至少 可以 做 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
该 配方 需要 哪 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
这 需要 多少 成分	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 配方 可以 在 比 米饭 布丁 更 短 的 时间 内 准备 好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
有 多少 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 发布 日期 至少 与 米饭 布丁 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
显示 可 用于 任何 膳食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 类型 的 菜 是 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
找到 一个 与 米饭 布丁 同时 烹饪 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 最 多 三个	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
午餐 食谱 的 发布 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
告诉 我 需要 牛奶 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 是 最少 的 美食 配方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 食谱 分享 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
米饭 布丁 配 的 是 什么 饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
什么 食谱 烹饪 时间 至少 是 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
在 多个 配方 中 使用 的 名称 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 发布 日期 不是 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
最 多餐 的 配方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 有 一个 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
什么 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
告诉 我 需要 两种 或 更 多 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 两种 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 少于 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 比 米饭 布丁 需要 更长 的 时间 来 烹饪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
在 最少 数量 的 食谱 中 需要 哪 种 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 的 发布 日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
米饭 布丁 不 需要 哪 种 食品	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 食谱 有 最 多 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 餐 可以 找到 最大 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
煮 米饭 布丁 需要 多少 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 食谱 不是 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
告诉 我 需要 牛奶 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 是 米饭 布丁 的 成分	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
用 准备 时间 作为 米饭 布丁 的 烹饪 时间 来 显示 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
向 我 展示 烹饪 时间 大于 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
找到 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
食谱 中 的 成分 于 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 是 需要 最少 数量 成分 的 配方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 烹饪 时间 与 米饭 布丁 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
哪 种 食谱 需要 最多 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
在 米饭 布丁 烹饪 时间 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 是 适合 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
少于 三种 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
展示 遵循 两种 以上 美食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
告诉 我 食谱 比 米饭 布丁 花费 更少 的 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 需要 牛奶 做 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
给 我 看 的 食谱 不迟于 米饭 布丁 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
米饭 布丁 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
食谱 的 总 烹饪 时间 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 是 2004 年 未 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
什么 是 用 过 的 牛奶 或 菠菜	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
哪个 食谱 有 最长 的 成分 列表	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 是 米饭 布丁 的 美食	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
告诉 我 最 多 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 食谱 不止 一餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 需要 少于 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 饭 是 米饭 布丁 或 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
准备 米饭 布丁 需要 多长时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
告诉 我 食谱 中 最 需要 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
配方 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
显示 烹饪 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
该 配方 的 平均 准备 时间 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
哪些 食谱 发布 到 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 少于 两个 食谱 中 发现 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
首先 发布 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 食谱 需要 三种 或 更 多 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 发布 日期 是 2004 年 ， 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 饭有 两个 或 更 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
最少 数量 的 食谱 所 需 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 或 乳蛋饼 配方 中 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
列出 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
什么 食谱 比 米饭 布丁 需要 更 多 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
烹饪 时间 的 配方 不 超过 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 属于 两种 以上 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
找 一顿 没有 米饭 布丁 的 饭	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
菠菜 或 牛奶	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
什么 是 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 需要 一种 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 需要 最长 的 准备 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 是 两种 以上 菜肴 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 是 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
查找 2004 年 后 发布 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 2004 年 发布 的 食谱 所 需 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪 一餐 不到 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 餐有 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
什么 成分 有 较 少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 比 米饭 布丁 做 的 准备 时间 少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
食谱 的 平均 烹饪 时间 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
告诉 我 2004 年 之前 或 2010 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 米饭 布丁 不 需要 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
哪个 配方 没有 在 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
哪个 食谱 是 在 米饭 布丁 的 发布 日期 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 2004 年 或 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
找到 在 米饭 布丁 配方 之前 张贴 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 是 最新 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
米饭 布丁 需要 多长时间 才能 准备 好	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
烹饪 时间 的 食谱	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 食谱 是 最 古老 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 类型 的 菜 是 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 成分 只 用于 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
什么 是 不 使用 牛奶 作为 配料 的 配方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 需要 米饭 布丁 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 食谱 分享 至少 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
显示 发布 日期 在 2004 年 或 之前 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 的 总数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
这 道菜 的 平均 烹饪 时间 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 时候 发布 米饭 布丁 的 配方	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 需要 牛奶 或 菠菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
告诉 我 为 一个 人 做饭 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 饭有 两个 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 比 准备 米饭 布丁 花费 的 时间 更 少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
食谱 的 总 烹饪 时间 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
有 多少 成分	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
找 一份 用 牛奶 准备 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 需要 相同 或 更 少 的 时间 来 准备 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 是 2004 年 发布 的 配方 中 发现 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 2010 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 2004 年 发布 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪 一餐 是 将 牛奶 作为 其 成分 之一 的 配方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 为 午餐 做点 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 在 比 米饭 布丁 更 短 的 时间 内 烹饪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 配方 比 米饭 布丁 花费 更少 的 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
配方 的 平均 准备 时间 是 多长	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 食谱 没有 在 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
什么 食谱 设计 超过 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 饭 是 只有 一个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 配方 有 牛奶 作为 成分	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
给 我 看 一下 烹饪 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
告诉 我 需要 牛奶 或 菠菜 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
告诉 我 食谱 的 准备 时间 比 米饭 布丁 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 配方 不再 需要 准备 比 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 至少 有 2 种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
什么 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
需要 少于 两种 成分 的 配方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
这个 食谱 的 准备 时间 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 最少 吃饭 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
哪 一餐 都 是 用 过 的 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
两种 食谱 可以 做 什么 饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 食谱 的 烹饪 时间 等于 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 可以 少 吃 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 比 米饭 布丁 的 烹饪 时间 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
准备 米饭 布丁 需要 多少 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
什么 食谱 使 最少 类型 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 食谱 使用 牛奶 或 菠菜 作为 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
什么 食谱 分享 米饭 布丁 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
显示 至少 需要 完成 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
你 可以 在 相同 或 更 短 的 时间 内 准备 什么 食谱 来 煮 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 米饭 布丁 和 乳蛋 饼 所 需 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
命名 至少 两种 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找到 2004 年 或 2010 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
比 米饭 布丁 准备 时间 更长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
食谱 是 两顿 饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 烹饪 的 时间 与 米饭 布丁 相同 或 更 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
煮 这 道菜 需要 多长时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 食谱 有 最 多 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
在 米饭 布丁 配方 之前 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
米饭 布丁 配方 后 贴 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 食谱 于 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 午餐 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 是 两种 或 更 多 菜肴 中 的 配方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
两个 美食 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 食谱 与 米饭 布丁 食谱 同日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
午餐 或 晚餐 菜单 的 食谱	( call SW.listValue ( call SW.concat en.meal.lunch en.meal.dinner ) )
找到 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
2004 年 发布 的 食谱 需要 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
无论是 2004 年 还是 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
向 我 展示 大多数 食谱 所 需 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 餐有 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 有 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
哪 种 食谱 是 午餐时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
比 米饭 布丁 需要 相同 时间 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
告诉 我 少于 两种 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 2004 年 发布 的 使用 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
米饭 布丁 不 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 午餐 配方 在 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
哪个 配方 的 烹饪 时间 比 米饭 布丁 少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
最少 吃饭 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 比 米饭 布丁 需要 更少 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 与 米饭 布丁 同时 煮熟	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
哪 种 食谱 的 菜肴 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
告诉 我 最 美食 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
这个 配方 的 平均 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
给 我 一个 与 米饭 布丁 相同 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
显示 食谱 发布 在 同一 日期 或 晚于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪 种 食谱 适合 少量多餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 至少 有 两道菜 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
这个 食谱 不早 于 2004 年 或 2010 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 要求 少于 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 种 食谱 比 米饭 布丁 需要 更长 的 时间 来 烹饪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
最 多 两种 美食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
什么 食谱 需要 最少 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 时候 发布 了 米饭 布丁 食谱	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 烹饪 时间 比 米饭 布丁 大	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 至少 两种 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 的 烹饪 时间 与 米饭 布丁 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 可以 做 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 准备 时间 小于 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 是 在 2004 年 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪 种 食谱 属于 最少 种类 的 菜肴	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
两种 食谱 使用 什么 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 要求 牛奶 在 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
2004 年 发布 的 食谱 是 什么 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
两种 食谱 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 饭有 两个 或 更 少 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 饭 不 要求 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
少于 两种 食谱 需要 哪 种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 米饭 布丁 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
制作 米饭 布丁 需要 什么 食品	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
最早 发布 的 食谱 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
准备 菜肴 所 需 的 平均 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 配方 需要 至少 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 可以 比 米饭 布丁 更快 地 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪 一餐 有 两个 或 更 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 有 三种 或 更 多 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 是 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
食谱 的 总数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
完成 配方 所 需 的 通常 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 成分 用于 最 少量 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 是 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 不 要求 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 饭 超过 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
不到 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
有没有 在 2004 年 发布 过 两次 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
米饭 布丁 属于 哪 种 美食	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 食谱 不到 三种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
哪些 食谱 是 在 2004 年 或 2010 年 之后 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
用 两种 食谱 找 一顿饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
食谱 发布 到 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
查找 2004 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 准备 米饭 布丁 或 更 多 时间 煮熟 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 烹饪 时间 最短 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
什么 是 使用 牛奶 或 菠菜 作为 配料 的 食谱	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
什么 食谱 有 美食 ， 包括 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
告诉 我 需要 少于 两种 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 2004 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
多种 配方 需要 哪 种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
一种 至少 与 米饭 布丁 一样 煮 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 花费 大部分 时间 做饭	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
哪 种 配方 需要 比 米饭 布丁 准备 更 多 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
告诉 我 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 烹饪 时间 最长 的 是 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 是 最 多 使用 两种 成分 的 配方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 饭有 乳蛋 饼 和 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
发布 日期 的 配方 不是 在 米饭 布丁 发布 日期 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 食谱 和 米饭 布丁 一样 多 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
只 吃 一餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
米饭 布丁 中 含有 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
找到 一种 需要 牛奶 的 配方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 食谱 需要 相同 的 时间 或 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
午餐 食谱 要求 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
用 什么 饭 是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
哪些 食谱 用于 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
什么 食谱 需要 不 超过 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
有 多少 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
给 我 看 一个 只 需要 两种 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
向 我 展示 需要 牛奶 的 食谱 所 需 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 准备 时间 不 超过 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 使用 两种 或 更少 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 需要 牛奶 ， 并于 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
给 我 看 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
在 大多数 食谱 中 命名 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 需要 米饭 布丁 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
告诉 我 2004 年 和 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
配方 准备 时间 超过 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 的 烹饪 时间 等于 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 需要 牛奶 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 饭有 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 用 牛奶 制作 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪 种 配方 用于 大多数 膳食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
米饭 布丁 煮 多久	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
查找 2004 年 或 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
用 少于 两份 食谱 向 我 展示 餐食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
需要 最少 成分 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 是 在 米饭 布丁 之前 或 同一天 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
可以 通过 2004 年 发布 的 食谱 制作 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
告诉 我 食谱 不早 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 同时 准备 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 饭有 最大 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
2004 年 发布 的 食谱 需要 牛奶 作为 配料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪 种 食谱 需要 两种 以上 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 不到 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 需要 配料 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
给 我 看 两个 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
发布 日期 为 2004 年 的 食谱 所 需 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 时候 发布 了 米饭 布丁 食谱	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
哪些 食谱 需要 至少 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 的 烹饪 时间 至少 与 米饭 布丁 准备 时间 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 比 米饭 布丁 需要 更长 的 时间 来 烹饪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 饭菜 是 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
哪 种 配方 使用 牛奶 作为 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
这个 午餐 需要 什么 食谱 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
有 多少 总 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 配方 需要 最长 的 准备 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
哪 种 食谱 的 菜肴 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
告诉 我 食谱 需要 花费 相同 的 时间 准备 米饭 布丁 做饭	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 饭 是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
什么 饭 是 米饭 布丁 或 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
给 我 看 一些 烹饪 时间 等于 米饭 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
告诉 我 超过 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
给 我 看 一下 与 米饭 布丁 相同 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
什么 成分 在 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
什么 配方 需要 菠菜 或 牛奶 来 制备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
午餐 食谱 于 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
显示 发布 的 第一个 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 食谱 发布 日期 小于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
在 米饭 布丁 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
给 我 看 两份 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
准备 菜肴 所 需 的 总 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 食谱 需要 的 烹饪 时间 不仅仅 是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 是 在 米饭 布丁 发布 之后 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 食谱 最近 发布	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪 种 食谱 与 米饭 布丁 的 烹饪 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 食谱 准备 时间 至少 是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
米饭 布丁 或 三文鱼 的 食谱	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
哪些 食谱 的 膳食 数量 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
名称 米饭 布丁 不 需要 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
命名 食谱 的 烹饪 时间 至少 与 米饭 布丁 的 烹饪 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 2010 年 之后 发布 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 食谱 涉及 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
哪个 配方 的 准备 时间 不 超过 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
向 我 展示 牛奶 作为 其 成分 之一 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 是 比 米饭 布丁 没有 更 多 时间 烹饪 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 成分 最 常用	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 以外 的 一餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
这是 两种 食谱 中所 需 的 食品	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪 种 食谱 需要 与 米饭 布丁 相同 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
在 2004 年 期间 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 米饭 布丁 中 发现 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
这是 最后 发布 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
给 我 看 一顿饭 食谱 ， 包括 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 食谱 烹饪 时间 是 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 制作 两种 类型 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 食谱 有 两种 或 更 多 种类 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
什么 是 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
什么 配料 用于 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 等于 或 长于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 超过 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪个 食谱 与 米饭 布丁 同日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
准备 工作 需要 多长时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 成分 比 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
名称 成分 仅 用于 一个 或 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 有 两种 类型 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
找到 比 米饭 布丁 更长 的 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 需要 牛奶 ， 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 饭 不是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 食谱 的 烹饪 时间 少于 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 具有 最大 准备 时间 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
哪个 食谱 最早 发布	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 是 超过 两种 不同 的 膳食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
找到 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
以 牛奶 为 原料 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
在 2004 年 之前 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
只有 一种 配方 需要 什么 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
米饭 布丁 或 乳蛋 饼 中 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
2004 年 发布 的 食谱 所 需 的 成分 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
我们 每天 吃 多少 餐	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 是 食谱 的 平均 准备 时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 在 米饭 布丁 之前 张贴 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
食谱 发布 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 午餐 配方 用 牛奶 作为 配料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
这 道菜 需要 多长时间 才能 煮熟	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
找 一份 适合 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
2004 年 发布 的 食谱 是 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪个 食谱 的 准备 时间 最少	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 食谱 发布 日期 是 2004 年 最大 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
大多数 食谱 都 是 为了 什么 餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
至少 两道菜 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
什么 食谱 需要 最少 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 的 美食	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
食谱 只有 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
命名 两种 不同 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 配方 在 比 米饭 布丁 更 短 的 时间 内 煮熟	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
以 牛奶 为 原料 的 食谱 展示 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪 种 食谱 属于 较少 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
少于 两个 食谱 需要 什么 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
配料 数量 的 配方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 比较 喜欢 米饭 布丁 或 乳蛋饼	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
什么 食谱 的 准备 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
使用 两种 或 更 多 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
用 两个 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找到 需要 最 多 食品 数量 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
找到 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 食谱 是 在 较 短 的 时间 内 准备 好 的 糙米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 时候 可以 在 米饭 布丁 的 同时 准备 好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
告诉 我 食谱 准备 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 饭菜 有 使用 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
你 能 找到 至少 两种 食谱 的 食物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
显示 发布 日期 不是 2004 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
找到 2004 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 含量 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 配方 至少 与 米饭 布丁 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我无乳 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
告诉 我 食谱 与 米饭 布丁 相同 或 更长 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 是 最 多 食谱 的 一餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 是 午餐 配方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
食谱 总 准备 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 最 多餐 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
需要 相同 或 更 多 时间 准备 米饭 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
两种 或 更 多 配方 需要 什么 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
配方 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
在 2004 年 或 之前 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 不是 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
哪些 食谱 是 在 米饭 布丁 之前 张贴 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
向 我 展示 2004 年 或 之后 发布 日期 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 需要 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 需要 两种 以上 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 不 超过 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
哪个 食谱 的 烹饪 时间 比 米饭 布丁 所 需 的 准备 时间 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
显示 比 米饭 布丁 需要 更 少 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 不 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 需要 最少 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 是 一顿饭 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 准备 时间 大于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 食谱 牛奶 吃 午饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
命名 为 午餐 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
向 我 展示 具有 最 多 要求 的 配方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 米饭 布丁 或 乳蛋 饼 的 食谱	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
什么 食谱 可以 用于 至少 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 2004 年 发布 的 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
2004 年 发布 的 食谱 要求 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
那里 有 多少 顿饭	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 有 至少 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪 种 食谱 需要 最少 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
什么 食谱 准备 时间 与 米饭 布丁 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
哪些 食谱 需要 更长 的 时间 来 烹饪 而 不是 准备 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 比 米饭 布丁 花费 相同 或 更 多 的 时间 来 烹饪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 需要 至少 三种 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
需要 比 准备 米饭 布丁 所 花费 的 时间 少 或 相同 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 食谱 遵循 一 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
告诉 我 食谱 需要 比 米饭 布丁 更少 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 在 任何 张贴 米饭 布丁 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 食谱 发布 日期 最多 是 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 米饭 布丁 的 发布 日期	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 的 发布 日期 大于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
向 我 展示 最少 代表 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 是 米饭 布丁 的 美食	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 食谱 不 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 需要 更长 的 时间 来 煮饭 比 米饭 布丁 需要 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
从 2004 年 开始 寻找 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
所有 食谱 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 饭 是 配方 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
告诉 我 2004 年 和 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
哪 种 配方 需要 少于 两种 食品 进行 配制	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 一餐 有 两种 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
饭 不 比 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
告诉 我 食谱 需要 比 米饭 布丁 更长 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 的 准备 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 是 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
命名 两种 以上 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 成分 在 食谱 中 使用 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
至少 有 两种 食谱 使用 了 哪些 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
食谱 烹饪 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 食谱 属于 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 食谱 与 米饭 布丁 的 烹饪 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
告诉 我 午餐 不能 吃 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
哪个 食谱 的 发布 日期 小于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
饭 比 米饭 布丁 或 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
哪些 食谱 是 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
向 我 展示 烹饪 时间 大于 米饭 布丁 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 米饭 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
制作 米饭 布丁 不 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
告诉 我 需要 两种 或 更少 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
在 2010 年 之前 向 我 展示 发布 日期 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 所有 食谱 的 平均 烹饪 时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
显示 最 需要 作为 米饭 布丁 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 最快 煮熟	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
需要 多少 成分	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 与 米饭 布丁 的 烹饪 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
哪 一餐 是 米饭 布丁 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
许多 食谱 需要 哪 种 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 的 烹饪 时间 低于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
2004 年 发布 的 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 准备 时间 少于 米饭 布丁 的 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
显示 最多 有 两道 美食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
给 我 看 最少 烹饪 时间 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
米饭 布丁 的 成分	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
什么 是 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 在 米饭 布丁 的 同一天 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
米饭 布丁 的 配方	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
用 什么 饭 是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
没有 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
命名 三种 或 更 多 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
食谱 发布 日期 是 2004 年 还是 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
哪些 食谱 需要 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 2004 年 之后 或 2010 年 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 不是 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
制作 米饭 布丁 需要 多长时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 食谱 需要 比 米饭 布丁 更长 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 最低 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
有 超过 两种 美食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
将 用于 午餐 的 配方 命名 为 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
展示 最 多 菜肴 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
什么 食谱 需要 两个 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
这是 食谱 中 最 常用 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 的 发布 日期	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 的 菜肴 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
哪 一餐 是 2004 年 发布 日期 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪 种 食谱 比 米饭 布丁 花费 的 时间 更 少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
至少 两种 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
显示 没有 牛奶 作为 其 成分 之一 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
准备 食谱 需要 多少 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 食谱 需要 最长 的 准备 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
配方 需要 多长时间 准备	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 最 古老 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
找 午餐 吃饭 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
什么 食谱 烹饪 比 米饭 布丁 花费 更少 的 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 餐有 最 多 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 需要 最短 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
告诉 我 食谱 的 准备 时间 大于 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 是 米饭 布丁 发布 的 日子	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 饭有 两个 或 更 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
午餐 食谱 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
所有 食谱 的 总 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
找 一些 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 在 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 食谱 不迟于 米饭 布丁 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
有 多少 食谱 使用 两种 以上 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪个 配方 的 准备 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
有 多少 餐	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
在 张贴 米饭 布丁 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
这个 配方 需要 的 最 重要 的 成分 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 有 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
给 我 看 食谱 需要 米饭 布丁 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 是 不 超过 两种 配方 中 发现 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
给 我 看 一些 烹饪 时间 等于 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
食谱 的 总 预备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
哪些 食谱 需要 与 米饭 布丁 相同 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 食谱 需要 牛奶 或 菠菜	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
什么 餐有 不到 两个 食谱 来 做 它	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 需要 最 少量 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 种 配方 比 米饭 布丁 准备 需要 更少 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
食谱 发布 日期 大于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪 种 食谱 需要 最长 的 准备 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 食谱 有 最大 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
哪 种 配方 属于 米饭 布丁 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
告诉 我 没有 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 的 烹饪 时间 等于 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
找到 多种 美食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
向 我 展示 两种 以上 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 需要 三种 或 更 多 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪些 食谱 是 在 2004 年 之后 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
少于 三餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
显示 在 2004 年 至 2010 年 之间 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 午餐 食谱 所 需 的 食材	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
显示 其 烹饪 时间 与 米饭 布丁 相同 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 是 2004 年 或 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪 一餐 的 食谱 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 是 最近 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
比 米饭 布丁 更 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 在 2004 年 发布 ， 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
找到 2005 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
告诉 我 食谱 在 米饭 布丁 或 之前 发布 的 当天	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪些 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 是 两种 以上 食谱 中 使用 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 是 在 2004 年 或 2010 年 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪 种 食谱 至少 需要 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 是 米饭 布丁 中 没有 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
配方 的 平均 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
向 我 展示 2004 年 或 之后 或 2010 年 或 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 食谱 至少 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
2004 年 发布 的 食谱 成分 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
说出 米饭 布丁 中 不 需要 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 是 与 米饭 布丁 相同 的 美食 配方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
在 发布 米饭 布丁 时 发布 了 哪些 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
2004 年 发布 的 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 饭 是 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
告诉 我 食谱 需要 长时间 准备 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 与 米饭 布丁 同日 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
哪些 食谱 最多 是 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 2004 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
食谱 发布 日期 大于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
找到 与 米饭 布丁 相同 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
什么样 的 菜 是 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 成分 只用 在 一个 配方 中	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
2004 年 之后 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
贴 上 米饭 布丁 的 食谱 贴出来	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 2004 年 及 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
找到 2004 年 发布 的 膳食 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 ， 其 准备 时间 是 米饭 布丁 的 最佳 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
用 最少 的 食谱 向 我 展示 膳食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
使用 了 多少 成分	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 少于 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
在 米饭 布丁 之前 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 时候 发布 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
最少 吃饭 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 少于 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 是 一种 食谱 ， 其 烹饪 时间 与 米饭 布丁 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
显示 2004 年 发布 的 食谱 ， 并 将 牛奶 作为 其 成分 之一	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 食谱 有 最 短 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
用 牛奶 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
哪 种 配方 最早 可以 准备	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 午餐 食谱 含有 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
给 我 看饭 ， 包括 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
使用 与 米饭 布丁 相同 的 时间 制备 哪 种 配方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
列出 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 不迟于 2004 年 或 2010 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
三餐 或 更 多餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
超过 两个 食谱 的 成分 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
只要 准备 米饭 布丁 ， 哪些 食谱 需要	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
找到 两餐 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 有 两种 或 更少 类型 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
配方 需要 少于 三种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 配方 需要 比 米饭 布丁 更长 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 晚于 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 的 准备 时间 等于 米饭 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
查找 2004 年 或 2010 年 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 食谱 与 米饭 布丁 具有 相同 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
告诉 我 2004 年 发布 的 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2003 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
乳蛋 饼 或 米饭 布丁	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
告诉 我 食谱 遵循 两种 或 更 多 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
告诉 我 食谱 的 准备 时间 比 米饭 布丁 的 烹饪 时间 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 与 米饭 布丁 具有 相同 或 更长 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
使用 牛奶 的 食谱 需要 哪些 其他 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 用于 最多 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
哪个 配方 需要 最长 的 准备 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
给 我 看 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
用 两种 以上 的 食谱 向 我 展示 餐食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 最多 有 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
给 我 看 两种 成分 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
2004 年 或 2010 年 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
向 我 展示 最 多 两个 食谱 所 需 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 2004 年 张贴 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
比 米饭 布丁 需要 更 少 时间 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
找到 我 需要 牛奶 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪些 食谱 是 在 2004 年 的 午餐时间 发布 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 至少 与 米饭 布丁 一样 长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪个 食谱 最新 发布	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 是 不 迟于 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 所有 食谱 中 使用 了 多少 总 成分	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 种 食谱 需要 花费 最少 的 时间 来 准备	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 食谱 要么 牛奶 或 菠菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
大多数 食谱 要求 什么 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 配方 比 米饭 布丁 煮 得 更 快	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
用 最 多 的 食谱 向 我 展示 餐点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
用 至少 两种 食谱 向 我 展示 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找到 可 用于 两餐 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
食谱 在 2004 年 之前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
显示 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
什么 是 午餐 食谱 中 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
哪些 食谱 发布 到 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 食谱 烹饪 时间 是 最低 的 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
在 2010 年 之前 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 需要 最多 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
这种 食谱 需要 两种 以上 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 需要 一 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪些 食谱 最 多 需要 两种 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
发布 日期 至少 是 米饭 布丁 发布 日期 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 食谱 可以 少于 两种 类型 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
哪些 食谱 与 米饭 布丁 同时 张贴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
两种 食谱 中 需要 哪些 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 不到 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
什么 食谱 烹饪 时间 低于 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪 种 食谱 可 用于 两餐 或 更 多餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
配方 的 准备 时间 不 超过 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 比 米饭 布丁 需要 更 多 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪个 食谱 的 准备 时间 与 米饭 布丁 的 烹饪 时间 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 是 最 多 的 成分 配方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
什么 成分 用于 米饭 布丁 或 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
向 我 展示 2004 年 发布 的 食谱 所 需 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 食谱 需要 最长 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
你 做 什么 食谱 的 时间 比 米饭 布丁 少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 等于 或 少于 烹饪 的 时间 比 米饭 布丁 需要 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
显示 午餐 食谱 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
这是 多少 餐	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
给 我 看 一下 烹饪 时间 少于 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 看 一下 烹饪 时间 比 米饭 布丁 更 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 发布 日期 是 在 2004 年 ， 它 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 食谱 需要 牛奶 ， 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 配方 是 在 米饭 布丁 或 更 早 的 准备 时间 准备 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 一餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
向 我 展示 2004 年 或 之前 或 2010 年 或 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 饭 是 米饭 布丁 或 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
告诉 我 与 米饭 布丁 相同 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
是 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.concat en.meal.lunch en.meal.dinner ) )
两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
酒店 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
最少 的 餐厅 提供 什么 菜	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
列出 所有 泰国 或 意大利 餐厅	( call SW.listValue ( call SW.concat en.cuisine.thai en.cuisine.italian ) )
餐厅 的 菜肴 是 泰国菜 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
什么 餐厅 的 价格 评级 大于 或 等于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 社区 有 餐厅 在 户外 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
儿童 友好 餐厅 有 哪些 美食 选择	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
哪家 三星级 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
这家 三星级 餐厅 适合 儿童	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 有 3 或 2 个 菜单项	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
位于 市中心 西部 的 餐厅 供应 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
在 市中心 西部 的 餐厅 提供	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
什么 餐厅 需要 预订 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
什么 是 平均 星级 评分	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
这家 餐厅 至少 有 两星 评级 并且 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 社区 有 最 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
什么 3 星级 餐厅 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
团体 的 好 地方 ， 并 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
什么 2 美元 的 标志 餐厅 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
像 泰国 咖啡馆 或 比萨 店 juno 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 泰国 餐馆 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string reserve ) ) )
哪 一餐 是 泰国 咖啡馆 不 供应 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
餐厅 评价 比 泰国 咖啡馆 更高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
是 附近 是 市中心 西部 的 餐厅 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 餐厅 供应 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
总共 有 多少 家 餐馆	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
列出 所有 有 外卖 和 送货 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
这家 餐厅 可以 买 到 相当 便宜 的 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
泰国 餐厅 评为 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪些 餐厅 有 3 星 评级 和 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string groups ) ) )
3 星级 餐厅 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 菜单 上 有 两餐 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
3 星 评级 的 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
哪个 餐厅 位于 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
一个 友好 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
这家 餐馆 的 邻居 是 市中心 西部 ， 需要 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
该 地区 的 餐厅 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
是 菜肴 是 泰国 的 餐厅 的 附近 的 邻里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
哪些 餐馆 的 价格 高于 两三个 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
适合 儿童 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string kids ) ) )
列出 所有 拥有 3 星 或 5 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
哪些 餐厅 供应 午餐 ， 并 设有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
一家 提供 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string waiter ) ) )
有 服务员 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) )
什么 餐厅 拿 信用卡 ， 孩子 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string kids ) ) )
泰国 咖啡馆 的 星级 评分 是 什么 ？	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
什么 餐厅 有 户外 座位 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
价格 为 2 美元 标志 的 餐厅 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
价格 高于 3 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 餐厅 对 孩子 们 有 好处 ， 并 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
位于 市中心 的 餐厅 供应 泰国 美食	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) )
列出 所有 3 星级 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 户外 座位 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string outdoor ) ) )
餐厅 提供 午餐 并 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
预订 和 服务员 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
一家 供应 午餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
有 多种 菜肴 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
对 团体 有益 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) )
提供 最少 餐 点数 的 酒店	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 餐厅 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 是 泰国 咖啡馆 的 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
哪些 餐厅 的 价格 评级 至少 为 两三个 美元 符号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 餐厅 供应 最 多餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
酒店 适合 儿童 的 口味 ， 最 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
哪些 餐厅 有 外卖 和 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
什么 泰国 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 外卖 和 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
一个 有 服务员 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string waiter ) ) )
所有 餐厅 的 星级 评分 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
找到 一家 提供 服务员 服务 的 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
5 星级 和 更 低 价格 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
酒店 设有 泰国 或 意大利 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
列出 所有 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 供应 最 少量 的 饭菜	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 在 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
不到 两家 餐馆 供应 的 是 什么 餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 适合 团体 入住 ， 并 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string outdoor ) ) )
有 服务员 服务 且 价格 等级 为 2 美元 标志 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
所有 三星级 餐厅 的 美食 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
2 美元 标志 价格 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
该 餐厅 的 星级 评分 为 3 星 ， 其 星级 评分 为 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 中 城 西餐厅 提供 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
有 服务员 ， 对 孩子 有益 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
哪些 餐厅 有 服务员 服务 有 货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string delivery ) ) )
什么 是 餐厅 的 平均价格	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
有 服务员 服务 的 餐厅 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
家庭 友好 的 餐厅 ， 你 可以 坐在 外面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
什么 是 最 适合 孩子 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
什么 市中心 西餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
有 送货 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) )
酒店 位于 市中心 西区 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 美食 与 泰国 咖啡馆 相匹配	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 是 三星 评级 的 餐厅 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
列出 所有 至少 3 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
有 多少 种 不同 的 美食	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ) )
泰国 咖啡馆 位于 哪个 社区	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
餐厅 提供 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
餐厅 的 价格 是 2 美元 的 标志 ， 也 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
服务员 在 餐厅 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
什么 餐厅 评价 3 美元 或 更 少 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
找 一家 超过 3 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐厅 在 午餐时间 开放 ， 对 孩子 们 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
餐厅 价格 为 2 美元 或 更 低 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 有 户外 座位 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
星级 评分 大于 3 星级 或 5 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) )
邻里 餐厅 对 一群 人有 好处	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 供应 午餐 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 评分 不到 3 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string takeout ) ) )
3 星级 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪些 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
哪些 餐厅 对 孩子 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string kids ) ) )
哪个 餐厅 对 儿童 友好 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string reserve ) ) )
2 美元 的 标志 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
找到 有 信用卡 的 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string waiter ) ) )
哪些 餐厅 提供 的 餐点 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
有 送货 的 餐厅 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 采用 信用卡 ， 儿童 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string kids ) ) )
哪家 酒店 提供 服务员 服务 和 户外 座位 设施	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string outdoor ) ) )
什么 餐厅 适合 团体 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
列出 西部 市中心 的 所有 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 有 3 星级 ， 有 2 个 菜单	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
一个 围绕 很多 社区 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
哪家 三星级 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 有 服务员 和 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string waiter ) ) )
什么 餐厅 服务 团体 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
拥有 最 多 社区 的 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
这 是 最 少数 餐厅 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 接受 信用卡 ， 是 孩子 们 的 好去处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
泰国 咖啡馆 提供 什么 主菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
找 一家 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) )
3 星级 餐厅 的 价格 是 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 至少 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 是 餐厅 的 星级 评定	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
对 团体 有益 的 餐厅 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
列出 所有 比 2 美元 标志 更贵 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 对 孩子 有 好处 ， 并 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
餐厅 用 信用卡 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
三星级 餐厅 提供 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string delivery ) ) )
3 星级 的 餐厅 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
餐厅 ， 这 对 团体 和 交付 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
哪家 餐厅 提供 最 多样化 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
没有 午餐 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
提供 预订 设施 并 供应 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
最 多 供应 两餐 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 饭 是 很 好 的 为 团体 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
这家 餐厅 的 评级 为 4 星级 或 以上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
有 外卖 和 送货 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
与 泰国 咖啡馆 提供 相同 类型 食物 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
价格 低于 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
餐厅 供应 团体 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 适合 团体 和 儿童	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
什么 餐厅 收到 3 星级 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
这家 餐厅 的 星级 评分 为 3 星级 ， 适合 儿童	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
这是 什么 餐厅 的 电话号码	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
该 餐厅 的 邻里 是 市中心 西区 ， 其 星级 评分 为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
提供 服务 和 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string waiter ) ) )
评级 为 3 星且 需要 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
餐馆 数量 较少 的 邻里	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
什么 邻居 与 最 多 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
位于 市中心 西部 的 一家 餐馆 ， 提供 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
什么 是 3 星 或 5 星 评级 更好	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
位于 市中心 西部 的 家庭 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
星级 评分 为 3 星级 或 5 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
那个 有 泰国 咖啡馆 星级 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 的 星级 评分 小于 3 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
中 城 西餐厅 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 提供 外卖 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
什么 是 一些 餐厅 评级 2 美元 或 更 多	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 对 团体 有益 ， 对 孩子 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
哪些 餐厅 的 评级 与 泰国 咖啡馆 相同 或 更好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
什么 餐厅 采取 信用卡 ， 并 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string credit ) ) )
不 超过 两家 餐厅 供应 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 至少 有 30 或 40 条 评论	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
餐厅 设有 服务员 和 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string outdoor ) ) )
西部 市中心 的 哪家 餐厅 有 两个 美元 符号 的 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有 服务员 服务 的 餐厅 提供 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
最贵 的 餐馆	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
哪个 社区 有 两个 或 更 少 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
这家 餐厅 的 星级 评分 为 3 星级 ， 适合 团体 入住	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
这家 价格 为 2 美元 的 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
哪些 餐厅 的 评级 优于 3 星 或 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐厅 有 户外 座位 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string outdoor ) ) )
什么 餐厅 具有 相同 的 价格 评级 或 比 泰国 咖啡馆 更好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
将 餐厅 命名 为 不 提供 泰国菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
3 星级 餐厅 供应 什么样 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
有 多少 个 社区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
列出 所有 类似 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
什么 是 中西部 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 外卖 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
餐厅 在 2 或 3 美元 的 标志 价格 范围 内	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
哪些 餐厅 与 泰国 咖啡馆 的 星级 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
哪些 餐厅 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 菜 最 多 的 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
有 多少 个 社区 有 餐馆	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
找到 所有 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
找到 一家 价格 等于 或 低于 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 有 服务员 ， 价格 等级 为 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
什么 是 儿童 友好 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
比 泰国 咖啡馆 贵 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
有 送货 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
2 美元 签署 了 儿童 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 评分 为 3 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 供应 午餐 ， 包含 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
酒店 可以 提前 预订 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪家 泰国 餐厅 的 评级 为 2dollarsign	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪家 酒店 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string delivery ) ) )
哪些 餐厅 有 外卖 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
酒店 至少 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 有 户外 用餐 ， 儿童 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
什么 是 西部 中城 的 大型 团体 最好 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
什么 好孩子 餐厅 在 市中心 西区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
中 城 西餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
泰国 咖啡馆 的 美食 ， 泰国 咖啡厅 的 美食	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
家庭 友好 的 餐厅 ， 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
三星级 餐厅 提供 哪些 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
餐厅 的 邻居 是 市中心 西部 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
哪些 餐厅 有 户外 座位 ， 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
5 星 或 3 星	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
什么样 的 餐点 做 2 美元 标志 评价 餐馆 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
餐厅 的 总 星级	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
哪家 泰国 餐厅 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪个 街区 不 超过 两家 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 是 泰国 咖啡馆 供应 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
餐厅 评级 高于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 对 孩子 友好 ， 并 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
什么 餐厅 有 两种 以上 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪些 餐厅 有 服务员 和 两个 美元 符号 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
你 可以 坐在 外面 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) )
提供 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
餐厅 在 市中心 西部 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 社区 不到 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 适合 团体 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
我 可以 在 哪个 餐厅 预订 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string reserve ) ) )
什么 是 餐厅 的 平均价格	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
附近 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 提供 预订 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
什么 餐厅 对 孩子 们 有 好处 ， 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 适合 孩子 ， 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string waiter ) ) )
接受 信用卡 的 2 美元 标志 价格 类别 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
泰国 餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
附近 是 市中心 西区 的 餐厅 需要 预约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string reserve ) ) )
一家 餐厅 的 午餐 价格 为 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
至少 有 两家 餐厅 有 什么 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪个 酒店 有 户外 座位 设施 ， 并 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string outdoor ) ) )
餐厅 适合 团体 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
什么 餐馆 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) )
至少 2 间 餐厅 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
中 城 西餐厅 适合 很多 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
星级 评分 至少 为 3 星级 或 5 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
接受 预订 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 服务员 服务 并 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string reserve ) ) )
什么 是 至少 两家 餐厅 供应 的 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
西区 中城 2 美元 符号 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
三星级 餐厅 ， 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
西部 中城 的 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
星级 评级 小于 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
西部 中 城 哪些 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
泰国 咖啡馆 所在 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
是 有 服务员 服务 的 餐厅 的 附近 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
有 交货 且 价格 等级 为 2 美元 符号 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 市中心 西餐厅 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪家 餐厅 有 服务员 服务 并 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string reserve ) ) )
餐厅 需要 预订 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
位于 市中心 西区 的 餐厅 ， 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
餐馆 数量 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
提供 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string takeout ) ) )
是 需要 预约 的 餐厅 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
在 市中心 西区 或 切尔西 有 哪些 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
与 泰国 咖啡馆 价格 相同 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
餐厅 不到 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
价格 在 3 美元 以上 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
一家 评价 至少 3 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string delivery ) ) )
餐厅 的 平均 星级	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
有 服务员 的 餐厅 的 美食 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
哪家 酒店 的 星级 评分 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
什么 是 泰国 咖啡馆 的 价格 评级	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
哪家 餐厅 的 美食 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
什么 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string meals ) ( string = ) en.food.lunch ) )
与 泰国 咖啡馆 价格 相同 或 更 低 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
餐厅 有 户外 座位 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
中 城西区 餐厅 ， 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 ， 这 对 孩子 们 有 好处 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string reserve ) ) )
泰国 餐厅 ， 提供 户外 座位 设施	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪些 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
哪个 社区 有 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
找个 供应 午餐 的 好孩子 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
2 美元 的 标志 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
什么 餐厅 有 两个 美元 符号 的 价格 评级 ， 也 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
哪个 社区 包含 提供 送货 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
餐厅 有 服务员 服务 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
什么 餐厅 提供 午餐 和 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
价格 为 2 美元 标志 并且 需要 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
最 便宜 的 餐馆	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
餐厅 采用 信用卡 ， 其 价格 评级 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 有 户外 座位 ， 适合 举办 大型 聚会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string groups ) ) )
哪个 位于 市中心 西部 的 餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
这是 一家 餐厅 ， 供应 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 采用 信用卡 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string reserve ) ) )
团体 友好 的 餐厅 有 哪些 美食 选择	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
提供 外卖 和 接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
哪家 餐厅 需要 预订 ， 适合 团体 入住	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
泰国 餐厅 与 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 服务员 服务 ， 适合 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
什么 餐厅 有 最大 的 菜单	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
有 服务员 服务 ， 附近 是 市中心 西部 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 泰国 餐厅 吃 午饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
一家 餐厅 ， 为 大型 团体 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string groups ) ) )
什么 菜 类型 最 常见	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
找到 一家 带 户外 座位 的 餐厅 ， 可以 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
什么 饭 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
开 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
哪些 餐馆 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string credit ) ) )
餐厅 有 两个 邻里 位置	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
需要 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
什么 餐厅 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
酒店 拥有 最低 星级	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
什么 是 不 超过 两家 餐厅 供应 的 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 评分 最高 为 泰国 咖啡馆 的 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
什么 是 一些 餐厅 评价 最多 3 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
哪些 餐厅 供应 午餐 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
3 星 评级 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么样 的 餐厅 提供 与 泰国 咖啡馆 相同 的 食物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
餐厅 提供 服务员 服务 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string outdoor ) ) )
在 带 户外 座位 的 餐厅 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
30 条 点评 或 40 条 评论	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
两个 以上 餐厅 供应 的 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
与 泰国 咖啡馆 有 类似 食物 的 餐馆	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) )
哪些 餐厅 有 2 美元 的 标志 价格 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
西部 中心 的 餐馆 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
在 市中心 西区 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
列出 西部 市中心 的 所有 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
信用卡 的 餐厅 ， 其 星级 评分 为 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
两家 以上 的 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
泰国 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
泰国 咖啡馆 没有 什么 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
在 至少 2 间 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 中 城 西餐厅 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
哪个 社区 不到 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 街区 有 供应 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 有 户外 座位 ， 可以 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
什么 泰国 餐厅 有 一个 很 好 的 星级 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
3 星级 餐厅 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
找 一家 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
带 户外 座位 的 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string outdoor ) ) )
什么 是 接受 预订 的 餐厅 提供 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
价格比 泰国 咖啡馆 更 高 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
位于 市中心 西区 的 餐厅 提供 送餐 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
命名 泰国 餐馆 或 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
提供 三星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 包含 最多 有 餐厅 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
餐厅 不 在 市中心 西区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
餐厅 对 孩子 们 有 好处 ， 需要 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
什么 餐厅 有 3 星级 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
列出 所有 提供 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) )
什么 餐厅 有 户外 座位 和 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
什么 2 美元 的 标志 餐厅 包含 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有同 一餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪家 餐厅 有 三星 评级 ， 也 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 有 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
这 顿饭 的 数量 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
酒店 的 价格 为 2 美元 的 标志 或 3 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
餐厅 有 2 和 更 低 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 对 孩子 有 好处 ， 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
餐厅 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
泰国菜 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
餐厅 有 外卖 设施 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
列出 所有 提供 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 是 餐厅 提供 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 餐厅 外卖 ， 孩子 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
儿童 友好 的 餐厅 ， 价格 等于 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
至少 有 3 家 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 位于 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 带 户外 座位 的 餐厅 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
提供 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
两家 以上 餐厅 提供 的 美食 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
外卖 和 送货 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string takeout ) ) )
这家 餐厅 送 的 是 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
列出 所有 不到 两餐 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
西部 中城 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 泰国 咖啡馆 的 价格 评级	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
在 市中心 命名 一家 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
提供 和 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string delivery ) ) )
餐馆 叫 泰国 咖啡馆 或 比萨 店 juno	( call SW.listValue ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) )
位于 市中心 西部 的 餐厅 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
餐厅 至少 有 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 餐厅 是 儿童 友好 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
什么 好 的 团体 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
2 美元 的 标志 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
你 在 外面 吃 什么 餐馆 吃 午饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪些 泰国 餐馆 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
家庭 友好 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
什么 餐厅 提供 午餐 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
一家 泰国 餐馆 ， 拿 着 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string credit ) ) )
什么样 的 餐厅 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 适合 团体 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
酒店 设有 户外 座位 设施 ， 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
什么 餐厅 提供 预订 ， 也 有 结转	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
泰国 咖啡馆 没有 提供 什么样 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
一个 集体 友好 的 餐厅 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string groups ) ) )
两家 餐厅 供应 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 的 价格 为 2 至 3 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 泰国 餐厅 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
找 3 星级 或 5 星级 餐厅	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
泰国菜 餐厅 与 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 的 菜肴 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
供应 午餐 的 泰国 美食 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 共 用餐 点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 提供 美食 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
什么 是 泰国 咖啡馆 的 星级 评分	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
哪些 社区 有 餐厅 提供	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
找 一家 价格 为 2 美元 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 提供 送货 服务 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string delivery ) ) )
什么 餐厅 有 送货 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
像 泰国 咖啡馆 比萨 店 juno 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
有 户外 座位 的 餐厅 有 哪些 类型 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
在 至少 两个 街区 找到 一家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
哪家 餐厅 提供 午餐 ， 对 儿童 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
哪家 三星级 餐厅 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
这家 餐馆 的 邻居 是 市中心 西部 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string meals ) ( string = ) en.food.lunch ) )
位于 市中心 西部 的 酒店 可以 提前 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
是 泰国 咖啡厅 的 附近 的 邻里 ， 那 是 泰国 咖啡厅 的 附近	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
附近 有 哪些 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 需要 预订 ， 孩子 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string kids ) ) )
哪个 街区 的 餐馆 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 是 泰国 咖啡馆 的 价格 评级	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
在 西部 市中心 供应 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
交货 可用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) )
接受 信用卡 并 在 户外 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
泰国 餐馆 评级 2 美元 的 迹象	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
像 泰国 咖啡馆 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
有 户外 座位 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
有 餐厅 和 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string credit ) ) )
什么 是 泰国 咖啡馆 的 星级 评分	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
信用卡 价格 为 2 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
在 中城 西部 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 只 提供 一种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
餐厅 外卖 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
价格 为 2 美元 标志 且 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
什么 餐厅 有 户外 座位 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
餐厅 评分 为 3 至 5 星	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
什么 是 在 泰国 咖啡馆 供应 的 一餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
在 市中心 的 西餐厅 为 孩子 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 供应 午餐 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 不 超过 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
有 户外 用餐 区 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
位于 社区 之间 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
位于 市中心 西区 的 餐厅 ， 适合 团体 入住	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
两餐 以上 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
泰国 餐馆 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string credit ) ) )
找到 一家 我 可以 预订 的 餐厅 ， 价格 为 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 提供 午餐 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 有 2 个 价格 等级 ， 适合 团体 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
2 美元 符号 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 街区 不是 咖啡馆 所在 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 是 三星级 餐厅 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 评级 为 3 星级 ， 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string outdoor ) ) )
附近 有 泰国 咖啡馆 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
什么 好孩子 餐厅 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string kids ) ) )
附近 有 一家 餐厅 ， 里面 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
哪些 餐厅 有 服务员 并 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string reserve ) ) )
哪家 餐厅 提供 这种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 有 户外 座位 和 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 有 2 个 或 更 多美元 符号 作为 其 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 提供 接受 信用卡 的 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
列出 所有 评级 均 高于 2 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
邻居 有 哪些 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
提供 送货 和 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string reserve ) ) )
在 泰国 咖啡馆 附近 找到 一家 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
什么 餐厅 为 团体 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
哪些 餐厅 有 服务员 拿 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string credit ) ) )
位于 市中心 西部 的 团体 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
价格 等于 2 美元 符号 或 3 美元 符号 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
2 美元 的 标志 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 社区 餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
哪些 餐厅 供应 午餐 并 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string waiter ) ) )
适合 团体 和 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
哪些 餐厅 供应 不到 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 泰国 餐厅 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 对 团体 有益 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
餐厅 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 评为 3 至 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
位于 市中心 西部 的 餐厅 ， 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string waiter ) ) )
列出 所有 泰国 或 意大利 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
一个 儿童 友好 的 餐厅 吃 午饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 3 星级 餐厅 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
什么 餐厅 提供 送货 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string delivery ) ) )
餐厅 的 邻居 是 市中心 西部 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
餐厅 的 邻居 是 市中心 西部 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 有 2 美元 的 价格 评级 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
餐馆 数量 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
找 一个 带 外卖 的 好 团体 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
哪家 餐厅 欢迎 儿童 ， 并 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
什么 泰国 餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
需要 预订 且 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
3 星级 或 5 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
在 市中心 西区 有 哪些 类型 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
餐厅 有 服务员 ， 并 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
有 不到 两个 街区 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
供应 午餐 并 需要 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
餐厅 至少 有 30 或 40 条 评论	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
三星级 餐厅 采用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 设有 户外 座位 ， 适合 团体 入住	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string groups ) ) )
什么 是 泰国 咖啡馆 或 比萨 店 juno 服务 的 一餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 餐厅 提供 预订 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
什么 餐厅 提供 服务员 服务 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string waiter ) ) )
在 市中心 西部 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
星级 评级 大于 泰国 咖啡馆 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
有 服务员 服务 ， 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string waiter ) ) )
哪些 餐厅 有 2 美元 的 价格 评级 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
星级 小于 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
这家 三星级 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
西部 中心 的 餐厅 设有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 有 2 个 菜单项 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
价格 为 2 美元 标志 的 餐厅 是 一个 适合 团体 的 好 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐馆 数量 最少 的 街区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 供应 午餐 和 泰国 美食	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
一家 三星级 餐厅 ， 适合 孩子 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
什么 餐厅 在 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
切尔西 或 中城 西部	( call SW.listValue ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) )
哪个 餐厅 适合 团体 ， 还有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
你 可以 在 泰国 咖啡馆 或 比萨 店 juno 吃 什么 饭	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
所有 餐厅 的 总 价格 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
与 泰国 咖啡馆 一样 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
什么 餐厅 提供 户外 座位 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
什么 餐厅 在 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
可以 提前 预订 并 接受 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
什么 菜 都 需要 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
餐厅 没有 三星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string ! = ) ( number 3 en.star ) ) )
什么 餐厅 采取 信用卡 和 户外 设置	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
什么 餐厅 对 孩子 有 好处 ， 并 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string kids ) ) )
哪个 餐厅 吸引 孩子 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
这家 餐厅 的 星级 评分 为 3 星 ， 其 价格 是 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 总价	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
泰国 咖啡馆 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
找 一个 有 服务员 服务 的 好 团体 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
餐厅 拥有 最多 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
外卖 餐厅 的 邻居 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
有 预订 的 餐厅 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
3 星级 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
哪家 泰国 餐厅 需要 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 外卖 的 餐厅 适合 大型 聚会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
哪些 餐厅 提供 的 餐点 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
餐厅 有 户外 座位 ， 邻里 是 市中心 西区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 适合 团体 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
找 一个 外卖 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string takeout ) ) )
什么 餐厅 不到 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
位于 市中心 西区 的 餐厅 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
酒店 提供 午餐 ， 最 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
附近 是 市中心 西区 ， 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
什么 是 最 昂贵 的 餐厅	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
什么 是 不 供应 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
有 外卖 的 餐厅 ， 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
供应 午餐 的 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
西区 中心 的 餐厅 设有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
提供 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
价格 至少 为 2 美元 符号 或 3 美元 符号 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 是 一些 3 星级 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 餐厅 都 有 户外 座位 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
集团 友好 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
位于 市中心 西区 附近 的 餐厅 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
2 星 或 以下 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 适合 儿童 和 交付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
列出 所有 比 2 美元 标志 便宜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 只 供应 两顿 或 更 少 的 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
有 外卖 的 餐厅 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪个 餐厅 有 服务员 ， 还 提供 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
什么 是 泰国 餐厅 的 邻居	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
列出 所有 与 泰国 咖啡馆 不 相似 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 餐厅 有 户外 座位 ， 并 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string waiter ) ) )
餐厅 供应 少于 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
三星级 的 约束 和 下	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 有 服务员 服务 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
找 一家 拿 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) )
2 个 价格 等级 的 餐厅 也 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
什么 餐厅 对 孩子 和 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
什么 餐厅 在 市中心 西区 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 2 美元 的 标志 餐馆 在 西部 中城 的 邻居	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
西部 市中心 的 餐厅 提供	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
评价 最高 的 星级 餐厅	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
列出 所有 2 美元 的 标志 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
泰国 或 意大利 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
什么 餐厅 至少 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
餐厅 对 团体 有益 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
意大利人 或 泰国	( call SW.listValue ( call SW.concat en.cuisine.thai en.cuisine.italian ) )
菜肴 的 美食 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
餐厅 外卖 和 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
酒店 拥有 超过 三星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
泰国 咖啡馆 或 比萨 店 juno	( call SW.listValue ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) )
需要 预订 且 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
预订 的 餐厅 ， 被 评为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string reserve ) ) )
所有 其他 餐厅 都 提供 同样 的 餐点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 提供 outdoot 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
什么 是 三星级 餐厅 供应 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
我 可以 在 哪家 餐厅 吃 午餐 并用 信用卡 付款	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
泰国 餐馆 ， 孩子 们 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 ， 其 菜肴 是 泰国菜 ， 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
2 美元 的 标志 餐厅 提供 交付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
提供 信用卡 和 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
什么 餐厅 对 团体 和 孩子 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
泰国 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
餐厅 评级 为 2 美元 的 标志 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 只能 在 两个 街区 找到	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
什么 地方 供应 的 食物 不是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 2 美元 的 标志 餐厅 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
团体 友好 的 餐厅 被 评为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
泰国 咖啡馆 供应 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
中 城 西餐厅 有 什么 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 餐厅 适合 团体 和 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
什么 餐厅 有 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 餐厅 外卖 和 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
找 一家 泰国 或 意大利 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
泰国 餐厅 提供 什么 交付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 供应 午餐 ， 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
在 市中心 附近 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
价格 等级 是 泰国 咖啡馆 价格 等级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
午餐 餐厅 评为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
团体 友好 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) )
餐厅 适合 团体 游客 ， 其 星级 评分 为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 提供 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string waiter ) ) )
餐厅 提供 并且 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
餐厅 对 孩子 们 有益 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐馆 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
有 哪些 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
所有 餐厅 的 平均 星级 评分 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
供应 午餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 与 交付 额定 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string delivery ) ) )
哪些 餐厅 的 评级 在 3 到 5 星 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
将 酒店 命名 为 三星 评级 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
什么 餐厅 有 预订 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
什么 好孩子 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
哪些 餐厅 的 评级 低于 3 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string ! = ) ( number 3 en.star ) ) )
大多数 餐馆 都 提供 什么 餐点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 ， 适合 团体 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 提供 外卖 和 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string takeout ) ) )
团体 友好 的 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
位于 市中心 西区 的 哪家 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 提供 相同 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 中 城 西餐厅 的 价格 是 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 是 泰国 咖啡馆 的 价格 评级	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
这是 一家 采用 信用卡 的 餐厅 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
哪个 街区 的 餐馆 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 容纳 团体	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) )
靠近 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) ) )
什么样 的 餐厅 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
什么 餐厅 至少 提供 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
一个 类似 泰国 咖啡馆 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 有 超过 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 餐厅 的 价格 低于 2 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
一家 餐厅 ， 有 很多 餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
这家 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
找 一家 带 户外 座位 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 服务员 服务 且 有 送货 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string delivery ) ) )
什么 餐厅 对 团体 有益 ， 并 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string groups ) ) )
餐厅 的 食物 不像 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 餐厅 供应 除 泰国 以外 的 任何 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
什么 市中心 西餐厅 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
什么 菜 只 在 两家 餐厅 展出	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
超过 两家 餐厅 提供 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
价格 等于 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
附近 有 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 是 集体 餐厅 的 餐厅 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 不 超过 2 个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
有 2 或 3 美元 的 标志 评级	( call SW.listValue ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) )
找 一家 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪些 餐厅 可以 信用 并 可以 容纳 一个 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
什么 是 餐厅 的 邻居 价格 评级 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
西部 中城 的 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
酒店 的 星级 比 泰国 咖啡厅 更高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
将 一些 泰国 餐馆 命名 为 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪家 餐厅 提供 最少 类型 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 餐厅 提供 与 泰国 咖啡馆 相同 的 食物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
在 西部 市中心 的 餐厅 提供 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
有 户外 座位 的 餐厅 提供 什么 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
泰国 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
价格 适中 的 餐厅 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
什么 餐厅 提供 的 食物 为 孩子 们 提供 食物	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
为 孩子 们 准备 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
泰国 咖啡馆 没有 提供 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
餐厅 位置	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
餐厅 至少 有 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
一个 集团 友好 的 餐厅 ， 价格 中等	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string groups ) ) )
哪家 3 星级 餐厅 有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string takeout ) ) )
哪个 社区 最 适合 团体 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
什么 是 接受 信用卡 的 餐厅 提供 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
哪些 餐厅 有 服务员 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
这家 三星级 餐厅 有 外卖 食品	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 都 适合 团体 和 小孩	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
这家 三星级 餐厅 适合 团体 入住	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
有 户外 座位 和 送货 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string delivery ) ) )
接受 信用卡 并 提供 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
哪家 餐厅 的 价格 为 2 美元 标志 ， 并 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
预订 的 餐厅 ， 对 儿童 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string kids ) ) )
列出 所有 至少 有 3 星 或 5 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
午餐 供应 的 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
送货 的 团体 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
提供 外卖 的 餐厅 提供 什么 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 邻里 是 泰国 的 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
餐厅 每天 至少 开 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
泰国 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string reserve ) ) )
三星级 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string credit ) ) )
餐厅 提供 并 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string outdoor ) ) )
有 预订 的 餐厅 有 什么 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
餐厅 有 户外 座位 ， 其 价格 评级 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 resturants 采取 信用卡 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
3 星级 餐厅 还有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
找 一家 3 星 或 更 少 的 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 提供 午餐 ， 可以 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 提供 服务员 服务 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
餐厅 对 儿童 有益 ， 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
哪家 餐厅 的 价格 是 两 美元 的 标志 ， 并 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
泰国 餐馆 需要 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string credit ) ) )
哪些 餐厅 接受 信用卡 付款 ， 还有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
一个 儿童 友好 的 餐厅 ， 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
餐厅 在 市中心 西部 评为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪家 餐厅 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
外卖 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
一家 不 供应 泰国菜 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
什么 是 最 多 餐厅 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 提供 独特 的 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
提供 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 数量 最少 的 地区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪个 街区 不是 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.restaurant.thai_cafe ) )
哪些 社区 至少 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
位于 市中心 西区 的 餐厅 ， 其 标志 价格 为 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 评分 至少 3 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 对 孩子 们 有 好处 并且 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
2 个 价格 评分 的 餐厅 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
多家 餐厅 提供 哪些 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
三星级 的 餐厅 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string outdoor ) ) )
哪些 餐厅 提供 午餐 ， 并 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
在 供应 午餐 的 餐厅 提供 什么样 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
餐厅 适合 团体 用餐 ， 可以 提前 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
什么 是 一些 不 服务 泰国 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
哪家 餐厅 的 星级 评分 最低	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
泰国 餐馆 提供	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
什么 是 大多数 餐馆 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
3 星级 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string outdoor ) ) )
什么 餐厅 有 两种 以上 的 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
所有 餐厅 的 星级 评分 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
哪个 社区 有 餐厅 ， 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
什么 是 在 西部 市中心 的 餐厅 提供 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
餐厅 供应 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
哪些 餐厅 的 价格 高于 或 低于 两 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
餐厅 ， 信用卡 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
什么 餐厅 对 孩子 和 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
什么 餐厅 供应 两餐 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
送餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string delivery ) ) )
什么 好 的 儿童 餐厅 供应 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
外卖 和 送货 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
哪些 餐厅 被 评为 相同 或 低于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
中 城 西餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string reserve ) ) )
邻居 包含 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
儿童 友好 且 价格低廉 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
什么 是 泰国 咖啡馆 的 菜肴 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
这家 餐厅 供应 最多 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
价格 等级 是 2 美元 符号 的 餐厅 附近 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
靠近 两个 街区 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
酒店 的 价格 为 2 美元 的 标志 和 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
在 不到 两个 街区 找到 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
哪 三家 星级 餐厅 适合 孩子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
在 泰国 咖啡馆 附近 命名 一家 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
午餐 服务 餐厅 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 的 星级 比 泰国 咖啡馆 小	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 被 评为 3 星级 以下	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
哪家 餐厅 评价 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
附近 是 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 不 在 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
什么 餐馆 在 西部 中 城	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
西部 市中心 或 切尔西 的 一家 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
哪些 餐厅 与 泰国 咖啡馆 的 星级 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
餐厅 ， 其 菜肴 是 泰国 ， 并 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
泰国 餐厅 与 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string waiter ) ) )
有 价格 评级 的 泰国菜 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪些 餐厅 最多 有 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
什么 餐厅 有 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
位于 市中心 西部 的 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string meals ) ( string = ) en.food.lunch ) )
外卖 的 餐厅 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
哪家 餐厅 有 2 分钟 的 价格 和 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
供应 午餐 和 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
什么 餐厅 在 多个 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
价格 最多为 2 美元 符号 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 设有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) )
儿童 友好 的 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string kids ) ) )
酒店 提供 送货 服务 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪家 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 需要 预订 ， 并 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
什么 餐厅 提供 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
什么 餐厅 供应 类似 泰国 咖啡馆 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
将 餐厅 命名 为 比 泰国 咖啡馆 更 低 的 价格	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 提供 与 泰国 咖啡馆 相同 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
哪些 餐厅 需要 预订 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
中等 预订 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string reserve ) ) )
餐厅 ， 适合 团体 用餐 ， 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string credit ) ) )
价格 为 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
最低 价格 的 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 提供 午餐 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
不到 两家 餐厅 供应 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 评分 为 3 星 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
餐厅 供应 午餐 并 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
泰国 餐馆 便宜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 提供 外卖 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
为 孩子 们 提供 美食 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
哪家 餐厅 接待 儿童 ， 并 提供 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
我 可以 从中 城 西餐厅 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 设有 户外 座位 ， 并 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string outdoor ) ) )
餐厅 被 评为 3 星级 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 是 一个 儿童 友好 和 服务员 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string waiter ) ) )
什么 餐厅 有 更 多 的 美食 比 任何 其他	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
哪些 餐馆 有 外卖 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
餐厅 设有 户外 座位 ， 可 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
什么 餐厅 的 价格 评级 较 低	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
什么 餐厅 是 团体 友好 的 ， 并 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string credit ) ) )
泰国 咖啡馆 附近	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
价格 为 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
提供 外卖 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
餐厅 至少 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
酒店 位于 市中心 西区 ， 设有 户外 休息区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
3 星 评级 的 餐厅 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
不 供应 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
哪家 餐厅 有 3 星级 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
什么 餐厅 是 儿童 友好 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
这是 附近 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
哪些 社区 有 儿童 友好 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
哪个 社区 有 两家 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
3 家 或 更 高 价格 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
找到 2 美元 的 价格 评级 餐厅 与 交付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
附近 只有 一两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
有 超过 2 家 餐厅 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪家 餐厅 不 在 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
什么 市中心 西餐厅 吃 午饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
供应 餐点 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
一个 集体 友好 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string groups ) ) )
什么 是 一个 餐厅 ， 有利于 团体 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
列出 中 城西区 附近 的 所有 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 两家 餐厅 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
3stars 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪些 餐厅 的 价格 最多为 两三个 美元 符号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
哪家 餐厅 适合 一群 人 ， 还 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
列出 邻近 的 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
有 服务员 服务 和 外卖 设施 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
什么 餐厅 至少 提供 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪些 餐厅 的 星级 评分 小于 3 星 或 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
可以 提前 预订 并 提供 午餐 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
所有 餐厅 的 平均价格 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
什么 餐厅 提供 预订 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string reserve ) ) )
需要 预订 且 对 团体 有益 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
附近 的 餐厅 ， 提供 户外 座位 设施	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
在 附近 找到 一家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
餐厅 可以 提前 预订 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
什么 餐厅 有 服务员 服务 ， 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 包含 最多 的 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
价格 为 2 美元 标志 且 星级 评分 为 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
泰国 餐厅 ， 有益于 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string groups ) ) )
什么 餐厅 的 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 是 泰国 咖啡馆 不 供应 的 一餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
哪家 餐厅 的 价格 不 高于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 类似 于 西部 市中心 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
哪些 餐厅 的 价格 与 泰国 咖啡厅 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
什么 是 4 星级 或 更好 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 外卖 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
预订 餐厅 提供 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
餐厅 有 2 或 3 个 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
什么 是 酒店 的 价格 评级	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
是 泰国 咖啡馆 或 比萨 店 juno 的 附近 的 邻里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 餐厅 为 团体 提供 美食 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
一家 三星级 餐厅 ， 有 团体 空间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
哪些 餐厅 供应 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
附近 的 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 餐厅 的 价格比 泰国 咖啡馆 低	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 是 一些 供应 午餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪个 连锁 餐厅 在 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
餐厅 ， 至少 3 星级 和 儿童 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
价格 为 2 美元 标志 且 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
酒店 的 价格 等级 超过 2 美元 或 3 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 3 星级 餐厅 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 包含 提供 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
泰国 餐厅 ， 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪个 社区 拥有 最少 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
餐厅 供应 午餐 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
什么 餐厅 提供 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string kids ) ) )
哪些 餐厅 适合 团体 ， 也 适合 送餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string groups ) ) )
价格 为 2 或 3 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
有 外卖 的 餐厅 需要 预约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
泰国 餐厅 的 星级 评分 最高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪家 餐厅 有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string takeout ) ) )
星级 评分 最低 的 餐厅	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
带 送餐 服务 的 餐厅 有 什么 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
列出 提供 外卖 的 餐厅 的 美食 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
餐厅 有 两道菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
被 评为 3 星级 的 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
找到 一家 适合 团体 用餐 的 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 菜 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
外卖 餐厅 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
有 服务员 服务 的 餐厅 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
什么 餐厅 提供 送货 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string reserve ) ) )
餐厅 有 户外 座位 ， 并 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string waiter ) ) )
泰国 或 意大利 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
有 外卖 的 餐厅 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 最多 有 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
找 一家 比 泰国 咖啡馆 少 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
泰国 咖啡馆 在 哪个 街区	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
最低 价格 为 2 美元 标志 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 餐厅 提供 午餐 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 不仅 供应 午餐 ， 还 提供 送餐 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 设有 户外 座位 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
带 外卖 的 餐厅 ， 对 孩子 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
什么 好 的 团体 餐厅 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
找 一家 适合 团体 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 接受 信用卡 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
中 城西区 也 交付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
哪些 餐厅 有 户外 用餐 区 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
餐厅 的 菜肴 是 泰国 咖啡馆 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
餐厅 ， 其 菜肴 是 泰国菜 ， 其 菜肴 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 需要 预订 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
餐厅 价格 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
所有 市中心 西餐厅 的 美食 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 泰国 餐馆 对 孩子 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
哪些 餐厅 提供 午餐 并 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
餐厅 有 多种 美食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
没有 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
有 交付 的 餐厅 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string groups ) ) )
泰国 咖啡馆 的 美食 是 什么 ？	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) )
餐厅 有 送货 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 团体 餐厅 采取 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
找到 一家 餐厅 ， 对于 价格 为 2 美元 的 团体 有用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string groups ) ) )
什么 餐厅 提供 交付 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string delivery ) ) )
餐厅 数量 最少 的 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 市中心 西餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 提供 ， 适合 大型 聚会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
位于 市中心 西区 的 餐厅 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 社区 有 餐厅 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 是 一些 接受 信用卡 的 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
餐厅 有 2 或 3 美元 的 标志 价格 评级	( call SW.listValue ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) )
价格 在 2 美元 以上 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 餐厅 位于 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 是 餐厅 的 餐点 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
什么 餐厅 有 两种 不同 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
泰国 餐厅 的 星级 评分 为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 提供 并 设有 户外 休息区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string outdoor ) ) )
这家 餐厅 的 星级 评分 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
什么 餐厅 在 菜单 上 至少 有 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
泰国 餐厅 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
什么 餐厅 提供 户外 座位 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string outdoor ) ) )
一个 中等 价格 的 送 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string delivery ) ) )
位于 市中心 西区 的 餐厅 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
在 附近 的 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 的 星级 与 泰国 咖啡馆 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 有 户外 座位 ， 团体 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string outdoor ) ) )
哪些 社区 拥有 最多 3 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
什么 餐厅 提供 送货 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 评价 最 贵	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
什么 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
餐厅 与 交付 具有 2 美元 的 标志 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
该 地区 拥有 最 多 位置 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
什么 是 泰国 咖啡馆 的 星级 评分	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
餐厅 不到 一餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 评分 为 3 星级 ， 其 美食 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 提供 午餐 ， 可以 提供	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
供应 泰式 餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
一个 三星级 的 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
我 可以 在 哪家 餐厅 预订 并 从中 获取 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string reserve ) ) )
有 30 到 40 条 评论 的 餐厅	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
餐厅 不 超过 两种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
有 外卖 的 餐馆 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
有 外卖 的 餐厅 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string outdoor ) ) )
菜肴 的 美食 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
泰国 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 泰国 餐馆 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪些 泰国 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
泰国 餐厅 ， 可 选 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
哪家 酒店 吸引 孩子 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
餐厅 ， 信用卡 和 交付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string delivery ) ) )
哪些 泰国 餐厅 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
预订 的 餐厅 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string outdoor ) ) )
提供 外卖 的 餐厅 ， 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
哪家 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string credit ) ) )
有 外卖 和 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
哪家 餐厅 有 服务员 和 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
价格 为 2 的 家庭 友好 型 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
什么 餐厅 适合 团体 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
什么样 的 美食 至少 有 两家 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
西部 市中心 的 餐厅 评为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 有 户外 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) )
餐厅 供应 午餐 和 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
泰国 咖啡馆 的 价格 评级	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
什么 餐厅 适合 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
适合 儿童 口味 的 酒店 ， 并 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
哪些 餐厅 的 价格 等级 为 两 美元 符号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 社区 至少 包含 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
在 大多数 社区 中 找到 哪家 连锁 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
餐厅 设有 户外 用餐 区 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string outdoor ) ) )
外卖 的 餐厅 适合 举办 大型 派对	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
什么 餐厅 需要 团体 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
泰国 咖啡馆 ， 供应 比萨 店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
比 泰国 咖啡馆 便宜 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 餐馆 不 在 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
一个 有 两家 餐馆 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
附近 有 哪些 街区 是 最 多 餐厅 的 所在地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
是 有 交货 的 餐厅 的 附近 的 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
什么 餐厅 需要 预订 ， 并 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
市中心 西餐厅 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪些 餐厅 至少 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
西部 中 城 哪家 餐厅 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
西区 中心 的 哪家 餐厅 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 餐厅 被 评为 3 或 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
哪些 社区 都 有 适合 大型 聚会 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
什么 餐厅 有 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 与 泰国 咖啡馆 相同 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
接受 预订 并 提供 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
什么 餐厅 有 外卖 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
你 可以 在 餐厅 吃点 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
餐厅 拥有 最 多 选择	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
西郊 中心 的 餐馆 是 哪个 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
餐厅 提供 午餐 ， 并 有 三星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 评为 3 星级 ， 2 美元 符号 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 需要 预订 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
什么 泰国 餐厅 有 送货	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
哪个 街区 的 餐馆 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 采取 信用卡 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
西区 中心 的 哪家 餐厅 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
什么 餐厅 没有 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
附近 是 市中心 西区 ， 有 送货 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
一家 提供 午餐 和 送货 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
哪家 餐厅 位于 市中心 西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 一个 很 好 的 儿童 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) )
按 餐厅 类型 列出 供应 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 的 星级 评分 最低	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
3 至 5 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 非常 友好 ， 设有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
什么 餐厅 的 评级 低于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
餐厅 提供 信用卡 并 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
找到 所有 预订 餐厅 的 食物 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
什么 餐厅 外卖 和 午餐 菜单	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
一个 外卖 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) )
外卖 的 餐厅 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
哪些 餐厅 供应 两餐 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
西部 市中心 的 哪些 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
列出 所有 提供 午餐 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 供应 午餐 ， 其 星级 评分 为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
是 供应 午餐 的 餐厅 的 附近 的 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
3 星级 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string credit ) ) )
什么 邻里 是 泰国 咖啡馆 或 比萨 店 juno   in	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
爱丽丝 开始 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 不 超过 员工 爱丽丝 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
自 2004 年 以来 谁 是 爱丽丝 的 雇主	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
什么 城市 有 一个 至少 180 厘米 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 约会 之日 或 之后 出生 的 人 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
找到 2004 年 出生 的 所有 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
最后 一天 在 爱丽丝 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 2004 年 之前 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
员工 开始 约会 的 时间 与 alice 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 最后 一天 不早 于 爱丽丝 的 第一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 她 还是 学生 的 结束 日期	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )
谁 是 开始 约会 的 学生 的 朋友 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 开始 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 出生 后 开始 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 结束 日期 是 在 alice 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 麦肯锡 或谷歌 工作 的 人	( call SW.listValue ( call SW.concat en.company.mckinsey en.company.google ) )
哪个 城市 至少 有 两个 人 出生 在	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 我 在 2004 年 之前 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 日期 不是 2004 年 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 加入 棕色 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )
找到 开始 日期 晚于 2004 年 的 出生地 城市 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 且 与 爱丽丝 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 2004 年 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 毕业生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 结束 之前 或 之 时 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 城市 的 员工 ， 其 结束 日期 不是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
和 爱丽丝 一样 出生 在 同一个 城市 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
为 不到 两个 雇主 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 艾丽斯 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
谁 有 两个 以上 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
没有 在 2004 年 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最后 一天 在 2004 年 或 之后 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
所有人 目前 在线	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) )
性别 不到 三人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 人 是 180 厘米 高 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
学生 的 开学 日期 与 学生 爱丽丝 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 并 在 2004 年 后 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是不是 软件 工程师 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 出生 的 那些 没有 停止 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 是 朋友 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
在 2004 年 或 2010 年 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪名 员工 早于 2004 年 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 开始 工作 的 员工 的 所有 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 辞职 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 晚于 alice 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 性别 是 最 多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
出 生于 180 厘米 高 的 人 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
说出 在 爱丽丝 出生 前 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 没有 开始 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 开始 上学	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )
找到 学生 在 爱丽丝 的 最后 一天 或 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 爱丽丝 毕业 之前 就 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
列出 2005 年 之前 辞职 的 人 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 的 结束 日期 是 2004 年 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 员工 与 爱丽丝 有 同样 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 开始 日期 至少 与 员工 alice 的 结束 日期 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 工作 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 或 之前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 关系 状态 ， 其 开始 日期 不是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 至少 为 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 最后 一天 是 在 爱丽丝 的 最后 一天 之前 或 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 学生 关系 状态 谁 早于 2004 年 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 没有 在 2004 年 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
与 朋友 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 毕业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
找到 目前 在线 的 所有 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
雇员 最后 被 雇用 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在线 男性 会员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
学生 在 2004 年 或 2010 年 之前 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 2004 年 出生 的 人 称为 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
是 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
关系 状态 最少 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
员工 的 开始 日期 与 爱丽丝 的 结束 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
目前 在线 人员 的 关系 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 与 爱丽丝 的 出生日期 同时 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 人 是 2004 年 之前 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
登录 的 人 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )
什么 是 员工 关系 状态 谁 在 2004 年 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 180 厘米 高 的 人 都 学习 过 计算机科学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
那些 去过 棕色 大学 并且 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
从 2004 年 及 以后 开始 找到 学生 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 我 没有 上 过 棕色 大学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 在 2004 年 毕业 时 做 了 什么 研究	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
与 爱丽丝 同日 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 毕业 之前 过生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
与 2004 年 及 之后 加入 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 辞职 后 被 雇用 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之后 受雇 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 之后 或 2010 年 之后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 爱丽丝 的 第一天 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 她 2004 年 离开 的 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
什么 性别 是 在线 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 我 在 爱丽丝 开始 前 离开 学校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除了 计算机科学 之外 ， 任何 领域 的 学生 都 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 在 爱丽丝 之前 或 同期 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 不迟于 爱丽丝 的 毕业典礼 那天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 2004 年 或 之前 或 2010 年 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 工作 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 爱丽丝 停止 上学 或 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 结束 日期 晚于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 人 在 2004 年 出生 后 停止 工作 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 ， 哪个 城市 是 员工 的 发源地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 开始 和 结束 工作 日期 是 什么 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
mckinsey 未 聘用 的 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 的 职称 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 学习 计算机科学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
至少 有 两个 人有 什么 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学生 将 于 2004 年 之后 开课 ， 不迟于 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 的 关系 状态 与 爱丽丝 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
哪个 男人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
没有 受雇 于 麦肯锡 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 2004 年 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 人 是 与 2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 在 2004 年 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
非 棕色 大学 的 大学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 是 朋友 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
2004 年 出生 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 们 在 同一 年 完成 了 学校 的 爱丽丝 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 之后 完成 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 与 员工 的 朋友 ， 他们 不迟于 2004 年 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 大于 2004 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 开始 上学 的 那天 或 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 至少 有 2 所 大学 要 去	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 人 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 2004 年 或 之后 开始 工作 的 人 的 关系 状况 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 之后 开始 的 员工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 完成 之前 或 之 时 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之后 开始 上学 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
离开 爱丽丝 的 人员 加入	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 在 爱丽丝 结束 日期 之前 或 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 员工 关系 状态 谁 开始 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 结束 日期 不 超过 学生 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 之前 开始 上学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 艾利斯 的 生日 前 离开 的 员工 很 好	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 离开 公司 不早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 与 2004 年 没有 开始 的 人 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 高度 为 180 厘米 的 人 的 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
爱丽丝 退学 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 活着 当天 或 之前 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 爱丽丝 结束 日期 或 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 去 棕色 大学 或 ucla	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 第一个 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 开始 日期 不晚 于 爱丽丝 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 哪个 城市 是不是 软件 工程师 的 员工	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 出生地 未 在 2004 年 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 或 之后 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那个 学生 和 爱丽丝 同一天 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 毕业 那天 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 们 在 爱丽丝 的 生日 那天 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 哪些 朋友 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪些 人 是 爱丽丝 的 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
这个 学生 与 爱丽丝 的 生日 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 没有 毕业 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开学 日期 在 2004 年 之前 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我们 从 2004 年 开始 的 新 员工 的 发源地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 在 2004 年 后 停止 工作 ， 并 与 我 有 联系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 180 厘米 且 出生日期 为 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 与 爱丽丝 成为 朋友 并且 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找 一个 在 爱丽丝 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
员工 的 开始 日期 是 2004 年 还是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
诞生 城市 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
当 爱丽丝 辞掉 工作 时 ， 哪位 员工 就 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 关系 状况 是 什么 ， 其 最后 一天 不早 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 为 2004 年 的 所有 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 2010 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 所有 高度 为 180 厘米 的 人 的 研究 领域	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
与 爱丽丝 或 鲍勃有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
在 艾丽斯 当天 或 之前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 约会 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
什么 员工 不是 软件 工程师	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 有 一个 纽约 的 出生地 ， 他们 也 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
与 爱丽丝 不是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string ! = ) en.person.alice ) )
找到 2004 年 之前 开始 上学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 有 180 厘米 的 高度 和 计算机科学 的 研究 领域	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
什么 性别 是 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
毕业典礼 的 学生 不会 比 爱丽丝 开始 的 那样 早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 的 发源地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
将 员工 出生 的 城市 命名 为 不 迟于 2004 年 开始 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 不上 棕色 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 2004 年 之前 或 之前 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 是 2004 年 或 以后 ， 谁 是 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 出生 在 同一个 城市 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
找到 最后 一天 是 2004 年 或 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 完成学业 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 同一天 或 爱丽丝 开始 上学 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 2004 年 以后 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 哪些 朋友 是 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
列出 所有 在 爱丽丝 之前 退出 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 学生 的 关系 状态 ， 开始 日期 晚于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
只有 一个 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
查找 2004 年 及 之前 开始 的 学生 的 所有 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 至少 有 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
员工 在 2004 年 之前 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 开始 上学 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 一个 研究 领域 是 计算机科学 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
和 爱丽丝 的 朋友 一样 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
爱丽丝 开始 工作 后 ， 员工 被 解雇 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人口 来自 的 城市 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
找到 2004 年 没有 入学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 毕业 不迟于 爱丽丝 的 最后 一天 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 工作 后 结束 学业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 员工 在 2004 年 或 2010 年 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2010 年 或 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 辞职 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 与 爱丽丝 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
2004 年 没有 入学 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 的 出生 城市 ， 开始 日期 晚于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 先 退出	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 一个 出生 在 纽约 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
2004 年 之前 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 与 爱丽丝 有 相同 出生地 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
什么 学生 只有 两个 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 最后 一天 工作 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
什么 是 不 学习 计算机科学 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 不是 爱丽丝 出生日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 在 2004 年 或 之后 停学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 停止 上学 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 属于 爱丽丝 的 朋友 的 单身 状态	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
与 学生 成为 朋友 的 人 在 2004 年 没有 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 人 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
什么 是不是 棕色 大学生 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 alice 的 朋友 ， 他 登录 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
离开 爱丽丝 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
自 2004 年 以来 一直 在 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 在 2004 年 离开 公司 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 至 2010 年间 毕业 的 所有 学生 的 姓名	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 在 2004 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 是 与 2004 年 之前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 城市 是 2004 年 之前 结束 学业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
在 爱丽丝 离开 之前 或 之前 加入 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 最后 一天 不 在 2004 年 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 时候 爱丽丝 开始 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
在 大学 学习 计算机科学 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
在 2004 年 或 之后 退出 的 员工 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 2004 年 入学 的 出生地 学生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 最近 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 活着 共享 工作 场所 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 是 哪 两所 大学 的 一部分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 名叫 爱丽丝 的 人 ， 他们 在 2004 年 辞职	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_end_date ) ) )
学生 最早 的 开学 日期 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 非 麦肯锡 员工 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人口 最少 的 城市	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
雇主 不是 麦肯锡 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 所有 与 alice 或 bob 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
2004 年 之前 离职 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出 生于 2004 年 ， 是 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 是 爱丽丝 的 朋友 ， 是 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
那天 开始 工作 的 人 爱丽丝 辞去 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 拥有 最少 的 朋友	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 开始 工作 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 不是 从 2004 年 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 离开 她 的 工作 后 ， 哪些 人 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
什么 是 性别 ， 最 多 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 单身 人士 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
找到 员工 在 爱丽丝 的 出生日期 或 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不是 2004 年 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 和 爱丽丝 在 同一个 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 朋友 在 2004 年 或 之后 开始 上 大学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 朋友 ， 其 开始 日期 是 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 爱丽丝 不是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string ! = ) en.person.alice ) )
2004 年 或 之前 同期 开学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 不迟于 2004 年 结束 日期 的 员工 及其 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 开始 上学 后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 或 之前 开始 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 高 ， 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
任何 一个 单身 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 我 所有 同时 开始 或 在 爱丽丝 开始 后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 180 厘米 高 的 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 麦肯锡 或谷歌 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪名 员工 在 2004 年 后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 之前 或 之前 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 最 关系 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以后 开始 的 员工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 的 员工 的 开始 日期 至少 是 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 开始 日期 早 于 学生 爱丽丝 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
同一天 出生 的 人 爱丽丝 开始 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) )
找到 2004 年 或 更 长时间 开始 日期 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 一个 大学 不是 棕色 大学 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
关于 2004 年 之前 开始 工作 的 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 2004 年 之后 的 最后 一天 找到 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 有 两个 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
是 麦肯锡 聘请 的 爱丽丝	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )
找到 结束 日期 与 学生 alice 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 上学 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 朋友 ， 大学 不是 棕色 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 朋友 在 2004 年 停止 了 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 与 2004 年 没有 开始 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 结束 日期 晚于 员工 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 参加 布朗 大学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
少于 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
不 在 布朗 大学 学习 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开学 日期 不是 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开始 日期 的 学生 不是 在 学生 爱丽丝 的 结束 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是 单身 还是 已婚 的 人	( call SW.listValue ( call SW.concat en.relationship_status.single en.relationship_status.married ) )
什么 时候 爱丽丝 停止 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
找到 每个 有 两性 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
什么 是 爱丽丝 的 2004 年 结束 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_end_date ) ) )
谁 是 员工 ， 其 开始 日期 不是 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 学生 的 结束 日期 是 在 学生 爱丽丝 的 开始 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
不 作为 软件 工程师 工作 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 开始 做 员工	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) )
谁 比 爱丽丝 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
2004 年 之前 开始 上学 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那里 有 多少 职位	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ) )
哪个 学生 不是 来自 棕色 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 为 麦肯锡 以外 的 人 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 最后 一天 之前 或 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 上学 的 最后 一天 或 之后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
朋友 不到 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 与 学生 爱丽丝 相同 的 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 在 爱丽丝 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 结束 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那天 出生 的 人 爱丽丝 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )
2004 年 作为 结束 日期 出生 的 学生 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 人 是 2004 年 来到 这里 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 在 2004 年 之前 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找 我 的 学生 的 开始 日期 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 在 爱丽丝 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪名 员工 不迟于 2004 年 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 开始 日期 晚于 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 不早 于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 有 多 高	( call SW.listValue ( call SW.getProperty en.person.alice ( string height ) ) )
命名 在 alice 退出 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 哪些 朋友 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
结束 日期 不 在 2004 年 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 与 学生 alice 或 更 高 版本 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 不 超过 两个 专业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 之前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
关系 状态 至少 为 两人 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 学生 不迟于 2004 年 或 2010 年 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 所有 不 在 关系 中 并 在 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 少于 两个 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
纽约 的 哪些 城市 是 出 生于 此 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
从 2004 年 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 作为 约会 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 入学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
职称 不是 软件 工程师 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 朋友 的 人 目前 在线	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 我 在 2004 年 或 2010 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
不 学习 计算机科学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 员工 的 开始 日期 早 于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人比 爱丽丝 更 早 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
2004 年 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪些 学生 在 爱丽丝 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 纽约 出生 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
谁 是 有 联系 的 朋友 谁 在 2004 年 之前 开始 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 早于 2004 年 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 开始 约会 的 时间 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最快 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 超过 两个 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除了 棕色 大学 以外 任何 地方 学习 或 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 的 朋友 已 登录	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
任何 登录 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string logged_in ) ) )
与 2004 年 之前 雇用 的 员工 的 朋友 是 什么 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 之前 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 以外 的 开始 日期 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
登录 的 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
列出 2004 年 之前 完成学业 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学习 领域 最少 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
员工 的 最后 一天 是 爱丽丝 的 最后 一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 员工 alice 共享 同一 雇主 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 不 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
男性 ， 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 和 alice 同一天 开始 的 所有 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 开始 日期 为 2004 年 或 之后 的 学生 的 朋友 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 登录 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
什么 人 少于 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
非 软件 工程师 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 爱丽丝 的 朋友 ， 也 有 单身 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 麦肯锡 工作 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
哪位 软件 工程师 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
那些 学生 在 爱丽丝 开始 她 的 新 工作 后 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 登录 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 学生 主修 计算机科学 或 历史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 爱丽丝 之后 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 先 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 与 2004 年 同期 或 之后 完成 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 的 学生 ， 其 开学 日期 至少 是 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
性别 只有 一个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 最多 有 两个 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
每个 人 的 平均 身高 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
2004 年 以外 的 最后 一天 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 开始 最新	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 工作 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 为 2004 年 或 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 结束 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 或 之后 开始 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 之前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是非 软件 工程师 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
除了 纽约 以外 的 地方 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
谁 是 180 厘米 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 结束 日期 是 学生 爱丽丝 或 更 晚 的 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 或 之前 开始 的 学生 的 出生地 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 比 爱丽丝 的 出生日期 更 早 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
谁 在 学生 爱丽丝 之后 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 结束 日期 大于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两个 或 更少 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )
什么 人 出生 在 纽约 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string friend ) ( string = ) en.person.alice ) )
一名 工人 是 软件 工程师 或 项目经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不能 解释	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
雇员 不 超过 两名 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 与 爱丽丝 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 爱丽丝 的 出生日期 或 之后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 辞职 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是非 软件 工程师 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 有 一个 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 是 2004 年 或 更 高 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 当前 在线 人员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 不早 于 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 退出 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 没有 入学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
他于 2004 年出 生于 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找 我 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 180 厘米 高 的 人 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 有 一两个 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
只有 一个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 员工 的 起步 不 超过 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 最多 在 艾 莉斯 的 出生日期 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
作为 大多数 人 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
有 多少 性别	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )
谁 是 软件 工程师 或 项目经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 2004 年 没有 入学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 与 爱丽丝 同时 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 开始 同时 或 在 爱丽丝 之后 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 加入 她 的 学习 之前 ， 找到 那些 辞掉 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 结束 日期 是 2004 年 或 以后 ， 谁 是 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
以 软件 工程师 或 经理 身份 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 2004 年 和 2010 年 结束 了 学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
到 2004 年 毕业 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 同一天 或 以后 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 最长 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
无论是 爱丽丝 还是 鲍勃	( call SW.listValue ( call SW.concat en.person.alice en.person.bob ) )
哪个 员工 与 alice 在 同一天 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
目前 登录 的 人 ， 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 爱丽丝 退出 之前 ， 学生 开始 做 什么 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 结束 日期 与 员工 爱丽丝 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 ， 不少 于 一个 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 开始 日期 是 2004 年 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 学生 的 开始 日期 与 员工 alice 的 结束 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 不 超过 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 男性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 员工 在 爱丽丝 的 最后 一天 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 不 在 员工 爱丽丝 的 开始 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 早于 2004 年 的 学生 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 员工 不是 软件 工程师 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 大于 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 一个 人 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 是 变性人 的 识别 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
除了 2004 年 以外 加入 多年 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 至 2010 年间 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 在线 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
什么 是 2004 年 没有 毕业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 入学 日期 不迟于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之前 完成学业 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 性别 在 2004 年 没有 完成	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 学生 与 爱丽丝 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 2003 年 或 之前 开始 的 学生 的 关系 状况 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 在 纽约 或 北京 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
什么 关系 状态 由 最少 人数 列出	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
人们 在 网上 出生 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
那些 在 同一天 停止 工作 的 人 爱丽丝 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 结束 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
查找 开始 日期 不晚 于 2004 年 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 男性 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
开始 日期 在 学生 爱丽丝 开始 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
这个 人 是 单身 还是 已婚	( call SW.listValue ( call SW.concat en.relationship_status.single en.relationship_status.married ) )
与 alice 职位 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 与 爱丽丝 同时 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 的 结束 日期 早 于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 或 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 结束 日期 少于 2004 年 的 所有 员工 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最 多 两份 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 在 爱丽丝 工作 的 最后 一天 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 为 最少 的 雇主 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 我 2004 年 之前 毕业 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 不 超过 员工 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
男性 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
谁 是 不 为 mckinsey 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 开始 日期 不晚 于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 学生 的 结束 日期 与 员工 alice 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 人 的 关系 状态 为 单身	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
员工 最后 一天 不早 于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 上学 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 早 于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 或 之前 开始 上学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 ， 参加 棕色 大学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
爱丽丝 就业 的 开始 日期 于 2004 年 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
找出 mckinsey 未 聘用 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
找到 最后 一天 在 爱丽丝 生日 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 的 出生日期 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 最早 开始 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 在 2004 年 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 公司 雇用 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 所有 在 爱丽丝 开始 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
与 工作人员 不是 软件 工程师 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 学习 计算机科学 或 历史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 不 学习 计算机科学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
高度 为 180 厘米 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
2003 年 后 加入 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 研究 开始 日期 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
高于 200 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
出生 在 纽约 并且 目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string logged_in ) ) )
告诉 我 所有 将 在 2004 年 或 2010 年 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 2004 年 及 以后 找到 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之后 停止 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
以 爱丽丝 开始 或 之后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 晚于 2004 年 的 员工 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 爱丽丝 和 鲍勃 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
哪些 人 是 与 2004 年 以前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
没有 在 2004 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 个人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
我 的 朋友 在 180 厘米 大学 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 爱丽丝 和 鲍勃 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
那些 在 2004 年 或 2010 年 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 开始 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 员工 有 相同 或 更 大 的 员工 alice 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 公司 的 电话号码	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ) )
找到 一个 在 两个 或 两个 以下 工作岗位 上 工作 过 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生地 与 180 厘米 高 的 人 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
哪个 学生 与 2004 年 以后 开始 的 学生 有 同样 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 爱丽丝 开始 日期 后 员工 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 的 性别	( call SW.listValue ( call SW.getProperty en.person.alice ( string gender ) ) )
什么 是 2004 年 以后 开始 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 与 爱丽丝 的 朋友 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
谁 出生 在 两个 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
与 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
什么 时候 是 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 开始 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 身高 180 厘米 的 大学 去 哪儿	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 不 学习 计算机科学 领域 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 员工 爱丽丝 开始 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 纽约 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
那些 不是 软件 工程师 出生 的 工作人员 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 爱丽丝 的 最后 一个 日期 是 棕色 大学 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
工作 职位 最少 的 工作人员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 加入 工作 之前 完成 教育 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 第一个 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 雇主 与 雇主 不同 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 爱丽丝 也 是 朋友 ， 也 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 性别 有 最少 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
人们 的 身高 是 180 厘米 ， 与 爱丽丝 有着 相同 的 关系	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
2004 年 或 之前 开始 工作 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 未 在 2004 年 辞职 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 一个 人 的 学习 领域 不是 计算机科学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 学生 在 爱丽丝 开始 后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是 爱丽丝 的 职称 软件 工程师	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string job_title ) ) )
单身 且 目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
2005 年 之前 离职 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 的 人 ， 他们 是 爱丽丝 的 性别	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
两个 或 两个 以下 的 人 的 关系 状况	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
和 爱丽丝 一起 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最后 一天 也 是 爱丽丝 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之前 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 最 开始 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 朋友 已 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
身高 180 厘米 的 单打	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
那些 在 2004 年 之前 或 2010 年 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 纽约 出生 的 人 ， 目前 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪些 员工 在 2004 年 或 2010 年 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 拥有 2004 年 以后 的 开始 日期 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 性别 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string gender ) ) )
员工 最后 一天 不迟于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 爱丽丝 的 生日 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
首先 辞去 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 结束 日期 之后 ， 学生 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 不是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
在 2004 年 之前 或 2010 年 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 在 同一天 或 在 爱丽丝 之后 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 为 2004 或 更 高 版本 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 与 员工 爱丽丝 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 一个 人 的 身高	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
谁 拥有 最少 的 朋友	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 我 所有 的 员工 ， 开始 日期 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 结束 日期 为 2004 年 或 之后 的 学生 的 朋友 是 什么 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
至少 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
出生 城市 的 员工 ， 其 职称 不是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
和 爱丽丝 一样 生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
人们 登录 的 是 什么 ， 他们 是 谁 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
员工 的 开始 日期 是 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 ， 艾丽斯 从 哪 所 大学毕业	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
他们 的 关系 状态 是 独特 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 2004 年 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 三个 或 更 多 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
这个 学生 几乎 与 爱丽丝 同时 完成学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 以外 的 一年 开始 学习 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 不 学习 计算机科学 领域 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 没有 毕业 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 最早 完成 了 学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结局 不 超过 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 为 2004 年 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 所有 将 在 爱丽丝 的 生日 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 180 厘米 高 的 人 称号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 加入 之前 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 的 最后 一次 不早 于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 2004 年 或 2010 年 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 2004 年 未 退出 的 员工 的 朋友 命名 为	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 测量 180 厘米 ， 并 在 2004 年 退出	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 我 在 2004 年 或 2010 年 开始 的 所有 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 与 学生 在 2004 年 之前 开始 上学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 之前 加入 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这名 员工 的 结束 日期 与 alice 的 结尾 日期 几乎 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 属于 计算机科学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 开始 ， 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 或 2010 年 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 有 180 厘米 高 的 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
2004 年 以后 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一名 员工 于 2004 年 或 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 的 出生日期 或 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 的 单一 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 在 纽约 出生 的 人 ， 他们 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string friend ) ( string = ) en.person.alice ) )
找到 我 所有 在 纽约 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
说出 与 爱丽丝 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 不 在 员工 alice 结束 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 最后 一天 工作 之前 或 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
宣称 在 2004 年 或 之后 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 早于 2004 年 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 那天 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 开始 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
关于 学生 在 2004 年 之前 离开 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
说出 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 开始 日期 晚于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 停止 上学 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 没有 在 2004 年 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 ， 是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
在 爱丽丝 的 生日 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 出生 之前 没有 停止 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 雇员 的 朋友 谁 是 结束 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 是 在 爱丽丝 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 及 之后 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
城市 号码 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
哪些 人 是 2004 年 之后 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 拥有 最多 的 朋友	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 最后 一天 与 爱丽丝 的 出生日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 朋友 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 员工 在 爱丽丝 的 生日 那天 结束 了 他们 的 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
告诉 我 学生 同时 或 在 爱丽丝 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一名 身高 180 厘米 ， 于 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 那些 在 2004 年 毕业 但 没有 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 员工 的 朋友 是 谁 ， 其 开始 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 有 最 多 2 个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 男性 和 他们 的 朋友 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 没有 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 后 完成 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开始 日期 不 在 学生 爱丽丝 开始 日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 2004 年 之前 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 状态 是 不到 两个 人 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学生 在 2004 年 或 2010 年 之后 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 何时 开始 学习 计算机科学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
同一天 开始 上学 的 学生 阿 丽斯 辞去 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结束 日期 早于 alice	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 超过 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以外 的 人 加入 工作 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 爱丽丝 开始 上学 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
什么 是 人数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
180 厘米 高 ， 与 爱丽丝 处于 同 一种 关系 的 情况	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
员工 爱丽丝 之后 开始 了 哪个 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 任何 性别 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
谁 是 2004 年 之前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 的 学习 领域 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一名 2004 年 或 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 ， 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
与 alice 有着 相同 关系 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
2004 年 之后 与 员工 离开 公司 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 在 爱丽丝 的 出生日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之后 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 毕业 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 之后 开始 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 为 2004 年 或 之后 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
将 2004 年 之前 开始 的 学生 的 朋友 命名 为	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 开始 日期 少于 2004 年 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 没有 在 2004 年 开始 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 180 厘米 的 人于 2004 年 加入	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 学生 从 alice 的 最后 一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 的 职称 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
爱丽丝 上学 第一天 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
爱丽丝 是 男性 还是 女性	( call SW.listValue ( call SW.getProperty en.person.alice ( string gender ) ) )
找到 所有 在 2004 年 完成学业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 有 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
alice 什么 时候 停止 作为 软件 工程师 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
180 厘米 高 的 人 与 艾丽斯 分享 生日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
谁 有 在线 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
什么 人 只有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 之后 出生 的 学生 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
最少 人 的 出生地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 我 与 180 厘米 高 的 人 有 相同 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
大多数 人 的 性别 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
查找 没有 软件 工程师 职称 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 毕业生 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 性别 超过 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
从 2004 年 或 2010 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 雇主 的 雇员 人数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 2004 年 或 2010 年 后 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 出生地 是 纽约 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 我 所有人 都 高于 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
出生 城市 的 员工 ， 其 结束 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不是 2004 年 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 最 老 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
来自 纽约 的 人 ， 他们 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
学生 的 结束 日期 低于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不迟于 2004 年 或 2010 年 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
男性 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 2004 年 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 城市 至少 有 两个 人 出生 在	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 180 厘米 高 的 爱丽丝 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
与 2004 年 之前 开始 工作 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 出 生于 2004 年 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
与 至少 在 2004 年 退休 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 所有 身高 180 厘米 ， 出 生于 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 的 学生 ， 开始 日期 是 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪个 员工 的 工作 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 学习 计算机科学 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 同一天 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 爱丽丝 开始 前 哪个 学生 停 了 下来	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 艾丽斯 的 出生日期 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 大于 2004 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 开始 日期 不 等于 2004 年 的 学生 的 朋友 是 什么 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
属于 爱丽丝 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
当 爱丽丝 停止 工作 时 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
没有 受雇 于 麦肯锡 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 不 超过 两个 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
单身 而且 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 一个 在 爱丽丝 开始 工作 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
与 alice 处于 同一 类型 的 关系 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
找到 在 爱丽丝 的 就业 结束 日期 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
找到 作为 员工 出生地 的 城市 ， 其 结束 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 在 学生 爱丽丝 之前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
到 2004 年 ， 学生 离职 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
两国人民 关系 的 现状 如何 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
最多 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 只 在 一所 大学 学习	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 性别 低于 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
找 一个 短于 200 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
找到 2004 年 或 2010 年 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 关系 状态 不到 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪 两个 人 都 出生 了	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 从 2004 年 开始 工作 的 最后 一天 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
说出 2004 年 之后 退出 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 何时 完成 计算机科学 的 学习	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
男性 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
哪些 人 是 爱丽丝 的 共同 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 2004 年 之前 与 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 第一天 或 之后 找到 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 于 2004 年 离职 的 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
员工 最后 一天 不迟于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 以 最 多 开始 的 学生 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 从 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 就业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
在 爱丽丝 就业 结束 时 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
哪些 员工 的 开始 日期 最近	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 的 朋友 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
最近 在 2004 年 找到 了 和 朋友 一起 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
发现 2004 年 出生 的 所有人 都 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
在 爱丽丝 之前 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
两个 或 两个 以下 的 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 结束 的 人 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 的 结束 日期 晚于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 的 学生 的 开始 日期 至少 是 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 停止 工作 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
除了 棕色 大学 之外 ， 哪个 人 是 去 某个 地方 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 最后 一天 是 2010 年 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找 我 单身 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
与 结束 日期 在 2004 年 之后 的 某人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一位 员工 的 朋友 ， 在 2004 年 之后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 之前 或 之前 完成 同步	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 身高 180 厘米 ， 现在 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
哪个 员工 的 开始 时间 不早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 的 朋友 ， 他们 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 只有 一两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
有 多少 人 在 那里	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以后 哪位 员工 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
180 厘米 高 的 爱丽丝 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 不 在 员工 爱丽丝 开始 日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 在 2004 年 或 2010 年 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 她 家乡 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
一个 员工 朋友 在 2004 年 没有 离开 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 在 她 的 软件 工程师 工作 的 老板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )
找到 一位 2010 年 后 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 2004 年 后 开始 日期 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 不迟于 2004 年 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 与 2004 年 之前 开始 的 员工 具有 相同 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 结束 日期 晚于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 成为 朋友 的 人 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
命名 不迟于 2004 年 开始 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 学校 结束 学校 后 结束 学业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 爱丽丝 离开 之前 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
找到 180 厘米 到 200 厘米 之间 的 人	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )
身高 180 厘米 的 人 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
180 厘米 或 200 厘米	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )
什么 是 男性 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪个 学生 比 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 2004 年 之前 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 多少 关系 状态	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ) )
什么 人 出生 在 纽约 和 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 2004 年 出生 的 人 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
一个 180 厘米 高 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 的 结束 日期 晚于 学生 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以后 开始 的 员工 的 发源地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 与 学生 爱丽丝 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 在 纽约 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找到 开始 日期 与 学生 爱丽丝 相同 或 更 大 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最后 一天 是 2004 年 或 之前 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 2004 年 出生 的 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
与 2004 年 之前 开始 上学 的 人 有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 学生 在 爱丽丝 出生 后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
关系 状态 与 2004 年 出生 的 人 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
出生 城市 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 最早 在 2004 年 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 开始 日期 不是 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 拥有 最多 的 朋友	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 最后 一天 不 在 2004 年 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 单身 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 爱丽丝 出生 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 爱丽丝 出生 后 辞职 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
哪个 学生 和 学生 爱丽丝 一起 去 同一 所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 没有 出生地 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string birthplace ) ) )
2004 年 的 哪一天 爱丽丝 开始 工作 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
2004 年 出生 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
2003 年 以后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 爱丽丝 出生 时 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
关于 2004 年 以后 加入 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 员工 的 结束 日期 晚于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 有 两种 性别 的 人 叫	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
结束 日期 与 员工 爱丽丝 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 以后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 在 员工 alice 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 就业 结束 日期 为 2004 年 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
出生 在 纽约 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 朋友 ， 开始 日期 是 2004 年 以后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 大于 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 结束 日期 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 研究 计算机科学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string field_of_study ) ) )
在 爱丽丝 开始 工作 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 的 关系 状态 不到 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
人生 日 是 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 的 朋友 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
将 于 2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
以 爱丽丝 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2005 年 之前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 与 男性 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 开始 日期 少于 学生 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 结束 日期 不 超过 2004 年 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 结束 日期 或 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 作为 软件 工程师 的 工作 结束 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
什么 是 不到 两个 人 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 人 是 与 2004 年 结束 日期 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
没有 受雇 于 麦肯锡 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 一个 2004 年 出生 的 人 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
与 2004 年 完成学业 的 人 有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 bob 或 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
什么 是 2004 年 开始 最多 的 学生 出生地 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
去过 大多数 大学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 是 软件 工程师 或 项目经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 180 厘米 高 的 人 ， 和 爱丽丝 一样 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
当天 加入 学习 爱丽丝 的 人 出生 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 不到 两所 大学 就读 过 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 上学 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 学习 领域 最多 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 的 身高 短于 180 至 200 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
从 2004 年 开始 ， 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
拥有 最 多 关系 状态 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string relationship_status ) ) )
找到 与 爱丽丝 成为 朋友 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
爱丽丝 开始 上学 后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那个 学生 开始 的 那天 爱丽丝 离开 了 她 的 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最高 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
两个 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
是 爱丽丝 的 职称 软件 工程师	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string job_title ) ) )
什么 是 不 超过 两个 人 的 出生 城市	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
结束 日期 不晚 于 2004 年 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在线 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
谁 出 生于 2004 年 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
当 爱丽丝 开始 工作 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 生日 之后 ， 哪位 员工 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 家伙 也 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 180 厘米 高 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 我 目前 在线 的 所有 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
找到 开始 日期 为 2004 年 或 以后 的 员工 及其 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 人有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 做 完后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 两个 或 更 多 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
名字 还 活着 或者 鲍勃 的 人	( call SW.listValue ( call SW.concat en.person.alice en.person.bob ) )
那些 在 2004 年 出生 后 开始 上学 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 朋友 ， 其 开始 日期 最多为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 在 爱丽丝 之前 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 的 生日 那天 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 学生 爱丽丝 相同 的 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 同一天 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
哪些 学生 在 2004 年 以外 退学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 的 人 和 与 爱丽丝 相同 的 出生地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
出生 城市 的 学生 ， 其 结束 日期 不是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
男性 和 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthplace ) ( string = ) en.city.new_york ) )
学生 的 朋友 ， 开始 日期 是 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 约会 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 朋友 们 声称 有 什么 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
谁 是 与 爱丽丝 成为 朋友 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
超过 两个 人 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
结束 日期 与 学生 爱丽丝 开始 日期 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 研究 了 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
什么 是 爱丽丝 的 诞生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
2004 年 之前 加入 的 学生 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 与 alice 同一个 城市 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
两个 人 的 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 的 朋友 ， 其 结束 日期 是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 出生 之前 或 之 时 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
谁 是 我 的 非 计算机科学 专业 的 一些 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 在 爱丽丝 开始 上学 之前 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之后 完成学业 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
学生 的 结束 日期 晚于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 开始 日期 与 员工 alice 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 公司 雇用 一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 人 与 大多数 人 的 关系 地位 相同	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
一个 学生 在 爱丽丝 开始 之后 或 之后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 180 厘米 高 的 所有人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
人们 有 两种 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
找到 2004 年 以外 的 最后 几天 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 开始 日期 是 员工 爱丽丝 开始 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 出生 前 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 开始 上学 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 没有 职称 软件 工程师	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
作为 软件 工程师 或 项目经理 的 人	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
在 2004 年 之前 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 在 爱丽丝 之后 出生 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 是 在 爱丽丝 的 出生日期 之后 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
单身 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
爱丽丝 研究 的 开始 日期 于 2004 年 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
与 2004 年 或 之前 开始 工作 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 那些 不是 计算机科学 的 学生 和 他们 的 朋友 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 开始 上学 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
找人 比 爱丽丝 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
2004 年 或 之前 离职 的 一名 工人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学习 计算机科学 或 历史 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 一个 不是 软件 工程师 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 朋友 的 朋友 是 2004 年 之前 开始 约会 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
我 网络 中 每个 人 的 总 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
什么 是 2004 年 或 之前 开始 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 有 同样 的 生日 和 开始 日期 的 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 以外 结束 日期 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这是 2004 年 完成 的 学生 爱丽丝 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
什么 是 职称 不是 软件 工程师 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 没有 开始 工作 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 在 2004 年 之前 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 开始 日期 不是 2004 年 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 人 在 棕色 大学 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
结束 日期 不 在 2004 年 之前 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 有 两个 以上 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string > ) ( number 2 ) ) )
说出 生于 纽约 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪个 学生 最近 离开 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 后 完成 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 和 爱丽丝 有 相同 的 出生日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
180 厘米 高 的 人 的 关系 状况 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
身高 180 厘米 ， 于 2004 年 退出 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
身高 180cm 的 人 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 结束 日期 早 于 学生 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
所有 单身 或 已婚 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.concat en.relationship_status.single en.relationship_status.married ) ) )
找到 我 所有 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
谁 是 爱丽丝 的 雇主	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )
找到 最老 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
在 爱丽丝 的 开始 日期 之后 找到 有 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 单身 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
那些 在 2004 年 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
一个 学生 在 爱丽丝 开始 的 同时 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 之前 或 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 朋友 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 爱丽丝 出生 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生 城市 的 学生 ， 其 开学 日期 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪 种 关系 状态 最多为 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
在 2004 年 之前 离开 公司 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 关系 状态 为 单身 且 总 高度 为 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
哪些 人 是 当前 登录 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
哪个 员工 拥有 最 先前 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
ucla 或 布朗 大学	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )
最后 一天 的 员工 是 在 2004 年 到 2010 年 之间	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
命名 在 与 员工 alice 相同 的 日期 退出 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
所有 180 厘米 高 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
那些 在 爱丽丝 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 以后 停学 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 完成 同期 或 爱丽丝 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 晚于 学生 爱丽丝 的 开课日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 或 期间 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 之前 开始 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 大多数 领域 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 从 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有人 不是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
开始 日期 比 alice 小 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最后 一天 找到 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 以后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 公司 雇用 一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 在 爱丽丝 结束 前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 之前 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 爱丽丝 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 之后 或 之后 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是否 有 不到 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 纽约 出生 的 人 是 单身 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
人们 从 2004 年 开始 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 出生 后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
上 大学 的 学生 时间 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
指出 一个 180 厘米 高 的 在线 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
爱丽丝 出生 时 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 离开 后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 与 爱丽丝 成为 朋友 的 人 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
与 爱丽丝 成为 朋友 并 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 在 爱丽丝 出生日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 出生 的 人 有 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
员工 有 一个 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 的 身高 至少 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 我 爱丽丝 的 所有 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
谁 在 2004 年 停止 工作 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
在 爱丽丝 开始 的 那天 ， 员工 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 结束 日期 是 在 alice 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 大于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 停止 的 学生 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 2004 年 之后 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 2004 年 以外 的 最后 一天 找到 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 职称 不是 软件 工程师 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 纽约 的 关系 中 出生 的 人 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
在 爱丽丝 之前 出生 的 人 开始 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
出生 的 员工 在 哪里 不 为 麦肯锡 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
关于 员工 的 关系 状态 是 什么 ， 结束 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找 一个 列出 2 个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
员工 的 结束 日期 早 于 员工 alice 结束 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 来自 纽约 并 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪位 软件 工程师 雇用 了 爱丽丝	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )
与 员工 有 朋友 的 人 ， 他们 的 最后 一天 是 在 2004 年 或 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
雇主 最少 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
有 朋友 的 人 最迟在 2004 年 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 正在 学习 计算机科学 或 历史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 以后 毕业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 的 最后 一天 与 爱丽丝 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 之后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有 朋友 的 人 不是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 员工 从 爱丽丝 的 第一天 或 更 晚 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 除了 布朗 去 另 一所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 哪些 朋友 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 我 在 爱丽丝 离开 之前 将 在 公司 开始 的 所有 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
目前 在线 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
什么 是 去 任何 大学 的 人 的 关系 状态 ， 但 棕色	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 学生 拥有 最多 的 专业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 结束 日期 不 超过 2004 年 的 朋友 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 在 纽约 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 所有 有 朋友 的 男性	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
谁 是 2004 年 以后 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 之后 加入 的 人 出生 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
除了 布朗 大学 以外 的 所有 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 单身 高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
2004 年 之前 加入 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 或 之后 退出 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之前 的 最后 一天 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 那天 开始 新 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 离职 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 爱丽丝 之前 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 最后 一天 是 最近 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
我 网络 中 所有人 的 平均 身高 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
以 2004 年 开始 但 在 2011 年 之前 开始 的 员工 命名	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 在 爱丽丝 的 出生日期 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 2004 年 开始 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 停止 工作 的 员工 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 不是 计算机科学 专业 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 停止 工作 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 为 2004 年 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
有 多少 个 字 段	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ) )
找到 与 alice 或 180   cm 高度 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
在 2004 年 或 之后 完成 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 学生 在 爱丽丝 结束 时 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 学生 在 2004 年 之前 有 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 朋友 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 或 2010 年 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 学生 分享 爱丽丝 的 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 毕业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 两个 或 更少 领域 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 2004 年 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 朋友 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 爱丽丝 的 生日 或 之后 找到 最后 几天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
alice 从 哪个 日期 开始 于 2004 年 完成	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
学生 开始 约会 的 时间 是 在 爱丽丝 的 结束 日期 之前 或 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
不迟于 爱丽丝 开学 日期 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 或 bob 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
开始 日期 不 在 学生 爱丽丝 结束 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之前 开始 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 员工 朋友 的 人 ， 其 结束 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 学生 与 2004 年 之前 的 最后 一天 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
来自 纽约 的 爱丽丝 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
员工 的 朋友 ， 其 结束 日期 是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 员工 的 朋友 ， 其 结束 日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 没有 停止 的 劳动 人民 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那天 停止 上学 的 人 爱丽丝 出生 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 180 厘米 的 人 的 职称	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 的 开始 日期 不晚 于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 了 爱丽丝 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 分享 生日 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
我 认识 所有 从 2004 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 开学 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 或 2010 学生 的 最终 结束 日期 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 时候 麦肯锡 员工 爱丽丝 开始 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
哪些 员工 的 职称 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 后 ， 哪位 员工 离职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 爱丽丝 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 早于 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 超过 两个 人 的 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 后 加入 学业 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 的 出生地	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )
在 爱丽丝 开始 之前 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 不 超过 两个 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最 不 常见 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 所有 男单 曲	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
哪些 学生 在 艾丽斯 的 毕业典礼 那天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日期 不早 于 2004 年 的 员工 的 出生 城市 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 不 迟于 2004 年 开始 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 早于 2004 年 或 2010 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
为 mckinsey 或谷歌 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 2004 年 之前 完成学业 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 多种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
谁 是 身高 180 厘米 的 人 的 雇主	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 2004 年 或 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 停学 的 时候 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 没有 去过 布朗 大学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 180 厘米 ， 与 爱丽丝 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
谁 是 爱丽丝 的 朋友 ， 来自 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪个 学生 不迟于 爱丽丝 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
命名 一名 员工 ， 其 结束 日期 与 alice 的 结束 日期 类似	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人有 爱丽丝 的 出生日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
找到 爱丽丝 最后 一天 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
两个 人 的 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 前一天 或 与 爱丽丝 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 没有 上 过 棕色 大学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
查找 开始 日期 与 员工 alice 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 不到 学习 计算机科学 领域 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 城市 的 学生 ， 其 学习 领域 不是 计算机科学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出 生于 2004 年 或 2010 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
有 朋友 的 人 ， 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
员工 在 爱丽丝 结束 前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 加入 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 爱丽丝 的 毕业 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_end_date ) ) )
结束 日期 是 2004 年 之前 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 的 学生 ， 其 结束 日期 不晚 于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 之后 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 关系 状态 意味着 不到 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 学生 在 2004 年 或 2010 年 或 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 之前 开始 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 或 之后 停学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 出生 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
拥有 最新 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之后 停止 工作 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 一个 180 厘米 的 人 ， 他 在 2004 年 开始 工作	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 是 谁 的 朋友 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
与 开始 日期 不晚 于 2004 年 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 180 厘米 ， 与 爱丽丝 出生 在 同一个 城市	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
在 爱丽丝 之前 开始 的 学生 的 开始 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 完成学业 之前 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 爱丽丝 何时 开始	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) )
哪个 学生 的 结束 日期 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 之前 停止 工作 的 人 有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 最早 毕业 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 在 2004 年 或 2010 年 之前 有 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 职位 与 员工 爱丽丝 相同 的 职位	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 城市 是 爱丽丝 或 鲍勃 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
180 厘米 高 的 人 的 职称	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 2004 年 以后 结束 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 结束 上学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 之前 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 的 朋友 ， 于 2004 年 出生	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
学生 在 爱丽丝 的 出生日期 之前 有 一个 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 属于 同一性 别的 所有人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
谁 是 在 2004 年 或 之前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最后 一天 是 最近 一次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 及 以后 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 的 开课日期 找到 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 的 开始 日期 是 爱丽丝 的 生日 或 以后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 身高 180 厘米 ， 出 生于 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
来自 同一个 出生地 的 人 和 爱丽丝 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
在 爱丽丝 停止 工作 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 与 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
180 厘米 高 的 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
一个 人 的 关系史	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
在 棕色 大学 以外 的 大学 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生 城市 的 大学 不是 棕色 大学 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 晚于 2004 年 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 离开 爱丽丝 的 员工 出生 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 在 学生 爱丽丝 开始 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 离开 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 或 之后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 为 2004 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 人 出生 在 2 个 以上 的 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string > ) ( number 2 ) ) )
什么 是 2004 年 之前 离开 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 是 最高 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
爱丽丝 离开 后 ， 员工 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 开始 的 新生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 之后 开始 上学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 最近 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 完成学业 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 爱丽丝 结束 上学 的 同一天 结束 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 有 最新 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 开始 日期 是 学生 爱丽丝 的 开始 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 毕业 于 爱丽丝 的 第一天 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 人 的 朋友 在 2004 年 之前 开始 学习	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 2004 年 之前 或 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 的 研究 领域	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 少于 两个 职称 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之后 或 2010 年 或 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
某人 身高 180 厘米 ， 性别 与 爱丽丝 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
什么 时候 软件 工程师 爱丽丝 离开 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
2004 年 爱丽丝 的 职称 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
哪些 人 是 员工 的 朋友 ， 是 如何 在 2004 年 之后 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 之前 或 之前 同时 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 的 学生 结束 日期 等于 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在线 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
什么 人有 两个 或 更 少 的 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
说出 爱丽丝 的 朋友 ， 他 的 出生地 是 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
男性 或 女性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
爱丽丝 的 朋友 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 人 是 雇主 的 雇员 ， 不是 麦肯锡 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 最后 一天 或 之后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 出生 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 一位 朋友 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
与 结束 日期 在 2004 年 之后 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 开始 日期 与 爱丽丝 的 结束 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 退休 时间 超过 2004 年 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
到 2004 年 离开 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
除了 2004 年 以外 ， 任何 一年 都 停止 上学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 180 厘米 高 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
那些 在 2004 年 或 之前 完成学业 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 2004 年 之前 没有 毕业 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
给 一个 180 厘米 高 的 人 说出 他 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
员工 的 开始 日期 是 2004 年 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 之前 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
对于 180 厘米 高 的 人 来说 ， 研究 领域 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 员工 的 出生地 ， 其 最后 一天 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 开始 日期 为 2004 年 或 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 之前 没有 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 在 棕色 大学 学习 的 爱丽丝	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
查找 结束 日期 不晚 于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 开始 工作 后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
变性人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
在 爱丽丝 的 最后 一天 或 之后 找到 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
毕业 不迟于 爱丽丝 那天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 辞职 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
工作 状态 最低 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 最后 一天 之前 或 之前 找到 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 或 更 早 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 学生 在 爱丽丝 的 最后 一天 工作 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 是 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 有 最新 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 爱丽丝 同时 停止 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 朋友 不是 软件 工程师 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 或 更 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
来自 棕色 大学 的 学生 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
谁 是 2004 年 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪些 学生 不晚 于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 与 一个 身高 180 厘米 的 人 成为 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 加入 学业 之前 ， 找到 那些 加入 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 我 的 社交 网络 中 ， 哪个 城市 超过 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 人 声称 性别 最高	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string gender ) ) )
当天 加入 学习 爱丽丝 的 人 完成 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 上学 前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
找到 与 员工 结交 的 朋友 ， 他们 的 结束 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 结束 时 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 同一天 出生 的 人 爱丽丝 结束 了 学业	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) )
爱丽丝 在 2004 年 停止 学习 的 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
180 厘米 高 的 所有人 的 雇主	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 的 开始 日期 最短 为 员工 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 女性	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string ! = ) en.gender.male ) )
关于 2004 年 之前 毕业 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 的 性别	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
结束 日期 不 在 爱丽丝 结束 日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
男性 或 女性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
人比 alice 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
在 2004 年 或 之后 开始 工作 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在线 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string logged_in ) ) )
在 爱丽丝 辞掉 工作 之前 ， 学生 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
雇用 到 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 的 关系 状态 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
出生 在 纽约 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
当 爱丽丝 开始 工作 时 ， 哪个 学生 就 这样 结束 了 学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
哪些 员工 开始 新 的 一天 alice 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 在 爱丽丝 出发 前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 上学	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )
男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
有 两个 或 更少 雇主 列出 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 学生 关系 状态 谁 结束 超过 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 性别 是 职称 不是 软件 工程师 的 员工	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 之后 加入 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
性别 是 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 约会 之前 或 之前 出生 的 人 停止 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
将 一个 人 的 名字 命名 为 一个 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
不是 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
与 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
生日 城市 的 员工 ， 其 开始 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 与 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 性别 未 在 2004 年 完成	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
独特 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 爱丽丝 最后 一天 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
2004 年 或 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
与 2004 年 之后 开始 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 爱丽丝 成为 朋友 并于 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
员工 的 开始 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 出 生于 2004 年 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
那些 没有 在 2004 年 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 不仅仅 是 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
找到 开学 日期 不 超过 学生 爱丽丝 开学 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
查找 结束 日期 不是 2004 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 性别 未 在 2004 年 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 作为 一名 学生 的 学习 领域 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
与 朋友 在 2004 年 后 毕业 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 的 生日 或 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
高于 180 厘米 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
与 alice 一样 研究 同一 领域 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 没有 完成 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
alice 或 bob 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
哪个 性别 是 2004 年 以后 结束 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 学生 爱丽丝 结束 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 至少 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两性 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string <= ) ( number 2 ) ) )
找到 结束 日期 不是 2004 年 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
关系 状态 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
爱丽丝 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
2004 年 或 之前 开始 上学 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 一个 登录 的 人 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )
什么 时候 爱丽丝 开始 在 麦肯锡	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
开学 日期 不 在 2004 年 之前 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
由 两个 人 分享 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 人 是 与 2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 学生 在 爱丽丝 开始 时 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 工作 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 alice 在 2004 年 工作 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
在 2004 年 或 2010 年 被 雇用 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 的 职称	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
alice 是 计算机科学 专业 的 学生 ， 是 哪 所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
开始 日期 在 204 之前 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 出生 之前 去世 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 最早 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 研究 最多 的 东西	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 人 的 生日 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 城市 是 2004 年 没有 开始 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 不是 软件 工程师 的 员工 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 出生 前 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 出生 后 完成学业 的 人 在 哪里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 不 超过 员工 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 爱丽丝 开始 工作 时 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 厘米 ， 学习 计算机科学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
在 2004 年 或 2010 年 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 晚于 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 出生 的 所有人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
出生 城市 的 员工 ， 其 开始 日期 不是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
朋友 不是 麦肯锡 雇用 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 以后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 艾丽斯 被 录用 时 ， 学生 毕业 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 只有 一个 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 之前 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 开始 与 爱丽丝 同时 或 之后 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 后 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 180 厘米 高 的 人 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
从 2004 年 开始 ， 员工 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 开始 上 棕色 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )
找到 参加 过 大多数 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
这是 大学 alice 研究 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 第一天 或 之前 找到 最后 几天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 的 开始 日期 是 爱丽丝 的 诞生 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 毕业 不早 于 爱丽丝 的 第一个 工作日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
高度 为 180 厘米 的 人 的 职称 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
除 软件 工程师 以外 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 与 员工 开始 约会 的 朋友 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 是 男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
2004 年 出生 的 人 声称 有 哪些 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 是 爱丽丝 大学	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
谁 比 爱丽丝 短 或 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
2004 年 以后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 最后 一天 比 爱丽丝 毕业 那天 更近	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 爱丽丝 的 开始 日期 或 之后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 只有 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 员工 爱丽丝 的 职称	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
哪个 学生 停止 了 员工 爱丽丝 的 同时	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 男性 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
什么 人 登录	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) )
在 爱丽丝 开始 上学 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 的 退出 日期 不是 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
离开 这 一天 的 员工 加入 了 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 职位 数量 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 的 开始 日期 是 2004 年 或 2010 年 的 学生名单	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 不再 是 学生 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 结束 日期 少于 员工 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 在 2004 年 或 2010 年 之后 开始 工作 的 所有 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 城市 的 学生 ， 其 结束 日期 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
员工 拥有 与 爱丽丝 相同 的 职位	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
将 与 两个 以上 其他人 成为 朋友 的 人 命名	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 拥有 相同 关系 身份 的 人 alice 就是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
2004 年 没有 入学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 2004 年 就业 开始 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
找到 2010 年 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
列出 2004 年 之前 开始 的 学生 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 在线 和 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
有 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string ! = ) en.relationship_status.single ) )
2004 年 之前 离职 的 员工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 开始 ， 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
注册 棕色 或 ucla 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 不 超过 两个 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 180 厘米 高 ， 也 是 女性 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
在 爱丽丝 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
哪些 人 是 员工 的 朋友 ， 其 职称 不是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 2004 年 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 不同 性别 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string ! = ) en.person.alice ) )
什么 是 爱丽丝 2004 年 离开 公司 的 职位	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) )
员工 最后 一天 是 爱丽丝 上学 的 同一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 至少 有 两种 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
最近 停学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
找到 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找到 所有 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
现在 或 以前 的 学生 的 关系 状况 是 什么 ， 不 包括 2004 年 开始 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
告诉 我 在 爱丽丝 开始 之前 离开 公司 的 所有 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 开始 上学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 与 爱丽丝 成为 朋友 并 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 有 两个 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
找到 2004 年 以外 的 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 性别 是 180 厘米 高 的 大多数 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 们 不 迟于 爱丽丝 的 出生日期 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 或 之前 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2010 年 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 晚于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
谁 拥有 最大 的 两个 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
给 在线 爱丽丝 的 朋友 起个 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
爱丽丝 的 研究 领域 是 计算机科学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string field_of_study ) ) )
说出 不迟于 2004 年 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
他于 2004 年 创立 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
与 软件 工程师 以外 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 登录 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
那些 在 2004 年 或 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
大学 号码	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ) )
谁 有 两个 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
找到 结束 日期 少于 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 所有 开始 日期 与 爱丽丝 相匹配 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之后 开始 工作 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 毕业 ， 但 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 两个 人 的 关系 状况	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
性别 与 爱丽丝 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
爱丽丝 开始 或 之前 完成 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 员工 alice 或 更 高级 别的 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 朋友 已 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
谁 是 没有 上 过 棕色 大学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 2004 年 或 之后 退出 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 人数 高达 180 ， 结束 日期 为 2004 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
当 爱丽丝 辞掉 工作 时 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 城市 是 两个 人 的 发源地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
职位 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 男性 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪些 员工 在 爱丽丝 的 出生日期 或 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
学生 从 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 在 2004 年 之后 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 不 迟于 2004 年 毕业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
mckinsey 的 alice 开始 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
在 爱丽丝 的 出生日期 之后 ， 学生 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 生日 与 爱丽丝 的 结束 日期 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
找到 所有 登录 的 人 的 性别 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 与 爱丽丝 有 相同 出生地 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
员工 的 开始 日期 不是 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 与 180 厘米 的 爱丽丝 一样 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
找到 我 在 2004 年 之前 加入 他们 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 与 员工 爱丽丝 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在线 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
什么 是 大学 是 棕色 大学 的 学生 爱丽丝 的 研究 领域	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
谁 是 这个 人 的 朋友 ， 不迟于 2004 年 退出	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 停止 工作 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 不 超过 两所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 开始 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 开始 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
哪个 城市 是 单身 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
有 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
将 2004 年 或 之后 开始 的 员工 命名 为	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
为 2004 年 或 2010 年 开始 的 学生 命名	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 有 不同 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
学生 们 在 爱丽丝 的 开始 日 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 最短 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 男性 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
什么 是 一个 人 的 平均 身高	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
找到 爱丽丝 是 朋友 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
找到 爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
哪个 员工 在 爱丽丝 的 开始 日期 结束 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 开始 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
艾丽斯 2004 年 辞职 的 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
在 爱丽丝 出生 之前 ， 学生 停止 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 在 爱丽丝 离开 学校 之前 离开 学校	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
找到 结束 日期 大于 员工 爱丽丝 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 开始 日期 早于 2004 年 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 出生 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
雇主 不是 麦肯锡 的 雇员 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 与 学生 爱丽丝 相同 或 晚于 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
职位 数量 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 城市 是 早于 2004 年 开始 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 那个 不是 软件 工程师 朋友 的 员工	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 城市 是 爱丽丝 或 鲍勃 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
结束 日期 在 爱丽丝 出生日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 教育 开始 日期	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )
2003 年 之前 毕业 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 不 在 2004 年 之后 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 没有 开始 的 劳动 人民 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 学生 在 alice 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
不迟于 2004 年 开始 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 的 专业 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 与 员工 有 朋友 的 人 ， 他们 的 开始 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 2005 年 或 以后 开始 上学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 们 在 爱丽丝 之前 开始 学习	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开学 日期 不迟于 2004 年 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 朋友 的 人 不是 麦肯锡 的 雇员	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 在 纽约 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
与 没有 软件 工程师 职称 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
哪些 学生 在 爱丽丝 的 出生日期 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 以后 毕业 的 朋友 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 哪些 朋友 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 爱丽丝 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
找到 2004 年 或 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪些 学生 与 爱丽丝 有 同样 的 专业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最近 哪位 员工 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 列出 了 最 多 的 出生地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string birthplace ) ) )
谁 出 生于 2004 年 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 2004 年 出生 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 开始 日期 是 员工 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 生日 之后 退出	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人比 alice 更早 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
在 2004 年 或 之前 停止 工作 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 的 那天 或 之后 结束 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 生日 之前 或 之前 找到 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 是 2004 年 之后 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 晚于 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 未 被 麦肯锡 聘用 的 人 的 朋友 命名 为	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 180 厘米 的 人 ， 也 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
身高 180 厘米 ， 于 2004 年 出生	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
在 爱丽丝 的 生日 之前 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 自己 的 身份	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 与 爱丽丝 一样 的 出生地 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
找到 不迟于 2004 年 的 开始 日期 的 员工 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 学生 的 结束 日期 与 学生 爱丽丝 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 身高 180 厘米 ， 生日 与 爱丽丝 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
找到 2004 年 以后 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 停止 工作 的 那天 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 艾 莉斯 之前 没有 毕业 的 学生 报名 参加	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之后 退出 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 2004 年 或 之后 开始 的 工人 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 最 年轻 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
分享 爱丽丝 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 我 所有 2004 年 以后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 学生 爱丽丝 开始 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
爱丽丝 的 朋友 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
什么 人有 两个 或 更 多 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
哪个 男性 的 关系 状态 为 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
2004 年 后 开始 上学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 开始 不迟于 爱丽丝 开始 工作 的 那天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 与 爱丽丝 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
2004 年 生日 的 人 也 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
说出 在线 人员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
结束 日期 不 在 员工 爱丽丝 结束 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 出生 在 爱丽丝 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
学生 的 开始 日期 接近 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 是 学生 爱丽丝 开始 的 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
棕色 或 ucla 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 起始 日期 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 所有 结束 日期 为 2004 年 或 以后 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 最新 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不是 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
找到 爱丽丝 开始 后 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 不上 棕色 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 毕业 于 计算机科学 专业	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
找到 结束 日期 不 超过 学生 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
爱丽丝 是 大学 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
与 2005 年 之前 获得 当前工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 从 2004 年 之前 开始 的 所有 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 员工 从 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 两种 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
2004 年 艾丽斯 参加 了 哪 所 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
谁 离开 了 他们 的 工作 最 久 以前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 在 2004 年 做 了 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
首先 完成 教育 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 人 的 平均 身高	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
2004 年 之前 完成 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 之前 出生 的 人 辞掉 了 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
2004 年 开始 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 开始 日期 为 2004 年 或 之后 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 是 最后 完成 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 一名 大学生	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
那些 员工 在 同一天 盯 着 爱丽丝 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之后 被 雇用 的 雇员 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 爱丽丝 后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是 什么 学生 和 爱丽丝 同一天 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 不早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 性别 至少 有 两个 人 声称	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
当 爱丽丝 辞职 时 出生 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 城市 的 雇员 ， 其 结束 日期 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之后 完成 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 学生 在 学生 爱丽丝 之前 有 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 第一天 或 之前 找到 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 男性 和 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 的 开始 日期 是 2004 年 还是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 性别 总数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )
谁 是 2004 年 之前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 不去 布朗 大学 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 毕业 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之前 结束 日期 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 是 2004 年 或 之后 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这个 180 厘米 高 的 人 的 开始 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2004 年 以前 开始 的 学生 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
当 爱丽丝 离开 公司 时 ， 员工 的 起点 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 alice 之后 找到 有 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
没有 在 2004 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 没有 入学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 以后 退职 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 在 2004 年 或 2010 年 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 那些 与 开学 日期 早于 2004 年 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人短于 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
身高 180 厘米 ， 开始 日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
指出 身高 超过 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 有 一个 或 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )
学生 和 alice 一样 的 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 们 在 爱丽丝 开始 工作 之前 就 开始 上学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 至 2010 年 期间 参加 过 哪些 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 是 最 短 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
谁 在 爱丽丝 开始 之前 就 停止 了 学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
男性 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 2004 年 或 之后 终止 的 雇员 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 或 之后 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 是 2004 年 或 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 在 2004 年 之前 的 结束 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 2004 年 没有 开始 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出生地 至少 有 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
非 软件 工程师 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不 超过 两个 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
无论是 麦肯锡 还是 谷歌	( call SW.listValue ( call SW.concat en.company.mckinsey en.company.google ) )
爱丽丝 辞掉 工作 后 ， 哪个 学生 离开 了 学校	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 开始 日期 与 alice 的 结束 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 2004 年 或 2010 年 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 与 爱丽丝 同一天 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 朋友 ， 其 开始 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 没有 在 2004 年 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 工人 拥有 最多 的 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 在 爱丽丝 的 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找 我 在 棕色 大学 以外 的 地方 学习 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
登录 时 身高 超过 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
哪些 人 是 2004 年 之前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 登录 的 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
找到 登录 的 人 ， 他们 也 是 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
找到 180 厘米 高 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
什么 是 爱丽丝 的 研究 领域	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
什么 是 城市 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
谁 出生 在 爱丽丝 离开 的 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) )
找到 alice 的 180 厘米 高 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 是 最早 在 2004 年 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 登录 并 将 出生地点 为 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string logged_in ) ) )
哪些 学生 的 开学 日期 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 开始 工作 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 在 同一个 城市 出生 的 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
与 alice 具有 相同 性别 并且 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
说出 一个 在 爱丽丝 开始 后 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最 年轻 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
开始 日期 最小 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 自 2004 年 以来 毕业 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 在 2004 年 之前 退出 的 所有 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 那些 不是 棕色 大学 的 学生 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 有 180 厘米 的 高度 和 爱丽丝 的 高度	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
找到 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
员工 在 2004 年 之前 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 入学 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 在 爱丽丝 开始 时 或 之后 完成 同步	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 学生 在 2004 年 没有 停止 过	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 完成 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 开始 日期 与 员工 爱丽丝 的 结束 日期 或 之后 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 学生 在 同一天 开始 上学 ， 爱丽丝 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 纽约 出生 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
雇主 是 麦肯锡 或谷歌 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
只有 一种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
单身 ， 出 生于 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
关于 2004 年 以后 毕业 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 在 麦肯锡 的 职位	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
哪个 学生 的 结束 日期 小于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 与 2004 年 之后 开始 上学 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 只有 1 种 关系 状态 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
结束 日期 在 学生 爱丽丝 结束 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 去 学校 ， 她 于 2004 年 毕业	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
爱丽丝 上学 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 为 2004 或 更 晚 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学习 领域 不是 计算机科学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 晚于 2004 年 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 之前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 180 厘米 ， 与 爱丽丝 有 相同 的 出生地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
找到 结束 日期 等于 或 大于 alice 生日 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之前 开始 工作 的 人 有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 开始 日期 晚于 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 开始 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 学习 时间 晚于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开学 日期 不是 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 至少 在 2004 年 出生 的 同 性别 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 城市 是 员工 的 出生地 ， 其 结束 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 具有 最新 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
列出 少于 两个 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
目前 在线 的 人 和 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
有 超过 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 最后 一天 与 爱丽丝 的 开始 日期 相匹配 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两种 或 两种 以上 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
从 2004 年 开始 ， 新 学生 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
不是 软件 工程师 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 出 生于 2004 年 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
与 2005 年 之前 开始 工作 的 人 有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 与 2004 年 没有 停止 工作 的 人 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 小于 2004 年 或 2010 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
当 爱丽丝 于 2004 年 毕业 时 ， 他 开始 上学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
找到 2004 年 后 加入 学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 更 早 开始 上学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 在 学校 最后 一天 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 职称 最多 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 不晚 于 2004 年 的 员工 的 所有 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
任何 登录 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string logged_in ) ) )
找到 2004 年 出生 的 人 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找到 有 一两个 职称 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 不 为 麦肯锡 工作 的 劳动 人民 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
最后 结束 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
比 爱丽丝 年长 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
找到 我 在 2004 年 之前 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 180 厘米 的 人 及其 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
哪个 学生 开始 约会 最 接近 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 的 就业 时间 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 与 alice 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有 朋友 在 2004 年 或 之后 离职 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 没有 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 最近 在 2004 年 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 180 厘米 高 ， 正在 学习 计算机科学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
在 爱丽丝 开始 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
什么 员工 与 alice 的 结束 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 2010 年 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 小于 2004 年 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 比较 小 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 alice 同日 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 的 朋友 登录 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
2004 年 ， 谁 拥有 学生 和 结束 日期 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 在 爱丽丝 开始 时 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 不到 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string < ) ( number 2 ) ) )
什么 员工 在 爱丽丝 的 同一天 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 公司 不是 麦肯锡 的 工人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停止 上学 后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不 在 学生 爱丽丝 结束 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 开始 日期 少于 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 爱丽丝 送到 最后 一天 的 学生 将 辞去 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 至少 和 爱丽丝 一样 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
谁 开始 与 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 工作人员 不 适合 麦肯锡 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 alice 之前 的 最后 一天 找到 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 一个 朋友 出 生于 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
员工 的 开始 日期 是 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 没有 失业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 非 软件 工程师 的 诞生 之 城	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
这座 城市 的 数量 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
在 2004 年 或 2010 年 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 晚于 2004 年 ， 他们 是 谁 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找 一个 不迟于 2004 年 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
加入 爱丽丝 后 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 爱丽丝 有 不同 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
在 爱丽丝 之后 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 之前 结束 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 拥有 最少 的 朋友	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 与 结束 日期 不是 2004 年 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 alice 拥有 相同 职位 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
具有 相同 身份 的 两个 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
离开 爱丽丝 的 学生 们 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出 生于 2004 年 或 更 早 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
谁 是 2004 年 没有 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 多 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 毕业 于 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 后 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 最后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
说出 爱丽丝 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
2004 年 未 完成 的 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 不上 计算机科学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 2004 年 没 上学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那个 学生 开始 的 那天 alice 退出 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 开始 的 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 出生 的 任何 一年 开始 工作 的 人 在 哪里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 员工 的 起点	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在线 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string logged_in ) ) )
哪家 公司员工 是 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 2004 年 或 更 早 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
谁 是 180 厘米 高 ， 与 艾丽斯 有 相同 的 出生日期	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
在 爱丽丝 的 生日 之前 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 在 纽约 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string gender ) ( string = ) en.gender.male ) )
结束 日期 在 2004 年 之后 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不到 两所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 和 bob 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
爱丽丝 在 布朗 大学 学习 了 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
人们 身高 180 厘米 ， 出生日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 是 一个 没有 在 2004 年 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪里 出生 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
查找 结束 日期 早于 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 性别	( call SW.listValue ( call SW.concat en.gender.male en.gender.female ) )
与 alice 或 bob 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
不是 软件 工程师 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
学生 的 开学 日期 不 超过 员工 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 性别 是 什么 ， 其 最后 一天 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
职位 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最短 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
人短于 200 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
在 不到 3 个 关系 中 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
在 2004 年 的 最后 一天 找到 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 去 了 棕色 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string university ) ) )
谁 是 爱丽丝 的 一些 朋友 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
2004 年 之前 出生 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 城市 是 不到 两个 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
180 厘米 高 的 人 的 职称 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 出生日期 不是 在 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string ! = ) ( date 2004 -1 -1 ) ) )
哪些 学生 的 结束 日期 比 爱丽丝 更大	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 是 2004 年 之前 开始 日期 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 的 人 并 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
在 爱丽丝 的 最后 一天 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 劳动 人民 的 职称 不足 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 有 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
人们 的 生日 与 高度 为 180 厘米 的 生日 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
2005 年 之前 加入 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 180 厘米 高 的 人 都 在 2004 年 辞职	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2004 年 开始 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 爱丽丝 离开 了 哪个 日期	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )
一个 朋友 ， 而 不是 计算机科学 专业 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 两个 或 两个 以上 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
查找 结束 日期 与 学生 alice 开始 日期 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 学生 关系 状态 谁 没有 在 2004 年 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 上学 的 日期 或 之后 停学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 结束 时 或 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 有 一个 关于 爱丽丝 出生日期 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 当前 在线 的 所有人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string logged_in ) ) )
什么 员工 至少 在 爱丽丝 的 出生日期 结束 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
和 爱丽丝 一样 去 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 不迟于 员工 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 不 超过 两个 人 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 学生 结束 日期 等于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 出生 之前 停止 工作 的 人们 在 哪里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 是非 软件 工程师 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 的 开始 日期 或 之前 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 与 2004 年 出生 的 人 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
爱丽丝 何时 出生	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthdate ) ) )
员工 有 两个 或 两个 以下 的 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
关于 2004 年 以后 辞职 的 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 2004 年 之后 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
将 登录 后 身高 180 厘米 的 人 命名 为	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 员工 称为 180 厘米 高 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
结束 日期 不是 2004 年 以后 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
单身 人士 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
谁 在 2004 年 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 停止 上学 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 两个 人 以上 的 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
除 软件 工程师 以外 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 两个 或 更少 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 是 不 学习 计算机科学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 不是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 180 en.cm ) ) )
从 2004 年 或 之后 开始 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
目前 登录 的 人 的 关系 状态 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
爱丽丝 何时 辞职 ， 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
将 单身 朋友 命名 为	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
找到 男性 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
谁 去 棕色 大学 或 ucla	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 加入 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 不迟于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不 超过 两个 人 的 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 像 艾丽斯 一样 高 180 厘米 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
告诉 我 所有 员工 在 爱丽丝 的 最后 一天 之前 离开	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最 不 常见 的 性别 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 有 两个 或 更少 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )
有 朋友 的 人 在 2004 年 没有 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 不早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之前 或 期间 开始 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
说出 一个 与 爱丽丝 成为 朋友 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
有 两个 或 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 或 之前 或 2010 年 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 或 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 开始 的 学生 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 不迟于 2004 年 开始 日期 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
说出 180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 结束 日期 不晚 于 员工 爱丽丝 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 后 加入 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 之前 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 纽约 或 北京	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
什么 是 参加 任何 大学 但 棕色 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 最后 一天 与 爱丽丝 的 毕业典礼 当天 同一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 有 两种 不同 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
2004 年 或 之前 出生 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 她 辞职 时 做 爱丽丝 的 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
超过 两个 人 声称 什么样 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
至少 和 爱丽丝 一样 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
这 两个 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 出生日期 与 爱丽丝 就业 结束 日期 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
找到 2004 年 以后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
非 计算机科学 专业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 有 180 厘米 高 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 学生 从 2004 年 开始 和 之后 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 所有 180 厘米 高 的 人 和 艾丽斯 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
哪个 城市 是 爱丽丝 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
谁 是 结束 日期 为 2004 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 没有 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string ! = ) en.person.alice ) )
哪个 学生 在 2004 年 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 爱丽丝 之后 或 同时 开始 学习 的 内容	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 的 结束 日期 大于 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 离开 了 爱丽丝 开始 的 那 一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 朋友 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
学生 从 2004 年 到 2010 年 开始 学习 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string logged_in ) ) )
哪位 学生 先 离开 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 之前 开始 工作 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 开始 上学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 开始 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 或 之后 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
不 在 布朗 大学 学习 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 和 男性 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
大多数 人 出生 的 城市	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
与 alice 职位 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
职称 不是 软件 工程师 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 为 麦肯锡 工作 期间 ， 爱丽丝 的 职称 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
找到 最后 一天 与 爱丽丝 相同 或 晚于 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 终止 日期	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )
什么 城市 不到 两个 人 出生	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 在 2004 年 做 了 什么 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
具有 180 厘米 高度 的 同一 生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 不 在 计算机科学 领域 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 与 学生 的 朋友 ， 他们 的 开始 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 身高 或 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
那个 工人 在 学生 爱丽丝 开始 的 那天 或 之前 离开 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 员工 爱丽丝 开始 日期 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
出生 城市 不 超过 两人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 所有 关系 状态 与 180 厘米 高 的 人 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 开始 时 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一名 学生 与 员工 爱丽丝 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 180 厘米 高 ， 目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
谁 是 员工 的 朋友 ， 其 开始 日期 至少 是 2005 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 员工 关系 状态 谁 没有 在 2004 年 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
mckinsey 没有 聘用 哪些 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
无论是 2004 年 还是 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
找到 拥有 最 多 雇主 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
朋友 少于 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 之前 或 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
说出 不迟于 2004 年 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 出生 后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最新 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年出 生于 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 是 一个 180 厘米 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
不是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
在 爱丽丝 出生 前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 学生 爱丽丝 做 之前 ， 学生 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 一个 员工 朋友 ， 到 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不是 2004 年 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
自 2004 年 以来 一直 在 工作 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 180 厘米 高 的 爱丽丝 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
2003 年 以后 完成学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 和 爱丽丝 离开 当天 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生人数 最多 的 城市	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学习 领域 不是 计算机科学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 出生 在 纽约 的 人 ， 目前 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string logged_in ) ) )
2004 年 之后 开始 工作 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 学习 计算机科学 或 历史 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 工作 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找 一个 朋友 少于 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
那里 有 多少 家 公司	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ) )
谁 是 2004 年 之前 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
关于 没有 学习 计算机科学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 鲍勃 或 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
当 爱丽丝 出生 时 或 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学习 计算机科学 以外 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 最后 一天 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 出生地 未 在 2004 年 完成	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
当 爱丽丝 停止 上学 或 之后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 纽约 出生 的 人 的 关系 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
在 爱丽丝 之前 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 与 员工 开始 日期 晚于 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
开学 日期 与 2004 年 不同 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 一个 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 研究 领域 是 计算机科学 在 什么 日期 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
在 2004 年 或 之前 结束 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 除了 软件 工程师 之外 还有 什么 职位	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 与 alice 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
至少 两个 人 的 关系 状况	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 就业 的 最后 一天 出生 的 人 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
2004 年 或 之后 开始 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 爱丽丝 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 毕业 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 同时 退出 或 在 爱丽丝 之后 退出	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
找到 在 纽约 或 北京 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
结束 日期 在 2004 年 之前 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
大学 将 在 2004 年 完成 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
爱丽丝 的 朋友 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 爱丽丝 辞职 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 第一个 工作日 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除 2004 年 以外 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 城市 的 员工 ， 其 开始 日期 是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 日期 不 在 员工 爱丽丝 开始 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 学生 有 最早 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 计算机科学 以外 的 领域 学习 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 结束 日期 少于 2004 年 的 学生 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 没有 进入 布朗 大学 的 学生 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 在 同一天 的 人 艾 莉斯 开始 了 她 的 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )
2004 年 之后 离职 的 员工 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
只有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 在 爱丽丝 的 生日 那天 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
任何 出生 在 纽约 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
什么 时候 爱丽丝 开始 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
不去 布朗 大学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 多少 员工 分享 爱丽丝 的 职位	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出 生于 爱丽丝 的 第一天 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) )
找到 2004 年 以外 开学 日期 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 登录 的 人 是 谁 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
什么 人 不是 在 纽约 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
找到 每个 人 都 是 单身 或 已婚 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.concat en.relationship_status.single en.relationship_status.married ) ) )
找到 有 纽约 出生地 和 他们 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
谁 是 爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
工作 历史 最小 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最多 2 个 职位 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 辞职 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
当 爱丽丝 停止 工作 或 之后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
雇员 的 雇主 是 麦肯锡 还是 谷歌	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 最后 一天 不是 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 在 纽约 出生 的 爱丽丝 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
爱丽丝 辞掉 工作 后 加入 学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 最早 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 厘米 ， 于 2004 年 离职 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 的 开始 日期 不 在 学生 爱丽丝 的 开始 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 不上 棕色 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结局 不 超过 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 前 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 是 200 厘米 或 更 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
找到 开始 日期 等于 学生 爱丽丝 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
无论是 多少 场	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ) )
在 2004 年 之前 开始 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
所有 从 2004 年 开始 的 学生 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
作为 软件 工程师 或 项目经理 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停止 工作 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 是 软件 工程师 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )
找到 有 最新 开课日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 开始 日期 与 员工 爱丽丝 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 朋友 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
那天 结束 上学 的 学生 爱丽丝 开始 工作 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 以后 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 开始 日期 晚于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 不 参加 布朗 大学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 的 出生地 在 2004 年 之前 加入 了 研究	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 在 爱丽丝 的 出生日期 或 之后 开始 做 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 在 爱丽丝 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 何时 开始 工作	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) )
哪些 人 是 员工 的 朋友 ， 他们 的 最后 一天 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 生日 的 朋友 ， 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
学生 用 爱丽丝 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 从 2004 年 或 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 大学 是 棕色 大学 或 ucla 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 与 180 厘米 的 人 性别 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 从 爱丽丝 的 生日 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
无论是 纽约 还是 北京	( call SW.listValue ( call SW.concat en.city.new_york en.city.bejing ) )
找到 结束 日期 早 于 员工 爱丽丝 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
将 一个 180 厘米 高 的 人 命名 为 与 爱丽丝 相同 的 高度	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
谁 是 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 的 职称	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
当 爱丽丝 停止 工作 或 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 没有 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string ! = ) en.person.alice ) )
当 爱丽丝 开始 时 员工 离开 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 180 厘米 高 的 人 的 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 开始 的 日期 大于 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
来自 不 在 麦肯锡 工作 的 朋友 的 联系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 去 了 学校 ， 但 没有 在 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2005 年 之前 加入 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
他们 的 关系 状态 不是 唯一 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
有 多少 关系 状态 选项	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ) )
180 厘米 高 的 人 在 麦肯锡 工作	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
什么 是 为 麦肯锡 工作 的 爱丽丝 的 职称	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
找到 在 纽约 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
学生 在 2004 年 之前 或 期间 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 从 2004 年 或 2010 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 2004 年 没有 开始 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 2004 年 及 之后 的 员工 发源地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 雇主 的 数量 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
麦肯 西 没有 雇用 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
性别 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 辞职 之前 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 有 朋友 ， 结束 日期 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 在 爱丽丝 的 最后 一天 之前 就 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
高度 为 180cm 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
找到 180 厘米 高 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
高度 为 180 厘米 或 以上 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
2004 年 或 更 早 开始 工作 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
我 的 哪些 朋友 联系 现在 在线	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 所有 有 爱丽丝 作为 共同 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
2004 年 之前 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
将 与 员工 成为 朋友 的 人 命名 为 不 迟于 2004 年 开始 的 员工	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 在 学生 爱丽丝 开始 日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 关系 状态 至少 由 两个 人 声称	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪位 员工 在 2004 年 至 2010 年间 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 不 超过 两个 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 做 的 时候 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 性别 没有 从 2004 年 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 爱丽丝 同时 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 员工 爱丽丝 的 同时 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
我 的 社交 网络 中 出生 的 男性 是 哪些 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
在 爱丽丝 加入 她 的 学习 之后 加入 他们 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 之前 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
两个 人 出生 在 哪个 城市	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 纽约 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 比 爱丽丝 年轻	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
在 爱丽丝 工作 的 第一天 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
找到 与 员工 有 朋友 的 人 ， 他们 的 最后 一天 不 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
只有 一所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 她 2004 年 辞职 的 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
当 爱丽丝 开始 上学 或 之后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不 在 员工 爱丽丝 开始 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 毕业 后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 在 2004 年 之后 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 单身 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
其中 学生 的 学习 领域 是 计算机 科学史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
两个 人 分享 什么样 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 开始 工作 的 工人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之后 的 最后 一天 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 的 人 和 麦肯锡 作为 他们 的 雇主	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
出生 城市 的 员工 ， 其 开始 日期 最多为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 开始 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 出生 在 当天 或 之后 爱丽丝 的 人 辞掉 了 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
一名 工人 于 2004 年 或 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 有 多于 两种 关系 的 地位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
爱丽丝 停止 工作 后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪所 大学 做过 爱尔兰 学习 计算机科学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
那些 在 爱丽丝 之前 或 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) )
与 alice 高度 相同 或 更 短 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
那些 在 爱丽丝 完成 时 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开始 日期 是 2004 年 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 开始 的 学生 的 出生 城市 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 我 一个 项目经理 或 软件 工程师	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
找到 只有 一个 性别 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string gender ) ) )
一个 至少 在 2004 年 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 一个 学习 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 出生 的 所有人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 人 是 一个 不为 mckinsey 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
到 2004 年 完成学业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 以前 的 职位 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 alice 具有 相同 关系 身份 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
与 2004 年 结束 日期 的 员工 有 什么样 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 出生日期 或 之后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 身高 180 厘米 的 人 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 2004 年 或 2010 年 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 出 生于 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 在 爱丽丝 开始 约会 后 不再 受雇 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
告诉 我 2004 年 之前 或 之后 的 人们 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 开始 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 出生地 不是 从 2004 年 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
给 棕色 大学 的 学生 起名	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 与 alice 共享 同一 生日 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
什么 学生 的 结束 日期 晚于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 工作 后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 不 等于 2004 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 员工 的 职称 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
雇佣 爱丽丝 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 没有 在 麦肯锡 工作 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 和 艾丽斯 学生 一起 去 同一 所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 拥有 最多 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string relationship_status ) ) )
哪个 城市 是 至少 在 2004 年 结束 的 学生 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
查找 开始 日期 不是 2004 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 员工 在 爱丽丝 出生 后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
同一天 辞职 的 员工 爱丽丝 开始 了 她 的 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 不是 软件 工程师	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 开始 结束 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 停学 的 时候 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 起始 日期 与 alice 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 在 2004 年 之前 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 多 朋友 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 或 之前 完成学业 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 什么 时候 从 棕色 大学毕业	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
2004 年 开始 的 学生 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 低于 爱丽丝 生日 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
拥有 最 多 职称 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 员工 爱丽丝 开始 日期 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 在 纽约 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找到 超过 两个 人 分享 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学生 的 开学 日期 不早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 开始 了 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 爱丽丝 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 的 开始 日期 不早 于 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 后 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 为 2004 年 或 以后 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 2004 年 之前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
任何人 都 有 类似 的 关系 ， 任何人 登录	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
谁 在 学习 不到 两件事	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 做 员工	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
哪些 人有 两个 以上 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
说出 一个 身高 180 厘米 的 人 ， 他 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪些 学生 不早 于 爱丽丝 的 最后 一天 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学习 领域 是 计算机科学 或 历史 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 完成学业 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 学生 爱丽丝 开始 的 那天 或 之前 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
alice 没有 声称 什么 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
2004 年 出生 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 在 爱丽丝 结束 后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 爱丽丝 的 男性 朋友 之一	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
谁 是 至少 2004 年 的 雇员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 没有 上 过 棕色 大学 的 学生 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 那些 没有 受雇 于 麦肯锡 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
很 高兴 我 的 朋友 们 在 2003 年 之后 加入 了 他们 的 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 或 之前 开始 的 雇员 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 性别 ， 其 开始 日期 至少 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 做 了 爱丽丝 在 2004 年 辞职	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
在 爱丽丝 的 第一天 前 找到 最后 几天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 有着 相同 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
身高 180 厘米 ， 结束 日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
职称 不是 软件 工程师 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 所有 与 爱丽丝 没有 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
有 一个 朋友 在 2004 年 以外 的 一年 开始 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 在 纽约 出生 的 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 最 接近 alice 雇用 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 或 之后 开始 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪些 学生 和 爱丽丝 一样 去 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学习 计算机科学 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
谁 是 不 主修 计算机科学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
软件 工程师 或 项目经理	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
谁 是 2004 年 以后 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 2004 年 之后 或 2010 年 之后 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 更 早 开始 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 爱丽丝 出生 前 加入 学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 最早 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
命名 在 学生 名为 alice 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 在 2004 年 之前 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
不是 男性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string ! = ) en.gender.male ) )
什么 人比 爱丽丝 更 年轻	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
开始 约会 比 艾丽斯 小 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开学 日期 最长 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
至少 在 爱丽丝 完成 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开始 日期 不 在 员工 爱丽丝 的 开始 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 爱丽丝 开始 学习 计算机科学 的 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
研究 计算机科学 以外 领域 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 出 生于 2004 年 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
员工 的 开始 日期 与 学生 爱丽丝 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 身高 180 厘米 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 没有 软件 工程师 头衔 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 的 生日 是 2004 年 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 有 一个 2004 年 以后 开始 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 或 2010 年 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 完成学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 在 2004 年 到 2010 年 之间 有 一个 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
找到 身高 180 或 200 厘米 的 人	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )
那些 没有 在 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之后 或 2010 年 之后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 计算机科学 的 学生 的 关系 状况 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人短于 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
在 一段 感情 中 找到 我 2 个人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
生日 的 人 是 爱丽丝 毕业生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
当 爱丽丝 辞掉 工作 时 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 进入 3 种 关系 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
找到 与 登录 人员 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
与 爱丽丝 单身 和 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
谁 是 我 网络 中 最 老 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
人们 有 一个 纽约 的 出生地 和 180 厘米 的 高度	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 在 爱丽丝 之后 或 同时 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 后 学生 的 朋友 们 完成 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 180 厘米 高 的 人 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
学习 领域 最少 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 哪个 朋友 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
学习 领域 最小 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那天 结束 学校 的 学生 爱丽丝 出生 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 单身 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪个 员工 在 爱丽丝 出生 前 就 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 学生 没有 在 2004 年 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 在 2004 年 之前 离开 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
任何 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 2004 年 以后 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停下来 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 的 人 在 纽约 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
爱丽丝 什么 时候 辞去 了 麦肯锡 的 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
爱丽丝 的 出生地	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )
找到 所有 不是 软件 工程师 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
alice 的 职称 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
2004 年 没有 开始 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找 不 上 棕色 大学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 上学 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
查找 开始 日期 早 于 员工 alice 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 180 厘米 高 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 早于 2004 年 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 多 研究 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
至少 有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
说出 一个 身高 180 厘米 ， 于 2004 年 退出 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 开始 日期 不是 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
哪个 学生 结束 日期 与 爱丽丝 同时 发生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 单身 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
什么 员工 不 超过 两个 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 的 职称 不 超过 2 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 与 单身 人士 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
2004 年 以后 开始 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
单身 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
爱丽丝 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
找到 与 alice 或 bob 具有 相同 性别 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
找到 学习 领域 不是 计算机科学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 所有 alice 的 朋友 ， 他们 目前 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
有 朋友 在 2004 年 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2003 年 或 之前 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 是 在线 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
开始 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 身高 180 厘米 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
不迟于 2004 年 开始 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 不 超过 爱丽丝 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
爱丽丝 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
给 没有 在 布朗 大学 学习 的 学生 的 朋友 说出 一个 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 拥有 最少 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
员工 的 开始 日期 最短 为 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开学 日期 不 等于 2004 年 的 学生 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 完成 同期 学业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 至少 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没 毕业 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
那些 与 2004 年 后 停止 上学 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生 城市 的 学生 ， 其 开学 日期 是 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 就读 过 最少 的 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 厘米 的 人 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 最短 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 与 员工 结交 的 朋友 ， 他们 的 结束 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出 生于 2004 年 并 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 在 2004 年 或 2010 年 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
180 厘米 高 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 的 结束 日期 名称 是 2004 年 还是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 和 爱丽丝 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 2004 年 或 之前 开始 ， 学生 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 的 生日 最多 与 爱丽丝 的 生日 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
找到 为 大多数 雇主 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 爱丽丝 同一天 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 单身 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 2004 年 以外 开课日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 出生 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
任何 一个 男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪些 学生 不早 于 2004 年 开学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 或 之后 开始 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 alice 的 职位 ， 雇主 是 麦肯锡	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
找到 在 纽约 出生 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找到 我 登录 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
目前 在线 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
是 什么 大学 做 爱丽丝 参加	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
哪些 人 是 2004 年 之前 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 没有 180 厘米 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 180 en.cm ) ) )
谁 是 2004 年 或 之后 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 至少 有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
开始 日期 最长 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 比 爱丽丝 更 高 或 更 矮 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
与 爱丽丝 身高 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.person.alice ( string height ) ) ) )
找到 我 最少 朋友 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 出生 在 纽约 和 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 员工 在 alice 之前 或 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 两性	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string <= ) ( number 2 ) ) )
学生 的 开始 日期 在 学生 爱丽丝 的 开始 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 的 开始 日期 早于 或 晚于 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 最后 一天 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
180 厘米 高 的 人 的 关系 状况 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
与 员工 成为 朋友 的 人 将 在 2004 年前 离职	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 出生日期 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 2004 年 或 2010 年 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )
谁 是 员工 的 朋友 ， 其 结束 日期 大于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 开始 日期 不是 2004 年 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 员工 alice 结束 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最早 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 员工 在 2004 年 或 2010 年 之前 就 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪名 员工 早于 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 与 alice 或 bob 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
开始 日期 在 2004 年 之后 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 开始 的 所有 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 朋友 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 爱丽丝 之后 出生 的 人 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
哪些 员工 在 爱丽丝 之前 开始 就业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 开始 日期 不是 2004 年 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 之前 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
最近 出生 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
在 爱丽丝 开始 上学 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 在 纽约 或 北京 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
在 爱丽丝 出生 前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 找到 员工 朋友 的 开始 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不是 软件 工程师 的 劳动 人民	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 在 爱丽丝 开始 的 同时 完成 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不迟于 2004 年 的 结束 日期 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 所有 的 在线 单曲	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
那些 在 2004 年 或 之前 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 在 学生 爱丽丝 的 第一天 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 在 2004 年 结束 的 关系 形象	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 之前 离开 学校 的 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
当天 或 之前 出生 的 人 爱丽丝 开始 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
不 学习 计算机科学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 晚于 2004 年 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 以前 开始 与 新 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 停止 上学 后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 或 之前 开始 工作 的 雇员 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 结束 日期 早 于 员工 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 离开 2004 年	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
找到 2004 年 退出 的 所有 员工 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
艾 莉斯 于 2004 年 开始 工作 ， 当时 她 离开 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
在 2004 年 之前 开始 的 出生地 城市 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 180 厘米 ， 于 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
同一天 开始 上学 的 学生 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 至少 有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
那些 不 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string ! = ) en.relationship_status.single ) )
将 两个 以上 的 人 作为 他们 的 出生地 共享 时 命名 城市	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 的 职位 与 员工 爱丽丝 的 职位 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 性别 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
与 那些 不 为 麦肯锡 工作 的 人 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 在 纽约 出生 的 每个 人 都 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
退出 爱丽丝 生日 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 在 爱丽丝 的 生日 之前 有 一个 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
生日 的 人 与 爱丽丝 的 开始 日期 最 多 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
什么 是 在 麦肯锡 不 工作 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 城市 是 员工 的 出生地 ， 其 结束 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
哪些 人 是 与 2004 年 没有 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 或 之前 结束 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 拥有 最多 的 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停止 工作 时 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 是 我 的 朋友 谁 没有 在 2004 年 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
任何 已 登录 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
找到 职称 不是 软件 工程师 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 及 之后 开始 的 所有 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开始 日期 在 爱丽丝 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 不迟于 爱丽丝 的 第一天 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪所 大学 做 了 180 厘米 高 的 人 参加	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 alice 开始 她 的 软件 工程师 工作 的 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_start_date ) ) )
2004 年 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 工作 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 2004 年 或 2010 年 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 雇员 的 朋友 ， 雇佣 结束 日期 至少 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 结束 日期 不是 2004 年 的 学生 的 所有 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 有 多 高	( call SW.listValue ( call SW.getProperty en.person.alice ( string height ) ) )
员工 日期 小于 2004 年 和 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
当 爱丽丝 开始 上学时 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 辞去 工作 之前 雇用 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
朋友 在 2004 年 或 之前 开始 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 的 最后 一天 工作 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 麦肯锡 工作 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
身高 180 厘米 ， 以 计算机科学 为 研究 对象 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
2004 年 或 之后 停学 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 在 爱丽丝 毕业 后 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2010 年 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 之前 开始 的 员工 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 开始 工作 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之前 开始 工作 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 员工 爱丽丝 做 之后 ， 员工 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
mckinsey 的 哪位 员工 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
2004 年 或 之后 完成 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 作为 软件 工程师 的 第一天	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_start_date ) ) )
在 爱丽丝 离开 后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 身高 超过 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
谁 至少 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
正在 和 alice 一样 学习 同一 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不 属于 布朗 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
查找 没有 结束 日期 为 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 不是 2004 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
当 爱丽丝 开始 工作 时 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 大于 或 等于 学生 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 等于 或 大于 爱丽丝 出生日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 有 两个 以上 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
哪个 学生 结束 日期 早于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 2004 年 没有 开始 的 工人 的 诞生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 时 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 朋友 在 2004 年 没有 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 或 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 爱丽丝 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
找到 所有 单身 且 当前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 爱丽丝 的 生日 前 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 城市 是 爱丽丝 或 鲍勃 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
与 2004 年 以后 开始 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 出生 的 员工 在 哪里 都 没有 受雇 于 麦肯锡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 时 或 之后 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthdate ) ) )
2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
在 2004 年 没有 开始 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不 在 学生 爱丽丝 结束 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 最后 一天 或 之前 找到 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 计算机科学 专业 的 学生 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
谁 在 学习 计算机科学 以外 的 东西	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 多少 男性 或 女性	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )
谁 是 员工 的 朋友 ， 其 结束 日期 是 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 登录 并 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 是 在线 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
爱丽丝 从 2004 年 开始 做 了 什么 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
找到 员工 从 2004 年 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 员工 的 朋友 ， 他们 的 结束 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
男性 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
一个 或 两个 人 的 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 最 接近 当天 雇用 的 员工 alice 辞掉 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 早于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 不是 2004 年 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 的 人 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 2004 年 之后 的 最后 一天 找到 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 ， 哪些 性别 的 员工 开始 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
计算机科学 学生 什么 时候 完成	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
学生 的 结束 日期 与 学生 爱丽丝 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 单身 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
哪些 员工 不迟于 爱丽丝 开始 上学 的 那天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 第一天 或 之后 找到 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 爱丽丝 同时 或 之前 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
人比 阿 丽斯 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
在 学生 爱丽丝 开始 的 那天 或 之前 开始 的 工人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 和 爱丽丝 有 同样 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.getProperty en.person.alice ( string gender ) ) ) )
学生 的 结束 日期 是 员工 alice 或 更 晚 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 麦肯锡 工作 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
哪个 学生 不迟于 爱丽丝 的 开始 日期 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 一起 或 之后 加入 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 不是 在 布朗 学习	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 2004 年 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
爱丽丝 出生 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 早于 2004 年 的 员工 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 学生 在 爱丽丝 开始 前 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 们 的 最后 一天 是 爱丽丝 最后 一天 的 同一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 爱丽丝 的 生日 那天 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之后 开始 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 2004 年 没有 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 城市 是 2004 年 之前 结束 工作 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 开始 研究 爱丽丝 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 上学 之前 ， 哪些 员工 有 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
性别 与 爱丽丝 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) ) )
爱丽丝 出生 后 的 人 开始 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
结束 日期 在 2004 年 之前 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 登录 的 是 什么 人 并且 有 生日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )
找到 最后 一天 是 爱丽丝 第一天 之前 或 同一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 之后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 180 厘米 高 的 人出 生于	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 最后 一天 的 学生 是 在 爱丽丝 的 最后 一天 或 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 朋友 在 2004 年 之前 完成	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
目前 在线 的 人 是 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
找 我 一个 2004 年 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 出 生于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 同一天 开始 工作 的 员工 爱丽丝 诞生 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
比 2004 年 晚 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 之前 或 2010 年 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 身高 180 厘米 的 人 的 出生日期	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 在 爱丽丝 结束 时 或 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 共同 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
在 2004 年 或 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
谁 的 朋友 的 结束 日期 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 两个 或 两个 以下 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
第一次 加入 他 的 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 出生 城市 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
没有 受雇 于 麦肯锡 的 员工 的 出生 城市 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之后 辞职 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 完成学业 的 日期 或 之后 注册 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 之前 退出 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 2004 年 后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
历史 或 计算机科学	( call SW.listValue ( call SW.concat en.field.computer_science en.field.history ) )
员工 在 2004 年 或 之后 同时 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 的 朋友 ， 那 就是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
目前 在线 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
2004 年 未 完成 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 180 厘米 且 与 爱丽丝 有 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
出生 在 纽约 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 与 爱丽丝 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 爱丽丝 完成 之前 加入 他们 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 开始 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 或 之后 出生 的 学生 是 哪些 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 上学 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最 受欢迎 的 出生地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 2004 年 结束 日期 或 之后 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 所有 不 超过 两份 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 这里 的 时间 少于 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 和 爱丽丝 有 同样 的 老板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 的 专业 不足 2 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 工作 的 那天 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 后 完成 教育 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人有 一个 朋友 谁 是 棕色 大学 以外 的 大学 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 性别 是 爱丽丝 和 鲍勃	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
查找 开始 日期 早于 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 生日 那些 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
与 新 员工 成为 朋友 的 人 将 在 2004 年 之前 或 之后 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 工作 的 同一天 ， 员工 离开 公司 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 开始 日期 是 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 结束 日期 是 2004 年 还是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 哪个 城市 是 180 厘米 高 的 人 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
持有 的 工作岗位 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ) )
开学 日期 小于 2004 年 和 2010 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 出生 的 地方	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )
找到 我 每个 人 至少 和 爱丽丝 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
员工 爱丽丝 的 结束 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 爱丽丝 开始 时 ， 哪些 学生 完成 了 学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日期 小于 员工 爱丽丝 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
这个 人 是 男性 还是 女性	( call SW.listValue ( call SW.concat en.gender.male en.gender.female ) )
在 2004 年 或 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 大多数 大学 学习	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 爱丽丝 的 最后 一天 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出 生于 2004 年 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 是 软件 工程师 还是 项目经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 不是 2004 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 的 生日 之后 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 在 2004 年 的 哪一天 开始 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
哪个 学生 最近 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 爱丽丝 是 朋友 的 男性 性别 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
除了 计算机科学 以外 ， 研究 任何人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
只有 一个 人 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
与 那些 在 2004 年 之前 完成学业 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
棕色 大学 或 ucla	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )
找到 180 厘米 高 的 人 ， 是 一名 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
在 爱丽丝 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 但 有 工作 但 没有 软件 工程师 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最后 一天 不早 于 爱丽丝 的 第一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 短于 181 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 单身 人士 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
命名 一名 学生 ， 不迟于 爱丽丝 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 拥有 最少 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
人们 在 2004 年 到 2010 年 之间 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
将 2004 年 出生 的 人 称为 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 的 开始 日期 不迟于 学生 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 最 常见 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
从 2004 年 以前 开始 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 哪个 朋友 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
那些 在 2004 年 之后 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 之前 开始 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 员工 在 爱丽丝 结束 后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 身高 180 厘米 的 人 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 开始 日期 晚于 2004 年 的 学生 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 在 历史 计算机科学 领域 有 哪些 学科	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 开始 之前 或 同时 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 一名 工人 ， 在 员工 爱丽丝 离开 之前 或 之前 离开	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 一个 出生地 与 高度 为 180 厘米 的 人 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
谁 是 爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
谁 有 两个 或 更 多 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
什么 是 2004 年 以后 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
雇用 至少 两名 雇员 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 和 学生 爱丽丝 同一天 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 研究 领域	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
哪个 学生 的 开始 日期 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 mckinsey 未 聘用 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 员工 爱丽丝 的 同时 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 之前 加入 学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 少于 两人 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 起始 日期 不 等于 2004 年 的 雇员 的 出生地 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
这个 领域 有 多少 学生	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ) )
雇佣 爱丽丝 后 ， 该 员工 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 学习 计算机科学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 和 爱丽丝 有 同样 的 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 研究 领域 于 2004 年 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
那个 计算机科学 专业 学生 的 日期 开始 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
不是 软件 工程师 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
超过 两个 人 的 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 人 是 2004 年 没有 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
找到 不是 男性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string ! = ) en.gender.male ) )
公司 雇用 的 人员 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
单身 并于 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 登录 以及 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
谁 是 2004 年 没有 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 从 2004 年 或 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 性别 低于 两人 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
最后 加入 这项 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 且 关系 状态 为 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 出生地 不是 棕色 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 单身 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
结束 日期 不 在 员工 爱丽丝 结束 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
在 爱丽丝 的 出生日期 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2005 年 或 之后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
任何 出生 在 纽约 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string gender ) ( string = ) en.gender.male ) )
哪个 员工 在 2004 年 或 之后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 大学 不是 棕色 大学 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 没有 开始 的 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 开始 工作 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 180 厘米 高 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 一个 员工 ， 其 结束 日期 晚于 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 在 纽约 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 学生 在 2004 年 以外 开学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 之后 停止 工作 的 人 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
谁 是 180 厘米 或 更 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
什么 是 爱丽丝 的 职称	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
找到 第一天 在 爱丽丝 生日 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 学生 同时 开始 或 在 爱丽丝 开始 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 从 2010 年 或 更 早 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 不到 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 与 alice 相同 职位 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出 生于 2004 年 或 2010 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
2003 年 或 更 早 结束 学业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两所 或 更少 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 大于 2004 年 或 2010 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 最 常见 的 性别	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 是 2004 年 出生 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 人 是 爱丽丝 不是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
找到 我 在 布朗 大学 学习 的 所有 名叫 alice 的 员工 的 所有 结束 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
找到 身高 在 180cm200cm 之间 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
发现 开始 约会 的 员工 性别 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 身高 最多 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 学生 在 爱丽丝 的 最后 一天 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 180 厘米 高 的 人 有着 相同 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 学生 只有 一个 学习 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
谁 是 爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
谁 出 生于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
人们 是 爱丽丝 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
与 180 厘米 高 的 人生 日 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
爱丽丝 开始 时 停止 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 结束 日期 早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
所有 180 厘米 高 的 单打	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
出生 城市 的 学生 ， 其 结束 日期 至少 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 2004 年 没有 开始 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 与 员工 在 学校 的 第一天 相匹配 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
身高 180 厘米 或 以下 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
雇主 不是 麦肯锡 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 2004 年 之前 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 身高 180 厘米 的 人 ， 那 就是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
哪些 学生 在 2004 年 或 2010 年 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
同一天 毕业 的 学生 爱丽丝 开始 了 她 的 新 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 不 学习 计算机科学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 棕色 大学 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string university ) ) )
在 爱丽丝 辞职 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除 软件 工程师 以外 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 开始 日期 是 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 完成 的 学生 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
180 厘米 高 的 人 的 关系 是 什么 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 不 早于 开始 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 开始 日期 与 学生 alice 或 更 高级别 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
他于 2004 年 加入 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 与 爱丽丝 同时 开始 的 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 有 三种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
哪些 学生 开始 的 时间 不早 于 爱丽丝 开始 上学 的 那天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 开始 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 不迟于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 辞职 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 员工 爱丽丝 开始 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 何时 停止 参加 布朗 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
那些 在 2004 年 之后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 alice 或 之前 找到 有 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 之前 工作 日期 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
