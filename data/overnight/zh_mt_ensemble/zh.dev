哪些 菜系 有 提供 午餐 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
有 两个 分店 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
最 多 餐厅 提供 的 餐食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
价格 等级 大于 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
找 一家 有 送货 和 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string delivery ) ) )
位于 市中心 西区 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪家 餐厅 有 服务员 和 三星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
有 服务员 并 适合 团体 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string groups ) ) )
三星 餐厅 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
哪些 餐厅 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) )
什么 餐馆 有 至少 两个 或 三个 价钱 符号 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
哪家 餐厅 有 少于 3 颗星 或 5 颗星 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
有 户外 座位 及 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string outdoor ) ) )
提供 送餐 及 预约 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string reserve ) ) )
在 有 服务员 的 餐厅 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ) )
列出 所有 低于 三星 或 五星 评级 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
不 营业 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
附近 那裹 有 泰国 餐厅 或 juno 比萨 店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
哪個 餐廳 適合團 體聚 廳還 可以 刷卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string credit ) ) )
附近 那个 地方 拥有 最 多 提供 预约 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ) )
哪 道菜 没有 几个 饭馆 能 提供 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( string min ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
评级 低于 3 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
价格 为 2 美元 符号 或 3 美元 符号 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
哪个 街区 有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ) )
哪家 餐馆 有收 信用卡 和 提供 午餐 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
三星 评价 以上 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
提供 午饭 的 餐厅 提供 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string outdoor ) ) )
能够 提供 提前 预约 并 价钱 评级 是 两星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string reserve ) ) )
对 儿童 友好 街区 里 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ) )
孩子 们 喜欢 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪家 三星级 餐厅 适合 小孩 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪些 餐厅 不仅仅 供应 一餐 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ) )
哪个 饭馆 是 泰国 风味 并且 适合 聚餐 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string groups ) ) )
与 泰国 咖啡馆 具有 相同 或 更 高 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
能 找到 一个 适合 小孩 并且 有点 菜 服务 的 饭馆 吗 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string waiter ) ) )
可以 预约 并 适合 小孩 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string kids ) ) )
哪家 餐厅 有 两个 美金 价格 标签 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪些 泰国 饭馆 提供 外卖 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪家 旅馆 小孩 觉得 好玩 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) )
哪些 餐厅 在 中 城西区 的 并且 价格 是 两个 美金 标签 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
可以 刷卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) )
哪家 泰国 饭馆 有 外卖 服务 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
列出 所有 与 泰国 咖啡馆 相同 或 更好 的 价格 评级 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
哪些 餐馆 的 价格 低于 或 等于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
哪个 餐馆 有 服务生 服务 并且 收 信用卡 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string credit ) ) )
泰国 餐厅 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
什么 餐厅 的 价格 评级 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
哪个 泰国 餐馆 适合 小朋友 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
哪个 社区 拥有 最多 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
兩個 美元 符號 評級 及 接受 信用卡 的 餐廳	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
這泰國 小 餐館 提供 些 什麼樣 的 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
提供 和 泰国 咖啡馆 一样 菜系 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
和 泰国 咖啡馆 一样 好 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
备有 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string outdoor ) ) )
提供 送餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string delivery ) ) )
很少 餐厅 停供 的 餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( string min ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
在 餐厅 ， 哪个 菜系 是 适合 集体 用餐 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ) )
哪一種 餐館 適合 与 小孩 一起 享受 一頓 飯	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ) )
提供 送餐 和 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string takeout ) ) )
接受 信用卡 和 预定 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string reserve ) ) )
价格 评级 小于 2 的 餐馆 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
接受 信用卡 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
接受 信用卡 并且 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string waiter ) ) )
有 三十 到 四十个 评价 的 餐厅	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
哪些 欢迎 儿童 的 餐厅 提供 午餐 ?	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
有 服务员 的 三星 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
城中心 偏西 的 一家 提供 预订 服务 的 餐馆 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 餐厅 有 室外 座位 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) )
哪些 适合 儿童 的 餐厅 是 价格 评分 两星 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ) )
2 美元 标志 价格 评级 餐厅 有 什么 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
哪家 餐厅 接受 团体 并 有 服务生	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string groups ) ) )
价钱 评价 2 至 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
和 那家 泰国 咖啡店 价格 价格 等级 差不多 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
有 外座 并 欢迎 团体 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string groups ) ) )
有 团体 座位 的 好 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string groups ) ) )
位于 市中心 西部 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
价格 评价 2 星 并 提供 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
那个 泰 咖啡馆 是 什么 风味 ？	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) )
什么 餐厅 不 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
什么 社区 拥有 两个 以上 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
价格 评级 低于 两 美元 标志 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
哪些 社区 有 两个 以上 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
哪家 餐厅 有外 送 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string delivery ) ) )
什么 餐厅 有 供应 午餐 并且 可以 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
送餐 的 餐厅 供应 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ) )
中等 价位 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 三星级 餐厅 有 两 美元 标志 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
提供 送餐 和 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string takeout ) ) )
提供 午餐 并且 有 外带 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
有 两颗 星 价钱 评分 并且 接受 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
一家 可 接受 订座 并 适合 儿童 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string kids ) ) )
适合 儿童 的 三星 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
在 市中心 西区 找 一家 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
至少 在 两个 社区 都 有 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
泰国 咖啡店 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
适合 家庭 并且 提供 外带 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string takeout ) ) )
中 西城 哪家 餐馆 有 露天 座位 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
接受 信用卡 并且 适合 儿童 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string kids ) ) )
哪家 餐馆 有 午餐 菜单 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
三星 以上 并 有 外带 服务 的 餐厅 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string takeout ) ) )
能 指出 一家 提供 两种 风味 以上 的 饭馆 吗 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
哪个 餐馆 适合 小朋友 就餐 并且 可以 预定 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string reserve ) ) )
哪个 餐馆 坐落于 两个 小区 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
哪个 儿童 餐馆 可以 送餐 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string delivery ) ) )
哪个 餐馆 可以 送餐 并且 提供 午餐 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
三星 以上 并且 适合 团体 用餐 的 餐厅 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
泰国 餐厅 提供 什么 菜 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
哪个 餐厅 是 适合 团体 用餐 并且 接受 信用卡 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string credit ) ) )
接受 信用卡 和 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string reserve ) ) )
哪片 区域 适合 群体 消费 的 餐厅 最 多 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ) )
给 一个 有 两星 价格 评分 的 餐馆 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
星级 评分 最多 是 三 或者 是 五 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
价格 评分 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ) ) )
城中 西部 可以 外带 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
在 中城 西面 评分 为 3 星 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
列出 所有 比 两个 或者 三个 美金 符号 还 便宜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
星级 评分 至少 是 泰国 餐馆 评分 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
拥有 3 星 评分 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
提供 午餐 并且 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string meals ) ( string = ) en.food.lunch ) )
在 中城 西面 社区 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
泰 咖啡馆 有 什么 菜系 ？	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) )
有 3 或者 以下 的 价格 评分 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
哪些 食物 是 两家 不同 的 饭店 都 供应 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
哪些 餐厅 接受 预订 并 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string outdoor ) ) )
一个 有 2 星 评分 适合 孩子 们 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
哪些 餐馆 可以 外食 并且 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
价格 评分 在 两个 美金 符号 以下 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
适合 大 集体 并且 提供 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
提供 午餐 和 送餐 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
那 两个 饭馆 有 什么样 的 饭菜 呀 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
有 服务生 并且 适合 集体 聚餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string groups ) ) )
提供 午餐 并且 有 室外 座位 设施 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐馆 有 提供 午餐 而且 接受 预定	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
一家 有 泰国 料理 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
提供 午餐 的 餐厅 有 什么 菜系 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
列出 所有 邻近 西 市中心 或者 切尔西 的 餐馆	( call SW.listValue ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) )
提供 儿童 餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ) )
什么 邻近地区 有 多于 两家 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
哪些 酒店 的 价格 评分 是 少于 两颗 或 三颗 星 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
泰国 咖啡馆 和 朱诺 披萨 提供 哪种 餐 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 餐馆 在 泰国 咖啡馆 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
哪个 餐馆 提供 泰国 餐 并且 有 室外 就餐 环境 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
星级 评分 小于 3 星级 或 5 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
接受 预订 并且 接受 信用卡 的 餐厅 ?	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string credit ) ) )
比 泰国 咖啡馆 便宜 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
接受 信用卡 的 餐厅 提供 哪些 餐 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ) )
哪些 餐厅 提供 午餐 和 室外 座位 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string outdoor ) ) )
整体 评分 三颗 星 并且 提供 送餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string delivery ) ) )
价格 实惠 的 餐厅 设有 户外 座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
这 餐馆 对 团体 聚餐 很 友好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) )
什么 餐厅 供应 两种 不同 类型 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 饭馆 适合 聚餐 且 对 小孩 好 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string groups ) ) )
有 服务员 点菜 的 饭馆 会 有 什么 菜 呢 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ) )
这 餐馆 和 泰国 咖啡厅 同享 一个 区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) ) )
餐廳 有 外 送 跟 提供 戶外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string outdoor ) ) )
哪个 两 美元 价 的 饭馆 接受 信用卡 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
外卖 餐厅 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ) )
那个 泰国 饭馆 的 价格 范围 是 多少 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
哪些 餐馆 接受 预定 并且 适合 孩子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string kids ) ) )
列出 符合 或 低于 2 或 3 美元 符号 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
一个 泰国 餐馆 的 定位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string reserve ) ) )
接受 信用卡 并且 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string credit ) ) )
位于 市中心 西区 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 两个 美金 符号 的 餐馆 有 室外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪些 餐馆 提供 多于 两类 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
可以 列出 所有 价格 评分 在 两颗 到 三颗 的 餐厅 吗 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
泰国 菜馆 有 哪些 菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
餐馆 平均 评分 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ) ) )
哪些 餐厅 适合 集体 聚餐 并且 有 服务员 服务 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string waiter ) ) )
提供 外带 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ) )
价格 评分 少于 两颗 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
列出 所有 价格 评分 至少 有 两颗 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 至少 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 菜系 餐厅 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( string min ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
哪个 酒店 有 最少 的 价格 评分 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
三颗 星 并且 接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 餐厅 的 价格 评分 高于 泰国 咖啡馆 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 食物 是 哪家 泰国 小厨 没有 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
餐館 有戶 外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string outdoor ) ) )
哪些 社区 的 餐厅 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
哪一個 社區 有 最 多 的 餐館 會 接受 訂位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ) )
提供 午餐 和 晚餐 的 餐廳	( call SW.listValue ( call SW.concat en.food.lunch en.food.dinner ) )
可以 预约 和 适合 团体 用餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string reserve ) ) )
哪些 泰 餐馆 接受 订位 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string reserve ) ) )
提供 多國 兩種 的 美食 的 餐館	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪些 社区 有 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ) )
哪个 饭馆 我能 去 吃 午餐 并且 有 服务员 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string waiter ) ) )
附近 是 市中心 西区 ， 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string waiter ) ) )
有 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
有 三星 评价 和 二星 价位 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
列出 位于 市中心 西部 或 切尔西 的 所有 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
外卖 适合 的 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ) )
有 服务员 和 收 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string credit ) ) )
餐廳 電話 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
哪个 餐厅 适合 带 小孩子 去 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string kids ) ) )
可訂 位 的 餐廳 有 提供 哪個 菜式	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ) )
哪家 餐厅 有 提供 外送	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ) )
可以 提前 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ) )
哪些 餐厅 有 三颗 星 并且 可以 刷卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
提供 外带 和 送餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string delivery ) ) )
列出 所有 低于 3 星 或 5 星 的 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
哪些 餐厅 有 室外 座位 并且 提供 外带 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string takeout ) ) )
哪个 餐厅 适合 集体 聚餐 并且 提供 室外 座位 ?	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string groups ) ) )
提供 外卖 的 餐厅 有 什么 菜系 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ) )
和 泰国 咖啡馆 不 一样 的 菜系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
提供 送餐 并且 整体 评分 三星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 泰国 餐厅 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string waiter ) ) )
哪个 餐厅 提供 室外 座位 和 送餐 服务 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string outdoor ) ) )
哪家 餐厅 有 午餐 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
在 中城 西部 价格 两颗 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
这家 餐厅 的 价格 评分 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
哪些 餐馆 没有 三颗 星 的 评价 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string ! = ) ( number 3 en.star ) ) )
哪些 酒店 的 价位 评级 有 两颗 星 而且 提供 快递 服务 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string delivery ) ) )
哪些 餐馆 的 评价 在 三颗 星到 五颗星 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
哪个 餐馆 适合 小孩 去 并且 提供 午餐 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
什么 餐厅 供应 少于 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ) )
哪家 餐厅 提供 午餐 并 有 外 送 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
一家 价格 适中 的 泰餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
什么 好孩子 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么样 的 饭馆 接受 信用卡 并且 送 外卖 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string delivery ) ) )
提供 送餐 服务 并且 接受 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string credit ) ) )
提供 午餐 并且 比较 宽敞 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
哪个 社区 有 至少 两家 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
有 服务生 服务 的 餐厅 有 哪些 菜系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ) )
哪家 餐厅 提供 的 菜肴 少于 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
与 泰国 咖啡馆 或 比萨 店 juno 有 类似 食物 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
哪些 餐厅 有 两个 价格 标签 的 并 适合 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string groups ) ) )
一个 有 室外 座位 并且 接受 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string credit ) ) )
哪些 街坊 有 至少 两间 餐馆 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
市中心 西部 一间 适合 小孩 食用 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string kids ) ) )
那 家 泰国 小厨 提供 什么 餐饮	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string !type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
哪些 儿童 友好 的 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ( string kids ) ) )
什么样 的 饭馆 有 服务员 点菜 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string waiter ) ) )
星级 评分 为 3 或 5 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
在 社区 里 并 有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ) )
在 中 城西区 的 适合 团体 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
有 外卖 的 3 颗星 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 餐馆 有 室外 座位 并且 提供 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string delivery ) ) )
那个 有 泰国 咖啡馆 或者 朱诺 披萨 的 区域 是 哪个 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
哪些 社区 有 提供 外送 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ) )
哪个 餐馆 在 两个 社区 以内 提供 服务	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
在 附近 区域 的 泰国 咖啡馆	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
哪些 价格 两星 的 餐厅 是 适合 集体 用餐 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有 两个 价格 符号 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有 室外 座位 的 三星 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string outdoor ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 拥有 最多 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ) )
既 可以 外带 又 可以 集体 聚餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string groups ) ) )
适合 两人 进餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ) )
有 外卖 并且 可以 刷卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string credit ) ) )
一家 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
可以 提前 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string kids ) ) ( string reserve ) ) )
有 外卖 并且 可以 刷卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string takeout ) ) ( string credit ) ) )
什么 餐厅 供应 餐点 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string !type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) ) )
接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string credit ) ) )
可以 外送 并 收卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string credit ) ) )
哪些 餐厅 是 比 那家 泰国 小厨 评价 低 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
饭馆 的 平均价格 等级 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string price_rating ) ) ) )
可以 提前 预约 并 有 外 送 的 餐厅 ·	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string delivery ) ) ( string reserve ) ) )
接受 提前 预约 还 可以 送餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string reserve ) ) ( string delivery ) ) )
可以 送餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string delivery ) ) )
哪家 餐厅 有 服务员 并 有 两个 美金 价格 标签 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string waiter ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
找 一家 供应 午餐 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string !type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
米 布丁 或 软蛋 饼 是 给 哪种 餐种 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
哪些 菜谱 有 一样 菜 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string cuisine ) ) )
哪个 2004 年 发布 的 食谱 是 用到 牛奶 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
列出 米饭 布丁 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
哪个 食谱 是 最先 发布 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 食谱 拥有 两道 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
哪个 食谱 的 发布 日期 没有 在 米糕 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
给 我 看看 烹饪 时间 等于 大米 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 需要 比 米饭 布丁 更 多 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 会 花费 小于 或者 等于 大米 布丁 准备 的 时长 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪个 食谱 是 给 小于 2 个人 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
显示 最 多 需要 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
有 牛奶 的 在 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪个 不是 午膳 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
一共 有 多少 个 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪个 食谱 的 菜品 种类 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( string cuisine ) ) )
什么 食谱 花费 的 时间 与 做 米糕 布丁 用 的 时间 相等 或 更少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪 一餐 的 食谱 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪个 午餐 食谱 在 准备 时 需要 用到 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 食谱 不是 用于 午膳 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) )
找到 需要 两种 食材 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
哪个 菜谱 的 食材 清单 最短	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
给 我 看 在 2004 年 出版 的 且 需要 用到 牛奶 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
米 布丁 是 一道 什么 菜	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
给 我 展示 烹饪 时间 大于 或者 等于 米饭 布丁 的 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 展示 有 超过 两个 食谱 的 餐食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
给 午餐 食谱 命名	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
给 我 展示 在 米饭 布丁 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 菜谱 是 只 在 一道 菜里 出现 过	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
给 我 展示 少于 两个 美食 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
米 布丁 不 需要 的 食材	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 是 一个 来自 不多过 两种 风味 的 菜谱 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
什么样 的 菜谱 是 适合 两餐 或者 少于 两餐 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
在 米 布丁 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 食谱 可以 做 最 多 的 饭菜	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
哪 种 食谱 的 准备 时间 是 跟 米 布丁 的 烹饪 时间 是 一样 或 更长 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
列出 带有 牛奶 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪个 食谱 是 可以 在 米 布丁 的 准备 时间 或 更长 的 时间 内 准备 好 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 与 米饭 布丁 同 一餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
2004 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪 一餐 的 食谱 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
给 我 看 有 少于 两道 菜谱 的 餐食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
找到 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
列出 和 米 布丁 同一天 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
在 2004 年 发布 的 什么 食谱 可以 做 一顿 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
给 我 看 和 米 布丁 同一天 发布 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
哪些 菜谱 需要 两种 或者 更 多 的 食材 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
列出 有 牛奶 作为 材料 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪些 食谱 是 在 2004 年 之前 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪个 菜谱 可以 用 和 米 布丁 相同 或者 更少 的 时间 来 准备 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
那个 食谱 有 几种 食材	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
米 布丁 作为 一道 菜 的 是 哪 一餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
什么 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 是 最 多 菜谱 中 需要 的 食材 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪个 菜谱 需要 比 米饭 布丁 长 的 准备 时间 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
平均 烹饪 时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cooking_time ) ) ) )
哪些 食谱 是 的 准备 时间 跟 米 布丁 是 一样 或者 更 短 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 看 和 米 布丁 同一天 或 之后 发布 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
找 一个 准备 时间 不比米 布丁 烹饪 时间 长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
米 布丁 的 食谱 是 什么 时候 发布 的 ？	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
2004 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
这个 菜谱 的 烹饪 时间 有 多长 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cooking_time ) ) ) )
找到 准备 时间 比米 布丁 快 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
烹饪 时间 比 米糕 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 菜谱 做出 得 菜 最少 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
告诉 我 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 菜谱 需要 和 米 布丁 相同 的 食材 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
在 2004 年 或 之后 发布 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪个 是 最后 推出 的 菜谱 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 午餐 食谱 是 2004 年 发布 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪个 食谱 是 2004 年 之前 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 菜谱 是 在 米 布丁 之后 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 原材料 被 小于 2 个 食谱 所 需要	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪 种 食谱 需要 两种 食材 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
哪种 餐种 是 有 两种 以下 食谱 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
什么 食谱 是 有 最少 数量 的 餐种 的 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
哪个 菜谱 是 在 2004 年 之前 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
给 我 看 在 2004 年 或者 之前 发布 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
那里 有 多少 种食材 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
在 最少 的 菜系 里 出现 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string cuisine ) ) )
米 布丁 和 乳蛋 饼 的 食材 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
找 一个 不 适合 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
什么 食谱 是 在 最 多 的 菜系 里面 出现 的 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( string cuisine ) ) )
找个 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
给 我 看 不是 在 2004 年 发布 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
哪 一个 在 2004 年 发布 的 菜谱 需要 有 牛奶 做 准备 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 饭菜 需要 少于 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
给 我 看 一些 烹饪 时间 等于 米饭 布丁 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
單一 材料 食譜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
在 2004 年 或 2010 年 发布 了 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
给 我 看 需要 最少 食材 的 菜谱 。	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
哪个 菜谱 是 有 最少 的 食材 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
给 我 看 有 两个 菜谱 的 餐点 。	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪个 食谱 是 最早 发布 的 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 食谱 适合 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
米 布丁 或者 乳蛋 饼 所 需要 的 食材 是 哪个 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
烹饪 时间 不 长于 米 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 的 准备 时间 是 跟 米 布丁 烹饪 时间 相同 或 更 短 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食材 不 在 米 布丁 的 菜谱 里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
告诉 我 米饭 布丁 的 食材	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
哪 一餐 有 两个 食谱 或者 更 多	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪 种 食谱 是 被 两种 不同 的 餐种 用到 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
什么 食材 在 米 布丁 里 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
告诉 我 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 餐是 不用 米 布丁 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 食谱 比 米饭 布丁 需要 更 多 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食材 是 做 乳蛋饼 或者 米 布丁 需要 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
总共 有 多少 食谱 被 列出 了	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
什么 食谱 是 在 米饭 布丁 之后 或 同一天 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 与 做 米 布丁 需要 花费 相同 或 更 多 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪些 食谱 在 2004 年 或 2010 年 之前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
找到 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
展示 给 我 用到 的 原料 少于 两种 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
给 我 看 需要 两种 食材 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
午餐 菜谱 需要 什么 食材 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
给 我 看 包括 了 两种 或 更 多 食材 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
给 我 看 需要 牛奶 或者 菠菜 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
午餐 或 晚餐	( call SW.listValue ( call SW.concat en.meal.lunch en.meal.dinner ) )
哪个 菜谱 需要 牛奶 或者 菠菜 ？	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
那里 有 多少 个 菜谱 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
有 两种 或 更少 菜谱 的 餐食 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪 一种 做法 烹制 的 时间 多于 或 等于 大米 布丁 的 准备 时间 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 餐食 结合 了 米 布丁 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
什么 菜谱 可以 做 一道 非 午餐 餐食 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
给 我 说 一个 发布 日期 和 米 布丁 菜谱 的 发布 日期 相同 或者 更晚 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 食谱 的 准备 时间 是 最 短 的 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
一个 烹饪 时间 比 米饭 布丁 准备 时间 更 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 看 在 2004 年 发布 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
米 布丁 菜肴 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
2004 年 发布 的 食谱 是 给 哪些 餐种 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
给 我 看 为了 两顿 餐食 而 设计 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
给 我 展示 需要 准备 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
找出 可以 用 在 所有 餐种 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
给 我 展示 烹饪 时间 少于 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 展示 不是 在 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
哪些 食谱 可 用于 大多数 餐食	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
给 除了 午餐 之外 的 餐种 用 的 一个 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
什么 食谱 准备 时间 不 超过 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 看 有 两道 或 更少 菜谱 的 餐食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
少于 两种 菜肴 的 食谱 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
给 我 看 少于 两种 菜肴 的 食谱 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
哪些 菜谱 需要 两种 以上 的 食材 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
只有 一种 食材 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
哪些 食谱 需要 牛奶 或 菠菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
什么 是 最 常用 的 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪些 菜谱 是 2004 年 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪个 食谱 的 烹饪 时间 是 比米 布丁 长 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 餐点 分享 两个 或 更 多 的 菜谱 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
什么 餐点 包含 有 至少 两个 菜谱 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
哪种 食材 在 两个 或 以上 菜谱 中 需要 用到	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
列出 跟 米 布丁 用 在 同 一种 餐种 的 食谱 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
给 我 指出 烹饪 时间 跟 米 布丁 一样 或 更长 的 食谱 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 菜谱 是 最新 发布 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 食谱 至少 需要 两种 食材 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
展示 给 我 可以 做 两顿 饭 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
最后 发布 了 什么 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
给 我 看看 2004 之后 推出 的 菜谱 吧 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪个 菜谱 需要 和 米饭 布丁 一样 的 准备 时间 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
给 我 看 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.concat en.meal.lunch en.meal.dinner ) )
米 布丁 的 准备 步骤 是 什么	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
食谱 的 烹饪 时长 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cooking_time ) ) ) )
乳蛋 饼 和 米 布丁 的 原材料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
晚于 2004 推出 的 菜谱 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪餐 有 少于 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ) )
米 布丁 的 食谱 时 什么 时候 发布 的	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
展示 给 我 至少 在 2004 年 发布 的 一个 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
展示 给 我 至少 适合 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string !type ) ) ) )
给 我 看看 那些 在 2004 推出 的 菜谱 吧 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪个 菜谱 最多 有 不 超过 两种 风味 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
那个 菜谱 需要 两种 或 更 少些 用料 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
帮 我 找到 需要 多于 一种 食材 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string !type ) ) ) )
展示 给 我 不 在 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string !type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
科比 布莱恩特 打 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) )
科比 布莱恩特 在 至少 出赛 三场 的 赛季 平均 有 多少 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
说出 在 每个 赛季 篮板球 不比 科比 布莱恩特 多 的 一个 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 最多 有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
记录 科比 布莱恩 2004 年 的 总共 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_assists ) ) )
科比 布莱恩特 每 赛季 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
哪个 球员 在 一个 赛季 中得 了 三分 或者 更 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 迄今为止 谁 失误 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
记录 在 任何 赛季 总 篮板球 次数 多于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
科比 布莱恩特 在 得 了 三分 的 赛季 里 有 几个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
哪个 球员 跟 科比 布莱恩 有 一样 的 最高 得分 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 有 比 科比 布莱恩特 更少 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 为 湖人 效力 的 时候 平均 每个 赛季 有 多少 个 篮板球 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
说出 一个 比 科比 布莱恩特 抢断 次数 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 在 科比 布莱恩特 队伍 中 的 其他 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
科比 布莱恩特 每 赛季 得 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_points ) ) )
有 （ 效力 过 ） 最 多 球队 的 球员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 有 3 个 犯规 的 赛季 有 多少 个 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_assists ) ) )
科比 布莱恩特 场均 犯规 多 还是 篮板 多	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
科比 布莱恩特 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_rebounds ) ) )
这个 位置 的 球员 号码 是 多少 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string !type ) ) ) )
谁 比 科比 布莱恩特 的 篮板 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 三次 失误 的 赛季 中 找到 科比 布莱恩特 贡献 的 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
谁 跟 科比 布莱恩特 打球 的 位置 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 的 盖帽 数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 里 打 了 最少 的 比赛 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 这个 赛季 得 了 至少 三分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那个 在 任意 赛季 贡献 了 最 多 抢断 的 球员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 打出 了 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
在 这个 赛季 中 科比 布莱恩特 有 3 次 失误 的 比赛 中 完成 了 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
科比 - 布莱恩特 在 整个 赛季 的 总共 3 场 比赛 中有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
上赛季 每场 比赛 得分 超过 三分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
整个 赛季 盖帽 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 犯规 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一年 中 谁 获得 的 分数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 次 抢断 的 球员 科比 · 布莱恩特 上场比赛 的 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
科比 本赛季 得分 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
取得 四个 以下 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
多少 个 赛季 科比 布莱恩特 一直 是 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
在 他 得 了 三次 助攻 的 赛季 中 科比 布莱恩特 打 的 是 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 整个 赛季 犯规 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
哪个 球员 和 科比 布莱恩特 有 同样 次数 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
在 这个 赛季 中有 三次 犯规 的 科比 布莱恩特 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
说出 一个 出赛 多于 三场 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 是 比 科比 布莱恩 取得 更少 的 篮板球 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
记录 2004 年 赛季 科比 布莱恩 取得 的 分数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
科比 布莱恩 在 全 赛季 拿到 三个 抢断 的 时候 他 的 失误 次数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
有 哪个 球员 是 没有 三个 失误 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 打 了 不到 三场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 拿 了 三次 犯规 的 时候 ， 他 在 那个 赛季 打 了 多少 场球 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
那个 球员 得 了 不止 三分 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 2004 年 有 多少 个 抢断 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
哪个 球员 有 少于 三个 助攻 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 的 犯规 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 所有 赛季 中有 过 三次 以上 的 失误 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 没有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 在 一个 赛季 有 不 多于 三次 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 不到 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 一个 赛季 有 多少 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_steals ) ) )
哪个 球员 每个 赛季 至少 得 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 个 盖帽 的 比赛 有 多少 场	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
科比 布莱恩特 打 过 超过 3 场 比赛 的 所有 赛季 有 多少 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 哪个 赛季 有 3 个 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
为 不 超过 两个 球队 效力 过 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 作为 控球 后卫 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_games_played ) ) )
Kobe Bryant 在 哪个 队有 过 三次 犯规 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
谁 有 在 一个 赛季 里 取得 最少 抢断 的 记录 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最 多 的 全 赛季 得分 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 取得 了 跟 科比 布莱恩 一样 或 更 多 的 助攻 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 已有 超过 三个 丢球 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 在 多少 个 比赛 里面 出现 了 三次 犯规 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
当有 过 三个 助攻 后 ， Kobe Bryant 通常 在 一个 赛季 里 能 有 多少 个 助攻 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
哪个 球员 的 盖帽 数量 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 特定 赛季 中 找到 助攻 分数 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 至少 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 科比 布莱恩特 为 湖人队 效力 的 赛季 有 多少 次 失误 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 布莱恩 取得 三次 犯规 的 时候 他 在 打 哪个 位置 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
科比 布莱恩 有 助攻 的 赛季 里面 有 多少 次 失误 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 3 次 盖帽 时 ， 有 多少 次 失误 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
科比 布莱恩 在 2004 年 取得 了 多少 分 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
哪个 球员 在 一个 赛季 里 打 的 比赛 少于 Kobe Bryant 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 盖帽 次数 不少 于 3 次 的 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 篮板 次数 少于 或 多于 3 次 的 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 是 在 2004 年 或 2010 年 比赛 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
整个 赛季 至少 上场 3 次 的 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 为 最 多 球队 效力 过 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 科比 布莱恩 出现 三次 犯规 的 赛季 里 取得 的 得分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
谁 跟 科比 布莱恩 取得 了 同样 数量 的 篮板球 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 在 他 取得 了 三次 助攻 的 赛季 里 打 了 多少 场 比赛 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
科比 布莱恩 在 哪个 队伍 里 打 控球 后卫 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
哪个 球员 有 跟 科比 布莱恩特 一样 最少 次数 的 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 三次 抢断 的 科比 - 布莱恩特 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
什么 赛季 科比 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
科比 布莱恩特 在 有 三个 篮板球 的 赛季 总共 助攻 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
一个 赛季 少于 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 最少 的 助攻 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 全 赛季 至少 有 3 个 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 在 他 取得 3 个 篮板球 的 赛季 里 取得 了 多少 分 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
科比 布莱恩 在 哪个 赛季 是 打 控球 后卫 的 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
全 赛季 有 超过 或者 小于 3 个 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 有 3 个 助攻 的 时候 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
从来 没 在 一个 赛季 有 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
除了 科比 · 布莱恩特 之外 ， 哪个 球员 在 赛季 中 的 助攻 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 哪个 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
科比 布莱恩特 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) )
科比 布莱恩特 在 三场 比赛 中有 几次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
科比 在 得到 3 分后 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
哪个 球员 在 这个 赛季 有 三次 或者 更少 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 的 得分 和 科比 布莱恩特 的 最低 分 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 有 最少 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 2004 年 有 几次 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
哪些 球员 在 一个 赛季 中有 至少 三分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 科比 布莱恩特 有 三个 篮板球 的 赛季 他 有 多少 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
在 一个 赛季 中 打过 最 多场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 3 次 失误 的 赛季 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
哪个 球员 打 小于 2 个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 全 赛季 的 得分 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 这个 赛季 最多 打 了 3 场 比赛 球员 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 他 有 3 个 抢断 的 赛季 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
谁 在 一个 赛季 里 打 了 最少 的 比赛 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 助攻 数最多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 整个 赛季 都 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
本赛季 有 三次 或 更少 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
运动员 科比 布莱恩特 在 有 3 次 犯规 的 赛季 助攻 次数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_assists ) ) )
在 所有 赛季 犯规 次数 不 多于 3 次 的 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 几个 赛季 有 了 超过 三次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
科比 布莱恩 在 犯 了 3 次规 之后 取得 了 多少 次 封阻 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
科比 布莱恩 为 哪 一队 取得 了 三个 篮板球 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
谁 每个 赛季 取得 了 最少 的 助攻 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 在 失误 超过 3 次 的 赛季 有 多少 个 封阻 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
在 任何 一个 赛季 ， 有 哪些 球员 总得分 至少 三分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 比 科比 布莱恩特 少 或者 相同 的 助攻 次数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 全部 赛季 助攻 次数 和 科比 一样 甚至 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 场 比赛 科比 布莱恩特 出场 并 没有 拿下 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 的 总 犯规 次数 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 得分 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 一个 赛季 里 打 了 最 多 的 比赛 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 一名 至少 和 科比 一样 多场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 科比 布莱恩特 得到 了 3 次 抢断 的 赛季 中 他 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
在 只 打 三场 比赛 的 赛季 里 ， Kobe Bryant 能 有 多少 助攻 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
哪个 球员 效力 过 少于 两个 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 一个 在 任何 一个 赛季 中 助攻 数量 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 本赛季 没有 三次 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 整个 赛季 有 3 个 篮板 的 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
整个 赛季 有 超过 3 次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 三次 抢断 大 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
科比 布莱恩特 在 一个 总 阻拦 次数 为 三 的 赛季 中有 多少 次 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
在 一个 赛季 中 和 科比 布莱恩特 打 了 一样 多 的 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
多少 个 球员 在 一个 赛季 中有 比 科比 布莱恩特 更 多 的 失误 次数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 全 赛季 中有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
在 一个 有 三次 失误 的 赛季 中 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 打 了 三场 比赛 的 赛季 中有 几次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 这 赛季 中得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_points ) ) )
在 一个 赛季 中 不 多于 三次 阻拦 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 失误 后 有 几次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
一个 赛季 中 打 了 最 多 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
控球 后卫 科比 布莱恩特 在 一个 赛季 中 的 阻挡 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
哪个 球员 的 每 赛季 平均 篮板球 数 和 科比 布莱恩特 相似	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
科比 布莱恩 在 得到 3 个 抢断 的 赛季 获得 了 多少 分 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
哪位 球员 至少 有 三次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 整个 赛季 打 了 三场 球 效力 的 球队 是 哪支	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
在 一个 赛季 中有 三次 犯规 的 球员 科比 布莱恩特 在 该 赛季 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
今年 到 目前为止 科比 布莱恩特 打 了 几场 球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) )
哪位 球员 参加 比赛 的 场数 是 比 科比 布莱恩 少 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 只有 3 个 助攻 赛季 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
在 一个 赛季 犯规 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 参加 比赛 最少 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 在 2004 年 没 参加 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
列出 在 任意 赛季 都 没有 刚好 3 个 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 同一个 赛季 至少 跟 科比 布莱恩 有 相同 次数 的 犯规 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 个 盖帽 的 时候 有 多少 个 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
科比 本赛季 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 在 2004 赛季 的 总得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
科比 布莱恩 犯规 了 3 次 的 那场 比赛 里 他 助攻 了 多少 次 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_assists ) ) )
哪 一个 球员 打 了 不到 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 科比 布莱恩特 有 3 次 失误 的 赛季 中 ， 有 多少 次 助攻 归于 他	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
科比 完成 了 3 次 盖帽 后 他 送 出 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
科比 是 打 哪个 位置 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
一个 赛季 有 超过 三次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 两次 以上 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 哪些 赛季 打过 球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
整个 赛季 助攻 数 少于 3 个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
整个 赛季 篮板 数 超过 3 个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
赛季 失误 不别 科比 布莱恩特 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 本赛季 有 超过 三次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 效力 过 的 球队 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 比赛 场次 数量 跟 科比 布莱恩特 一样 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 哪个 球队 打 过 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
科比 布莱恩特 在 洛杉矶 湖人 有 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
哪个 运动员 在 整个 赛季 里面 只有 三次 以下 犯规 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 科比 布莱恩特 打 控球 后卫 的 赛季 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_games_played ) ) )
哪个 球员 在 一个 赛季 中 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 跟 科比 布莱恩特 的 盖帽 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 当 控球 后卫 的 赛季 有 多少 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
在 一个 赛季 中 的 总 篮板球 次数 不 多于 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 打 的 比赛 数比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 次数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 助攻 的 总 次数 比 球员 科比 布莱恩特 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 本赛季 的 3 场 比赛 中 ， 球员 科比 布莱恩特 的 失误 次数 是 多少 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
科比 布莱恩特 在 有 3 个 抢断 的 赛季 有 多少 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 这 赛季 中有 三次 篮板球 时 他 为 哪个 队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
在 一个 赛季 中 总得分 不是 三 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 全 赛季 的 盖帽 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 少于 3 次 犯规 的 赛季 科比 布莱恩特 有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_assists ) ) )
哪个 球员 在 全 赛季 最多 有 3 个 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一位 球员 在 一个 球季 中 比 科比 布莱恩特 的 失误 要少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
从 2004 赛季 开始 科比 布莱恩特 一个 赛季 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_assists ) ) )
谁 有 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 超过 3 次 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 得到 的 助攻 数比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 有 3 次 篮板 后 科比 布莱恩特 有 多少 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
哪个 球员 赛季 得分 比 科比 布莱恩特 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一场 比赛 中有 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪 一个 球员 像 科比 一样 一个 赛季 打 了 最 多 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪 一个 球员 效力 过 的 球队 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
是否 有 一名 球员 在 特定 赛季 中 的 失误 次数 与 科比 失误 次数 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪 一个 球员 与 球队 无关 或 与 一个 球队 有关	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪 一名 球员 在 他们 的 赛季 中 失误 次数 跟 科比 相同 或者 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 这个 赛季 抢下 的 篮板 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 三个 失球 的 赛季 里 ， Kobe Bryant 有 多少 个 蓝 板球 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
谁 的 盖帽 超过 或者 少于 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 洛杉矶 湖人队 或者 克里夫兰 骑士队 效力 过	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩 只有 3 个 篮板 的 是 在 哪个 球季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
洛杉矶 湖人队 名单	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string team ) ) )
哪个 球员 没有 比 科比 布莱恩特 更 多 的 篮板球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 已经 打 了 多少 场 比赛 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
哪 一个 赛季 科比 布莱恩特 有 3 次 犯规 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
科比 布莱恩 在 赛季 里 的 平均 得分 是 多少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 为 湖人队 效力 期间 ， 科比 布莱恩特 平均 一个 赛季 的 助攻 是 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
说出 盖帽 数 少于 或 多于 3 个 的 那些 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 得分 少于 3 分 的 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 和 科比 布莱恩特 在 同一 只 球队 效力 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
和 科比 布莱恩特 打 同一 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 在 任何 一个 特定 赛季 里 和 Kobe Bryant 有 一样 的 助攻 次数 的 那些 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布赖恩 特 单个 赛季 取得 3 次 盖帽 时 效力 的 是 哪支 球队 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
科比 布赖恩 特打 哪个 位置 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
谁 得分 不 多于 3 分 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 所有 赛季 中 参与 最 多 球赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布赖恩 特 取得 三次 盗球 时 打 的 是 哪个 位置 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
科比 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
作为 控球 后卫 的 科比 布莱恩特 有 几次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
在 一 赛季 有 三分 的 科比 布莱恩特 打 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
整个 赛季 有 至少 3 个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 有 球员 有 最 多 失误 数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
洛杉矶 湖人队 的 科比 布莱恩特 一共 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 布莱恩特 有 多少 个 赛季 正好 有 3 次 失误 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
洛杉矶 湖人队 的 科比 布莱恩特 一个 赛季 的 犯规 次数 。	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
和 科比 布莱恩特 的 助攻 次数 相同 或 更 多 的 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 助攻 数 这个 赛季 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 赛季 中 助攻 次数 多于 3 次 的 一个 运动员 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
下个 赛季 科比 布莱恩特 会 打 多少 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
科比 在 一个 赛季 中有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
在 一个 赛季 中 的 得分 不少 于 球员 科比 布莱恩特 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 比 科比 布莱恩特 出赛 更 多场 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
洛杉矶 湖人队 的 科比 布莱恩特 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
什么 是 科比 · 布莱恩 斯 每个 赛季 的 平均 抢断 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
什么 球员 拥有 与 科比 · 布莱恩特 相同 或 更 多 数量 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 至少 有 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 与 科比 布莱恩特 有 同样 数量 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 总共 参加 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) )
科比 布莱恩特 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
科比 本赛季 有 多少 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
哪个 球员 比 科比 布莱恩特 打 的 比赛 一样 多 或 更少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 不少 于 3 个 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 一个 赛季 的 得分 至少 和 科比 布莱恩特 一样 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 个 篮板 的 赛季 打 的 是 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
哪个 球员 有 超过 3 个 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 一个 有 不 多于 三个 犯规 的 球员 吧 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 每个 赛季 的 助攻 都 比 科比 布莱恩特 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一 整个 赛季 得分 小于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 3 个 失误 的 赛季 中有 多少 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
科比 在 哪一年 有 三次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
有没有 球员 在 一个 赛季 参加 了 多于 三场 比赛 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 在 一个 特定 赛季 比 科比 布莱克 特有 更 多 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有过 三个 犯规 的 Kobe Bryant 得 了 多少 分 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
科比 布莱恩 在 犯规 了 3 次 那场 比赛 失误 了 多少 次 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
科比 布莱恩 在 取得 3 次 抢断 那个 赛季 里 犯规 了 多少 次 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
科比 布莱恩 为 哪支 球队 效力 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
哪个 球员 得分 少于 3 分 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 打 了 多少 个 赛季 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
科比 布莱恩 作为 控球 后卫 得 了 多少 分 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
在 一个 赛季 里 比 科比 布莱恩 参加 了 更 多 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 他 的 助攻 数量 至少 与 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 3 个 篮板 的 科比 - 布莱恩特 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
一个 赛季 失误 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 在 洛杉矶 湖人 打 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
这个 赛季 科比 布莱恩特 投了 多少 个 三分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
科比 布莱恩 在 一个 赛季 有 3 次 抢断 的 时候 打 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
2004 年 科比 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
哪个 球员 在 赛季 里 是 达到 跟 科比 布莱恩 一样 的 抢断 率 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 这个 赛季 盖帽 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 场 比赛 科比 投中 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
科比 布莱恩特 参加 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
哪些 球员 跟 科比 布莱恩特 打 相同 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 普通 赛季 中 平均 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
控球 后卫 科比 布莱恩 的 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
总共 有 多少 球员	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string !type ) ) ) )
哪些 球员 有 在 两个 或者 更少 的 球队 效力 过	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 那个 他 抢断 三次 的 赛季 ， 科比 布莱恩特 负责 了 几个 篮板球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
在 赛季 中 科比 布莱恩特 有 几次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 为 哪 支队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string team ) ) )
哪些 球员 在 一个 赛季 中 做 的 阻拦 次数 和 科比 布莱恩特 最多 的 阻拦 次数 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩 在 他 打 了 三场 比赛 的 那个 赛季 的 篮板球 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 布莱恩 在 2004 年 为 哪个 球队 效力 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 会议 在 1 月 2 日 之后 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我周 例会 和 年终 会 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
参加 三 小时 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
哪个 在 greenberg 咖啡厅 的 会议 是 在 1 月 2 号 举行	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
哪个 会议 比周 例会 时间 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
告诉 我 所有 1 月 2 号 在 greenberg 咖啡厅 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
最短 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
跟 周 例会 在 一个 地方 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
爱丽丝 在 Greenberg 咖啡厅 参加 了 什么 会议 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
一月 二号 地点 在 Greenberg 咖啡厅 的 会议 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
给 我 列出 历时 最长 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
给 我 列出 所有 早上 10 点前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪些 会议 的 持续时间 与 每周 的 站立 会议 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) )
跟 每周 站会 有 同样 参会者 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
每周 站会 的 日期	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
哪个 会议 计划 持续 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
给 我 列出 所有 至少 一 小时 或 三 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
哪个 三 小时 的 会议 是 在 一月 二号 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
哪个 地点 没有 举行 周 例会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
在 早上 10 点 开始 下午 1 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
本次 会议 的 与会者 有 多少 人	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 格林 堡 咖啡店 上午 10 点 开始 的 是 什么 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
在 上午 10 点及 之后 结束 或者 下午 3 点及 之后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 会议 和 周 例会 是 同一个 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
开始 时间 最短 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
什么 会议 在 1 月 2 号 或者 3 号 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
在 周 例会 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
给 我 展示 所有 在 上午 10 点 或者 下午 3 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
展示 给 我 所有 没有 参加 周 例会 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
时长 与 周 例会 一样 长 或者 更长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
给 我 列出 所有 刚好 1 小时 或 刚好 3 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) )
那个 重要 会议 的 举办 地点 在 哪 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ) )
哪些 会议 比 周会 更 晚 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 和 周会 同时 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
哪些 地点 举行 的 会议 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
告诉 我 1 月 2 日 或 1 月 3 日 之后 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
在 上午 10 点 或 下午 3 点 之后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
在 周会 结束 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 两人 出席 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
哪些 会议 很 重要	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string is_important ) ) )
谁 会 参加 每周 站会 ？	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
给 我 看 在 Greenberg 咖啡店 早上 十点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
给 我 看 所有 在 早上 十点 结束 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
地点 和 在 十点 结束 的 会议 的 地点 是 一样 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
爱丽丝 或 鲍勃 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
告诉 我 1 月 2 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
给 我 看 在 最 多 地点 发生 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( string location ) ) )
告诉 我 与 Alice 的 会面 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 所有 重要 的 三 小时 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
出席 人数 最少 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( string attendee ) ) )
给 我 列出 所有 爱丽丝 参加 过 的 时 长三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 人 参加 了 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
哪个 三 小时 会议 在 上午 十点 开始 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
每周 站会 或者 年度 总结会 在 什么 时候 举行 ？	( call SW.listValue ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) )
谁 在 参加 那个 阿丽丝 也 在 的 会议 呢 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
给 我 列出 重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string is_important ) ) )
在 不 晚于 早上 十点 或 下午 三点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
给 我 列出 有 最 多 （ 举行 ） 地点 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( string location ) ) )
會議 最 多 參 與 人數 為 兩名	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
参加 至少 两个 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
哪 一个 重要 会议 是 时长 3 小时 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 有 所有 早上 10 点 开始 持续 3 个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
我 1 月 2 号 的 会议 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
会议 最早 在 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
周 例会 几点 结束	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
1 月 2 号 爱丽丝 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
谁 参加 的 会议 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
给 我 列出 所有 不早 于 早上 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
那个 有 两个 或 更 多 的 参与 人 的 会议 的 地点 是 在 哪里 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
告诉 我 1 月 2 日 在 格林 伯格 咖啡馆 发生 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 最少 地点 举办 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( string location ) ) )
在 格林 伯格 咖啡馆 或者 中央 办公室 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
爱丽斯 是 参会者 并且 在 早上 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
列出 任何 计划 长于 一 小时 或 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
告诉 我 Alice 或 bob 参加 过 的 任何 会议	( call SW.listValue ( call SW.concat en.person.alice en.person.bob ) )
哪个 会议 和 周 例会 一样 长 或者 更长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
参会者 最多 的 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string max ) ( string attendee ) ) )
哪个 会议 和 周 例会 的 日期 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
晚于 一月 2 号 或 1 月 3 号 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
在 周 例会 开始 的 时候 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
告诉 我 1 月 2 日 上午 10 点 结束 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
爱丽丝 没有 参加 哪个 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string ! = ) en.person.alice ) )
哪个 会议 是 不 在 格林 伯格 咖啡厅 举行 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
告诉 我 所有 周 例会 之后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
哪个 会议 不是 在 早上 10 点 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
重要 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string is_important ) ) )
显示 1 月 2 日 上午 10 点 结束 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
比周 例会 迟 开始 或者 同时 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 预计 3 个 小时 长 而且 早上 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
在 周 例会 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 的 日期 不迟于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
哪 次 会议 是 最 短 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
三 小时 长 的 会议 在 哪里 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
给 我 看 在 早上 十点 之后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 跟 周 例会 时间 一样 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) )
列出 在 周 例会 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
爱丽丝 参加 的 早上 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
哪些 会议 在 早上 十点 或者 下午 三点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
告诉 我 所有 用于 两次 以上 会议 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
列出 所有 爱丽丝 参加 并且 早上 十点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
给 看 所有 时 长 少于 3 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
显示 一月 二号 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
给 我 看 所有 时长 为 3 小时 且 爱丽丝 在场 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
给 我 展示 所有 开始 时间 与 每周 例会 一样 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
给 我 看 所有 和 周 站立 会 时间 相同 或者 更长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
给 我 展示 所有 时长 是 3 个 小时 的 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
谁 是 格林 伯格 咖啡馆 会议 的 参加者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
给 我 看 所有 多于 两个 人 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
哪个 会议 是 在 每周 小汇报 结束 前 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
结束 最早 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
告诉 我 爱丽丝 1 月 2 日 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
1 月 2 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
哪些 人 将 参加 两次 或 更 多次 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
列出 在 早上 10 点 或 下午 3 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string end_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
给 我 列出 所有 在 1 月 2 号 或 1 月 3 号 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
给 我 看 所有 在 一月 二号 或 之后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
地点 与 每周 例会 地点 相同 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
给 我 列出 在 这个 月 安排 最早 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string date ) ) ) )
谁 没 去 每周 例会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
哪个 会议 是 在 1 月 2 号 或 更 早 （ 举行 ） 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
早上 10 点 开始 的 会议 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
每周 小汇报 或 年度 回顾 会议 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
爱丽丝 参加 的 三个 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
举办 了 有 两个 或者 更 多 会议 的 区域 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
告诉 我 1 月 2 日 之前 或 之后 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
告诉 我 所有 跟 每周 小汇报 的 场地 一样 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
告诉 我 3 个 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 所有 在 早上 10 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 举办 最少 会议 的 地点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string !type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
有 多少 人 参加 了 会议	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
跟 爱丽丝 或者 鲍勃 一起 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
告诉 我 除了 在 1 月 2 号 举行 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
告诉 我 所有 至少 参加 了 2 个 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ) )
在 周 例会 或者 之后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string !type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
和 123sesame 街 处于 同一个 小区 并且 是 在 一月 2 日 发布 的 房子 是 哪 一间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪 一个 在 一月 2 号 发布 的 房子 月租 是 1500 元 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
800 平方英尺 的 房子 并且 允许 养狗 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
找到 那 一个 户型 有 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
租金 1500 并且 有 一个 私人 卫浴 的 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_bath ) ) )
123 芝麻街 在 什么 居民区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
一月 二号 发布 的 住房 单元 是 什么 类型 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 有 最 多 居民区 的 住房 单元	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string max ) ( string neighborhood ) ) )
什么 住房 单位 包含 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) )
租金 是 1500 并且 允许 养狗 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_dogs ) ) )
这个 城市 有 多少 个 社区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ) )
哪 种 住房 允许 猫 在 里面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ) )
是 公寓 或者 是 联排 别墅 的 房子	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
哪个 住房 单元 是 最近 发布 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
不 处于 城中 西部 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
允许 养猫 并且 月租 是 1500 元 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
哪个 住房 单元 不是 在 一月 二号 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
列出 所有 是 公寓 的 房屋 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
那个 房子 是 最近 发布 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
允许 养猫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
找到 少于 或 等于 123 芝麻街 房租 的 房子 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
列出 所有 面积 是 800 或 1000 平方尺 的 房子	( call SW.listValue ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) )
123 芝麻街 和 900mission 街 的 所在 社区 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
哪个 住房 单位 的 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
最新 发布 的 房子	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
发布 日期 是 一月 二号 并且 在 123 芝麻街 上 的 房屋 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
最小 的 住房 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string size ) ) ) )
找到 有 私人 房间 并且 允许 养狗 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) ( string has_private_room ) ) )
哪个 街区 的 公寓 是 允许 养 宠物 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ) )
房租 超过 1500 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
在 市中心 西区 提供 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
跟 至少 另外 两种 房子 类型 一样 的 房子	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
公寓 或者 集合 式 住宅 （ 康斗 ）	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
在 1 月 2 号 发布 的 提供 私人 浴室 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_bath ) ) )
哪 一个 月租 是 1500 块 的 单元房 允许 在 房里 养猫 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
单元房 的 月租费 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ) ) )
在 一月 2 号 发布 的 任意 房租 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
用 最少 的 住房 种类 建造	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( string housing_type ) ) )
123 芝麻街 的 月租金 是 多少 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
在 市中心 西区 带主卫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_bath ) ) )
在 1 月 2 号 发布 的 房子 月 房租 是 多少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 邻居 数量 最少 的 房子	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( string neighborhood ) ) )
有 独立 卫生间 且 可以 养猫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
123 芝麻街 的 住房 单元 大小	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
有 最 多 房源 的 居住区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
共管 或 普通 公寓	( call SW.listValue ( call SW.concat en.housing.apartment en.housing.condo ) )
哪 种 房型 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ) )
芝麻街 123 号 的 居民区 是 什么 ？	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
哪个 空闲 的 房屋 单元 有 最少 的 租金 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
房租 至少 是 1500 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
找出 满足 两种 房屋 类型 的 房屋 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string <= ) ( number 2 ) ) )
哪个 房屋 单元 是 在 一月 二号 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
找出 允许 养狗 或 养猫 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) ( string allows_cats ) ) )
芝麻街 123 号 的 小区 的 名字 叫 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 房屋 单元 是 在 一月 二号 或 二月 三号 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) )
800 平方尺 有 私人 浴室 的 房屋 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
和 123 芝麻街 在 同一个 社区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) ) )
带 独立 房间 并且 是 800 平方尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
有 私人 浴室 并且 租金 是 1500 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 有 私人 房间 和 浴室 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ( string has_private_room ) ) )
允许 养猫 并且 有 私人 浴室 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
哪个 住房 单元 面积 小于 800 平方英尺 或 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
有 公寓 的 居民区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
租金 在 1500 到 2000 之间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) )
有 少于 两个 单元 的 公寓	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
那种 房屋 是 在 一月 二号 发表 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
月租金 是 1500 美元 的 房子 所在 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
列出 有 三个 或 更 多 单元 的 房型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
1 月 2 日至 2 月 3 日	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) )
什么样 的 住房 包括 私人 房间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_room ) ) ) )
房租 在 1500 到 2000 美金 之间 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) )
有 多于 两个 住房 单元 的 居民区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
哪个 房子 可以 养猫 并且 房租 是 1500 美金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
在 一月 二号 之前 发布 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
住房 的 平均 面积 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ) ) )
市中心 西区 在 哪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
哪个 房子 有 2 种 或者 更 多 房型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
在 中心 城西 能 养猫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
最多 有 两个 房子 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
900mission 大街 和 123 芝麻街 的 房子 类型 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
800 平方尺 且 有 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
1500 元 每月 并且 包括 私人 房间 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_room ) ) )
在 一个 安静 的 社区 的 公寓	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( string neighborhood ) ) )
有 至少 两种 类型 房子 的 发布 启事	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
什么 社区 有 少于 两个 的 房屋 单元 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
公寓 的 平均价格 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ) ) )
小于 800 平方尺 或者 小于 1000 平方尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
找到 1 月 2 日 发布 的 所有 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
至少 是 每月 1500 元 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
这个 房屋 单元 有 多 大 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ) ) )
列出 所有 不 和 芝麻街 123 号 一样 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
给 我 看 有 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
中心 城西 什么 房屋 单元 是 在 一月 二号 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 租金 为 1500 至 2000 美元 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
什么 房屋 住所 是 至少 800 或 1000 平方英尺 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
在 一月 二号 发布 的 的 房屋 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
800 平方英尺 的 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
有 私人 浴室 的 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ) )
有 可以 养狗 的 公寓 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) ) )
找到 面积 小于 1000 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
哪个 区域 有 少于 两个 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
面积 不是 800 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ( string ! = ) ( number 800 en.square_feet ) ) )
面积 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
1 月 2 日 发布 的 月租金 为 1500 美元 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
最小 的 公寓	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string size ) ) ) )
公寓 是 1500	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
芝麻街 123 号 是 在 哪个 区域 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
允许 养狗 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) )
哪个 房子 是 最近 发布 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
在 一月 二号 或者 二月 三号 之后 发布 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
在 一月 二号 发布 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
公寓 设有 可供 狗 入住 的 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) ( string has_private_bath ) ) )
在 一月 二号 发布 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
800 平方尺 ， 并且 可以 养狗 的 公寓 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_dogs ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
芝麻街 123 号 是 什 类型 的 房子 ？	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) )
哪个 房屋 单元 的 面积 和 芝麻街 123 号 的 类似 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
找到 一家 1 月 2 号 发布 的 800 平方尺 的 房子 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
包括 两个 单元 的 房子	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string !type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
有 私人 浴室 并且 允许 养猫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
在 一月 二号 发布 的 允许 养狗 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_dogs ) ) )
房租 比 芝麻街 123 号 便宜 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
允许 养猫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
一月 二号 发布 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) )
需要 一个 在 市中心 西部 有 私人 房间 的 一个 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
可以 养猫 并且 有 私人 浴室 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
与 芝麻街 123 号 发布 日期 相同 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
在 一月 二号 之前 发布 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
哪个 房子 是 不 早于 一月 二号 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
找到 市中心 西区 街区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string housing_type ) ( string = ) en.housing.apartment ) )
800 或者 1000 平方英尺 的 公寓	( call SW.listValue ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) )
哪个 房子 至少 有 800 平方英尺 大	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
哪个 房子 有 私人 房间 而且 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_room ) ) ( string allows_dogs ) ) )
列出 所有 市中心 西区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
至少 800 或者 1000 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
有 最少 住房 单元 的 居民区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
123sesame 大街 有 多 大	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
在 市中心 西区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
月租 1500 块 并且 有 800 平方尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
可以 养猫 并且 有 私人 浴室 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ( string allows_cats ) ) )
排除 在 城中 西部 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
有 两个 房子 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ) )
租金 最贵 的 地方	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
一月 二号 发布 在 一个 社区 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string !type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
哪个 住房 单位 每 月租金 为 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
找到 可以 养猫 租金 收 1500 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string allows_cats ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
小于 800 平方尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
哪 一个 房屋 单元 是 可以 养狗 并且 有 私人 浴室 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string has_private_bath ) ) ( string allows_dogs ) ) )
给 我 看 在 中心 城西 月租金 是 1500 美元 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
面积 是 800 平方公尺 租金 1500 一个月 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
哪个 住房 单元 面积 是 800 或者 1000 平方英尺 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string !type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
说出 一篇 至少 能 在 两篇 出版物 中 找到 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
哪 篇文章 拥有 最少 的 场地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string min ) ( string venue ) ) )
谁 是 多元 数据分析 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
Efron 或 Lakoff 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
哪 篇文章 拥有 最多 的 引用	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string max ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
谁 写 了 一篇 关于 城市 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
找 一篇 不 超过 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
没有 引用 多元 数据分析 的 文章 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
在 统计 年鉴 中 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string won_award ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
一篇 引用 了 多 变量 数据分析 并且 关于 统计 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
不是 埃夫隆 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string ! = ) en.person.efron ) )
包含 了 同样 在 统计 年鉴 上 发表 的 文章 的 出版物 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
什么 文章 跟 多元 数据分析 交换 了 引用 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
埃夫 隆于 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string author ) ( string = ) en.person.efron ) )
引用 了 多元 数据分析 ， 并 被 多元 数据分析 引用 了 的 文章 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
2004 年 发表 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
被 多元 数据分析 引用 的 文章 的 发布 渠道	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
两篇 文章 的 发布 渠道	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
引用 了 一篇 或 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
什么 文章 是 关于 统计 年鉴 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
Efron 写 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
只有 一个 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string < ) ( number 2 ) ) )
哪 篇文章 被 引用 次数 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪 篇文章 被 引用 至少 两次	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪 篇文章 是 跟 多元化 数据分析 是 在 同一天 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
最少 文章 发布 的 出版 渠道	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( string min ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪 篇文章 是 有 最少 两个 出版 渠道 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
包含 了 2004 年 发表 的 文章 的 出版物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪些 文章 是 在 2004 年 到 2010 年 之间 写 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
引用 在 2004 年 发表 的 多元 变量 分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
多少 人	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
最近 发表 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
有 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) ( number 2 ) ) )
一篇 或 两篇 文章 的 发表 渠道	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
文章 由 两位 以上 作者 撰写	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string > ) ( number 2 ) ) )
发布 了 最少 文章 的 期刊	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( string min ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
谁 是 没有 撰写 过 关于 多 变量 数据分析 的 文章 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
举出 一篇 在 两个 出版物 里 可以 找到 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
引用 Efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ) )
在 2004 年 出版 并且 使用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
任何 提及 获奖 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string won_award ) ) ) )
谁 是 获奖 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string won_award ) ) ) )
有 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) ( number 2 ) ) )
哪 篇文章 是 最早 被 发表 的 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
引用 了 至少 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
已 发表 至少 两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
引用 两篇 以上 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
关于 多 变量 数据分析 的 文章 作者 的 名字 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
引用 文章 最多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string max ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
什么 文章 发表 在 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
关于 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
发布 在 2004 引用 多元化 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪 篇文章 的 作者 比 其他 任何 都 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string max ) ( string author ) ) )
是 谁 撰写 多元 数据分析 的 ？	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) )
被 多元 数据分析 引用 的 ， 有 出版 渠道 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
找到 一个 Efron 的 文章 的 额外 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ) )
引用 了 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
引用 了 一篇 2004 年 发布 的 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
在 数据 年鉴 里 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 引用 了 其他 文章 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
引用 多 变量 数据分析 的 文章 于 2004 年 发表	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
哪篇 2004 年 的 文章 引用 了 多元 数据分析 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
两篇 文章 的 出版 渠道	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
2010 年 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 文章 是 在 多元 数据分析 发布 的 同时 或 之后 发布 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
没有 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string ! = ) en.article.multivariate_data_analysis ) )
多元 数据分析 的 发行 物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 是 被 一篇 在 统计 年鉴 里 的 文章 引用 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
哪 篇文章 引用 的 文章 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
什么 文章 引用 了 Efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ) )
2004 年 发表 于 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
跟 多元 数据分析 是 同一 作者 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
有 最 多 两个 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
在 2004 年 发表 他们 的 作品 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
有 最 多 两篇 文章 的 出版 地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪篇 获奖 的 文章 是 在 统计 年刊 里 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string won_award ) ) )
哪 篇文章 的 发表 日期 早于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
2004 年 发表 的 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
与 多 变量 数据分析 在 同一 出版物 上 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
发布 在 统计 年刊 上 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string won_award ) ) )
哪个 刊号 摘取 了 多 变量 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
引用 了 在 统计 年刊 上 发布 的 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
两篇 以上 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
有 至多 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪 篇文章 没有 引用 多源 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string ! = ) en.article.multivariate_data_analysis ) )
在 2004 年 发表 的 引用 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
引用 的 多 变量 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
引用 了 获奖 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string won_award ) ) ) )
谁 写 了 最 多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪 篇文章 是 在 2004 年 发表 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
参考 了 一篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
找到 一篇 和 多元 数据分析 同时 或者 早于 它 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
哪 篇文章 将 统计 年鉴 作为 其 发表 渠道	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
被 多元 数据分析 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
哪个 出版 渠道 有 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( string min ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
最 多 文章 的 出版 渠道	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
有 至少 两个 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string >= ) ( number 2 ) ) )
找到 一篇 在 2004 年 以后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
多元 数据分析 是 在 什么 时候 发表 的 ？	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
引用 多元 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
那 篇文章 跟 多元 数据分析 是 有 同样 出版 渠道 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string !type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪些 文章 引用 了 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
哪 篇文章 是 艾弗隆 在 2004 年 发表 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2004 年 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
找 一篇 可以 从 多于 两个 地点 找到 的 文章 的 名字	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
有 最少 引用 数 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
发表 在 统计学 年刊 并 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string won_award ) ) )
一篇 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
哪一篇 文章 有 不少 于 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
谁 是 多 变量 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
由 多元 数据分析 引用 的 Efron 撰写 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
被 埃夫隆 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string author ) ( string = ) en.person.efron ) ) )
两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
2004 年 发布 并且 得 了 奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string won_award ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
在 多于 两个 出版 地 出版 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
被 两篇 文章 引用 过 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
谁 是 多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
引用 了 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
哪 篇文章 引用 了 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ) )
没有 引用 多元 数据分析 的 一篇 文章 有	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
找到 有 不 多于 两个 出版 地 的 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string <= ) ( number 2 ) ) )
说出 一个 在 两个 出版 地 找到 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
哪一篇 2004 年 的 文章 是 被 多元 数据分析 引用 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string !type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
选择 一个 在 3 英寸 宽 的 块 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 所有 长度 比块 1 宽度 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 在 1 号 方块 右边 方块 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 一个 高度 小于 块 1 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 1 号 方块 右边 所有 的 特殊 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 块 1 位于 下方 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
高度 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
什么 方块 比 方块 1 的 高度 还 薄	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
给 我 找到 所有 在 最 多 一个 板块 下面 的 那些 板块 吗 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
帮 我 找到 所有 一号 木块 右边 的 特殊 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
在 一号 木块 左 下	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
帮 我 找到 一个 高度 为 3 英寸 一号 木块 左边 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
帮 我 找到 所有 在 最少 数量 的 块 的 右边 的 块 。	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
再块 1 右边 的 块 的 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
在 块 一 上方 的 三 英寸 的 块 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
宽度 是 三 英寸 ， 并且 在 块 一下 方 的 块 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 位于 块 1 左侧 第二个 块 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
帮 我 找到 所有 超过 两种 颜色 的 木块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string > ) ( number 2 ) ) )
选择 在 右边 模块 之上 的 那 一块 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
在 区块 一 左边 高为 三 英尺 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 一块 比 模块 1 低 的 模块 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
帮 我 找到 所有 区块 一在 其 左边 或者 右边 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
给 我 找 所有 3 英寸 高 的 锥形 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪个 区块 是 在 区块 一 左边 并且 宽为 三 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
帮 我 找到 所有 区块 一在 其 上方 和 右方 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
给 我 一个 在 方块 1 左上方 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 高度 为 三 英尺 并且 在 区块 一 左边 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 在 模块 1 右下方 的 模块 。	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
哪个 块 的 长度 小于 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 一个 高度 为 3 的 在 一号 木块 上面 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
在 块 一 左边 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 高为 三 英尺 并且 有 区块 一在 其 右边 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选在 一个 长度 为 3 英寸 在 一号 木块 上面 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
哪 块砖 是 不到 三 英寸 高 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
一号 木块 下面 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
帮 我 找到 所有 一号 木块 右边 的 特殊 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
砖块 一是 什么 形状	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
哪个 木块 的 宽度 少于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
3 英寸 的 块 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
3 英寸 宽 的 四 棱锥 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 是 有 块 1 在 其 左方 并且 是 3 （ 英寸 ） 高 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
帮 我 找到 所有 最多 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 我 所有 街区 之外 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
哪个 块 是 在 块 1 上面 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 在 那个 3 英寸 高 的 块 的 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
块 的 总 宽度 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ) ) )
寻找 在 特殊 方块 左面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
选择 在 方块 1 下面 的 3 英寸 高 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
左边 方块 最少 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找 给 我 所有 宽度 短比块 1 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 块 1 左侧 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
那个 特殊 的 板块 是 三 英寸 高 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
什么 板块 在 那个 三 英寸 宽 板块 的 左侧 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找 一个 高度 不 超过 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
一个 砖块 左边 的 砖块 ， 那个 砖块 在 砖 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
给 我 找到 所有 高度 和 宽度 等于 三 英寸 的 那些 板块 。	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 与 块 1 的 高度 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
什么 板块 有 一个 三 英寸 高度 且 第一 板块 在 它 上面 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 上面 少于 两个 块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
立方体 1 右侧 的 椎体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
看看 在 方块 一 下面 的 方块 并且 选择 在 它 左边 的 那个 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 上方 的 金字塔 形状 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string above ) ( string = ) en.block.block1 ) )
在 最 多 方块 数目 之上 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
哪个 方块 有 最大 的 高度 ？	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
在 砖块 1 右边 并 和 它 相隔 两个 砖块 的 砖块 是 哪个 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
哪个 板块 有 少于 或 相等于 第一 板块 的 宽度 的 长度 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
高度 比 方块 1 的 宽度 大 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
右边 第三个 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
方块 1 下方 右侧 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
在 两个 或 更 多 的 块 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 块 1 右侧 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
长度 最多为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找出 3 英寸 宽 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
帮 我 找到 那个 块 1 在 它 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找出 在 两个 方块 以下 的 所有 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找出 所有 长度 小于 方块 1 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
告诉 我块 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 我 最 多 和 第 1 块 一样 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
1 号 块 有 多 宽	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
1 号块 下方 和 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
1 号块 左边 和 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
给 我 找出 所有 至少 有 2 块 在 其 右边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 直径 小于 1 号 块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找出 块 1 下方 高为 3 英寸 的 模块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
给 我 找出 所有 不是 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
在 另外 两块 上方 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 在 方块 1 左 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
帮 我 找到 在 区块 一 右边 和 下边 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
区块 一 的 高 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
帮 我 找到 所有 宽为 三 英尺 的 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
帮 我 找到 所有 在 区块 一 左边 或者 右边 的 所有 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
帮 我 找到 有 右边 有 最 多 区块 的 区块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
在 区块 一 右边 的 金字塔 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
那个 砖块 离 顶部 最近	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
那个 区块 的 上方 有 两个 区块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 块 1 上方 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
哪个 块 的 长度 与 块 1 的 长度 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 在 1 号 方块 左下方 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
在 1 号 方块 左边 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
一个 块 1 在 其 左方 的 3 （ 英寸 ） 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选在 所有 一号 方块 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string ! = ) en.block.block1 ) )
找到 1 号 方块 上面 的 特殊 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 下面 方块 数目 最少 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 一个 在 3 英寸 砖块 右方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 那个 形状 不同于 金字塔 的 模块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
选择 一个 在 1 号 方块 左下方 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
在 1 号 方块 左上方 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪个 块 是 最靠近 底部 的 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 块 1 左侧 的 金字塔 形状 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪个 区块 是 在 区块 一在 其 左边 的 区块 的 下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
在 块 1 上方 和 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
选择 一个 不 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
帮 我 找到 所有 最多 有 两个 块 在 其 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 哪个 在 四 棱锥 形状 的 块 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
区块 一 左上方 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
区块 一 的 左下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 不是 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
选择 最 没有 形状 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string shape ) ) )
是 在 第一 板块 上面 的 那个 板块 左侧 的 板块 吗 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
选中 所有 高 3 英尺 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 在 两块 立方体 左边 的 那 一个 立方体	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 1 号 方块 上方 3 英尺 宽 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
选择 所有 1 号 方块 上面 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
砖头 的 平均 高度 有 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ) ) )
找到 有 3 英尺 长 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 方块 至少 有 3 英尺 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 立方体 1 下方 的 下方 的 那 一个 立方体	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
长度 和 第一 板块 的 高度 相同 的 板块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
找到 所有 左边 最多 有 2 个 方块 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 右边 方块 数量 最多 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
哪个 方块 在 1 号 方块 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 有 比 3 英尺 长 或者 短 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
帮 我 找到 所有 在 多于 两个 区块 右边 的 区块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
哪个 砖块 在 砖块 一下 方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string ! = ) en.block.block1 ) )
形状 为 金字塔 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
帮 我 找到 所有 在 区块 一在 其 右边 的 区块 的 下方 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
什么 三 英寸 的 板块 在 第一 板块 的 下面 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 3 英寸 长 的 金字塔 形块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 两个 或 更 多 的 块 下面 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选在 1 号 方块 上面 的 特殊 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
举出 在 块 1 上方 宽度 为 3 英寸 的 块 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
帮 我 找到 所有 至少 有 两种 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string > ) ( number 2 ) ) )
在 块 1 和 块 2 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
有 最 多 两个 块 在 其 下方 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
帮 我 找到 所有 在 块 1 或块 2 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
块 1 右侧 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 块 2 左侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
最大 高度 的 块状 物	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
哪个 区块 比 区块 一 长度 薄	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
在 方块 1 的 左面 找 一个 3 英寸 高 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
块状 物 的 平均 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ) ) )
选择 一个 比 区块 一小 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
帮 我 找到 所有 区块 一在 其 右方 的 区块 的 上方 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
一个 像 金字塔 形状 的 三 英寸 砖块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 砖块 比 砖块 一高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
看 向 区块 一 右边 并且 得到 特殊 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
哪个 块 的 宽度 与 块 1 的 高度 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
哪个 砖块 不 宽 于 三 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪个 块 在 块 1 之上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
什么 块 超过 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪个 区块 在 区块 一在 其 右边 的 区块 右方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 上方 和 块 1 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
给 我 找 最小 宽度 的 方块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
区块 一 上方 两个 位置 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
帮 我 找到 所有 三 英寸 高 的 区块 一在 其 右方 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
哪个 方块 是 最长 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
选择 宽度 与 块 1 宽度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
帮 我 找到 所有 块 1 在 其 左边 和 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 一个 右边 有 两个 或 更 少块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 只有 一种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string color ) ( string < ) ( number 2 ) ) )
选择 在 方块 1 和 2 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
选择 在 块 1 右边 或 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
挑选 上方 木块 数量 最少 的 木块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
在 方块 1 和 方块 2 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪个 块 是 高 3 英寸 并且 块 1 是 在 其 下方 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 不 在 其 左边 的 那个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string ! = ) en.block.block1 ) )
哪个 砖块 是 没有 超过 两个 砖块 在 其 右方 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) )
哪个 块 是 三 英寸 高且 在 块 1 上面 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
是否 有 比块 1 更 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 块 1 下方 的 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
帮 我 找到 所有 不 在 块 1 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string ! = ) en.block.block1 ) )
选择 块 1 在 其 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
不 在 块 1 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string ! = ) en.block.block1 ) )
帮 我 找到 所有 在 块 1 或块 2 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
帮 我 找到 所有 块 1 不 在 其 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string ! = ) en.block.block1 ) )
在 3 英寸 长 的 块 的 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
哪 块砖 在 砖 1 或 2 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪个 块 是 块 1 在 其 上方 及 右方 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
在 块 1 下方 的 块 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
形状 不是 四 棱锥 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
帮 我 找到 所有 长度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪块 砖头 在 最 右边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
哪个 块 右边 少于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
有没有 一个 区块 叠 在 区块 一 顶上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) )
块 的 平均 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ) ) )
金字塔 或 立方体	( call SW.listValue ( call SW.concat en.shape.pyramid en.shape.cube ) )
在 最 多 另外 两个 块 上方 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
长度 比块 1 的 高度 大 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
什么 块 在 3 英寸 宽 的 块 上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
帮 我 找到 所有 有 两个 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
选择 一个 没有 块 1 那么 厚 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
在 方块 1 左 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪些 块 的 高度 等于 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
选择 长度 大于 块 1 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
帮 我 找到 所有 块 1 在 其 左边 的 3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 至少 与 块 1 的 高度 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 厚度 最小 的 砖	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
找到 所有 3 英尺 长 的 特殊 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 左侧 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
砖块 的 平均 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ) ) )
选择 3 英寸 高 的 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 的 形状 是 金字塔 ， 形状 是 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 块 1 上方 和 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
帮 我 找 所有 宽度 是 三 英寸 而 又 在 木块 1 下面 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 宽度 大于 或 等于 块 1s 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪一块 是 在 砖块 1 左侧 的 右侧 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
帮 我 找到 所有 块 1 下方 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 一个 3 英寸 的 块 ， 形状 像 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
帮 我 找到 所有 在 块 1 右上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
块 1 和 块 1 左侧 的 块 之间 是 什么 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
选择 一个 在 块 1 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
在 块 1 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
在 3 英寸 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
哪种 砖 最 多 有 两种 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
宽度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
一号 木块 下面 的 木块 的 左边 的 木块 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
给 我 找到 所有 在 两个 快 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 块 2 左侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
哪个 金字塔 形状 的 块 位于 块 1 的 右侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
帮 我 找到 所有 金字塔 形状 或者 方形 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
帮 我 找到 所有 高度 和 一号 木块 宽度 一样 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
在 块 1 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
哪种 砖 的 形状 数量 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string shape ) ) )
一号 木块 上面 的 木块 的 右边 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 2 个 或 更 少块 以上 的 所有 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 块 1 右侧 和 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
在 3 英寸 宽 的 块 上方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 块 的 长度 是 小于 块 1 的 宽度 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
帮 我 找到 所有 长度 至少 等于 块 1 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪个 块 的 长度 跟块 1 的 高度 是 一样 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
找到 颜色 最多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string max ) ( string color ) ) )
哪个 块 是 在 3 英寸 宽 的 块 的 右边 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 长度 和 高度 都 是 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪个 砖块 是 在 砖块 一 或者 二 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪 块砖 是 有 多于 两块 砖 在 其 上方 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
一号 木块 或者 二号 木块 上面 有 木块 堆 着 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
选择 一个 在 3 英寸 砖 下面 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
在 块 1 的 左上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
3 英寸 木块 左边 是 什么 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
一个 在 一号 木块 左边 的 木块 的 右边 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
一号 木块 在 其 左边 上面 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 一个 长度 小于 一号 木块 宽度 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 木块 有 2 个 或者 以上 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string >= ) ( number 2 ) ) )
选择 所有 宽度 不是 3 英寸 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string ! = ) ( number 3 en.inch ) ) )
找到 块 1 位于 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
有没有 一个 特殊 块 的 高度 是 只有 3 英寸 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 是 有 少于 两个 块 在 其 右方 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 宽度 为 3 英寸 的 块 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
帮 我 找到 一个 在 3 英寸 块 左方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
告诉 我 哪个 方块 是 在 3 英寸 高 的 方块 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 只有 一个 块 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 两个 或 更 多块 左侧 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
告诉 我 所有 最少 有 3 英寸 宽 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 左边 和 右边 有块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 块 1 下方 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
哪 块砖 是 在 不 超过 两块 砖 的 下面 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
选择 特殊 区块 1 下方 的 区块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪个 特别 的 区块 是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
给 我 找到 金字塔 左边 所有 的 区块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 在 特殊 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ) )
给 我 找 所有 在 块 一 左上方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
在 块 1 右下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
块 1 左侧 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
哪 块砖 不是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string ! = ) ( number 3 en.inch ) ) )
选择 在 块 1 左下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
给 我 找 所有 跟 方块 1 的 高度 一样 宽 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
是否 有 一个 块 左边 只有 一个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找出 在 它 上面 有 两个 或 以上 方块 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 最小 数量 块 下面 的 所有 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
在 1 号 方块 下方 方块 左边 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
哪个 板块 在 那个 三 英寸 长 的 板块 的 右侧 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 所有 最多 跟 1 号 方块 一样 宽 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
给 我 找 所有 特殊 锥形 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
找到 所有 1 号 方块 右上方 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 上方 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 最大 高度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 一个 高于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 一个 最多 有 两个 块 在 其 左方 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
哪 块砖 至少 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
帮 我 找到 所有 在 块 1 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 在 块 1 右边 的 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
块 1 或块 2 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
长度 最 多 达到 块 1 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
3 英寸 砖 的 右边 是 什么 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
块 的 总 宽度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ) ) )
给 我 找出 那些 方块 一在 左方 的 方块 ， 它们 右方 所有 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 在 方块 1 下方 长度 为 三 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
块 1 的 宽度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
与 砖 1 大小 相同 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找 一个 在 方块 一 右上方 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
哪个 方块 是 在 最 下面 的 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
找到 比块 1 更 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 块砖 宽 3 英寸 ， 高 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 与 块 1 具有 相同 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
找到 块 1 左边 的 所有 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 长于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪个 特殊 块 是 在 块 1 左边 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
哪个 块 是 短于 3 英寸 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 不 在 其 下方 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string ! = ) en.block.block1 ) )
3 英寸 高 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
在 最少 数目 方块 左边 的 方块 是 什么 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ) )
在 块 1 上方 的 四 棱锥 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string above ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 一个 宽度 比 砖块 1 的 高度 要 大 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 右边 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
在 3 英寸 高 的 方块 右边 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string !type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 学生 在 爱丽丝 毕业 的 同一天 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日 在 学生 爱丽丝 的 开始 日 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不 在 2004 年 之后 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不是 软件 工程师 的 员工 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 有 两个 以上 的 性别 下降	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
人们 在 2004 年 或 之后 停止 工作 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 或 以后 结束 （ 学业 ） 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
帮 我 找到 所有 2004 年 后 开始 的 雇员 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 6 英尺 ， 学习 计算机科学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
那个 人 是 男性 还是 女性 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
是 谁 在 艾丽丝 离开 的 同一天 开始 的 工作 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 出生 的 那个 人 是 在 哪个 城市 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
在 爱丽丝 的 生日 或 之前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
登录 的 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ) )
在 2004 年 之前 或 2010 年 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 开始 前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
帮 我 找到 有 最 多 工作 历史 的 一个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 跟 爱丽丝 同一天 或 更 晚 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
结束 日期 在 2004 以后 的 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 所有 在 2004 年 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
结束 日 在 2004 年 以前 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 跟 爱丽丝 是 同一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有 哪些 员工 的 雇主 是 麦肯锡 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
帮 我 找到 研究 领域 不是 计算机科学 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 在 2004 年 之后 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
爱丽丝 什么 时候 开始 在 计算机科学 领域 学习	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
两种 或 以上 性别 的 人们	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
和 至少 有 两个 以上 的 人 是 同样 性别 的 人 是 谁 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
谁 是 男 的 且 和 阿丽丝 是 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
哪个 学生 开始 的 时间 跟 爱丽丝 的 生日 是 一样 或 之后 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 加入 工作 的 人们 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
最多 有 两个 人 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
说出 一个 不迟于 2004 年 退出 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之后 离职 的 员工 是 什么 性别 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 Alice 开始 或 之后 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 的 职称 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 除 2004 年外 开始 （ 工作 ） 的 员工 的 婚姻 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 跟 爱丽丝 上 同一个 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 一个 单身 的 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 艾丽丝 开始 工作 时 或 之后 停止 工作 的 人们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之前 或者 在 2010 年 或 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 艾丽丝 加入 时 或 之前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
现在 在线 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ( string logged_in ) ) )
结束 日期 不比 爱丽丝 的 早 的 员工 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 哪一天 开始 在 学校 第一次 学习 计算机科学 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
在 2004 之前 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
没有 在 2004 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 不是 180 厘米 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string ! = ) ( number 180 en.cm ) ) )
至少 是 在 2004 年 之前 出生 的 雇员 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
少于 两个 人 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
给 我 找到 在 2004 年 到 2010 年 期间 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 180 厘米 高 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
爱丽丝 何时 不再 担任 软件 工程师	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
找到 爱丽丝 的 所有 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
和 爱丽丝 同时 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
我 的 网络 中 的 男性 主张 哪 种 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪些 人 是 与 那些 不早 于 2004 开始 的 学生 是 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 最早 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 所有 跟 少于 两人 做 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 2004 年 或 之后 开始 上学 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 所有 爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
当前 在线 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
给 我 找 一个 和 Alice 在 同一天 或 比 她 迟 生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
指出 Alice 的 那个 身高 180 公分 的 朋友 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
没 被 McKinsey 雇佣 的 那个 员工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 毕业 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
两个 人 的 感情 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
什么 人有 两种 性别 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
找到 最高 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
在 爱丽丝 开始 工作 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
在 2004 年前 开始 工作 的 雇员 们 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 180 公分 以上 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪些 员工 的 职称 少于 2 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 以外 的 一年 内 完成学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
和 一个 没有 在 2004 年 开始 的 学生 是 朋友 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 （ 工作 ） 结束 日 不 晚于 爱丽丝 生日 的 员工 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 在 爱丽丝 从 学校 毕业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
学习 领域 不 多于 两个 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 结束 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 身高 180 厘米 ， 与 爱丽丝 的 关系 状况 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
谁 180 公分 高 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
麦西肯 雇佣 的 那个 180 公分 高 的 员工 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
说出 一个 同时 有 两段 恋情 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
谁 在线 上且 有 网友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
有 最 多 2 个 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 3 段 及 以上 的 恋情	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
谁 和 出生 在 2004 年 的 人 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找出 比 爱丽丝 出生 晚 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
和 爱丽丝 同时 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 是 在 爱丽丝 生日 那天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找出 结束 日期 是 2004 年 或者 2010 年 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
和 在 2004 年 之前 开始 工作 的 员工 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 离开 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
工作 职位 不是 软件 工程师 的 员工 的 情感 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 时间 晚于 爱丽丝 的 学生 是 哪些	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 的 结束 日 是 在 2004 年 以后 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日 不 在 2004 年 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪位 员工 是 在 名叫 Alice 的 学生 之后 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 在 Alice 的 出生日期 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找出 最晚 2004 年 开始 上学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 不是 在 哪里 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string ! = ) en.person.alice ) )
在 爱丽丝 之后 开始 的 一个 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 一米 八高 的 人 在 2004 年 开始 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
Alice 何时 开始 担任 软件 工程师	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_start_date ) ) )
有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
结束 日期 在 2004 年 之后 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 艾丽斯 单身 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
爱丽丝 的 感情 状态 是 什么	( call SW.listValue ( call SW.getProperty en.person.alice ( string relationship_status ) ) )
开始 日期 是 2004 年 或 2010 年 的 学生 是 哪些 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 开始 的 雇员 们 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 在 2010 年 或 之前 开始 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2010 年 之后 出生 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
2004 年 或 之后 开始 的 员工 的 出生地 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 有 数量 最多 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之前 开始 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 哪些 朋友 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
与 2004 年 或 之前 毕业 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 开始 日期 在 2004 年 或者 2010 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
为 麦肯锡 或谷歌 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
这 两个 人 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 2004 年 出生 的 人 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
工作 头衔 不是 软件 工程师 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
感情 状况 和 爱丽丝 的 不 相似	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
在 2004 年 之后 开始 上学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 人出 生于 2004 年 并且 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
说出 2004 年 没有 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
寻找 在 登入 的 人 中 谁 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪些 员工 的 开始 日期 是 早于 学生 爱丽丝 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 在 2004 年 开始 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
不是 在 2004 年 离职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 之前 开始 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 那些 没有 在 2004 年 开始 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 什么 时候 停止 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
出生 在 纽约 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
雇用 了 那些 没有 在 2004 年 开始 工作 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
专业 不是 电脑 科学 的 学生 们 的 情感 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 爱丽丝 的 雇主 是 在 2004 年 结束 的 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
男人 和 谁 交朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
学习 领域 不是 计算机科学 的 那些 学生 的 出生 城市 是 哪里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 出 生于 2004 年 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
和 艾莉丝 有 相同 情感 状态 的 身高 是 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
在 2004 年 就 入职 的 爱丽丝 的 工作 职称 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
在 2004 年 开始 的 身高 是 180 厘米 的 某人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
一个 不是 软件 工程师 的 雇员 的 出生 城市 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 的 开始 日 跟 爱丽丝 的 生日 是 一样 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 开始 的 学生 们 的 出生 城市 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 在 麦肯锡 的 结束 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
找到 学习 领域 最少 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
任何 2004 年 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )
最多 有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
这个 大学 的 号码 是 什么 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string !type ) ) ) )
爱丽丝 何时 停止 工作	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )
给 我 找到 一个 开始 日期 早于 或 等于 学生 艾丽丝 的 结束 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 自 2004 年 以来 离职 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 同学 在 爱丽丝 入学 时 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 在 2004 年 毕业 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 除了 学 计算机科学 以外 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 以前 入学 的 学生 的 情感 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 离职 日期 在 爱丽丝 入职 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 在 2004 年 或者 2010 年 离职 的 员工 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 只有 一个 人 的 出生地 的 城市	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
哪些 学生 在 爱丽丝 的 出生日期 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 老板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 入职 没有 比 爱丽丝 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最后 一天 是 在 2004 年 之后 的 员工 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
比 员工 爱丽丝 的 结束 日期 小 的 员工 是 哪些 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2005 年 之前 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 是 在 2004 年 之后 开始 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 雇主 的 员工 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 身高 180 厘米 且 在 2004 年 退出 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
那些 不是 在 2004 年 入学 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 出 生于 2004 年 和 爱丽丝 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
和 爱丽丝 同时 或者 更 早 离开 的 一个 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最后 一天 不是 2004 年 的 员工 的 情感 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 入学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 2004 年 或 之后 的 学生 们 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
最早 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 和 爱丽丝 一样 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
哪个 员工 是 最先 被 雇佣 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 在 2004 年 以后 离职 的 员工 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 除了 2004 年 以外 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 比 爱丽丝 同学 开始 得 更 早 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 或者 之后 入学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 在 2005 年 以前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 在 布朗 大学 的 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
2004 年 之前 入学 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 城市 是 两个 或 更 少人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
一个 出生 2004 年 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找出 180 厘米 高 并且 结束 日期 是 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 是 爱丽丝 的 朋友 而且 在 2004 年 出生	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 是 结束 日期 不是 2004 年 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 180 厘米 高 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找出 所有 只有 一个 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 日期 之前 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 两个 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
在 艾丽丝 之后 开始 的 雇员 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 比 2004 年 和 2010 年 大 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 在 2004 年 之前 离开 了 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 2004 年 之后 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找出 开始 日期 不晚 于 学生 艾丽丝 的 开始 日期 的 雇员 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 的 开始 日期 早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最 多 两个 人 的 感情 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 艾丽丝 开始 上学 或 之后 开始 工作 的 人们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 开始 的 雇员 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 晚于 爱丽丝 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 离职 那天 或 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
给 我 找出 所有 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
爱丽丝 最后 一天 工作 的 日期 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )
至多 在 两所 大学 学习 过 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 至少 是 员工 爱丽丝 的 结束 日期 的 雇员 是 哪个 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最近 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 为 2004 年 或 更 早 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 或 2010 年 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
帮 我 找到 所有 即将 在 爱丽丝 开始 工作 之前 离开 公司 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 最少 的 朋友	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string min ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
谁 是 艾丽丝 的 单身 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
任何 登录 了 的 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
最多 在 2004 年 或者 2010 年 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
查找 结束 日期 至少 为 2004 年 的 学生 出生 的 城市 列表	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 不是 2004 年 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
跟 爱丽丝 同时 或者 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 6 英尺 高 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 年纪 最大 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
哪个 学生 是 在 2004 年前 或 2010 年前 结束 学业 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 是 最近 离开 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 和 艾丽丝 是 共同 朋友 的 所有人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪个 学生 是 在 爱丽丝 之后 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
职称 最多 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 在线 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
在 爱丽丝 开始 工作 之前 完成 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 一米 八 的 人 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
哪个 员工 的 结束 日 是 在 爱丽丝 开始 日 同一天 或 以后 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 大学 的 电话号码	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string !type ) ) ) )
目前 在线 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
没有 在 布朗 大学 上学 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这个 身高 180 厘米 的 人 上 了 哪个 大学 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string !type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
所有 身高 是 180cm 的 人 的 工作 职位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string !type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 2004 年入 职 而且 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
开始 日期 是 在 2004 年 或 之后 的 学生 们 的 现今 情感 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 和 这位 2004 年 后 开始 工作 的 人 是 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 出生 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
没有 在 2004 年前 完成 （ 学业 ） 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 一个 没有 在 2004 年 入学 的 学生 和 他 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 之前 离开 的 工人 的 情感 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 开始 日 跟 爱丽丝 的 开始 日 是 一样 或 更 早 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
和 爱丽丝 一起 或 更 早 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最后 一天 比 2004 年 要 早 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 以后 毕业 的 学生 的 出生 城市 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 上过 一 或 两家 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 等于 或 晚于 学生 Alice 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最后 一天 在 2004 年 或 以前 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 最早 开始 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 结束 日期 不 超过 2004 年 的 学生 的 朋友 是 什么 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 是 在 2004 年 以外 开始 （ 学业 ） 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 最 少数 目的 感情 状态 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string min ) ( string relationship_status ) ) )
爱丽丝 在 布朗 大学 学习 的 是 什么 领域	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
哪个 学生 的 （ 学业 ） 开始 日 是 不 在 爱丽丝 之前 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 城市 是 至少 两个 人 的 出生地 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
谁 是 最后 退出 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 没有 停止 工作 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 非 McKinsey 的 公司 的 雇员 们 是 在 哪里 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 在 2004 年 或 以后 停止 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 雇员 在 2004 前 开始 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 那些 在 阿丽丝 的 第一天 或 之后 开始 的 学生 了 吗 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 学习 领域 是 除 电脑科技 以外 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string ! = ) en.person.alice ) )
身高 180 公分 的 麦肯锡 员工	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
结束 日 在 爱丽丝 的 开始 日 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
帮 我 找到 所有 是 没有 在 布朗 大学 上学 的 人 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
选择 纽约 或 北京	( call SW.listValue ( call SW.concat en.city.new_york en.city.bejing ) )
在 除了 电脑 科学 之外 的 领域 学习 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日 不是 2004 年 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
和 艾莉丝 一样 高 或者 更 矮 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
爱丽丝 完成学业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 2004 年 以外 的 一年 内 完成学业 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 开始 工作 的 人们 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不是 2004 年 的 学生 的 出生 城市 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
和 在 2004 年 或 之前 就 被 雇佣 的 学生 是 朋友 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
工作 职称 不是 软件 工程师 的 雇员 们 的 朋友 们 是 谁 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 以外 一年 开始 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 城市 有 两个 或少 的 人 出生 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
谁 是 在 2004 年 之前 离开 公司 或 退休 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
寻找 在 爱丽丝 最后 一天 后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
比 爱丽丝 晚 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
没有 在 2004 年 加入 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
大部分 人 的 婚姻关系 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
一位 在 爱丽丝 出生 之后 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 在 2004 没有 毕业 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
最迟在 2004 年 开始 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 单身 或者 是 结婚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) ( call SW.concat en.relationship_status.single en.relationship_status.married ) ) )
谁 是 在 纽约 出生 且 有 180 厘米 高 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 不 超过 2 所 大学 学习 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 跟 哪些 男性 是 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
找到 在 爱丽丝 最后 一天 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 离开 学校 之前 开始 （ 工作 ） 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 在 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string ! = ) ( date 2004 -1 -1 ) ) )
在 2004 年 之后 完成学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找出 不 在 麦肯锡 工作 的 人 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找出 所有 在 纽约 出生 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
爱丽丝 不是 在 哪里 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string ! = ) en.person.alice ) )
未 在 2004 年 毕业 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找出 2005 年 以前 参加 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
场地 的 号码 是 什么 ？	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string !type ) ) ) )
在 2004 年 或 之后 开始 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找出 结束 日期 在 2004 年 之后 的 雇员 们 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 有 单身 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
找到 所有 拥有 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 2004 年 或 以后 结束 的 员工 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 纽约 出生 且 身高 是 180 公分 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪些 单身 的 人 是 一米 八高 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪个 员工 开始 的 不 晚于 爱丽丝 （ 开始 的 ）	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 是 在 哪个 大学 学 电脑 科学 的 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
结束 日期 是 在 2004 年 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
退出 工作 日期 与 员工 Alice ' s 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 和 爱丽丝 的 感情 状态 类似 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
谁 是 那个 结束 日 至少 在 2004 的 人 的 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 在 爱丽丝 入职 之前 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
不是 软件 工程师 的 雇员 的 情感 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 出 生于 2004 年 谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 的 出生日期 在 2004 年 以前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
那些 在 2004 年 没有 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
帮 我 找 在 2004 年 以后 加入 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 出生 的 员工 是 哪个 城市 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 日期 是 在 雇员 艾丽丝 的 结束 日期 之后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 的 生日 在 爱丽丝 就职 结束 时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
学习 领域 不是 计算机科学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 至 2010 年间 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 人有 两个 出生地 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
找到 在 2004 年 或 之前 开始 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
没有 在 布朗 大学 上学 的 学生 们 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之后 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 高 的 人 的 职称	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string !type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
身高 180 厘米 且 目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
说出 一个 在 爱丽丝 之后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或者 之前 停止 上学 的 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 一米 八 的 人 都 学 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string !type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
谁 是 爱丽丝 开始 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
哪些 员工 的 开始 日 不 晚于 2004 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 什么 时候 离开 了 她 2004 年 开始 的 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
结束 日期 不 超过 2004 年 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
大学 的 总数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string !type ) ) ) )
哪些 人有 至少 两个 出生地 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
哪个 学生 的 开学 日期 早于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 2004 年 之后 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 哪些 朋友 现在 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
一个 在 2004 年 之前 开始 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一位 在 2004 年 或 之后 离开 的 雇员 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出生 在 爱丽丝 辞职 的 那天 或者 之前 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
哪些 学生 在 2004 年 或 2010 年 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 一米 八 身高 的 人 的 感情 状况 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
一个 在 最少 的 大学 学习 过 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 开始 的 雇员 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不是 在 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友 并且 身高 是 180 厘米 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
爱丽丝 在 McKinsey 工作 吗 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )
跟 爱丽丝 同一天 生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
找到 开始 日期 和 学生 爱丽丝 开始 日期 相同 的 雇员 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找出 结束 日期 比 雇员 爱丽丝 的 开始 日期 大 的 雇员 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 不晚 于 2004 年 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 和 在 纽约 出生 的 那个 人 现在 是 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
什么 学生 在 爱丽丝 出生 之前 就 开始 了 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 没 在 2004 年 毕业 的 学生 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
布朗 大学 或者 加州大学洛杉矶分校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 2004 年 之后 的 学生 的 感情 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 生日 之后 完成 的 雇员 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 目前 在线 并 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找出 和 爱丽丝 的 朋友 一样 性别 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
哪些 员工 的 结束 日 是 最早 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
所有 在 2004 年 出生 的 身高 180 公分 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
在 爱丽丝 之前 开始 的 员工 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 是 2004 年 的 雇员 爱丽丝 的 工作 职位 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
开始 日期 至少 在 2004 年 的 一个 雇员 的 感情 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 性别 代表 了 最少 的 人 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
身高 180 公分 的 布朗 大学 的 学生	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
哪个 城市 是 一个 非 电脑 科学 专业 的 学生 的 出生地 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 在 爱丽丝 就业 最后 一天 或 之后 出生 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
在 2004 年 之前 开始 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 是 爱丽丝 出生日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日 不 在 学生 爱丽丝 结束 日 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 员工 的 结束 日期 早 于 学生 Alice 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之前 或者 在 2010 年 或 之前 停止 工作 的 人们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 不是 2004 年 的 学生 们 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 最后 一个 工作 天是 在 2004 的 哪一天	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
谁 同时 有 至少 两种 感情 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
在 爱丽丝 入 职前 辞职 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不是 在 2004 年入 职 的 工作人员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 在 爱丽丝 之前 参与 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
和 爱丽丝 学 一样 东西 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪位 员工 是 在 爱丽丝 之后 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年前 入职 的 员工 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 开始 前 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 多少 个 性别 选项	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ) )
有 两种 关系 状态 或 更 少 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
谁 不是 单身	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string ! = ) en.relationship_status.single ) )
找到 开始 日期 在 2004 年 或 之后 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 与 开始 日期 为 2004 或 更 晚 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
软件 工程师 Alice 开始 的 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_start_date ) ) )
结束 日期 在 2004 年 之后 的 员工 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 出生 在 纽约 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 目前 在线 的 所有 Alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
哪些 员工 结束 日期 是 2004 年 或 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 在 爱丽丝 离开 的 那天 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
哪个 学生 在 爱丽丝 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
Alice 的 单身 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
谁 和 爱丽丝 为 相同 的 雇主 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 爱丽丝 开始 上学 之后 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 身高 是 180 到 200 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) )
在 除了 2004 年 以外 年份 开始 上学 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 2004 年 后 加入 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 拥有 最 不同 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string max ) ( string relationship_status ) ) )
开始 日期 不早 于 Alice 出生日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
Alice2004 年 开始 工作 的 是 干什么 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
不是 2004 年 开始 工作 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
给 我 找 除了 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string ! = ) ( date 2004 -1 -1 ) ) )
找到 2004 年 至 2010 年间 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
不是 2004 年 开始 工作 的 雇员 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 毕业 前 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
像 纽约 这样 出生地 的 人们 婚恋 状况 怎样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找出 所有 爱丽丝 辞职 后 出生 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
哪些 雇员 在 爱丽丝 前 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找出 180 厘米 以上 高度 的 人们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
结束 日期 不是 2004 年 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 雇员 的 最后 一天 不早 过 阿丽丝 的 毕业 日 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
矮于 一米 八 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
在 2004 年 辞职 的 身高 一米 八 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
在 2004 年 或 之前 停止 工作 的 人 的 关系 状况 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 和 没 在 2004 年 毕业 的 人 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 的 出生日期 迟 于 爱丽丝	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
学生 爱丽丝 辞掉 工作 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有 男性 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
2004 年 之后 辞职 的 员工 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
现在 在线 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
结束 日期 不 在 学生 Alice 开始 日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 或者 在 2010 年 加入 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
跟 在 学校 学习 除了 电脑 科学 以外 的 人 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
帮 我 找到 所有 在 2004 年 或 之后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 的 学习 领域 是 和 艾丽丝 的 学习 领域 一样 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日起 是 2004 年 或 之前 的 雇员 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 比 爱丽丝 结束 得 早 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 公分 并且 跟 爱丽丝 出生地 是 一样 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
不比 艾丽丝 开始 的 早 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
帮 我 找到 在 2004 年 后 开始 的 员工	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 最 不 普遍 的 性别 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
寻找 在 爱丽丝 最后 一天 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 不是 在 学生 艾丽丝 开始 日期 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那位 員工 的 離職 日期 與員工 艾麗絲 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找出 在 纽约 出生 的 人们 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
结束 日期 不 在 2004 年 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结束 日期 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
全部 在 2004 年 加入 且 有 180 厘米 身高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 在 2004 年 出生 的 人们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
在 2004 或 2010 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 在 布朗 大学 上学 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )
找出 当前 每个 在线 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ) )
哪个 学生 的 开始 日期 是 在 2004 年 之后 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
不 在 布朗 大学 就读 的 学生 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 在 2004 年 开始 的 并且 身高 是 180 厘米 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 所有 2004 年 或 以后 开始 （ 工作 ） 的 员工 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年前 离职 的 员工 的 婚姻 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 们 的 出生 城市 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
在 爱丽丝 结束 那天 开始 （ 工作 ） 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2005 年前 开始 学习 的 人们 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 的 身高 至少 有 180cm ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
谁 是 单身 并且 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
不是 麦肯锡 作为 雇主 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 结束 的 学生 的 关系 状况 如何 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 人 的 身高 是 180 厘米 并且 出生 城市 是 纽约 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
爱丽丝 出生 或 早些时候 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或者 2010 年 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
和 雇员 爱丽丝 一起 度过 结束 日 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 加入 该 机构 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 身高 是 180 厘米 并且 在 2004 年 开始 上学 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
在 除了 2004 年外 的 年份 加入 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 从 2004 或 从 2010 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 在 2004 年 或 以前 结束 （ 学习 ） 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 是 爱丽丝 的 朋友 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
哪些 男性 是 在 2004 年 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 工作 的 最后 一天 在 Alice 的 开始 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 城市 出生 人口 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
给出 跟 爱丽丝 一起 离职 的 学生 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 男性 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
在 爱丽丝 离开 工作 那天 开始 工作 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 开始 的 学生 们 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2005 年 之前 加入 的 学生 们 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 是 被 最 多 的 雇主 雇佣 过 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不晚 于 2004 年 的 学生 们 的 出生地 是 什么 城市 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找出 艾丽丝 朋友 们 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
在 除了 布朗 大学 之外 的 地方 上学 的 人 是 在 哪里 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 Alice 的 出生日期 之后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 是 在 2004 年 的 哪一天 停止 工作 的 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
爱丽丝 的 哪个 朋友 也 是 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 是 2004 年 之前 开始 上学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 雇员 的 工作 少于 两项 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
阿丽丝 的 学习 领域 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
在 爱丽丝 出生 前 参加 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 上学 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
结束 日期 早于 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 没有 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪所 城市 出生率 最低 ？	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( string min ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 2004 年 到 2010 年 之间 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
不 学 计算机科学 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 一米 八高 的 人 是 一个 软件 公程师 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
找到 所有 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
在 布朗 大学 或者 加州大学洛杉矶分校 上 过学 的 人	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )
找到 最后 一天 和 爱丽丝 是 同一天 或者 早 于 那天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 出生 的 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
在 除了 2004 年 以外 的 年份 开始 工作 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 在 2004 年 或 以前 的 员工 的 婚姻关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 在 2004 年 或者 之前 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪些 员工 的 开始 日期 在 2004 年 到 2010 年 之间	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不早 于 2004 年 开始 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
没 在 2014 年 开始 工作 的 人 的 出生地点 是 哪里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
没有 比 爱丽丝 生日 更 早 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
入学 时间 在 2004 年 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 在 2010 年 以前 就 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 最早 入学 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
帮 我 找到 在 2004 年 之前 或者 之后 离开 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
入职 时间 在 2004 年 或者 之后 的 员工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 学生 爱丽丝 最后 一天 之前 开始 上班 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不是 被 McKinsey 雇佣 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 不是 2004 年 的 学生 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开始 日期 是 2004 年 或者 2010 年 的 雇员 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 生日 前 开始 工作 的 人们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 在 哪个 大学 学习 ？	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
找出 最后 一天 （ 工作 ） 不是 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 晚于 爱丽丝 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
给 我 列举 一个 身高 是 180 厘米 的 男人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
在 2004 年 或 2010 年 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 出生日期 是 什么 ？	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthdate ) ) )
与 爱丽丝 同时 或 更 早 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 身高 是 多少 ？	( call SW.listValue ( call SW.getProperty en.person.alice ( string height ) ) )
最后 一天 （ 工作 ） 不晚 于 2004 年 的 员工 的 出生地 在 哪里 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪些 员工 2004 年 以后 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
当前 180 厘米 高 的 用户	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 学校 里 学习 最多 的 东西 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 在 超过 两个 地方 出生 的 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string > ) ( number 2 ) ) )
在 爱丽丝 辍学 后 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 后 开始 工作 的 员工 是 在 哪里 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
跟 爱丽丝 在 同一个 时间 结束 （ 学习 ） 的 学生 。	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
给 我 在 2004 年 或 以前 毕业 的 学生 们 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
所有 身高 180 公分 的 人 上 的 学校	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string !type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
帮 我 找到 和 结束 日期 和 爱丽丝 起始 日期 一样 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 朋友 是 在 2004 年 开始 的 学生 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 所有 爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 最后 一天 是 爱丽丝 第一天 或者 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之后 开始 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
最后 一天 和 爱丽丝 开始 这份 工作 的 第一天 一样 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 开始 的 员工 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 出生 日 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
爱丽丝 的 哪个 朋友 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
爱丽丝 什么 时候 辞掉 了 她 的 软件 工程师 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
没有 在 2004 年 开始 的 学生 的 一个 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 学习 领域 是 电脑 科学 吗 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string field_of_study ) ) )
在 2004 年 或 之前 开始 工作 的 人们 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或者 2010 年 开始 的 学生 是 哪个 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 离开 的 学生 是 哪些 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日期 小于 2004 年 的 雇员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 退出 日期	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )
和 爱丽丝 有 相同 结束 日期 的 雇员 是 哪个 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或者 之前 结束 的 雇员 们 是 在 哪里 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
没有 在 2004 年 离开 的 员工 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 里面 谁 是 2004 年 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 学生 在 大学 的 时间 最少 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 或 200 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) )
出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthplace ) ( string = ) en.city.new_york ) )
与 2004 年 之前 或 之后 开始 工作 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 出生 后 开始 上 的 学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 的 结束 日 是 2004 或 2010 ， 但 没有 再晚 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 以后 开始 工作 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学非 计算机科学 专业 的 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
非 2004 年 开始 工作 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 员工 的 朋友 工作 职称 不是 软件 工程师 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 日期 不 在 员工 Alice 结束 日期 以后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日比 爱丽丝 结束 日晚 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 出生 时 或 以前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 软件 工程师 或 项目经理	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
开始 日期 早 于 员工 艾丽斯 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪 一种 关系 状态 代表 不 超过 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
2004 年 后 结束 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
没有 在 2004 年 完成学业 的 学生 ， 他们 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 最 不 常见 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
和 艾莉丝 是 朋友 的 那个 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
谁 在 学 两种 或 更 少 的 东西 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 以前 退出 的 职工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 谁 身高 低于 180 厘米 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
开始 日期 最长 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 开始 工作 的 爱丽丝 工作 的 最后 一天 日期 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
在 2004 年 之后 退出 工作 的 员工 的 情感 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪些 员工 在 2004 年 或者 以前 开始 工作 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 出生 并且 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
爱丽丝 在 布朗 大学 学习 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
找 那些 在 2004 后 退出 的 学生 们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 有 最 多 的 专业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日 不是 在 爱丽丝 生日 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
列出 一位 与 爱丽丝 不是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
找到 身高 180 厘米 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 一个 跟 不 给 麦肯锡 工作 的 人 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
比 181 公分 矮 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
什么 是 爱丽丝 2004 年 的 确切 开始 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
帮 我 找 没有 为 两家 公司 以上 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 毕业 的 学生 的 出生地 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 身高 180 公分 并且 工作 头衔 是 软件 工程师 的 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
哪些 人 已经 登录 并且 是 艾丽丝 的 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
雇主 不是 麦肯锡 的 雇员 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 180 厘米 的 男人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
谁 在 2004 年 以后 停止 了 上学 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 是 在 爱丽丝 开始 的 那天 离职 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 上学 的 那天 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
在 2004 年 或 之前 离开 学校 的 学生 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )
哪位 女生 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
在 最晚 2004 年 结束 的 学生 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 为 麦肯锡 或谷歌 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
谁 是 最近 开始 上学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 以后 开学 日期 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 的 结束 日 是 不 晚于 2004 年 或 2010 年 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 在 纽约 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
结束 日期 不 在 学生 艾丽斯 开始 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 纽约 出生 并且 身高 180 公分 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 2004 年前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
谁 不到 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
所有 180 厘米 高 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
结束 日 是 在 2004 年 之前 的 学生 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年前 开始 的 学生 的 出生地 都 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 人 刚好 是 一米 八高 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
谁 在 艾丽丝 之后 毕业 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
这个 一米 八高 的 人 的 出生日期 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
最后 一天 是 在 艾丽丝 开始 前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 艾丽丝 离开 之后 离开 公司 的 雇员 是 谁 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出 生于 2003 年 以后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
我 的 哪 一些 朋友 们 是 在 除了 布朗 大学 之外 的 其他 一些 学校 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
帮 我 找到 生于 2004 年 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )
身高 一米 八 并且 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
帮 我 找到 所有 比 爱丽丝 年纪 大 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
哪 一个 雇员 的 结束 日期 至少 是 2004 年 ？ ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 或 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 不 在 学生 Alice 开始 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 是 爱丽丝 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
入职 日期 在 爱丽丝 雇员 离职 日期 之前 的 同学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 结束 日期 是 哪天	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )
在 爱丽丝 生日 或者 之前 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 在 爱丽丝 工作 第一天 或者 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
哪个 员工 的 结束 日期 不是 在 2004 年 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 起始 日期 比 员工 爱丽丝 早 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 在 2004 年 或者 之后 离职 的 员工 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 跟 身高 180 厘米 的 人 交往 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 爱丽丝 在 布朗 大学 的 开学 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )
哪个 员工 在 2004 年 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
身高 一米 八在 布朗 大学 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
在 艾丽丝 开始 同期 或 之前 完成 的 学生 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 晚于 2004 年 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 加入 这份 工作 后 加入 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 生日 那天 或 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
在 2004 年 开始 （ 工作 ） 的 爱丽丝 的 工作 头衔 是 什么 ？	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
找出 和 艾莉丝 是 朋友 的 人们 的 感情 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
哪个 雇员 在 不 大于 阿丽丝 的 生日 结束 的 ？	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 多于 两个 人 的 性别 是 什么 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
在 爱丽丝 之前 完成 的 员工 们	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 开始 的 学生 们 的 感情 状态 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开始 日期 也 是 爱丽丝 的 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 最高 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
所有 身高 一米 八 的 女性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
哪些 员工 的 结束 日期 是 在 学生 爱丽丝 的 开始 日期 之前 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 那些 身高 是 一米 八 的 人 的 出生地 呀 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
谁 有 超过 两种 以上 的 感情 状态 ？	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
谁 是 身高 一米 八 并且 在 计算机科学 领域	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
矮于 一米 八 或者 两米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
在 2004 年 之前 开始 的 员工 们 的 出生地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不为 McKinsey 工作 的 雇员 的 出生地 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪位 员工 早于 Alice 的 开始 日期 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 离职 的 爱丽丝 的 工作 职位 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
爱丽丝 和 鲍勃 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
一个 不是 软件 工程师 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 的 生日 是 在 爱丽丝 入职 日期 时 或者 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
在 爱丽丝 离开 学校 之后 入职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 结束 后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 毕业 的 ？	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )
说出 一个 最 多 只有 2 个人 出生 的 城市	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
跟 爱丽丝 出生地 一样 而且 有 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
谁 有 朋友 是 在 2004 年 之前 入学 的 学生 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找出 最后 日子 是 Alice 的 第一天 或 以前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 人 的 平均 身高 是 多少 ？	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ) ) )
给 我 找 一位 在 纽约 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string gender ) ( string = ) en.gender.male ) )
什么 人 是 开始 日 不 早于 2004 年 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 后 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
现在 在线 的 人 是 在 什么 城市 出生 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string !type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string logged_in ) ) ) )
不 为 麦肯锡 工作 的 员工 的 性别 是 什么 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string !type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
指出 跟 Alice 同一 性别 而且 高 180 公分 的 人 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
那些 在 2004 年 之前 不是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 Alice 结束 学业 之日 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 将 于 2004 年 之前 毕业 的 人 联系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 高 180 厘米 且 去 布朗 大学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
寻找 在 爱丽丝 生日 后 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 的 关系 状态 与 Alice 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) ) )
不 在 布朗 的 那些 学生 的 关系 状况 是 如何 的 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string !type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
高度 为 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 是 阿丽丝 的 全部 的 男性 朋友 ？	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
找到 所有 列出 了 他们 的 关系 状况 是 单身 的 那些 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
2004 年 內 沒 有 開學 的 學生 之 朋友 是 誰 ？	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 至少 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( call SW.reverse ( string friend ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ) )
与 2004 年 之前 完成学业 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string !type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
