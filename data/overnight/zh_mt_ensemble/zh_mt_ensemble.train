一个 赛季 球员 的 助攻 数不到 三次	什么 球员 一个 赛季 的 助攻 少于 三次	是 什么 球员 在 一个 赛季 中 只有 不到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 本赛季 至少 和 科比 · 布莱恩特 一样 多	哪个 球员 本赛季 的 拦网 次数 至少 和 科比 一样 多	有 哪个 球员 能 像 科比 一样 在 这个 赛季 得到 那么 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 球员 科比 布莱恩特 赛季 的 得 分数	2004 赛季 科比 一个 赛季 的 得分	从 2004 年 开始 ， 科比 · 布莱恩特 一个 赛季 的 得分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
科比 · 布莱恩特 在 他 3 次 助攻 的 赛季 中 打出 了 多少 盖帽	科比 布莱恩特 在 三次 助攻 的 赛季 中有 多少 次 盖帽	科比 在 三个 助攻 的 赛季 里 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
这个 赛季 球员 有 3 个 或 更 少 的 盖帽	哪个 球员 本赛季 有 3 个 或 更 少 的 盖帽	什么 球员 本赛季 有 3 个 或 更 少 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 平均 失误 多少 次	科比 · 布莱恩特 平均 有 多少 失误	一个 原因 科比 平均 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
一个 赛季 助攻 数 最少 的 球员	一个 赛季 助攻 次数 最少 的 球员	一个 赛季 助攻 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 最少 的 全季 失误	哪个 球员 整个 赛季 失误 最少	哪个 球员 是 整个 赛季 失误 最少 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 拉 湖人队 效力 的 位置	科比 在 湖人队 打 什么 位置	科比 在 洛杉矶 湖人队 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
不 打 控球 后卫 的 球员	不 打 控球 后卫 的 球员	不 打 控球 后卫 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 抢断 不 超过 三次	哪个 球员 的 抢断 次数 不 超过 三次	哪个 球员 的 抢断 次数 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 犯规	哪个 球员 犯规 比 科比 多	有 哪个 球员 比 科比 犯规 次数 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 中 ， 他们 的 盖帽 比 科比 布莱恩特 少	在 整个 赛季 中 盖帽 少于 科比 的 球员	所有 赛季 盖帽 都 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
请 注意 在 任何 一个 赛季 中 获得 最 多 篮板 数 的 球员	注意 在 任何 一个 赛季 中 篮板 数最多 的 球员	请 注意 在 任何 一个 赛季 中 抢下 最 多 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 打 控球 后卫	哪个 球员 没有 打 控卫	什么 球员 不 打 控球 后卫	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 年度 科比 布莱恩特 有 三个 篮板球	科比 在 哪一年 有 三个 篮板	哪一年 科比 抢下 三个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
在 他 打球 的 那些 赛季 中 ， 哪些 球员 比 科比 布莱恩特 打得 更 多	哪个 球员 在 他 打 的 赛季 里 比 科比 打得 多	哪个 球员 比 科比 打 了 更 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 三次 犯规 的 季节 数	科比 三次 犯规 的 赛季 数	科比 有 三次 犯规 的 赛季 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
哪个 位置 让 科比 的 抢断 超过 3 次	科比 从 哪个 位置 抢断 超过 3 次	科比 在 哪个 位置 的 抢断 数 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
科比 布莱恩特 本赛季 的 篮板 总数 是 多少 ， 他 只有 3 次 抢断	科比 本赛季 只有 3 次 抢断 ， 他 的 篮板 总数 是 多少 ？	当 科比 本赛季 只有 3 次 抢断 时 ， 他 的 篮板 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
2004 年 科比 布莱恩特 打 了 多少 次 犯规	科比 在 2004 年 的 犯规 次数	科比 在 2004 年 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 赛季	科比 - 布莱恩特 一个 赛季 有 3 次 失误	一个 赛季 有 3 次 失误 的 科比	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
说出 本赛季 至少 有 3 个 篮板 球员 的 名字	说出 一个 本赛季 至少 有 三个 篮板 的 球员	说出 一个 本赛季 至少 抢下 三个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 他们 在 大多数 失误 中 领先	谁 在 一个 赛季 的 大多数 失误 中 领先	谁 在 一个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 同样 数量 的 失误	哪些 球员 的 失误 次数 和 科比 一样 多	有 哪些 球员 的 失误 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 参加 了 2004 赛季 或 2010 赛季 的 比赛	哪些 球员 在 2004 或 2010 赛季 打过 球	哪些 球员 参加 了 2004 年 和 2010 年 的 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 ， 哪支 队伍 参加 了 科比 布莱恩特 比赛	科比 · 布莱恩特 在 2004 年 效力 于 哪支 球队	科比 2004 年 效力 于 哪支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
谁 每 赛季 打 不到 4 场 比赛	他 每个 赛季 只 打 了 不到 4 场 比赛	谁 每个 赛季 上场 少于 4 场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 季节 是 科比 布莱恩特	哪个 赛季 是 科比	科比 是 哪个 赛季 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
科比 布莱恩特 制造 了 多少 块	科比 · 布莱恩特 创造 了 多少 个 盖帽	科比 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
什么 球队 为 科比 布莱恩特 打 了 3 场 比赛	科比 为 哪支 球队 打 了 3 场 比赛	科比 为 哪支 球队 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
什么 球员 与 科比 布莱恩特 相同 或 更 少 的 抢断	哪个 球员 的 抢断 次数 与 科比 相同 或 更少	有 哪位 球员 抢断 次数 和 科比 一样 多 ， 甚至 更 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 获得 了 相同 数量 的 抢断 ， 或者 比 科比 · 布莱恩特 少得 多	哪个 球员 一个 赛季 的 抢断 次数 与 科比 相同 或 更少	有 哪个 球员 在 一个 赛季 的 抢断 量 和 科比 一样 多 ， 甚至 比 科比 还少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 的 篮板 总数 是 多少 ， 他 只有 三个 盖帽	科比 本赛季 只有 三个 盖帽 的 篮板 总数 是 多少 ？	当 科比 本赛季 只有 3 个 盖帽 时 ， 他 的 篮板 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
球员 得分 超过 2 个	两个 篮板 以上 的 球员	2 个 篮板 以上 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 用 三个 盖帽 打 了 几场 比赛	科比 用 三个 盖帽 打 了 多少 场 比赛	科比 用 3 个 盖帽 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
04 赛季 科比 布莱恩特 有 多少 次 盖帽	科比 布莱恩特 在 04 赛季 有 多少 个 盖帽	科比 在 04 赛季 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
将 赛季 中 阻挡 最多 的 球员 命名 为	说出 本赛季 拦网 次数 最多 的 球员	说出 赛季 中 盖帽 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 3 个 或 更 多 的 篮板球	哪些 球员 有 3 个 或 更 多 的 篮板	什么 球员 有 3 个 或 更 多 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 场 比赛 超过 3 次 助攻	科比 有 多少 场 比赛 助攻 超过 3 次	科比 有 多少 场 比赛 助攻 数 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
在 一个 赛季 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 位置	一个 赛季 打 了 3 场 比赛 的 科比 - 布莱恩特 的 位置	一个 赛季 打 了 三场 比赛 的 科比 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
为 每个 赛季 少于 3 次 助攻 的 球员 命名	说出 每个 赛季 助攻 少于 3 次 的 球员	说出 一个 每个 赛季 助攻 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
如果 不是 更 多 的话 ， 哪个 球员 能 获得 与 科比 布莱恩特 一样 多 的 助攻	哪位 球员 的 助攻 次数 和 科比 一样 多	哪个 球员 能 得到 和 科比 一样 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 不 超过 3 个 篮板 的 球员	一个 赛季 不 超过 3 个 篮板 的 球员	一个 赛季 最多 3 个 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 的 抢断 次数 少于 一个 赛季 的 球员 科比 布莱恩特 的 球员	一个 赛季 的 抢断 次数 少于 科比 的 球员	一个 赛季 抢断 次数 少于 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 犯 了 多于 或 少于 3 次 犯规	三次 以上 犯规	谁 的 犯规 次数 多于 或 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 取得 了 多少 盖帽 ， 他 有 3 个 篮板	科比 在 本赛季 的 三个 篮板球 中 的 得分 是 多少 ？	本赛季 科比 抢下 3 个 篮板 ， 他 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
少于 3 次 抢断 的 球员	少于 3 次 抢断 的 玩家	抢断 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 的 三场 比赛 中有 多少 次 盖帽	科比 在 本赛季 的 三场 比赛 中有 多少 个 盖帽	科比 在 本赛季 的 三场 比赛 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
上赛季 科比 有 多少 次 犯规	上 个 赛季 科比 犯规 了 多少 次	科比 上赛季 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 有 3 个 盖帽 时有 多少 分	科比 有 3 个 盖帽 的 时候 他 得 了 多少 分	当 科比 得到 3 个 盖帽 的 时候 他 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
任何 一个 赛季 的 营业额 都 低于 任何 一个 赛季 可 归因于 科比 布莱恩特 的 营业额 的 球员	列出 在 任何 一个 赛季 中 营业额 低于 科比 在 任何 一个 赛季 的 营业额 的 球员	说出 那些 在 任何 一个 赛季 的 交易 金额 都 低于 科比 在 任何 一个 赛季 的 交易 金额 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 与 科比 布莱恩特 有 同样 数量 的 失误	哪个 球员 的 失误 次数 和 科比 一样 多	哪个 球员 的 失误 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 的 篮板 数最多	哪个 球员 一个 赛季 篮板 最 多	哪个 球员 的 篮板 数是 一个 赛季 最多 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
四季 都 有 超过 3 次 抢断 的 球员	在 所有 赛季 中有 多于 或 少于 3 次 抢断 的 球员	球员 有 更 多 的 和 少于 3 个 抢断 在 所有 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 与 科比 · 布莱恩特 的 失误 相同	哪个 球员 一个 赛季 的 失误 次数 和 科比 一样 多	在 一个 赛季 中 ， 有 哪个 球员 的 失误 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 3 个 盖帽 时 的 位置	当 科比 一个 赛季 有 3 个 盖帽 时 ， 他 在 哪个 位置 打球	当 科比 一个 赛季 有 3 个 盖帽 的 时候 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
什么 季节 科比 布莱恩特 只有 三个 街区	什么 赛季 科比 只有 三个 盖帽	哪个 赛季 科比 只有 三个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
哪些 球员 与 科比 布莱恩特 在 同 一支 球队	哪些 球员 和 科比 在 同 一支 球队	哪些 球员 和 科比 在 同一个 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 盖帽	科比 一个 赛季 有 多少 个 盖帽	科比 一个 赛季 能 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 · 布莱恩特 在 2004 年 的 表现 如何 ？	科比 在 2004 年 打 什么 位置	科比 在 2004 年 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
每个 赛季 有 多少 抢断 ， 科比 布莱恩特 平均 得到 3 个 篮板	科比 每个 赛季 平均 有 多少 次 抢断 ， 同时 他 也 得到 了 3 个 篮板	当 科比 还 抢下 3 个 篮板 时 ， 他 每个 赛季 平均 抢断 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_steals ) ) )
什么 玩家 玩 了 多少 或 少于 3 场 比赛	哪个 玩家 玩 了 3 个 以上 或 以下 的 游戏	什么 玩家 玩 了 多于 或 少于 3 场 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
拥有 最 多 两队 的 球员	最多 有 两个 队 的 球员	拥有 最 多 两个 队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
发现 那些 球员 的 抢断 总数 大于 科比 布莱恩特 在 任何 一个 赛季 的 抢断 总数	找出 那些 在 任何 一个 赛季 中 犯下 的 总 抢断 次数 大于 科比 的 总 抢断 次数 的 球员	找出 那些 抢断 总数 比 科比 在 任何 一个 赛季 的 抢断 总数 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 已经 打 过 两个 或 更 少 的 位置	哪些 球员 打 过 两个 或 更 少 的 位置	哪些 球员 踢 过 两个 或 两个 以下 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 得分 多于 科比 布莱恩特	哪个 球员 本赛季 得分 比 科比 多	本赛季 有 什么 球员 比 科比 得分 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 2004 赛季 的 表现 如何	科比 在 2004 赛季 打 什么 位置	科比 在 2004 赛季 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
在 多少 场 比赛 中 科比 布莱恩特 打出 了 3 个 盖帽	科比 在 几场 比赛 中 3 次 盖帽	科比 在 多少 场 比赛 中 盖帽 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
什么 球员 的 抢断 数量 与 科比 · 布莱恩特 在 一个 赛季 中 的 抢断 次数 一样 多	哪个 球员 的 抢断 次数 和 科比 一个 赛季 的 抢断 次数 一样 多	哪个 球员 的 抢断 数 和 科比 一个 赛季 的 抢断 数 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 3 个 整个 赛季 的 篮板 时 ， 谁 做 了 科比 布莱恩特 的 比赛	科比 在 整个 赛季 有 3 个 篮板 的 时候 为 谁 效力	科比 整个 赛季 都 有 3 个 篮板 ， 他 为 谁 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
什么 球员 至少 和 科比 布莱恩特 一样 多	哪些 球员 的 盖帽 至少 和 科比 一样 多	是 什么 球员 做出 了 至少 和 科比 一样 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 超过 3 分 的 球员	一个 赛季 得 3 分 以上 的 球员	一个 赛季 得分 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 一个 赛季 他 有 3 个 盖帽 时 ， 哪支 球队 是 科比 布莱恩特	当 科比 一个 赛季 有 3 次 盖帽 的 时候 ， 他 是 哪支 球队 的 ？	当 科比 在 一个 赛季 中 得到 3 个 盖帽 的 时候 ， 他 是 在 哪支 球队 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
04 年 科比 有 多少 篮板球	科比 04 年 有 多少 个 篮板	科比 04 年 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
有 3 次 助攻 的 犯规 次数 有 多少	科比 有 3 次 助攻 的 犯规 次数	科比 犯规 次数 ， 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
一个 赛季 犯规 次数 最少 的 球员	一个 赛季 中 犯规 次数 最少 的 球员	一个 赛季 中 犯规 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 哪支 球队 做 了 三个 盖帽	科比 为 哪支 球队 制造 了 三个 盖帽	科比 为 哪支 球队 投进 三个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
这个 赛季 球员 犯规 次数 最少 的 球员	哪个 球员 本赛季 犯规 最少	哪个 球员 本赛季 犯规 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 失误	科比 布莱恩特 整个 赛季 有 多少 失误	科比 在 整个 赛季 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
科比 · 布莱恩特 在 他 犯下 3 次 犯规 的 赛季 中有 多少 篮板	科比 在 三次 犯规 的 赛季 里 抢 了 多少 个 篮板	科比 · 布莱恩特 在 赛季 中 犯规 3 次 ， 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
什么 球员 每 赛季 的 盖帽 比 科比 布莱恩特 少	哪个 球员 每个 赛季 的 盖帽 比 科比 少	哪个 球员 每个 赛季 的 盖帽 数 能比 科比 少 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 玩家 命名 为 总数 小于 3 的 助手	说出 助攻 总数 小于 3 的 球员	说出 总 助攻 数 小于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 本赛季 取得 了 超过 3 分	他 本赛季 得分 超过 3 分	谁 本赛季 得分 超过 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那里 有 多少 队	有 多少 队	有 多少 个队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
哪个 球员 在 一个 赛季 中 没有 比 科比 布莱恩特 更 多 的 失误	哪个 球员 在 一个 赛季 中 没有 比 科比 更 多 的 失误	哪个 球员 在 一个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 助攻 数 最少 的 球员	一个 赛季 助攻 次数 最少 的 球员	一个 赛季 中 助攻 次数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 的 位置 不到 两个 位置	哪些 球员 打 了 不到 两个 位置	什么 球员 打 了 不到 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 打 过 相同 或 更 少 的 比赛	他 打过 和 科比 一样 或 更 少 的 比赛	谁 打 得 和 科比 一样 多 或者 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 次数 少于 一个 赛季 球员 科比 布莱恩特 的 球员	一个 赛季 犯规 次数 少于 科比 的 球员	一个 赛季 的 犯规 次数 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 失误 次数 与 球员 科比 布莱恩特 的 失误 次数 相同 的 球员	一个 赛季 失误 次数 与 科比 相同 的 球员	一个 赛季 的 失误 次数 和 科比 · 布莱恩特 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
3 场 比赛 后 科比 布莱恩特 犯 了 多少 次 犯规	科比 在 3 场 比赛 后 犯规 了 多少 次	科比 在 3 场 比赛 后 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
谁 有 多于 或 少于 3 次 失误	超过 或 少于 3 次 失误	谁 失误 次数 多于 或 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 了 多少 次 犯规	科比 有 多少 次 犯规	科比 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
在 整个 赛季 中 ， 球员 有 多少 篮板 和 科比 布莱恩特 一样 多	什么样 的 球员 在 整个 赛季 都 有 和 科比 一样 多 的 篮板	什么 球员 在 所有 赛季 中 都 有 科比 那么 多 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 多于 3 个 盖帽	哪个 球员 本赛季 有 超过 3 个 盖帽	什么 球员 本赛季 盖帽 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 3 次 失误 的 赛季 中 ， 科比 布莱恩特 队 是 谁	在 他 有 3 次 失误 的 赛季 里 科比 是 哪支 球队 的	在 他 有 3 次 失误 的 那个 赛季 ， 科比 在 哪个 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
其他 球员 与 科比 布莱恩特 的 位置 相同	其他 球员 和 科比 打 同一个 位置	还有 什么 球员 能 和 科比 · 布莱恩特 踢 同样 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 犯规 3 次 助攻 失误	科比 一个 赛季 3 次 助攻 失误	科比 在 一个 赛季 的 失误 ， 其中 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
科比 布莱恩特 每个 赛季 的 助攻 时间 超过 3 次	科比 每个 赛季 有 多长时间 的 助攻 超过 3 次	科比 每个 赛季 助攻 超过 3 次 的 历史 有 多久 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
一个 赛季 抢断 的 球员 不会 超过 一个 赛季 的 抢断 球员 科比 布莱恩特	一个 赛季 的 抢断 次数 不 超过 科比 的 球员	一个 赛季 抢断 不 超过 科比 一个 赛季 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 三次 抢断 有 多少 助攻	科比 三次 抢断 有 多少 次 助攻	科比 抢断 三次 ， 送 出 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
在 一个 赛季 中 失误 最少 的 球员	一个 赛季 失误 最少 的 球员	一个 赛季 中 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一名 少于 三次 抢断 的 球员	说出 少于 三次 抢断 的 球员	说出 一个 抢断 少于 三次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 球员 的 比赛场 均 不到 3 场	什么 球员 在 整个 赛季 中 只 打 了 不到 3 场 比赛	什么 球员 在 整个 赛季 中 打 了 不到 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 职位 数量	职位 多少	位置 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
什么 位置 让 科比 布莱恩特 获得 3 次 抢断	科比 - 布莱恩特 在 什么 位置 得到 了 3 次 抢断	科比 在 什么 位置 得到 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
在 至少 3 场 比赛 中 ， 科比 布莱恩特 在 赛季 中 取得 了 多少 次 盖帽	科比 在 至少 打 了 3 场 比赛 的 情况 下 ， 在 赛季 中 完成 了 多少 个 盖帽 ？	科比 在 至少 3 场 比赛 的 情况 下 ， 一个 赛季 能 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
哪个 球员 在 一个 赛季 中有 最少 的 篮板球	哪个 球员 一个 赛季 篮板 最少	哪个 球员 的 篮板 数是 一个 赛季 最少 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 一个 有 3 次 或 更 多 抢断 的 球员	找 一个 在 一个 赛季 中有 3 次 或 更 多 抢断 的 球员	找到 一个 赛季 抢断 3 次 以上 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 比 科比 布莱恩特 多	哪个 球员 犯规 比 科比 多	哪个 球员 比 科比 犯规 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 街区	科比 有 多少 个 盖帽	科比 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
无论是 科比 布莱恩特 还是 勒布朗 詹姆斯	不是 科比 就是 詹姆斯	不是 科比 就是 詹姆斯	( call SW.listValue ( call SW.concat en.player.kobe_bryant en.player.lebron_james ) )
哪个 球员 是 科比 布莱恩特 或 勒布朗 詹姆斯	哪个 球员 是 科比 布莱恩特 还是 勒布朗 詹姆斯	哪个 球员 是 科比 · 布莱恩特 还是 勒布朗 · 詹姆斯	( call SW.listValue ( call SW.concat en.player.kobe_bryant en.player.lebron_james ) )
一个 赛季 球员 科比 布莱恩特 一个 赛季 3 个 盖帽 的 篮板 数	科比 - 布莱恩特 一个 赛季 3 个 盖帽 的 篮板 数	科比 · 布莱恩特 一个 赛季 的 篮板 数 和 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
当 科比 布莱恩特 拿到 三个 篮板 时 ， 他 就 说出 了 这个 位置	说出 科比 三个 篮板 时 的 位置	说出 科比 抢下 3 个 篮板 时 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
在 一个 赛季 中 ， 科比 布莱恩特 为 湖人队 抢断 了 多少 次	科比 一个 赛季 有 多少 次 抢断 湖人	科比 一个 赛季 抢断 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
哪位 球员 没有 3 次 助攻	哪个 球员 没有 3 次 助攻	哪个 球员 没有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 场 比赛 有 3 次 助攻	科比 一个 赛季 有 多少 场 比赛 有 三次 助攻	科比 在 一个 赛季 中有 多少 场 比赛 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 2004 赛季 取得 了 多少 盖帽	科比 布莱恩特 在 2004 赛季 完成 了 多少 次 拦网	科比 在 2004 赛季 投了 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
列出 2004 年 kobe   bryant 取得 的 失误 数	说出 科比 2004 年 的 失误 次数	说出 科比 2004 年 失误 的 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
在 哪个 赛季 科比 布莱恩特 得到 3 分	科比 在 哪个 赛季 得 了 3 分	哪个 赛季 科比 得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
在 3 次 犯规 后 ， 科比 得到 了 多少 篮板球	科比 在 三次 犯规 后 得到 了 多少 个 篮板	科比 在 3 次 犯规 之后 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
一个 赛季 球员 的 犯规 次数 多于 或 少于 3 次	哪个 球员 在 一个 赛季 中 犯规 次数 多于 或 少于 3 次	哪个 球员 一个 赛季 的 犯规 数能 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 的 篮板 数	哪个 球员 的 篮板 和 科比 一样 多	有 哪个 球员 的 篮板 能 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 不 超过 两个 位置	哪位 选手 最 多 只能 打 两个 位置	哪些 球员 最多 打 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 次 抢断	哪个 球员 有 3 次 以上 的 抢断	什么 球员 抢断 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 2004 赛季	2004 赛季 科比 布莱恩特 队	科比 · 布莱恩特 2004 赛季 最佳阵容	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
球队 科比 布莱恩特 效力	科比 布莱恩特 效力 的 球队	科比 效力 的 球队	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
在 哪个 赛季 ， 科比 布莱恩特 打出 了 3 个 盖帽	科比 在 哪个 赛季 三次 盖帽	科比 在 哪个 赛季 做 了 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
科比 布莱恩特 打 了 多少 场 比赛 ， 他 有 超过 3 次 犯规	科比 在 他 犯规 超过 3 次 的 情况 下 打 了 多少 场 比赛	科比 有 多少 场 比赛 犯规 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
所有 赛季 球员 都 有 比 科比 布莱恩特 更 多 或 更 多 篮板 的 球员	哪个 球员 在 整个 赛季 的 篮板 数都 和 科比 一样 或 更 多	哪个 球员 在 整个 赛季 的 篮板 数都 能 超过 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 最少 的 积木	他 有 最少 的 积木	谁 的 积木 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 哪个 球员 和 科比 · 布莱恩特 一样 有 多少 篮板球	哪个 球员 一个 赛季 的 篮板 数 和 科比 一样 多	哪个 球员 在 一个 赛季 中 抢下 的 篮板球 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 不 超过 3 次 的 球员	一个 赛季 犯规 不 超过 3 次 的 球员	一个 赛季 犯规 不 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 在 一个 赛季 中有 多少 篮板球	2004 年 科比 一个 赛季 有 多少 个 篮板	科比 在 2004 年 一个 赛季 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
每个 赛季 哪个 球员 放弃 了 与 科比 布莱恩特 相同 的 失误 次数	哪个 球员 每个 赛季 都 会 放弃 和 科比 相同 的 失误 次数	哪个 球员 每个 赛季 的 失误 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 打得少	他 比 科比 打得少	谁 比 科比 打得少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 比 科比 布莱恩特 更 多 的 篮板球	哪个 球员 一个 赛季 的 篮板 数比 科比 多	还有 什么 球员 能比 科比 在 一个 赛季 中 抢下 更 多 的 篮板 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 每 赛季 的 抢断 次数 都 比 科比 布莱恩特 多	哪个 球员 每个 赛季 的 抢断 次数 总是 比 科比 多	哪个 球员 在 每个 赛季 的 抢断 数都 比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 有 多少 场 比赛 都 有 科比 布莱恩特 出场	科比 每个 赛季 打 了 多少 场 比赛	科比 每个 赛季 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) )
一个 赛季 超过 3 个 盖帽 的 球员	一个 赛季 有 3 个 以上 盖帽 的 球员	一个 赛季 盖帽 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 玩家 拥有 比块 数为 3 的 kobe   bryant 更 多 的 块	哪个 球员 的 盖帽 比 科比 多 ， 科比 的 盖帽 数是 3	谁 能比 科比 拥有 更 多 的 盖帽 ， 他 的 盖帽 数是 3 个	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
2004 年 科比 布莱恩特 抢断	科比 2004 年 的 抢断	2004 年 科比 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
什么 是 科比 布莱恩特 只有 3 个 篮板 的 赛季 总数	科比 只有 三个 篮板 的 赛季 总数 是 多少 ？	科比 本赛季 总共 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 至少 3 分 的 赛季 中输 了 多少 失误	科比 在 赛季 中以 至少 3 分 的 成绩 输掉 了 多少 次 失误	在 过去 的 赛季 中 ， 科比 在 得到 至少 3 分 的 情况 下 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
科比 布莱恩特 打 了 多少 场 比赛	科比 布莱恩特 打 了 多少 场 比赛	科比 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
科比 布莱恩特 本赛季 有 多少 盖帽 ， 他 还有 3 个 篮板	科比 - 布莱恩特 这个 赛季 有 多少 个 盖帽 ， 他 也 有 三个 篮板	本赛季 科比 抢下 了 多少 盖帽 和 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
在 得到 3 个 篮板 后 ， 科比 · 布莱恩特 犯 了 多少 次 犯规	科比 在 3 个 篮板 后 犯规 了 多少 次	科比 抢下 3 个 篮板 后 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
列出 科比 布莱恩特 的 总 失误 次数	说出 科比 总 失误 次数	说出 科比 总 失误 的 次数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
控卫 科比 布莱恩特 制造 了 多少 块	控卫 科比 · 布莱恩特 的 盖帽 数	作为 控球 后卫 科比 · 布莱恩特 能 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
科比 布莱恩特 在 三分 中犯 了 多少 次 犯规	科比 布莱恩特 三分 的 犯规 次数 是 多少	科比 3 分 的 时候 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
找到 一个 特定 赛季 篮板 总数 超过 一个 赛季 篮板 数 的 球员	找出 一个 赛季 篮板 总数 超过 科比 一个 赛季 篮板 总数 的 球员	找出 一个 赛季 的 篮板 总数 比 科比 · 布莱恩特 一个 赛季 的 篮板 总数 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 得分 低于 3 分	哪个 球员 一个 赛季 得分 不到 3 分	什么 球员 一个 赛季 得分 低于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 一名 没有 三次 助攻 的 球员	说出 一个 没有 三次 助攻 的 球员	说出 一个 没有 三次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 的 犯规 次数 少于 4 次	哪些 球员 犯规 少于 4 次	什么 球员 犯规 少于 4 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 不是 控球 后卫	哪些 球员 不是 控卫	哪些 球员 不是 控球 后卫	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 篮板 数比 科比 布莱恩特 少	哪个 球员 的 篮板 比 科比 少	哪个 球员 的 篮板 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 本赛季 有 多少 助攻 得到 3 次 失误	科比 - 布莱恩特 这个 赛季 有 多少 次 助攻 得到 3 次 失误	这个 赛季 科比 有 多少 次 助攻 才 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
一个 赛季 犯规 次数 比 科比 布莱恩特 少 的 球员	一个 赛季 中 犯规 次数 少于 科比 的 球员	一个 赛季 的 犯规 次数 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 任何 一个 赛季 犯规 总数 等于 或 高于 科比 布莱恩特 的 球员 命名 为	说出 在 任何 一个 赛季 中 犯规 总数 等于 或 超过 科比 的 球员	说出 那些 在 任何 一个 赛季 中 犯规 总数 都 超过 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 比 一名 球员 科比 布莱恩特 的 失误 少 的 球员	一个 赛季 失误 率 比 科比 小 的 球员	一个 赛季 失误 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一年 科比 布莱恩特 为 拉 湖人队 效力	科比 是 哪一年 为 湖人队 效力 的	科比 哪一年 效力 于 洛杉矶 湖人队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
2004 年 ， 哪支 球队 为 科比 布莱恩特 效力	2004 年 科比 为 哪支 球队 效力	科比 2004 年 效力 于 哪支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 赛季 科比 布莱恩特 只有 3 次 犯规	科比 什么 赛季 只有 3 次 犯规	科比 哪个 赛季 只有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
本赛季 有 很多 篮板球 的 控球 后卫 科比 布莱恩特 出场	控球 后卫 科比 本赛季 抢 了 很多 篮板	控球 后卫 科比 · 布莱恩特 本赛季 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
哪些 球员 最多 有 2 个 位置	哪些 球员 最多 有 两个 位置	哪些 球员 最多 有 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 少于 3 个 街区	不到 3 个 街区	谁 的 积木 少于 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 三场 总 比赛 中有 多少 次 盖帽	科比 在 他 全场 三分 的 比赛 中有 多少 个 盖帽	科比 在 全场 3 分 的 比赛 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
将 那些 在 任何 一个 赛季 得分 至少 3 分 的 球员 命名 为	说出 那些 在 任何 一个 赛季 中 助攻 得分 至少 3 次 的 球员	说出 那些 在 任何 一个 赛季 都 有 至少 3 次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 得分 最低	哪个 球员 得分 最少	哪个 球员 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 为 湖人队 比赛 时 得分 多少 分	科比 在 湖人队 的 比赛 中得 了 多少 分	科比 在 湖人队 的 时候 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
一个 赛季 少于 4 个 盖帽 的 球员	一个 赛季 中 得分 不到 4 个 盖帽 的 球员	一个 赛季 盖帽 少于 4 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
拉湖 球员 科比 布莱恩特 有 多少 篮板球	湖人队 球员 科比 有 多少 个 篮板	湖人 球员 科比 · 布莱恩特 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 在 得到 3 分时 犯 了 多少 次 犯规	科比 拿下 3 分时 有 多少 次 犯规	当 科比 得到 3 分 的 时候 ， 他 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
什么 玩家 玩 了 3 场 或 更 多 游戏	哪个 玩家 玩 了 3 个 或 更 多 的 游戏	哪个 玩家 玩 了 3 个 或 更 多 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
与 科比 布莱恩特 有过 相同 或 更 多 失误 的 人	他 比 科比 有 同样 或 更 多 的 失误	谁 的 失误 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 得到 了 超过 3 分	得 了 3 分 以上	谁 得 了 3 分 以上	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那些 在 特定 赛季 中 营业额 最 多 等于 3 的 球员	找到 那些 在 一个 赛季 中 营业额 最 多 等于 3 的 球员	找出 那些 在 一个 赛季 中 营业额 最 多 等于 3 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 超过 3 次 抢断 的 赛季 中 ， 科比 有 多少 次 抢断	科比 在 三次 以上 抢断 的 赛季 里 有 多少 次 抢断	科比 在 一个 赛季 中有 多少 次 抢断 是 超过 3 次 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
什么 球员 比 科比 布莱恩特 有 更 少 的 助攻	哪个 球员 的 助攻 比 科比 少	有 哪个 球员 的 助攻 数比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 3 次 抢断 后 ， 科比 布莱恩特 打出 了 多少 盖帽	科比 在 三次 抢断 后 ， 一共 完成 了 多少 个 盖帽 ？	科比 抢断 3 次 之后 盖帽 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 多少 场 比赛 中 出场 3 次 助攻	科比 在 三次 助攻 的 情况 下 打 了 多少 场 比赛	科比 在 那场 比赛 中有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
一个 赛季 没有 打过 3 场 比赛 的 球员	一个 赛季 没有 打过 3 场 比赛 的 球员	一个 赛季 没有 打 过 三场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 的 总 犯规 数 低于 3	他 本赛季 犯规 总数 不到 3 次	谁 本赛季 的 犯规 总数 低于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 的 失误 等于 3 时 ， 科比 布莱恩特 有 多少 个 赛季 的 篮板球	当 科比 的 失误 达到 3 个 时 ， 他 整个 赛季 有 多少 个 篮板	当 科比 的 失误 达到 3 个 篮板 时 ， 他 整个 赛季 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
在 一个 赛季 中有 3 个 篮板 的 球员 科比 布莱恩特 的 失误 次数	科比 - 布莱恩特 一个 赛季 的 失误 次数 ， 他 一个 赛季 有 3 个 篮板	科比 一个 赛季 的 失误 次数 ， 他 一个 赛季 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
什么 球员 每 赛季 的 助攻 数比 控球 后卫 科比 · 布莱恩特 少	哪个 球员 每 赛季 的 助攻 比控卫 科比 少	还有 什么 球员 能比 控球 后卫 科比 · 布莱恩特 每个 赛季 的 助攻 数 还 少 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 年 ， 科比 布莱恩特 有 多少 个 全场 赛季	2004 年 科比 整个 赛季 有 多少 次 拦网	2004 年 ， 科比 有 多少 个 赛季 封盖	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
在 一个 赛季 中 得到 同等 数量 助攻 的 球员 最低 助攻 总数	一个 赛季 助攻 次数 与 科比 布莱恩特 相同 的 球员 助攻 总数 最低	一个 赛季 的 助攻 数 和 科比 · 布莱恩特 一样 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 ， 什么 球员 比 科比 布莱恩特 打得 更 多	哪个 球员 本赛季 比 科比 打得 多	本赛季 有 什么 球员 比 科比 打得 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 犯规	科比 一个 赛季 有 多少 次 犯规	科比 一个 赛季 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
什么 玩家 有 3 个 或 更 多块	哪个 球员 有 3 个 或 更 多 的 盖帽	哪个 球员 有 3 个 或 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 任何 一个 赛季 的 篮板 数 与 科比 · 布莱恩特 相同	哪个 球员 在 任何 一个 赛季 的 篮板 数都 和 科比 一样	哪个 球员 在 任何 一个 赛季 的 篮板 数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 助攻	哪个 球员 的 助攻 比 科比 多	哪个 球员 的 助攻 数比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断	科比 有 多少 次 抢断	科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
科比 · 布莱恩特 在 本赛季 为 洛杉矶 湖人队 效力 的 比赛 中 得到 了 多少 分	科比 - 布莱恩特 在 他 为 洛杉矶 湖人队 效力 的 那个 赛季 得到 了 多少 分	科比 · 布莱恩特 在 为 洛杉矶 湖人队 效力 的 那个 赛季 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
在 整个 赛季 中 ， 哪些 球员 比 科比 布莱恩特 少得 多	在 整个 赛季 中 ， 哪些 球员 的 盖帽 比 科比 少	什么 球员 在 整个 赛季 中 盖帽 都 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最 多 抢断 数	哪个 玩家 的 抢断 次数 最 多	哪个 球员 的 抢断 次数 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
与 科比 布莱恩特 有 相同 数量 或 更少 助攻 的 人	他 和 科比 的 助攻 次数 相同 或 更少	谁 的 助攻 数 和 科比 一样 多 或者 更 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那些 在 特定 赛季 中 总 抢断 次数 低于 特定 赛季 科比 布莱恩特 获得 的 抢断 总数 的 球员	找出 那些 在 一个 赛季 中 总 抢断 次数 少于 科比 在 一个 赛季 中 总 抢断 次数 的 球员	找出 那些 在 某 一 赛季 抢断 总数 小于 科比 在 某 一 赛季 抢断 总数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 队	科比 布莱恩特 队	球队 球员 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
科比 布莱恩特 在 什么 位置 得到 3 次 失误	科比 在 什么 位置 上 3 次 失误	科比 在 什么 位置 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
哪位 球员 的 位置 最 多	哪一位 选手 的 位置 最 多	哪个 球员 打过 最 多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 多 的 犯规	哪个 球员 的 犯规 次数 和 科比 一样 多	哪个 球员 的 犯规 数能 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这 被 认为 是 3 个 盖帽 的 球员 科比 布莱恩特 的 赛季	这 被 认为 是 科比 的 三个 盖帽 赛季	这个 赛季 被 认为 是 球员 科比 · 布莱恩特 的 3 个 盖帽 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
一个 赛季 球员 科比 布莱恩特 的 比赛 数量 超过 一个 赛季 3 分	科比 - 布莱恩特 一个 赛季 的 上场 次数 ， 一个 赛季 3 分	科比 在 一个 赛季 中 出场 的 次数 ， 一个 赛季 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
找到 那些 在 任何 赛季 中 负责 少于 3 分 的 球员	找出 在 任何 一个 赛季 中 得分 低于 3 分 的 球员	找出 那些 在 任何 一个 赛季 中 得分 低于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 做出 了 多少 助攻	科比 一个 赛季 有 多少 次 助攻	科比 一个 赛季 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
什么 球队 科比 布莱恩特 有 3 次 抢断	科比 在 哪支 球队 有 3 次 抢断	科比 在 哪个 球队 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
有 多少 职位	多少 职位	有 多少 位置	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
当 他 有 三个 盖帽 时 ， 科比 布莱恩特 有 多少 失误	科比 在 三次 盖帽 时有 多少 次 失误	当 科比 有 3 个 盖帽 的 时候 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
科比 · 布莱恩特 在 本赛季 得到 3 次 助攻 时有 多少 失误	当 科比 在 本赛季 得到 3 次 助攻 时 ， 他 有 多少 失误	本赛季 科比 3 次 助攻 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
所有 赛季 球员 的 失误 都 超过 3 次	什么 球员 在 整个 赛季 都 有 超过 3 次 失误	什么 球员 在 整个 赛季 有 超过 3 次 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 哪个 赛季 科比 布莱恩特 得到 3 个 篮板	科比 在 哪个 赛季 得到 3 个 篮板	哪个 赛季 科比 抢下 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
在 一个 赛季 中 没有 三次 抢断 的 球员	一个 赛季 内 没有 三次 抢断 的 球员	一个 赛季 没有 三次 抢断 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 失误	科比 有 多少 失误	科比 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
来自 洛杉矶 湖人队 或 克利夫兰 骑士队 的 球员	洛杉矶 湖人队 或 克利夫兰 骑士队 的 球员	来自 洛杉矶 湖人队 或 克利夫兰 骑士队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 的 比赛 中 比 科比 布莱恩特 更 多	哪个 球员 在 一个 赛季 里 比 科比 打得 更 多	还有 什么 球员 比 科比 · 布莱恩特 在 一个 赛季 中 打 了 更 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 3 次 或 更 少 的 助攻	哪个 球员 本赛季 助攻 不 超过 3 次	什么 球员 本赛季 只有 3 次 或 更 少 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 个 全季 助攻 ， 有 多少 全季 助攻	科比 在 整个 赛季 有 多少 次 助攻 和 3 次 盖帽	科比 在 整个 赛季 有 多少 次 助攻 和 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
哪个 球员 与 科比 布莱恩特 的 位置 相同	哪个 球员 和 科比 的 位置 一样	哪个 球员 的 位置 和 科比 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 获得 了 多少 篮板球	2004 年 科比 得到 了 多少 个 篮板	2004 年 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
谁 每个 赛季 有 3 次 或 更 多 的 失误	每个 赛季 有 3 次 或 更 多 失误	谁 每个 赛季 有 3 次 以上 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 到 目前为止 谁 领跑 积分 赛	本赛季 迄今为止 谁 在 积分榜 上 领先	到 目前为止 ， 谁 在 这个 赛季 的 积分 竞赛 中 领先	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 都 比 科比 布莱恩特 得分 更 多 的 球员	所有 赛季 得分 都 超过 科比 的 球员	在 整个 赛季 中 得分 都 比 科比 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 为 洛杉矶 湖人队 效力 了 多少 失误	科比 - 布莱恩特 本赛季 在 洛杉矶 湖人队 的 比赛 中 失误 了 多少 次	科比 在 洛杉矶 湖人队 的 这个 赛季 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 在 他 的 三个 赛季 中为 球队 做 了 什么	科比 在 三个 热身赛 季为 哪支 球队 效力	科比 在 他 的 三个 赛季 为 哪支 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
本赛季 中 哪位 球员 和 科比 布莱恩特 队 一起 打出 了 很多 盖帽	哪个 球员 在 本赛季 的 拦网 次数 和 科比 一样 多	哪个 球员 在 本赛季 盖帽 数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一个 得分 不是 三分 的 球员	说出 一个 得分 不是 3 分 的 球员	说出 一个 得分 不是 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那个 属于 洛杉矶 湖人队 的 科比 布莱恩特 制造 了 多少 个 盖帽	属于 洛杉矶 湖人队 的 科比 · 布莱恩特 制造 了 多少 个 盖帽	湖人队 的 科比 · 布莱恩特 投了 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
在 一个 赛季 中有 3 次 犯规 的 球员 科比 布莱恩特 的 一个 赛季 中 的 盖帽 数量	科比 - 布莱恩特 一个 赛季 3 次 犯规 的 盖帽 数	科比 一个 赛季 的 盖帽 数 ， 他 一个 赛季 有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
无论是 2004 年 还是 2010 年	2004 年 或 2010 年	2004 年 或 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
在 一个 赛季 中比 在 科比 布莱恩特 场上 打更 多 比赛 的 球员	一个 赛季 比 科比 打更 多 比赛 的 球员	球员 在 一个 赛季 的 上场 次数 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 球员 科比 布莱恩特 队 的 球员	科比 布莱恩 茨队 球员	来自 科比 · 布莱恩特 队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 所有 赛季 都 有 较 少 的 反弹	哪个 球员 整个 赛季 篮板球 都 不 多	什么 球员 在 整个 赛季 的 篮板 都 比 他 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 哪些 球员 的 犯规 次数 与 科比 · 布莱恩特 相同	哪个 球员 一个 赛季 的 犯规 次数 和 科比 一样 多	哪些 球员 一个 赛季 的 犯规 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一个 犯规 少于 三次 的 球员	说出 一个 犯规 少于 三次 的 球员	说出 一个 犯规 少于 三次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 助攻	科比 整个 赛季 有 多少 次 助攻	科比 在 整个 赛季 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
科比 · 布莱恩特 在 哪个 赛季 共 参加 了 3 场 比赛	科比 在 哪个 赛季 总共 参加 了 3 场 比赛	哪个 赛季 科比 一共 参加 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
什么 球队 让 科比 布莱恩特 得到 3 个 篮板球	科比 · 布莱恩特 在 哪支 球队 得到 3 个 篮板	哪支 球队 科比 抢下 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
命名 至少 有 三个 玩过 的 游戏 的 玩家	说出 至少 玩过 三次 游戏 的 玩家	说出 一个 至少 玩过 三次 游戏 的 玩家	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 多少 次 失误	科比 有 多少 失误	科比 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
本赛季 到 目前为止 ， 科比 布莱恩特 有 多少 篮板球	科比 本赛季 迄今为止 有 多少 个 篮板	这个 赛季 到 目前为止 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
一名 球员 科比 布莱恩特 在 控卫 位置 上 犯规 的 次数	科比 - 布莱恩特 控卫 一个 赛季 的 犯规 次数	控球 后卫 科比 · 布莱恩特 一个 赛季 的 犯规 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
科比 在 哪个 赛季 取得 了 3 分	哪个 赛季 科比 得 了 3 分	在 那个 赛季 科比 得到 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
除了 控球 后卫 以外 的 名字	除了 控球 后卫 之外 的 其他 球员	说出 控球 后卫 以外 的 球员 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 抢断 次数	科比 - 布莱恩特 一个 赛季 3 次 失误 的 抢断 次数	科比 · 布莱恩特 一个 赛季 抢断 的 次数 ， 一个 赛季 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
球员 在 一个 赛季 犯规 不 超过 一个 球员 科比 布莱恩特 的 犯规	一个 赛季 犯规 次数 不 超过 科比 一个 赛季 犯规 次数 的 球员	一个 赛季 犯规 不 超过 科比 一个 赛季 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 作为 一名 湖人队 有 多少 赛季 犯规	科比 作为 湖人 的 一员 ， 整个 赛季 有 多少 次 犯规 ？	作为 湖人队 的 一员 ， 科比 整个 赛季 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
什么 球员 在 整个 赛季 中 打 了 不到 3 场 比赛	什么 球员 在 整个 赛季 中 只有 不到 3 场 比赛	什么 球员 在 整个 赛季 中 少于 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
为 每个 赛季 不 超过 三分 的 球员 命名	说出 每个 赛季 得分 不 超过 3 分 的 球员	说出 一个 赛季 得分 不 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 不少 于 3 个 赛季 助攻	哪个 球员 整个 赛季 助攻 不少 于 3 次	什么 球员 赛季 助攻 不少 于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 科比 布莱恩特 抢断 的 数量 超过 一个 赛季 3 分	科比 - 布莱恩特 一个 赛季 的 抢断 次数 ， 一个 赛季 3 分	科比 · 布莱恩特 一个 赛季 的 抢断 数 ， 一个 赛季 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
哪个 球员 在 一个 赛季 犯下 了 3 次 以上 的 犯规	哪个 球员 一个 赛季 犯规 3 次 或 更 多	哪些 球员 在 一个 赛季 中 犯规 3 次 以上	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 职业 失误	科比 有 多少 次 职业 失误	科比 有 多少 次 职业 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
在 一个 赛季 中 ， 球员 的 名字 比 球员 科比 布莱恩特 少	说出 在 一个 赛季 中 抢断 次数 少于 科比 的 球员	说出 一个 赛季 抢断 次数 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 不 超过 三次	哪个 球员 的 失误 不 超过 三次	哪个 球员 失误 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 每场 比赛 失误 最少 的 球员	本赛季 每场 失误 最少 的 球员	本赛季 场均 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 赛季 的 篮板球	科比 整个 赛季 有 多少 个 篮板	科比 整个 赛季 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
科比 布莱恩特 为 湖人队 效力 的 位置	科比 布莱恩特 在 湖人队 打 什么 位置	科比 为 湖人队 担任 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
在 一个 赛季 球员 kobe   bryant 上 打过 更 多 比赛 的 球员 已经 打 了 一个 赛季	在 一个 赛季 中 打过 更 多 比赛 的 球员 科比 · 布莱恩特 在 一个 赛季 中 打过 更 多 比赛	科比 · 布莱恩特 已经 打 了 一个多 赛季 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 与 科比 布莱恩特 相同 数量 或 更 少 的 篮板	篮板 数 与 科比 相同 或 更 少 的 球员	谁 的 篮板 数 和 科比 一样 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 什么 球员 比 科比 布莱恩特 有 更 多 的 失误	哪个 球员 一个 赛季 的 失误 比 科比 还 多	在 一个 赛季 中 ， 有 什么 球员 的 失误 比 科比 还 多 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 每个 赛季 都 有 超过 3 个 篮板	哪个 球员 每个 赛季 都 有 超过 3 个 篮板	什么 球员 每个 赛季 都 有 超过 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 本赛季 打出 了 3 个 篮板球	科比 布莱恩 茨 本赛季 上场 次数 他 有 3 个 篮板	科比 · 布莱恩特 本赛季 出场 次数 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
科比 在 职业生涯 中为 球队 效力 的 球队	科比 在 职业生涯 中为 哪支 球队 效力	科比 在 他 的 职业生涯 中 效力 过 哪些 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
什么 球员 有 超过 3 个 篮板	哪个 球员 有 超过 3 个 篮板	什么 球员 抢下 3 个 以上 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 玩家 最多 有 3 个 街区	哪个 球员 最多 有 3 个 盖帽	哪个 球员 最多能 得到 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 场 比赛 中有 多少 次 全场 抢断	科比 在 3 场 比赛 中全 赛季 有 多少 次 抢断	科比 在 整个 赛季 的 3 场 比赛 中 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
谁 的 失误 比 科比 布莱恩特 少	他 的 失误 比 科比 少	谁 的 失误 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 属于 科比 布莱恩特 · 蒸汽	哪个 球员 属于 科比 · 布莱恩特 · 斯泰姆	哪个 球员 属于 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 哪一年 有 三次 抢断	哪一年 科比 有 三次 抢断	哪一年 科比 抢断 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
每年 不会 比 科比 布莱恩特 犯规 更 多	他 每年 的 犯规 次数 不比 科比 多	谁 每年 得到 的 犯规 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
无论是 2004 年 还是 2010 年	2004 年 或 2010 年	2004 年 或 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
科比 布莱恩特 在 季后赛 中有 多少 次 失误 超过 3 次 抢断	科比 在 三次 以上 抢断 的 赛季 中有 多少 失误	科比 在 赛季 中有 多少 次 失误 和 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
2004 年 科比 布莱恩特 犯规	科比 2004 年 的 犯规	科比 在 2004 年 的 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
哪个 球员 有 三个 或 更 多 的 盖帽	哪个 球员 有 三个 或 更 多 的 盖帽	哪个 球员 有 三个 或 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 整个 赛季 都 有 3 次 以上 的 助攻	哪些 球员 在 整个 赛季 都 有 3 次 或 更 多 的 助攻	哪个 球员 在 整个 赛季 都 有 3 次 或 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 比 一名 球员 科比 布莱恩特 打 了 更 多 比赛 的 球员	一个 赛季 比 科比 打得 多 的 球员	一个 赛季 上场比赛 比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 有 更 多 的 分数	他 比 科比 得分多	谁 得分 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 拥有 相同 或 更 多 的 块 比 科比 布莱恩特	哪些 球员 比 科比 有 相同 或 更 多 的 盖帽	哪些 球员 盖帽 数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球队 是 科比 布莱恩特	科比 是 哪支 球队 的	科比 属于 哪支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
哪些 球员 为 湖人队 或 骑士队 效力	哪些 球员 为 湖人队 或 骑士队 效力	哪些 球员 效力 于 湖人队 ， 哪些 球员 效力 于 骑士队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 控球 后卫 或 前锋	说出 控球 后卫 或 前锋 的 名字	说出 一个 控球 后卫 或 前锋 的 名字	( call SW.listValue ( call SW.concat en.position.point_guard en.position.forward ) )
哪个 球员 为 最少 的 球队 效力	哪位 球员 为 最少 的 球队 效力	哪个 球员 效力 的 球队 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 有 多少 次 盖帽	科比 这个 赛季 有 多少 个 盖帽	科比 这个 赛季 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
什么 球员 在 一个 赛季 中 打出 3 个 盖帽	哪个 球员 一个 赛季 三次 盖帽	什么 球员 在 一个 赛季 中 得到 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 赛季 ， 球员 科比 布莱恩特 有 多少 篮板球	科比 在 2004 赛季 有 多少 个 篮板	2004 赛季 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 本赛季 犯 了 多少 失误 ， 他 犯 了 3 次 犯规	科比 - 布莱恩特 本赛季 3 次 犯规 失误 次数	本赛季 科比 犯规 3 次 ， 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
在 2004 年 ， 科比 犯 了 多少 次 犯规	2004 年 科比 有 多少 次 犯规	2004 年 科比 对 他 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
在 他 只有 三次 犯规 的 赛季 中 ， 科比 布莱恩特 的 盖帽 总数 是 多少	在 科比 只有 三次 犯规 的 赛季 里 ， 科比 的 盖帽 总数 是 多少 ？	在 科比 只有 3 次 犯规 的 赛季 中 ， 他 的 盖帽 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
在 本赛季 他 有 3 次 盖帽 ， 科比 布莱恩特 正在 为什么 球队 效力	在 这个 赛季 他 有 3 个 盖帽 科比 布莱恩特 在 为 哪支 球队 效力	本赛季 他 有 3 次 盖帽 ， 科比 为 哪个 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
前锋 或 控卫 的 球员	前锋 或 控卫 球员	前锋 或 控球 后卫	( call SW.listValue ( call SW.concat en.position.point_guard en.position.forward ) )
科比 布莱恩特 犯 三次 犯规 时有 多少 篮板球	科比 三次 犯规 时有 多少 个 篮板	科比 在 三次 犯规 的 时候 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
科比 布莱恩特 队 在 一个 赛季 中 贡献 了 3 次 助攻	科比 - 布莱恩特 一个 赛季 为 哪支 球队 助攻 3 次	科比 在 一个 赛季 中为 哪支 球队 贡献 了 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
在 一个 赛季 中有 3 次 助攻 的 球员 科比 布莱恩特 的 得 分数	科比 - 布莱恩特 一个 赛季 有 3 次 助攻 的 得分	一个 赛季 得到 3 次 助攻 的 科比 的 得分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
科比 布莱恩特 作为 控球 后卫 放弃 了 多少 失误	科比 放弃 了 多少 次 控卫 失误	作为 控球 后卫 ， 科比 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
哪支 球队 做过 科比 布莱恩特 三场 比赛	科比 为 哪支 球队 打 了 三场 比赛	科比 为 哪个 队 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
科比 · 布莱恩特 在 3 场 比赛 中 制造 了 多少 次 盖帽	科比 在 3 场 比赛 中 完成 了 多少 个 盖帽	科比 在 三场 比赛 中 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
谁 得到 了 最少 的 篮板球	篮板 最少 的 人	谁 的 篮板 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 犯规 作为 控球 后卫	科比 - 布莱恩特 作为 控球 后卫 有 多少 次 犯规	作为 控球 后卫 ， 科比 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
说出 一个 赛季 失误 最少 的 球员	说出 一个 赛季 中 失误 最少 的 球员	说出 一个 赛季 中 失误 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
从 赛季 开始 ， 他们 的 助攻 最 多	谁 从 赛季 开始 就 助攻 最 多	谁 是 赛季 初 助攻 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪支 队伍 让 科比 布莱恩特 担任 控球 后卫	科比 是 哪支 球队 的 控球 后卫	科比 作为 控球 后卫 在 哪个 球队 打球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
科比 · 布莱恩特 在 职业生涯 中 得到 了 多少 次 抢断	科比 的 职业生涯 中有 多少 次 抢断	科比 在 职业生涯 中 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
科比 布莱恩特 打 了 多少 场 比赛	科比 布莱恩特 打 了 多少 场 比赛	科比 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 一场 有 三次 失误 的 比赛 中有 多少 盖帽	科比 在 一场 三次 失误 的 比赛 中有 多少 个 盖帽	科比 在 一场 有 三次 失误 的 比赛 中有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
球队 得分 最少 的 球员	全队 得分 最少 的 球员	得分 最少 的 队员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 3 次 抢断 的 赛季 中 ， 有 多少 场 比赛 是 科比 · 布莱恩特	在 他 三次 抢断 的 赛季 里 科比 在 几场 比赛 中	本赛季 他 3 次 抢断 ， 这是 科比 的 数据	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
科比 布莱恩特 犯 3 次 犯规 时有 多少 失误	科比 有 3 次 犯规 时有 多少 次 失误	当 科比 犯规 3 次时 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
科比 布莱恩特 对 湖人 有 多少 分	科比 布莱恩特 对 湖人队 有 多少 分	科比 为 湖人 拿下 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
哪位 球员 打 了 3 次 犯规	哪个 球员 犯规 少于 3 次	哪个 球员 的 犯规 次数 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 次数 比 科比 布莱恩特 少	哪个 球员 的 失误 次数 比 科比 少	哪个 球员 的 失误 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪支 队伍 为 科比 布莱恩特 打 控卫	科比 是 哪支 球队 的 控球 后卫	科比 是 哪个 球队 的 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
本赛季 科比 有 多少 场 比赛 有 三次 抢断	科比 这个 赛季 有 几场 比赛 三次 抢断	科比 这个 赛季 有 多少 场 比赛 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
本赛季 科比 布莱恩特 的 篮板 数是 多少	科比 本赛季 的 篮板 数是 多少	科比 · 布莱恩特 本赛季 的 篮板 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
在 这个 赛季 中 ， 科比 · 布莱恩特 的 助攻 总数 是 3 支 球队	在 科比 布莱恩 茨 助攻 总数 为 3 次 的 赛季 里 ， 他 是 哪支 球队 的 ？	在 科比 · 布莱恩特 的 那个 赛季 ， 他 的 总 助攻 数是 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
在 给定 的 赛季 中 ， 科比 布莱恩特 的 平均数 是 多少	科比 - 布莱恩特 在 一个 赛季 中 的 平均 得分 是 多少	科比 在 一个 赛季 平均 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 布莱恩特 有 多少 篮板球	科比 有 多少 个 篮板	科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
在 哪个 赛季 ， 科比 布莱恩特 有 3 次 失误	科比 在 哪个 赛季 有 3 次 失误	哪个 赛季 科比 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
在 科比 布莱恩特 打 了 3 场 比赛 的 赛季 中 他 有 多少 失误	在 科比 - 布莱恩特 打 了 3 场 比赛 的 赛季 里 ， 他 有 多少 失误	本赛季 科比 打 了 3 场 比赛 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
科比 在 比赛 中有 多少 篮板 ， 他 得到 3 分	科比 在 三分 的 比赛 中有 多少 个 篮板	科比 在 三分 的 比赛 中 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
在 他 得分 3 分 的 赛季 中 ， 他 负责 科比 布莱恩特 的 篮板 数	在 他 拿下 3 分 的 赛季 中 ， 他 为 科比 的 篮板 数	在 那个 赛季 ， 他 得到 了 3 分 ， 他 负责 科比 布莱恩特 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
在 一个 赛季 中 与 科比 布莱恩特 有 相同 失误 次数 的 球员	一个 赛季 中 失误 次数 和 科比 相同 的 球员	在 一个 赛季 中 失误 次数 和 科比 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 得分 最多 的 是 什么	哪个 球员 本赛季 得分 最 多	本赛季 哪个 球员 得分 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 总 篮板 数 不 超过 三个 的 球员	一个 赛季 篮板 总数 不 超过 3 个 的 球员	在 一个 赛季 中 篮板 总数 不 超过 3 个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 2004 年 或 2010 年 打 过球	2004 年 或 2010 年 的 球员	2004 年 和 2010 年 的 球员 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 与 洛杉矶 湖人队 的 赛季 中 ， 科比 · 布莱恩特 获得 了 多少 分	在 他 效力 洛杉矶 湖人 的 赛季 中 科比 得到 了 多少 分	在 他 效力 于 洛杉矶 湖人队 的 赛季 中 ， 科比 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
在 多少 场 比赛 中 ， 科比 · 布莱恩特 获得 了 3 次 抢断	科比 在 几场 比赛 中 3 次 抢断	科比 在 多少 场 比赛 中 得到 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 的 篮板球	哪个 球员 的 篮板 比 科比 多	哪个 球员 比 科比 抢下 更 多 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 拥有 最 多 盖帽 数 的 球员	找到 一个 赛季 中 得分 最高 的 球员	找到 在 任何 一个 赛季 中 盖帽 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 科比 布莱恩特 总共 有 3 次 抢断 的 赛季	找出 科比 布莱恩特 三次 抢断 的 赛季	找出 科比 这个 赛季 总共 3 次 抢断 的 数据	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_steals ) ) )
在 一个 赛季 中 哪个 球员 拥有 最多 的 篮板球	一个 赛季 中 篮板 最多 的 球员	在 一个 赛季 中 哪个 球员 的 篮板 数最多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 与 科比 布莱恩特 相同 的 赛季 中所 打过 的 球员	科比 和 科比 在 同一个 赛季 都 打 了 些 什么	和 科比 一样 的 球员 在 同一个 赛季 都 打 了 多少 场 比赛 啊	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 赛季 中 只 打 了 3 个 盖帽 ， 对 他 只有 3 次 犯规	科比 - 布莱恩特 在 几个 赛季 里 只用 3 次 犯规 就 完成 了 多少 个 盖帽	科比 在 一个 只有 3 次 犯规 的 赛季 里 能 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 赛季 有 3 次 助攻 时有 多少 犯规	当 科比 得到 3 次 助攻 时 ， 他 在 赛季 中将 有 多少 次 犯规	当 科比 得到 3 次 助攻 时 ， 他会 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
哪位 球员 的 得分 至少 与 科比 · 布莱恩特 一样 多	哪个 球员 得分 至少 和 科比 一样 多	哪位 球员 得分 至少 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 比 科比 布莱恩特 打 了 更 多 的 比赛	他 在 一个 赛季 里 比 科比 打 了 更 多 的 比赛	谁 在 一个 赛季 中 比 科比 打得 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 抢断 最多 的 球员	一个 赛季 中 抢断 次数 最多 的 球员	一个 赛季 抢断 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 个 盖帽	什么 球员 有 超过 3 个 盖帽	什么 球员 有 超过 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 场 比赛 中 得分 多少 分	科比 在 3 场 比赛 中得 了 多少 分	科比 在 三场 比赛 中得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
说出 一个 没有 三次 失误 的 球员	说出 一个 没有 三次 失误 的 球员	说出 一个 没有 三次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 平均 每场 比赛 得分 多少 分	科比 在 一个 赛季 的 第三场 比赛 中 平均 得分 是 多少	科比 在 一个 赛季 的 第三场 比赛 平均 得到 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
科比 布莱恩特 在 一个 赛季 犯下 3 次 犯规 的 篮板球 数	科比 在 一个 三次 犯规 的 赛季 里 抢 了 多少 个 篮板	科比 在 一个 赛季 中有 3 次 犯规 ， 他 一共 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
哪个 球员 每个 赛季 的 抢断 最 多	哪个 球员 每个 赛季 的 抢断 次数 最 多	哪个 球员 每个 赛季 抢断 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 拥有 与 科比 布莱恩特 一样 多 的 全 季节 抢断	哪个 球员 整个 赛季 的 抢断 次数 和 科比 一样 多	有 什么 球员 能 像 科比 一样 抢断 那么 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 上场	科比 在 2004 年 打 过球 吗	科比 在 2004 年 打球 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
球员 科比 布莱恩特 的 赛季 ， 他 在 一个 赛季 中 得到 3 分	科比 - 布莱恩特 的 赛季 ， 他 一个 赛季 拿下 3 分	一个 赛季 得到 3 分 的 球员 科比 · 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
在 3 次 犯规 后 ， 科比 布莱恩特 得到 了 多少 次 助攻	科比 在 三次 犯规 后 得到 了 多少 助攻	科比 在 3 次 犯规 后 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_assists ) ) )
科比 布莱恩特 在 赛季 中有 多少 失误	科比 本赛季 有 多少 失误	这个 赛季 科比 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
谁 在 一个 赛季 中 拥有 最多 的 盖帽	在 一个 赛季 中有 最 多 的 盖帽	谁 在 一个 赛季 中 盖帽 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 超过 3 个 篮板	有 超过 3 个 篮板	谁 的 篮板 数 超过 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
洛杉矶 湖人队 在 一个 赛季 犯 了 多少 次 犯规	洛杉矶 湖人队 科比 一个 赛季 犯规 多少 次	科比 在 一个 赛季 中 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
2004 年 ， 科比 · 布莱恩特 制造 了 多少 块	科比 · 布莱恩特 在 2004 年 创造 了 多少 个 盖帽	科比 在 2004 年 投 了 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
哪个 球员 拥有 最少 数量 的 kobe   bryant	哪个 球员 的 盖帽 数 最少	哪个 球员 盖帽 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 打 控卫 或 前锋	什么 球员 打 控球 后卫 或 前锋	什么 球员 打 控球 后卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 多少 场 比赛 犯规 3 次 犯规	科比 布莱恩特 打 了 多少 场 比赛 ， 3 次 犯规	科比 有 多少 场 比赛 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
2004 年 科比 布莱恩特 队 效力 于 什么 球队	科比 在 2004 年 为 哪支 球队 效力	2004 年 科比 为 哪支 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 球员 没有 得到 3 个 篮板	哪个 球员 没有 得到 3 个 篮板	什么 球员 没有 得到 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 犯 了 多少 次 犯规	科比 2004 年 犯规 多少 次	科比 在 2004 年 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_fouls ) ) )
洛杉矶 队 的 科比 布莱恩特 得到 了 多少 次 助攻	属于 洛杉矶 队 的 科比 · 布莱恩特 得到 了 多少 助攻	湖人队 的 科比 · 布莱恩特 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
科比 布莱恩特 有 三次 失误 ， 有 三次 失误	科比 在 三次 失误 中有 多少 次 抢断	科比 有 多少 次 抢断 ， 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
科比 从 任何 一支 球队 的 控卫 那里 抢断 了 多少 次	科比 从 任何 球队 的 控卫 那里 偷 了 多少 球	科比 从 任何 一支 球队 的 控球 后卫 那里 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
3 场 比赛 后 科比 布莱恩特 得分 多少 分	科比 在 3 场 比赛 后 得 了 多少 分	科比 在 三场 比赛 后 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
至少 犯规 3 次 的 球员	至少 三次 犯规 的 运动员	至少 有 3 次 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 助攻 数量	科比 - 布莱恩特 一个 赛季 3 场 比赛 的 助攻 次数	科比 一个 赛季 的 助攻 数 ， 他 一个 赛季 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
在 他 负责 3 次 抢断 的 赛季 中 ， 科比 布莱恩特 队 的 名字 是 什么	在 他 负责 3 次 抢断 的 赛季 里 ， 科比 布莱恩特 的 球队 叫 什么 名字	在 他 负责 3 次 抢断 的 那个 赛季 ， 科比 所在 的 球队 的 名字 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
科比 布莱恩特 作为 一名 湖人队 打 了 多少 场 比赛	科比 作为 湖人 球员 打 了 多少 场 赛季 比赛	作为 湖人队 的 一员 ， 科比 · 布莱恩特 打 了 几个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
说出 一个 赛季 中 属于 科比 布莱恩特 的 助攻 数	说出 科比 一个 赛季 的 助攻 次数	说出 一个 赛季 科比 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
科比 布莱恩特 作为 洛杉矶 湖人队 有 多少 场 全季 反弹	科比 - 布莱恩特 作为 洛杉矶 湖人队 的 一员 ， 整个 赛季 有 多少 个 篮板 ？	作为 洛杉矶 湖人队 的 一员 ， 科比 · 布莱恩特 整个 赛季 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
在 哪个 赛季 ， 科比 布莱恩特 参加 了 3 场 比赛	科比 在 哪个 赛季 参加 了 3 场 比赛	哪个 赛季 科比 参加 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
哪位 球员 的 位置 最少	哪位 选手 的 位置 最少	哪个 球员 打 过 最少 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
nba 中有 多少 队	NBA 有 多少 支 球队	nba 有 多少 支 球队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
什么 赛季 科比 布莱恩特 得到 3 次 助攻	科比 在 哪个 赛季 得到 3 次 助攻	哪个 赛季 科比 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
找到 那些 在 特定 赛季 中 游戏 时间 不 超过 3 场 比赛 的 球员	找出 那些 在 一个 赛季 中 比赛 时间 不 超过 3 场 的 球员	找出 那些 在 一个 赛季 中有 不 超过 3 场 比赛 时间 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 比 一名 球员 科比 布莱恩特 更 多 抢断 的 球员	一个 赛季 的 抢断 次数 超过 科比 一个 赛季 的 抢断 次数	一个 赛季 抢断 比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 科比 布莱恩特 与 洛杉矶 湖人队 得分 多少 分	科比 - 布莱恩特 在 洛杉矶 湖人队 每个 赛季 得到 了 多少 分	科比 · 布莱恩特 在 洛杉矶 湖人队 每个 赛季 的 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
找到 科比 布莱恩特 犯下 3 次 犯规 的 赛季 ， 并 注意 同一 时期 的 失误 次数	找出 科比 - 布莱恩特 三次 犯规 的 赛季 ， 并 记录 同期 失误 的 次数	找出 科比 在 那个 赛季 犯规 3 次 ， 并 记录 下 同一 时期 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
哪个 球员 不 在 控卫 位置	哪个 球员 不 在 控球 后卫 的 位置	哪个 球员 不 在 控球 后卫 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 扮演 控卫 或 前锋 的 位置	哪个 球员 担任 控球 后卫 或 前锋 的 位置	哪个 球员 担任 控球 后卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
04 年 科比 得到 了 多少 次 抢断	科比 04 年 有 多少 次 抢断	科比 04 赛季 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
哪个 球员 没有 比 科比 布莱恩特 更 多 的 比赛	哪个 球员 的 比赛 次数 不比 科比 多	哪个 球员 比 科比 打得 还 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 球员 比 科比 布莱恩特 得分 更 多	什么 球员 在 一个 赛季 里 得分 比 科比 多	还有 什么 球员 能比 科比 在 一个 赛季 中 得到 更 多 的 分数 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 有 多少 场 比赛 有 三次 失误	科比 本赛季 有 多少 场 比赛 有 三次 失误	这个 赛季 科比 有 多少 场 比赛 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
科比 布莱恩特 有 3 次 助攻 的 位置	科比 在 哪个 位置 有 3 次 助攻	科比 在 什么 位置 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
来自 洛杉矶 湖人队 的 球员 科比 布莱恩特 一个 赛季 的 篮板 数	洛杉矶 湖人队 科比 - 布莱恩特 一个 赛季 的 篮板 数	洛杉矶 湖人队 球员 科比 · 布莱恩特 一个 赛季 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 篮板球	科比 一个 赛季 有 多少 个 篮板	科比 一个 赛季 抢下 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
科比 布莱恩特 有 3 次 盖帽 时有 多少 助攻	科比 有 3 个 盖帽 时有 多少 次 助攻	当 科比 有 3 个 盖帽 的 时候 ， 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
本赛季 球员 科比 布莱恩特 有 3 次 助攻 有 多少 次 盖帽	科比 布莱恩特 这个 赛季 有 多少 次 助攻	本赛季 科比 有 多少 次 盖帽 和 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
哪些 球员 不到 两支 球队	哪些 球员 在 不到 两队	哪些 球员 在 少于 两支 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 球员 的 篮板 数 超过 球员 科比 布莱恩特 的 一个 赛季	一个 赛季 篮板 比 科比 多 的 球员	一个 赛季 比 科比 抢下 更 多 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 次 抢断	科比 布莱恩特 3 次 抢断	科比 抢断 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_steals ) ) )
那些 在 2004 年 没有 上场 的 球员	2004 年 没有 参加 比赛 的 球员	2004 年 没有 参赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 有 3 次 或 更 多 的 抢断	一个 赛季 有 3 次 或 更 多 的 抢断	谁 一个 赛季 有 3 次 以上 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 多少 或 少于 3 次 抢断	偷 了 三次 或 三次 以下	谁 的 抢断 次数 多于 或 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 同一 赛季 ， 他 获得 了 3 分 ， 科比 布莱恩特 有 多少 失误	在 他 拿下 3 分 的 同一个 赛季 里 科比 有 多少 失误	在 同一个 赛季 ， 他 得到 了 3 分 ， 这是 科比 的 失误 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
哪支 球队 做过 科比 布莱恩特 有 3 次 抢断	科比 · 布莱恩特 为 哪支 球队 三次 抢断	科比 在 哪个 队有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
与 科比 布莱恩特 在 同 一支 球队 打球 的 球员	和 科比 在 同 一支 球队 效力 的 球员	和 科比 同队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 已经 获得 3 个 或 更 少 的 块	三个 街区 以内 的 人	谁 得到 了 3 个 或 更 少 的 方块	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 中 至少 打 了 3 场 比赛	一个 赛季 至少 打 了 3 场 比赛	谁 一个 赛季 至少 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 最 多 的 助攻	谁 的 助攻 最 多	谁 助攻 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 多少 次 抢断	哪个 球员 本赛季 有 3 次 或 更 多 的 抢断	什么 球员 本赛季 有 3 次 以上 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 次 助攻 时 他 有 多少 盖帽	科比 有 3 次 助攻 时有 多少 个 盖帽	当 科比 有 3 次 助攻 时 ， 他 有 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
谁 有 抢断 记录	有 偷窃 记录 的 人	谁 有 偷窃 记录	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 助攻 超过 一个 赛季 不 低于 球员 科比 布莱恩特 的 球员	一个 赛季 助攻 次数 不少 于 科比 的 球员	一个 赛季 的 助攻 数 不 低于 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 控卫 位置 犯 了 多少 次 犯规	科比 - 布莱恩特 在 控卫上 有 多少 犯规	科比 的 控球 后卫 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
哪个 球员 每个 赛季 的 平均 失误 比 科比 布莱恩特 更 多	哪个 球员 每个 赛季 的 失误 率 都 比 科比 高	哪个 球员 平均 每个 赛季 的 失误 比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 科比 布莱恩特	科比 2004 赛季	2004 年 科比 · 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
什么 球员 是 控卫 或 前锋	什么 球员 是 控球 后卫 或 前锋	什么 球员 是 控球 后卫 还是 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 与 科比 布莱恩特 一样 多	哪个 球员 犯规 次数 和 科比 一样 多	哪个 球员 的 犯规 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 拥有 最多 的 盖帽	哪个 球员 一个 赛季 中 拦网 最 多	哪个 球员 在 一个 赛季 中 盖帽 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 时候 科比 布莱恩特 有 3 次 助攻	科比 什么 时候 全 赛季 都 有 3 次 助攻	科比 什么 时候 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
在 一个 赛季 中 ， 哪些 球员 拥有 和 科比 布莱恩特 一样 多 的 篮板球	哪个 球员 一个 赛季 的 篮板 数 和 科比 一样 多	哪些 球员 在 一个 赛季 中 抢下 的 篮板球 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 球员 科比 布莱恩特 的 失误 次数	2004 赛季 科比 - 布莱恩特 一个 赛季 的 失误 次数	2004 年 科比 · 布莱恩特 一个 赛季 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
什么 位置 是 科比 布莱恩特	科比 在 什么 位置	科比 处于 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
所有 赛季 犯规 次数 最少 的 球员	所有 赛季 犯规 最少 的 球员	在 所有 赛季 中 犯规 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 获得 了 多少 积分	科比 一个 赛季 得 了 多少 分	科比 一个 赛季 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
在 2004 赛季 ， 科比 布莱恩特 打 了 几场 比赛	科比 在 2004 赛季 打 了 多少 场 比赛	科比 在 2004 赛季 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
什么 球队 科比 布莱恩特 得到 3 分	科比 · 布莱恩特 为 哪支 球队 得 了 3 分	科比 在 哪个 队得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string team ) ) )
什么 赛季 科比 布莱恩特 有 3 次 失误	科比 在 哪个 赛季 有 3 次 失误	哪个 赛季 科比 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
什么 是 科比 布莱恩特 在 赛季 中 只有 3 个 篮板 的 比赛 总数	科比 本赛季 只有 三个 篮板 的 比赛 总数 是 多少 ？	科比 在 本赛季 总共 有 多少 场 比赛 只有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
这个 职位 的 数量 是 多少	这个 职位 的 号码 是 多少	这个 职位 的 编号 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
科比 布莱恩特 得到 3 分时 有 多少 次 抢断	科比 拿下 3 分时 有 多少 次 抢断	当 科比 得到 3 分 的 时候 ， 他 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
一个 赛季 与 球员 科比 布莱恩特 相同 的 篮板 球员	一个 赛季 篮板 数 和 科比 相同 的 球员	一个 赛季 抢下 和 科比 一样 多 的 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 或 2010 年	2004 年 或 2010 年	2004 年 还是 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
谁 本赛季 有 超过 3 次 失误	本赛季 失误 超过 3 次	谁 本赛季 失误 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 那些 造成 3 次 或 更少 犯规 的 球员	找出 在 任何 一个 赛季 中 犯规 3 次 或 更 少 的 球员	找出 在 任何 一个 赛季 中 犯规 次数 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 为 洛杉矶 湖人队 效力 的 那 一年 里 ， 科比 布莱恩特 有 多少 次 犯规	在 他 为 洛杉矶 湖人队 效力 的 那 一年 里 ， 科比 有 多少 次 犯规	在 他 为 洛杉矶 湖人队 效力 的 那 一年 里 ， 科比 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
科比 · 布莱恩特 在 他 打 控卫 的 那个 赛季 犯 了 多少 次 犯规	科比 在 他 打 控卫 的 那个 赛季 有 多少 次 犯规	科比 在 担任 控球 后卫 的 那个 赛季 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
对于 他 负责 3 个 盖帽 的 赛季 ， 科比 布莱恩特 犯 了 多少 次 犯规	在 他 负责 3 个 盖帽 的 赛季 里 科比 犯 了 多少 次 犯规	在 这个 赛季 ， 他 要 负责 3 个 盖帽 ， 科比 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
科比 · 布莱恩特 在 一个 赛季 中 抢断 3 次 助攻 的 助攻 数是 多少	科比 在 一个 赛季 中有 多少 次 助攻 ， 抢断 超过 3 次	在 一个 赛季 抢断 超过 3 次 的 情况 下 ， 科比 · 布莱恩特 贡献 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
科比 布莱恩特 在 赛季 中 创造 了 多少 次 盖帽 ， 只有 3 次 助攻	科比 - 布莱恩特 在 赛季 中用 3 次 助攻 完成 了 多少 个 盖帽	科比 在 赛季 中有 多少 次 盖帽 和 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
在 哪个 赛季 ， 科比 布莱恩特 犯 了 3 次 犯规	科比 在 哪个 赛季 犯规 3 次	哪个 赛季 科比 犯规 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
科比 · 布莱恩特 作为 控球 后卫 在 各个 赛季 都 有所 反弹	科比 - 布莱恩特 作为 控球 后卫 在 整个 赛季 的 篮板 表现	作为 控球 后卫 ， 科比 · 布莱恩特 所有 赛季 的 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
哪个 球员 每个 赛季 都 有 超过 3 次 失误	哪个 球员 在 每个 赛季 都 有 3 次 以上 的 失误	哪个 球员 在 每个 赛季 都 有 超过 3 次 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 最多 3 次 抢断 的 球员	一个 赛季 最多 3 次 抢断 的 球员	一个 赛季 最 多 抢断 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 块	什么 球员 的 盖帽 比 科比 还 多	还有 什么 球员 比 科比 拥有 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 只有 三场 比赛 的 位置	科比 本赛季 只 打 了 三场 比赛	科比 本赛季 只 打 了 三场 比赛 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 犯规	科比 - 布莱恩特 一个 赛季 3 次 犯规	一个 赛季 有 3 次 犯规 的 科比	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
一个 赛季 犯规 不 超过 3 的 球员	一个 赛季 犯规 不 超过 3 次 的 球员	一个 赛季 犯规 不 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 3 次 或 更 少 的 犯规	犯规 次数 不 超过 3 次	谁 犯规 次数 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 整个 赛季 的 比赛 数量 不亚于 科比 布莱恩特	在 整个 赛季 中 ， 球员 的 上场 次数 不亚于 科比 布莱恩特	有 多少 球员 打 了 整个 赛季 的 比赛 不 低于 科比 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 每个 赛季 有 更 多 的 盖帽 比 科比 布莱恩特 更 多	每个 赛季 比 科比 有 更 多 的 盖帽	每个 赛季 谁 的 盖帽 数能 超过 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 的 球员 科比 布莱恩特 在 一个 赛季 中有 3 个 失误 的 篮板 数	科比 一个 赛季 3 次 失误 的 篮板 数	科比 · 布莱恩特 一个 赛季 的 篮板 数 ， 一个 赛季 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
与 科比 布莱恩特 相同 或 更少 犯规 的 球员	犯规 次数 与 科比 相同 或 更 少 的 球员	总 犯规 次数 与 科比 相同 或 更 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 赛季 期间 ， 有 3 个 篮板球 的 科比 布莱恩特 有 多少 失误	科比 本赛季 有 三个 篮板 的 失误 有 多少 ？	本赛季 抢下 3 个 篮板 的 科比 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
哪个 球员 处于 控卫 或 前锋 位置	哪个 球员 在 控球 后卫 或 前锋 位置	哪个 球员 是 控球 后卫 还是 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 最多 有 3 次 助攻	哪个 球员 最多 有 3 次 助攻	哪位 球员 助攻 最多 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 每个 赛季 做出 3 次 助攻 的 比赛 中 表现出色	科比 布莱恩特 每 赛季 助攻 3 次为 哪支 球队 效力	科比 每个 赛季 都 能 贡献 3 次 助攻 ， 他 效力 的 是 哪个 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
一个 赛季 从未 打过 3 场 比赛 的 球员	一个 赛季 没 打过 3 场 比赛 的 球员	一个 赛季 从未 打 过 三场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 队有 3 次 失误	科比 - 布莱恩特 在 哪支 球队 有 3 次 失误	科比 在 哪个 球队 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
在 3 个 以上 的 值班 比赛 中 ， 有 多少 失误 让 科比 布莱恩特 放弃 了	科比 在 三场 以上 的 执勤 比赛 中 ， 有 多少 次 失误 让 科比 放弃 了	科比 在 3 场 以上 的 比赛 中 放弃 了 多少 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
科比 布莱恩特 上赛季 得到 了 多少 次 助攻	科比 · 布莱恩特 上赛季 的 助攻 次数	科比 上赛季 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 · 布莱恩特 为 这些 湖人队 效力 了 多少 场 比赛	科比 · 布莱恩特 为 湖人队 打 了 多少 场 比赛	科比 为 湖人队 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
哪个 球员 每 赛季 犯规 次数 最少	哪个 球员 每个 赛季 犯规 最少	哪个 球员 每个 赛季 犯规 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 大多数 比赛 中 球员 的 表现	本赛季 比赛 最多 的 球员 是 谁	本赛季 哪个 球员 打 了 最 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 洛杉矶 湖人队 带来 了 多少 篮板球	科比 - 布莱恩特 为 洛杉矶 湖人队 贡献 了 多少 篮板	科比 为 洛杉矶 湖人队 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 整个 赛季 获得 了 多少 积分	整个 赛季 科比 得到 了 多少 分	科比 在 整个 赛季 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
科比 布莱恩特 打 了 多少 场 比赛	科比 布莱恩特 打 了 多少 场 比赛	科比 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
科比 布莱恩特 打 控卫	科比 打 控卫	科比 · 布莱恩特 担任 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string position ) ) )
什么 球员 一个 赛季 超过 3 个 盖帽	哪个 球员 在 一个 赛季 中 超过 3 个 盖帽	什么 球员 在 一个 赛季 中 盖帽 超过 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 拥有 和 科比 · 布莱恩特 一样 多 的 抢断	哪个 球员 一个 赛季 的 抢断 次数 和 科比 一样 多	哪个 球员 的 抢断 能 和 科比 一个 赛季 的 抢断 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 获得 3 分 的 球员 科比 布莱恩特 的 一个 赛季 的 数量	科比 - 布莱恩特 一个 赛季 的 盖帽 数 ， 他 一个 赛季 有 3 分	科比 一个 赛季 的 盖帽 数 ， 他 一个 赛季 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
每个 赛季 哪位 球员 带领 科比 布莱恩特 获得 篮板球	哪个 球员 在 每个 赛季 的 篮板 数上 领先 科比	哪个 球员 在 每个 赛季 的 篮板 数上 领先 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 助攻	科比 一个 赛季 有 多少 次 助攻	科比 一个 赛季 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
当 科比 布莱恩特 有 三次 助攻 时 他 有 多少 盖帽	科比 有 三次 助攻 时有 多少 个 盖帽	当 科比 得到 3 次 助攻 时 ， 他 有 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
一个 赛季 总共 最多 有 3 次 助攻	一个 赛季 最 多 助攻 3 次	谁 一个 赛季 最多 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 助攻 数量 超过 科比 布莱恩特 的 球员	一个 赛季 助攻 次数 超过 科比 的 球员	一个 赛季 的 助攻 数比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 不 低于 3 分 的 球员	一个 赛季 得分 不 低于 3 分 的 球员	一个 赛季 得分 不 低于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一个 赛季 得到 3 分后 有 多少 抢断	当 科比 拿下 3 分时 ， 他 一个 赛季 有 多少 次 抢断	当 科比 得到 3 分 的 时候 ， 他 一个 赛季 能 抢断 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
科比 布莱恩特 在 3 场 比赛 中 得到 了 多少 篮板球	科比 在 3 场 比赛 中 抢 了 多少 个 篮板	科比 在 3 场 比赛 中 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
本赛季 到 目前为止 ， 他 的 比赛 时间 不到 3 场	本赛季 迄今为止 他 只 打 了 不到 3 场 比赛	到 目前为止 ， 谁 本赛季 打 了 不到 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 2004 年 科比 布莱恩特 队	2004 年 科比 的 球队 是 什么	2004 年 科比 的 球队 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
所有 赛季 球员 都 有 比 科比 布莱恩特 更 多 的 助攻	哪些 球员 在 整个 赛季 的 助攻 次数 与 科比 持平 或 超过 科比	在 整个 赛季 中 ， 有 什么 球员 的 助攻 数能 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 的 篮板球	科比 布莱恩 茨 本赛季 篮板	科比 · 布莱恩特 ( kobe   bryants ) 本赛季 抢下 篮板	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
科比 布莱恩特 作为 控卫有 多少 赛季 积分	科比 · 布莱恩特 作为 控球 后卫 整个 赛季 拿 了 多少 分	作为 控球 后卫 ， 科比 整个 赛季 的 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
与 科比 布莱恩特 扮演 同样 位置 的 球员	与 科比 相同 位置 的 球员	和 科比 打 同一 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 那些 在 任何 一个 赛季 中 负责 少于 3 个 盖帽 的 球员 命名 为	说出 那些 在 任何 一个 赛季 中 负责 少于 3 个 盖帽 的 球员	说出 那些 在 任何 一个 赛季 中 盖帽 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 有 多少 篮板球	科比 这个 赛季 有 多少 个 篮板	这个 赛季 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
在 哪个 赛季 ， 科比 布莱恩特 平均 3 个 盖帽	科比 在 哪个 赛季 平均 3 个 盖帽	哪个 赛季 科比 平均 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
kobe   bryant 获得 了 多少 抢断	科比 是 怎么 偷来 的	科比 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
得到 3 次 助攻 后 ， 科比 · 布莱恩特 犯 了 多少 次 犯规	科比 在 得到 3 次 助攻 后 犯规 了 多少 次	科比 在 得到 3 次 助攻 后 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
在 什么 位置 科比 能够 得到 3 次 助攻	科比 在 什么 位置 能 得到 3 次 助攻	科比 在 什么 位置 能 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
在 一个 赛季 中 ， 一个 赛季 的 盖帽 数量 少于 球员 科比 布莱恩特 的 盖帽 数量	一个 赛季 的 盖帽 数 少于 科比 一个 赛季 的 盖帽 数 的 球员	一个 赛季 的 盖帽 数比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 球员 的 助攻 总数 超过 3 分	什么 球员 整个 赛季 的 助攻 总数 超过 3 次	什么 球员 整个 赛季 助攻 总数 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
是否 存在 任何 一个 赛季 助攻 总数 最 多 等于 3 的 球员	有没有 球员 在 任何 一个 赛季 的 助攻 总数 不 超过 3 次	是否 有 球员 在 任何 一个 赛季 的 总 助攻 数 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 全 季节 抢断	哪个 球员 整个 赛季 的 抢断 次数 比 科比 还 多	还有 什么 球员 比 科比 · 布莱恩特 的 全 赛季 抢断 数 还 多 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 和 科比 布莱恩特 打 过 相同 数量 的 比赛	他 和 科比 打 过 同样 的 比赛	谁 打过 和 科比 一样 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 本赛季 打 了 不到 3 场 比赛	他 本赛季 只 打 了 不到 3 场 比赛	谁 本赛季 打 了 不到 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
四季 都 比 科比 布莱恩特 有 更 多 抢断 的 球员	在 整个 赛季 中 比 科比 抢断 更 多 的 球员	比 科比 抢断 更 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 的 球员 有 3 次 或 更 少 的 抢断	哪个 球员 在 一个 赛季 中有 3 次 或 更 少 的 抢断	哪个 球员 一个 赛季 有 3 次 或者 更少 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 本赛季 打 三次 犯规 时犯 了 多少 失误	科比 在 本赛季 三次 犯规 时 失误 了 多少 次	当 科比 在 这个 赛季 被 三次 犯规 的 时候 ， 他 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
在 2004 年 没有 参加 比赛 的 球员	说出 2004 年 没有 参加 比赛 的 球员	说出 2004 年 没有 参加 比赛 的 球员 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 3 次 抢断 后 科比 布莱恩特 得到 了 多少 失误	科比 在 3 次 抢断 后 失误 了 多少 次	科比 抢断 3 次 之后 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
能够 摆 出 一两个 不同 位置 的 球员	一个 或 两个 不同 位置 的 玩家	一个 或 两个 不同 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一名 球员 科比 布莱恩特 在 控卫 位置 上 的 得 分数	得分 后卫 科比 布莱恩特 一个 赛季 的 得分	科比 在 一个 赛季 的 得分 ， 他 是 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
什么 年度 科比 布莱恩特 上场	科比 是 哪一年 打 的	科比 是 哪一年 打 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
什么 是 一个 球员 的 名字 ， 每个 赛季 的 失误 比 科比 布莱恩特 少	一个 赛季 失误 率 比 科比 少 的 球员 叫 什么 名字	有 哪个 球员 的 赛季 失误 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 那个 时候 ， 科比 布莱恩特 是 控球 后卫 的 名字 ， 那个 赛季 他 的 篮板 数	在 科比 · 布莱恩特 担任 控球 后卫 的 那 段时间 里 ， 说出 他 在 那个 赛季 的 篮板 数量	在 科比 担任 控球 后卫 的 那 段时间 里 ， 他 在 那个 赛季 的 篮板 数量	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
一个 赛季 没有 比 一名 球员 科比 布莱恩特 更 多 的 盖帽 的 球员	一个 赛季 中 盖帽 次数 不 超过 科比 的 球员	一个 赛季 的 盖帽 不会 比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 多少 个 赛季	科比 布莱恩特 打 了 多少 个 赛季	科比 · 布莱恩特 打 了 多少 个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
球员 科比 布莱恩特 本赛季 有 3 个 篮板球 的 赛季	科比 - 布莱恩特 一个 赛季 有 3 个 篮板	一个 赛季 抢下 3 个 篮板 的 科比	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
科比 布莱恩特 在 3 次 抢断 时有 多少 篮板球	科比 三次 抢断 时有 多少 个 篮板	科比 抢断 3 次 的 时候 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 三场 比赛 中 打出 了 多少 篮板球	科比 在 三场 比赛 中有 多少 个 篮板	科比 在 三场 比赛 中 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 · 布莱恩特 在 哪一年 打 了 三场 比赛	科比 在 哪一年 打 了 三场 比赛	哪一年 科比 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
什么 球员 是 最 多才多艺 的 ， 并且 占据 最多 的 位置	什么样 的 球员 是 最 多才多艺 和 最 多 位置 的 球员	什么 球员 是 最 多才多艺 的 ， 扮演 最多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 玩家 玩过 最少 数量 的 游戏	哪个 玩家 玩过 最少 的 游戏	哪位 球员 打 了 最少 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 最多 有 3 次 失误	哪个 球员 最多 有 3 次 失误	哪位 球员 失误 最多 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 3 次 失误 时 ， 科比 布莱恩特 犯 了 多少 次 犯规	科比 在 三次 失误 中 犯规 了 多少 次	当 科比 有 3 次 失误 时 ， 他 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
拥有 一支 球队 的 球员	只有 一个 队 的 球员	拥有 一个 团队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 哪个 赛季 ， 科比 布莱恩特 有 三次 抢断	科比 在 哪个 赛季 有 三次 抢断	哪个 赛季 科比 抢断 三次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
这个 赛季 球员 的 失误 比 科比 布莱恩特 少	哪个 球员 本赛季 的 失误 比 科比 少	本赛季 有 什么 球员 的 失误 比 科比 少 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 次数 最少	哪 一个 球员 的 失误 次数 最少	哪个 球员 失误 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 在 与 科比 布莱恩特 相同 的 赛季 中 获得 相同 或 更少 助攻 数 的 球员	找出 在 同一个 赛季 中 助攻 次数 与 科比 相同 或 更 少 的 球员	找出 和 科比 在 同一 赛季 有 相同 或 更少 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 取得 3 分 的 失误 次数 是 多少 ？	科比 本赛季 拿下 3 分 的 失误 次数 是 多少 ？	本赛季 拿下 3 分 的 科比 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
在 多少 场 比赛 中 ， 科比 · 布莱恩特 犯 了 3 次 犯规	科比 在 几场 比赛 中 3 次 犯规	科比 在 多少 场 比赛 中有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
科比 布莱恩特 在 一个 赛季 取得 了 多少 分 ， 当时 他 得到 了 3 个 篮板	当 科比 在 一个 赛季 中 得到 3 个 以上 的 篮板 时 ， 他 得到 了 多少 分 ？	当 科比 一个 赛季 拿下 3 个 篮板 的 时候 ， 他 到底 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
什么 球员 与 科比 布莱恩特 有 同样 数量 的 助攻	哪个 球员 的 助攻 和 科比 一样 多	有 哪个 球员 的 助攻 数能 和 科比 的 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 赛季 中有 多少 失误 ， 他 平均 得到 3 次 助攻	科比 本赛季 平均 三次 助攻 失误 次数	科比 在 这个 赛季 场均 3 次 助攻 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 3 次 盖帽 时有 多少 抢断	科比 在 三次 盖帽 时有 多少 次 抢断	当 科比 得到 3 个 盖帽 的 时候 ， 他 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
科比 布莱恩特 有 多少 助攻	科比 有 多少 次 助攻	科比 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中场 均 3 次 犯规 和 3 次 封盖	科比 一个 赛季 平均 每场 比赛 3 次 犯规 3 次 盖帽	科比 在 一个 赛季 里场 均 3 次 犯规 和 3 次 盖帽 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
有 多少 街区 让 科比 布莱恩特 成为 控球 后卫	科比 · 布莱恩特 在 得分 后卫 的 位置 上 有 多少 个 盖帽	作为 控球 后卫 ， 科比 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
这个 赛季 球员 失误 最少 的 球员	哪个 球员 本赛季 失误 最少	哪个 球员 本赛季 失误 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 犯 了 多少 次 犯规	科比 这个 赛季 有 多少 次 犯规	这个 赛季 科比 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 一个 赛季 中 只有 3 次 犯规 的 比赛	科比 在 一个 赛季 只有 3 次 犯规 的 情况 下为 哪支 球队 效力	科比 在 一个 赛季 只有 3 次 犯规 的 情况 下 为 哪个 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
科比 布莱恩特 得到 3 分时 有 多少 盖帽	科比 拿下 3 分时 有 多少 个 盖帽	当 科比 得到 3 分 的 时候 他 有 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
本赛季 场均 13 个 篮板 球员	哪个 球员 本赛季 13 个 篮板	哪些 球员 本赛季 抢下 了 13 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 打出 3 个 篮板 的 比赛 数量 是 多少 ？	科比 本赛季 3 个 篮板 的 比赛 次数 是 多少	科比 · 布莱恩特 本赛季 抢下 3 个 篮板 的 场次 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_games_played ) ) )
科比 · 布莱恩特 打 控卫 的 一个 赛季 助攻 总数 是 多少 ？	科比 - 布莱恩特 一个 赛季 的 助攻 总数 是 多少	科比 作为 控球 后卫 一个 赛季 的 总 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
有 多少 场 比赛 让 科比 放弃 了 3 次 失误	科比 到底 放弃 了 多少 场 失误	科比 到底 放弃 了 多少 场 比赛 的 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
如果 他 已经 得到 3 分 ， 那么 科比 · 布莱恩特 通常 会 打 多少 块	如果 科比 已经 有 3 个 盖帽 ， 他 通常 能 盖帽 多少	如果 科比 已经 投进 3 个球 ， 他 通常 会 投 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
有 多少 玩家 获得 了 少于 或 多于 3 次 失误	有 多少 球员 获得 少于 或 多于 3 次 的 失误	有 多少 球员 的 失误 次数 少于 或 多于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 参加 过 多场 比赛	哪 一个 玩家 玩过 最 多 的 游戏	哪个 球员 打 了 最 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
所有 赛季 球员 都 有 三次 抢断	什么 球员 在 整个 赛季 都 有 超过 三次 的 抢断	什么 球员 在 整个 赛季 都 有 超过 3 次 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 一个 赛季 中 的 数量 与 球员 科比 布莱恩特 的 数量 相同	在 一个 赛季 中有 很多 盖帽 的 球员 和 科比 一样	在 一个 赛季 中 盖帽 数 和 科比 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 科比 布莱恩特 的 球队 是 洛杉矶 队 的 助攻 数	科比 - 布莱恩特 一个 赛季 的 助攻 次数 ， 他 的 球队 是 洛杉矶 湖人队	科比 在 洛杉矶 湖人队 一个 赛季 的 助攻 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
这是 科比 布莱恩特 队 打 了 3 场 比赛	科比 的 球队 已经 打 了 3 场 比赛	哪支 球队 是 已经 打 了 3 场 比赛 的 科比	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
一个 赛季 少于 3 分 的 球员	一个 赛季 得分 低于 3 分 的 球员	一个 赛季 得分 低于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 得分 不到 三分	哪个 球员 得分 不到 3 分	哪个 球员 得分 低于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 与 科比 布莱恩特 队 比赛 次数 相同 的 赛季	本赛季 他 和 科比 打 了 同样 多 的 比赛	他 本赛季 的 出场 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 代表 大多数 球队 的 球员	说出 代表 大多数 球队 的 球员	说出 代表 最 多 球队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
请 注意 那些 在 任何 一个 赛季 累积 积分 超过 3 分 的 球员	注意 那些 在 任何 一个 赛季 累计 积分 超过 3 分 的 球员	注意 那些 在 任何 一个 赛季 累计 积分 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 次 失误	科比 有 3 次 失误	科比 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
哪个 球员 每 赛季 的 篮板 数比 科比 布莱恩特 多	哪个 球员 每个 赛季 的 篮板 比 科比 多	哪个 球员 每个 赛季 比 科比 抢下 更 多 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 玩家 得分 多于 或 少于 3 分	哪个 玩家 的 积分 大于 或 小于 3	哪个 球员 的 得分 高于 或 低于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 至 2010 年 的 球员	从 2004 年 到 2010 年 的 球员	2004 年 到 2010 年 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 比 科比 布莱恩特 有 更 多 的 篮板球	本赛季 篮板 数 超过 科比 的 球员	本赛季 比 科比 抢下 更 多 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一年 科比 布莱恩特 打 控卫	科比 在 哪一年 打 控卫	科比 是 哪一年 打 的 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
谁 的 犯规 比 科比 布莱恩特 少	他 犯规 比 科比 少	谁 的 犯规 次数 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
提到 本赛季 有 3 个 篮板 的 球员 科比 布莱恩特 得分	提到 本赛季 有 3 个 篮板 的 科比 布莱恩特 的 得分	提到 本赛季 抢下 3 个 篮板 的 球员 科比 · 布莱恩特 的 得分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
科比 布莱恩特 有 多少 失误	科比 有 多少 失误	科比 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_turnovers ) ) )
科比 在 3 次 失误 后 获得 了 多少 次 抢断	科比 在 3 次 失误 后 得到 了 多少 次 抢断	3 次 失误 之后 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
科比 布莱恩特 有 多少 篮板球	科比 有 多少 个 篮板	科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 一个 赛季 中 做出 了 多少 助攻	科比 一个 赛季 有 多少 次 助攻	科比 在 一个 赛季 中有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
哪个 赛季 科比 布莱恩特 有 3 次 失误	科比 哪个 赛季 有 3 次 失误	哪个 赛季 科比 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string season ) ) )
当 他 有 三个 篮板 时 科比 布莱恩特 得分 多少 分	科比 有 三个 篮板 的 时候 得 了 多少 分	当 科比 抢下 3 个 篮板 时 ， 他 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
什么 球员 在 一个 赛季 中 打 了 不到 4 场 比赛	哪个 球员 一个 赛季 只 打 了 不到 4 场 比赛	什么 球员 一个 赛季 打 了 不到 4 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
团队 数量	团队 数量	数量 的 团队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
一个 赛季 球员 的 犯规 次数 超过 3 次	什么 球员 一个 赛季 犯规 超过 3 次	什么 球员 在 一个 赛季 中 犯规 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 中 阵容 最少 的 球员	一个 赛季 中 拦网 最少 的 球员	一个 赛季 盖帽 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 赛季 中有 3 次 助攻 得分 多少 分	科比 在 三次 助攻 的 情况 下 每个 赛季 得到 多少 分	科比 在 赛季 中 3 次 助攻 得到 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
哪位 球员 至少 有 3 次 抢断	哪个 球员 至少 有 三次 抢断	哪个 球员 至少 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 都 有 与 科比 布莱恩特 相同 数量 的 篮板 球员	所有 赛季 篮板 数都 和 科比 一样 的 球员	球员 有 相同 数量 的 篮板 科比 布莱恩特 在 所有 赛季	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 多 的 篮板	哪个 球员 的 篮板 和 科比 一样 多	哪个 球员 的 篮板 数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 犯规 次数 最多 的 球员	哪个 球员 本赛季 犯规 最 多	本赛季 哪个 球员 犯规 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 少于 3 次	哪个 球员 的 失误 少于 3 次	哪个 球员 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 助攻 最少	哪个 球员 助攻 最少	哪个 球员 的 助攻 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 打出 了 3 个 篮板球 的 位置	科比 - 布莱恩特 本赛季 打 了 什么 位置 ？ 他 拿 了 3 个 篮板	科比 在 本赛季 的 位置 是 什么 ? 他 抢下 了 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
哪个 球员 在 任何 一个 赛季 都 有 最少 的 失误	哪个 球员 在 某个 赛季 的 失误 最少	在 任何 一个 特定 的 赛季 中 ， 哪些 球员 的 失误 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
犯规 次数 最少 的 人	犯规 最少 的 人	谁 犯规 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 那些 在 特定 赛季 中 抢断 超过 3 次 的 球员	找到 那些 在 一个 赛季 中 抢断 超过 3 次 的 球员	找出 那些 一个 赛季 抢断 3 次 以上 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 在 一个 赛季 中 没有 3 次 失误	一个 赛季 没有 3 次 失误 的 球员	一个 赛季 没有 3 次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 得分 最多 的 球员	一个 赛季 篮板 最多 的 球员	一个 赛季 中 篮板 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 位置 是 科比 布莱恩特	科比 在 什么 位置	科比 处于 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
哪个 球员 平均 每个 赛季 的 得分 少于 3 个 篮板	哪个 球员 在 职业生涯 平均 每个 赛季 的 篮板 数 少于 3 个	哪个 球员 职业生涯 平均 每个 赛季 的 篮板 数 低于 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 场均 得分 与 科比 布莱恩特 相同 的 助攻 球员	一个 赛季 内 每场 平均 助攻 次数 与 科比 相同 的 球员	在 一个 赛季 中 ， 平均 每场 助攻 数 与 科比 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 是 每季 平均 积木 最少 的 人	谁 的 平均 每季 得分 最低	每个 赛季 谁 的 盖帽 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 最多 的 篮板球	谁 的 篮板 最 多	谁 的 篮板球 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 助攻 数量 与 球员 科比 布莱恩特 赛季 数 相同 的 球员	一个 赛季 的 助攻 次数 与 科比 相同 的 球员	一个 赛季 的 助攻 数 和 科比 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 一个 赛季 他 只 得到 三个 篮板 时 ， 哪支 球队 做过 科比 布莱恩特 的 比赛	当 科比 一个 赛季 只有 三个 篮板 时 ， 他 为 哪支 球队 效力	当 科比 一个 赛季 只有 3 个 篮板 的 时候 ， 他 为 哪支 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
四季 都 有 少于 3 个 篮板 的 球员	所有 赛季 篮板 数 少于 或 超过 3 个 的 球员	球员 在 整个 赛季 中 只有 3 个 或 3 个 以上 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 助攻	科比 - 布莱恩特 一个 赛季 有 3 次 助攻	科比 的 球队 ， 一个 赛季 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
在 他 参加 3 场 比赛 的 赛季 中 ， 科比 布莱恩特 的 表现 总是 如此	在 他 打 了 3 场 比赛 的 赛季 里 科比 的 位置 是 什么	在 他 打 了 3 场 比赛 的 那个 赛季 ， 科比 打 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
科比 布莱恩特 在 一个 赛季 中 得分 多少 分	科比 一个 赛季 得 了 多少 分	科比 一个 赛季 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
为 一两个 NBA 球队 效力 的 球员	为 一支 或 两支 NBA 球队 效力 的 球员	为 一支 或 两支 nba 球队 效力 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 为 洛杉矶 湖人队 抢断 了 多少 次	科比 - 布莱恩特 为 洛杉矶 湖人队 抢断 了 多少 次	科比 为 湖人队 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
所有 赛季 得分 最高 的 球员	所有 赛季 得分 最多 的 球员	赛季 得分 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 3 次 犯规 时有 多少 分	当 科比 三次 犯规 时 他 得到 了 多少 分	科比 在 3 次 犯规 的 时候 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
哪个 球员 每场 比赛 平均 超过 3 次 助攻	哪位 球员 每场 平均 助攻 不 超过 3 次	哪位 球员 场均 助攻 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 3 次 助攻	哪个 球员 没有 3 次 助攻	什么 球员 没有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 没有 3 个 盖帽 的 球员	一个 赛季 没有 3 个 盖帽 的 球员	一个 赛季 没有 3 次 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 只 得到 3 分 的 季节 里 有 多少 次 抢断	本赛季 科比 只有 3 分 的 抢断 次数 是 多少 ？	本赛季 科比 只有 3 分 的 情况 下 抢断 的 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
谁 比 科比 布莱恩特 有 更 多 的 抢断	他 的 抢断 比 科比 还 多	谁 比 科比 抢断 的 次数 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 的 助攻 少于 3 次	助攻 次数 少于 3 次	谁 的 助攻 数 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
注意 那些 在 任何 一个 赛季 中 总 阻挡 数量 超过 kobe   bryant 获得 的 任何 一个 赛季 总 积数 的 球员	注意 那些 在 任何 一个 赛季 中 总 拦网 次数 超过 科比 在 任何 一个 赛季 中 总 拦网 次数 的 球员	注意 那些 在 任何 一个 赛季 总 盖帽 数都 超过 科比 在 任何 一个 赛季 总 盖帽 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 抢断 不 超过 3 次 的 球员	一个 赛季 不 超过 3 次 抢断 的 球员	一个 赛季 抢断 不 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 次 封盖 后 得到 了 多少 失误	科比 在 三次 盖帽 后 失误 了 多少 次	科比 在 投进 3 个 盖帽 后 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
一个 赛季 球员 科比 布莱恩特 在 一个 赛季 中有 3 个 盖帽 犯规 次数	科比 - 布莱恩特 一个 赛季 的 犯规 次数	科比 · 布莱恩特 一个 赛季 的 犯规 次数 和 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 失误 次数	科比 - 布莱恩特 一个 赛季 有 3 次 失误	科比 · 布莱恩特 一个 赛季 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
在 一个 赛季 中 ， 什么 球员 比 科比 布莱恩特 有 更 多 的 盖帽	哪个 球员 一个 赛季 的 盖帽 比 科比 多	有 什么 球员 能比 科比 在 一个 赛季 中 得到 更 多 的 盖帽 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
四季 都 是 失误 最多 的 人	他 在 所有 的 赛季 中 失误 最 多	谁 在 整个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 犯规 次数 最 多	哪个 球员 犯规 最 多	哪个 球员 在 一个 赛季 中 犯规 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 本赛季 已经 犯 了 3 次 犯规	本赛季 科比 布莱恩特 犯规 3 次	球员 科比 · 布莱恩特 本赛季 已经 犯规 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_steals ) ) )
列出 本赛季 科比 布莱恩特 的 总得分 ， 并 注意 与 整个 赛季 总盖数 为 3 的 球员 的 比较	说出 科比 本赛季 的 总得分 ， 并 注意 与 本赛季 总得分 3 分 的 球员 的 比较	说出 科比 在 本赛季 的 总得分 ， 并 将 其 与 本赛季 总 盖帽 数为 3 的 球员 进行 比较	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
什么 球员 在 一个 赛季 中 得分 不 超过 三分	什么 球员 一个 赛季 得分 不 超过 3 分	什么 球员 一个 赛季 的 得分 不 超过 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 和 科比 布莱恩特 一样 多	哪个 球员 犯规 次数 和 科比 一样 多	哪个 球员 的 犯规 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 赛季 中 命名 一名 失误 比 科比 布莱恩特 少 的 球员	说出 一个 本赛季 失误 次数 少于 科比 的 球员	问 : 举出 一个 赛季 中 失误 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 所有 赛季 都 有 3 分 或 以上 的 抢断	科比 · 布莱恩特 在 整个 赛季 中以 3 分 或 3 分 以上 的 成绩 抢断	科比 - 布莱恩特 所有 赛季 抢断 3 分 以上	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_steals ) ) )
在 一个 叫 科比 布莱恩特 的 赛季 中 ， 一名 球员 没有 更 多 的 名字	说出 一个 在 一个 赛季 中 没有 拦网 的 科比 · 布莱恩特	说出 一个 赛季 中 没有 更 多 盖帽 的 球员 是 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 打 了 多少 场 比赛	科比 一个 赛季 打 了 多少 场 比赛	科比 一个 赛季 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
科比 · 布莱恩特 在 本赛季 为 洛杉矶 湖人队 效力 了 多少 篮板球	科比 - 布莱恩特 在 洛杉矶 湖人队 本赛季 的 篮板 数	科比 · 布莱恩特 在 洛杉矶 湖人队 这个 赛季 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
哪些 球员 不为 拉 湖人队 效力	哪些 球员 不 为 湖人队 效力	哪些 球员 不 为 洛杉矶 湖人队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪一年 科比 布莱恩特 在 三场 比赛 中 出场	科比 在 哪一年 打 了 三场 比赛	哪一年 科比 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
在 一个 赛季 中 ， 有 3 个 盖帽 的 球员 科比 布莱恩特 的 抢断 次数	科比 - 布莱恩特 一个 赛季 3 个 盖帽 的 抢断 次数	科比 - 布莱恩特 一个 赛季 抢断 3 次 的 数据	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
哪个 球员 不 超过 三个 盖帽	哪位 选手 的 盖帽 不 超过 三个	哪位 球员 的 盖帽 数 不 超过 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 至少 有 3 次 失误	哪个 球员 一个 赛季 至少 有 3 次 失误	哪些 球员 一个 赛季 至少 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 场 比赛 有 3 次 抢断	科比 在 几场 比赛 中 3 次 抢断	科比 在 多少 场 比赛 中有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
来自 洛杉矶 队 湖人队 的 球员 科比 布莱恩特 赛季 的 数量	洛杉矶 湖人队 科比 - 布莱恩特 一个 赛季 的 拦网 次数	洛杉矶 湖人队 球员 科比 · 布莱恩特 一个 赛季 的 盖帽 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
在 他 的 助攻 总数 为 3 的 同一 赛季 中 ， 科比 布莱恩特 犯 了 多少 次 犯规	在 科比 助攻 总数 为 3 次 的 同一个 赛季 里 ， 科比 犯 了 多少 次 犯规 ？	科比 在 本赛季 助攻 总数 为 3 次 的 情况 下 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
2004 年 科比 布莱恩特 有 多少 次 抢断	科比 在 2004 年 有 多少 次 抢断	科比 在 2004 年 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
在 一个 赛季 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 一个 赛季 犯规 次数	科比 - 布莱恩特 在 一个 赛季 中 3 场 比赛 的 犯规 次数	科比 一个 赛季 的 犯规 次数 ， 他 一个 赛季 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
哪个 球员 的 数量 不 超过 科比 · 布莱恩特 的 抢断 数量	哪个 球员 的 抢断 次数 不 超过 科比 的	哪个 球员 的 抢断 次数 不 超过 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 分时 有 多少 盖帽	科比 拿下 三分 的 时候 ， 他 能 挡 多少 球	当 科比 得到 三分 的 时候 ， 他 能 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
什么 球员 有 3 个 全季 最佳 篮板球	哪个 球员 全 赛季 最多 有 3 个 篮板	什么 球员 赛季 最多 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 与 科比 布莱恩特 有 同样 数量 抢断 的 球员	说出 一个 和 科比 有 相同 抢断 次数 的 球员	说出 一个 和 科比 抢断 次数 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 本赛季 的 助攻 数最多	哪个 球员 本赛季 助攻 次数 最 多	哪个 球员 本赛季 助攻 次数 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
某支 球队 的 球员 号码 是 多少 ？	某个 队 的 队员 人数 是 多少	某支 球队 的 队员 人数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
科比 布莱恩特 犯 3 次 犯规 时有 多少 篮板	科比 三次 犯规 时有 多少 个 篮板	科比 在 3 次 犯规 的 情况 下 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_rebounds ) ) )
在 他 有 三个 篮板 的 赛季 中 ， 科比 布莱恩特 助攻 的 总数 是 多少	科比 一个 赛季 有 三个 篮板 的 助攻 总数 是 多少 ？	科比 在 一个 有 三个 篮板 的 赛季 里 的 总 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
什么 球员 在 至少 3 场 比赛 中 得到 了 时间	哪些 玩家 至少 在 3 场 比赛 中 获得 了 时间	哪些 玩家 在 至少 3 场 游戏 中 获得 了 时间	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 得分 不到 3 分	哪个 球员 一个 赛季 得分 不到 3 分	哪个 球员 一个 赛季 得分 低于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 名字 命名 为 比 kobe   bryant 少 的 玩家	说出 一个 盖帽 比 科比 少 的 球员	说出 一个 盖帽 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 场 比赛 的 球员 科比 布莱恩特 的 抢断 次数	科比 - 布莱恩特 一个 赛季 3 场 比赛 的 抢断 次数	科比 一个 赛季 抢断 的 次数 ， 他 一个 赛季 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
谁 是 一个 赛季 少于 3 个 盖帽 的 人	谁 是 一个 赛季 不到 3 个 街区 的 人	谁 是 一个 赛季 盖帽 少于 3 个 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 得到 3 次 助攻 时 的 位置	当 科比 在 一个 赛季 中 得到 3 次 助攻 时 ， 他 在 哪个 位置 打球	当 科比 一个 赛季 只有 3 次 助攻 的 时候 ， 他会 打 什么 位置 呢	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 队 在 一个 赛季 中 打出 3 个 盖帽	科比 在 一个 赛季 中为 哪支 球队 制造 了 3 个 盖帽	科比 在 一个 赛季 中为 哪支 球队 投进 了 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
在 三场 比赛 中 ， 科比 布莱恩特 得分 多少 分	科比 在 三场 比赛 中得 了 多少 分	科比 在 三场 比赛 中得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
抢得 最 多 的 人	偷东西 最多 的 人	谁 抢断 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 拿下 3 分 得到 多少 篮板	科比 布莱恩特 在 赛季 中 得到 了 多少 个 篮板 ， 他 得 了 3 分	科比 在 本赛季 拿下 3 分 的 时候 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
科比 布莱恩特 打 了 三场 比赛 的 比赛	科比 在 三个 盖帽 的 地方 打 了 多少 场 比赛	科比 在 三次 盖帽 的 情况 下 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
什么 球员 有 3 或 更 少 的 失误	哪个 球员 失误 3 次 或 更少	什么 球员 有 3 次 或 更 少 的 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 和 科比 · 布莱恩特 一样 多 的 赛季	哪个 球员 的 盖帽 数 和 科比 一样 多	哪个 球员 能 像 科比 一样 在 一个 赛季 中 得到 那么 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 次 助攻	哪个 球员 有 3 次 以上 的 助攻	什么 球员 助攻 数 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这是 3 场 比赛 的 球员 科比 布莱恩特 的 赛季	这是 科比 的 赛季 ， 他 已经 打 了 3 场 比赛	这是 一个 已经 打 了 三场 比赛 的 球员 科比 · 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
当 他 有 3 个 盖帽 时 ， 科比 布莱恩特 队 的 表现 是 什么	科比 有 3 个 盖帽 时为 哪支 球队 效力	当 科比 得到 3 个 盖帽 的 时候 ， 他 是 为 哪支 球队 效力 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 分	科比 整个 赛季 得 了 多少 分	科比 在 整个 赛季 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
科比 布莱恩特 作为 控卫 得分 多少 分	科比 作为 控球 后卫 得 了 多少 分	作为 控球 后卫 ， 科比 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
科比 得到 3 分后 得到 多少 次 助攻	科比 在 得到 3 分后 得到 了 多少 助攻	科比 得到 3 分 之后 ， 他 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中 取得 了 多少 成绩	科比 一个 赛季 翻 了 多少 次球	科比 在 一个 赛季 中 改变 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 多少 次 全场 抢断	科比 整个 赛季 有 多少 次 抢断	科比 整个 赛季 有 多少 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
什么 球员 拥有 与 科比 布莱恩特 相同 或 更 少 的 盖帽	哪个 球员 的 盖帽 和 科比 差不多	哪个 球员 的 盖帽 和 科比 一样 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 为 洛杉矶 湖人队 效力 的 赛季 中有 多少 次 抢断	科比 - 布莱恩特 在 洛杉矶 湖人队 的 一个 赛季 中有 多少 次 抢断	科比 在 洛杉矶 湖人队 的 一个 赛季 中 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
什么 球员 不 超过 三个 全 季节 块	哪个 球员 整个 赛季 的 禁区 不 超过 三个	什么 球员 整个 赛季 只有 三个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 都 有 抢断 或者 击败 科比 布莱恩特 的 人	在 每个 赛季 的 抢断 中 与 科比 相匹配 或 击败 科比 的 人	谁 能 在 每个 赛季 的 抢断 数量 上 与 科比 匹敌	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 失误 次数 多于 球员 科比 布莱恩特 的 球员	一个 赛季 失误 次数 超过 科比 的 球员	一个 赛季 失误 次数 超过 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那些 在 2004 年 没有 上场 的 球员	2004 年 没有 参加 比赛 的 球员	2004 年 没有 参赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 超过 三个 盖帽 的 球员	一个 赛季 中 超过 三个 盖帽 的 球员	一个 赛季 盖帽 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 3 次 抢断 季后赛 中 的 表现 如何 ？	科比 布莱恩特 整个 赛季 3 次 抢断 时 打 什么 位置	科比 在 全 赛季 3 次 抢断 的 时候 是 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
哪位 球员 的 位置 最 多	哪一位 选手 的 位置 最 多	哪个 球员 打过 最 多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 与 科比 布莱恩特 相同 或 更 少 的 抢断	他 的 抢断 次数 和 科比 差不多	谁 的 抢断 次数 和 科比 一样 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 每 赛季 平均 有 多少 次 犯规	科比 - 布莱恩特 作为 湖人队 的 一个 赛季 平均 犯规 多少 次	科比 · 布莱恩特 在 湖人 每个 赛季 平均 犯规 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
说出 科比 布莱恩特 执行 3 次 盖帽 的 赛季	说出 科比 布莱恩特 三个 盖帽 的 赛季	问 : 说出 科比 一个 赛季 盖帽 3 次 的 例子	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
本赛季 球员 的 犯规 比 科比 布莱恩特 少	哪个 球员 本赛季 犯规 比 科比 少	本赛季 有 什么 球员 比 科比 更 少 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 三次 助攻 时 科比 球员 的 位置 是 什么	科比 有 三次 助攻 的 时候 是 什么 位置	当 科比 有 三次 助攻 时 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 2004 赛季 得分 是 多少	科比 在 2004 赛季 的 得分 是 多少	科比 在 2004 赛季 的 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
科比 布莱恩特 在 打 控球 后 有 多少 次 助攻	科比 在 打 控卫时 有 多少 次 助攻	科比 在 担任 控球 后卫 的 时候 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
科比 布莱恩特 在 整个 赛季 中有 多少 场 比赛 失误 超过 3 次	科比 布莱恩特 在 所有 赛季 中有 多少 场 比赛 有 超过 3 次 失误	科比 在 整个 赛季 中有 多少 场 比赛 失误 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
说出 一个 至少 和 科比 布莱恩特 一样 多 的 助攻 的 球员	说出 一个 至少 和 科比 一样 有 助攻 次数 的 球员	说出 一个 至少 和 科比 一样 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 至少 有 3 次 助攻 的 球员	一个 赛季 至少 助攻 3 次 的 球员	一个 赛季 至少 有 3 次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 季节 科比 布莱恩特 发挥	科比 在 哪个 赛季 打过 球	科比 · 布莱恩特 打 了 几个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
在 一个 赛季 中 ， 球员 的 数量 与 科比 布莱恩特 相同	什么 球员 一个 赛季 的 篮板 数 和 科比 一样	在 一个 赛季 中 ， 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 获得 了 多少 次 抢断	2004 年 科比 布莱恩特 有 多少 次 抢断	科比 在 2004 年 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
每个 赛季 都 和 科比 布莱恩特 一样 的 人	每个 赛季 都 有 和 科比 一样 的 盖帽	谁 每个 赛季 的 盖帽 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 对 洛杉矶 湖人队 有 多少 分	科比 在 湖人 身上 得 了 多少 分	科比 在 湖人 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_points ) ) )
当 一个 赛季 只有 三次 抢断 时 ， 球员 科比 布莱恩特 的 失误 次数 是 多少 ？	当 科比 一个 赛季 只有 三次 抢断 时 ， 他 的 失误 次数 是 多少 ？	当 科比 一个 赛季 只有 3 次 抢断 的 时候 ， 他 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
当 科比 布莱恩特 制造 3 个 盖帽 时 得分 多少 分	科比 在 三次 盖帽 时 得到 了 多少 分	当 科比 投中 3 个 盖帽 时 ， 他 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
哪个 球员 在 一个 赛季 中 没有 三个 篮板球	哪个 球员 一个 赛季 没有 三个 篮板	哪个 球员 一个 赛季 没有 三个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 是 篮板球 少于 科比 布莱恩特 的 球员	他 是 一个 篮板 比 科比 少 的 球员	谁 是 篮板球 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 只有 三个 盖帽 时 ， 科比 布莱恩特 在 一个 赛季 犯规 的 总数 是 多少	当 科比 只有 三个 盖帽 时 ， 他 一个 赛季 的 犯规 总数 是 多少 ？	当 科比 一个 赛季 只有 三个 盖帽 的 时候 ， 他 的 犯规 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
本赛季 哪个 球员 的 得分 少于 科比 布莱恩特	哪个 球员 本赛季 得分 比 科比 少	哪个 球员 的 得分 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 没有 制造 3 个 盖帽	哪个 玩家 没有 3 个 街区	哪位 球员 没有 封盖	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 的 篮板 数 上升 了 多少	科比 在 2004 年 一共 抢 了 多少 个 篮板	科比 在 2004 年 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 一个 赛季 中 的 总得分	科比 一个 赛季 的 总 积分	科比 一个 赛季 的 总得分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
谁 玩 过 最少 的 游戏	玩过 最少 游戏 的 人	谁 玩 的 游戏 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 次 抢断 时 得分 多少 分	科比 有 3 次 抢断 ， 他 得 了 多少 分 ？	当 科比 抢断 3 次时 ， 他 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
在 整个 赛季 的 三场 比赛 中 ， 科比 平均 犯 了 多少 次 犯规	科比 在 本赛季 的 三场 比赛 中 平均 犯规 多少 次	科比 在 这个 赛季 的 三分 比赛 中 平均 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
哪个 玩家 玩 了 不 超过 三场 比赛	哪个 玩家 玩过 不 超过 三场 游戏	哪位 球员 上场 不 超过 三场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 失误 最 多	哪个 球员 一个 赛季 失误 最 多	哪个 球员 在 一个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 属于 洛杉矶 湖人队	科比 布莱恩特 属于 洛杉矶 湖人队	科比 属于 洛杉矶 湖人队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string team ) ) )
在 一个 赛季 中 打 了 3 场 比赛 的 球员 科比 布莱恩特 上场比赛 的 数量	科比 一个 赛季 打 了 3 场 比赛	科比 在 一个 赛季 中 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
将 每个 赛季 没有 得分 的 球员 命名 为 科比 布莱恩特	说出 一个 赛季 得分 不比 科比 多 的 球员	说出 一个 赛季 得分 低于 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
不是 洛杉矶 队员 的 球员	不是 洛杉矶 湖人 的 球员	不是 洛杉矶 湖人队 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 3 个 篮板 的 盖帽 数量 是 多少 ？	科比 本赛季 3 个 篮板 的 拦网 次数 是 多少 ？	本赛季 科比 抢下 3 个 篮板 的 盖帽 数量 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 的 盖帽 数量	科比 - 布莱恩特 一个 赛季 的 失误 次数	科比 - 布莱恩特 一个 赛季 的 盖帽 数 和 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_blocks ) ) )
2004 赛季 科比 布莱恩特 的 统计数据	2004 赛季 科比 的 统计数据	2004 赛季 科比 的 数据	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
什么 数字 是 科比 布莱恩特 ， 他 有 多少 次 助攻	科比 有 多少 次 助攻	科比 的 数据 是 多少 ? 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
科比 布莱恩特 在 赛季 总共 3 次 抢断 时犯 了 多少 次 犯规	科比 - 布莱恩特 在 一个 赛季 中 总共 有 3 次 犯规	科比 在 一个 赛季 中有 多少 次 犯规 ， 他 总共 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
什么 球员 打 控卫 或 前锋	哪个 球员 打 控球 后卫 或 前锋	哪个 球员 是 控球 后卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 科比 布莱恩特 助攻 的 数量 是 多少 ？	科比 本赛季 的 助攻 次数 是 多少	科比 · 布莱恩特 本赛季 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
哪个 球员 在 任何 一个 赛季 中 失误 最 多	哪个 球员 在 一个 赛季 中 失误 最 多	哪个 球员 在 一个 赛季 中 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 ， 找到 总数 少于 kobe   bryant 执行 的 总 拦截 数 的 玩家	找出 在 任何 一个 赛季 中 总 拦网 次数 少于 科比 总 拦网 次数 的 球员	找出 一个 总 盖帽 数比 科比 在 任何 一个 赛季 的 盖帽 总数 还少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
比 科比 布莱恩特 犯下 更 多 犯规 的 球员	犯规 次数 超过 科比 的 球员	犯规 次数 比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 三个 盖帽 时 他 的 位置 是 什么	科比 有 三个 盖帽 的 时候 打 什么 位置	当 科比 得到 3 个 盖帽 时 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
谁 是 更好 的 科比 布莱恩特 或 勒布朗 詹姆斯	谁 比 科比 和 勒布朗 更好	科比 和 詹姆斯 谁 更好	( call SW.listValue ( call SW.concat en.player.kobe_bryant en.player.lebron_james ) )
这场 比赛 对 大多数 球队 都 有效	在 大多数 球队 中	哪个 队 踢 过 最 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 季节 科比 布莱恩特 只有 三次 抢断	什么 赛季 科比 只有 三次 抢断	科比 什么 赛季 只有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
谁 抢 得 最少	偷东西 最少 的 人	谁 的 抢断 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球队 是 科比 布莱恩特	科比 是 哪支 球队 的	科比 属于 哪支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
那里 有 多少 个 不同 的 职位	有 多少 不同 的 位置	有 多少 个 不同 的 位置	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
当 科比 布莱恩特 得到 3 个 篮板 时 ， 他 的 位置 是 什么 ？	科比 拿下 3 个 篮板 时 打 什么 位置	当 科比 抢下 3 个 篮板 时 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
科比 布莱恩特 在 湖人队 的 位置 上 发挥 了 什么 作用	科比 在 湖人队 打 什么 位置	科比 在 湖人 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
哪个 球员 在 2004 年 或 2010 年 没有 上场	哪个 球员 在 2004 年 或 2010 年 没有 参加 比赛	哪个 球员 在 2004 年 和 2010 年 没有 参加 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
不是 洛杉矶 湖人 的 名字	说出 不 在 洛杉矶 湖人队 的 球员	说出 不 在 洛杉矶 湖人队 的 球员 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 有 3 分 或 更 少分	哪个 球员 本赛季 得分 不 超过 3 分	什么 球员 本赛季 得到 3 分 或 更少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 次 助攻 时 ， 球队 的 表现 如何	当 科比 有 3 次 助攻 时 ， 他 在 哪支 球队 踢球	当 科比 有 3 次 助攻 的 时候 ， 他 在 哪个 球队 打球	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
什么 季节 科比 布莱恩特 打 控卫	科比 在 哪个 赛季 打 控卫	科比 在 哪个 赛季 打 的 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
什么 球员 的 得分 少于 或 等于 篮板球 的 数量	哪些 球员 的 篮板 数 少于 或 等于 科比 · 布莱恩特	有 哪些 球员 的 篮板 数比 科比 少 ， 又 有 哪些 球员 的 篮板 数比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 赛季 只有 3 个 篮板球 ， 有 多少 次 抢断	在 科比 只有 三个 篮板 的 赛季 里 ， 科比 有 多少 次 抢断 ？	本赛季 科比 抢断 了 多少 次 ， 而 他 只有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_steals ) ) )
是否 有 球员 的 助攻 总数 少于 同一 赛季 科比 布莱恩特 获得 的 助攻 数	有没有 球员 的 助攻 总数 少于 科比 同 赛季 的 助攻 总数 ？	有没有 球员 的 总 助攻 数比 科比 在 同一 赛季 获得 的 总 助攻 数 还 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 任何 一个 赛季 的 助攻 都 可以 帮助 球员 获得 超过 科比 布莱恩特 在 任何 一个 赛季 中 助攻 总数 的 记录	找到 任何 一个 赛季 有 助攻 的 球员 比 科比 在 任何 一个 赛季 的 助攻 总数 都 要 多	找 一个 在 任何 一个 赛季 都 有 过 助攻 的 球员 ， 他 的 助攻 数要 比 科比 在 任何 一个 赛季 的 总 助攻 数 还要 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 任何 一个 赛季 得分 不 超过 3 分 的 球员	找到 任何 一个 赛季 得分 不 超过 3 分 的 球员	找到 任何 一个 赛季 得分 不 超过 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 球员 在 一个 赛季 中有 少于 3 次 抢断	一个 赛季 有 多少 球员 的 抢断 次数 少于 3 次	有 多少 球员 一个 赛季 的 抢断 次数 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 中 阵容 最多 的 球员	一个 赛季 中 拦网 次数 最多 的 球员	一个 赛季 拥有 最 多 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 ， 任何 一个 赛季 的 犯规 总数 相当于 科比 布莱恩特 的 犯规 总数	谁 在 任何 一个 赛季 的 犯规 总数 都 相当于 科比 在 任何 一个 赛季 的 犯规 总数 ？	在 任何 一个 赛季 中 ， 谁 的 犯规 总数 与 科比 在 任何 一个 赛季 的 犯规 总数 相等	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 的 篮板 数 上升 了 多少	科比 在 2004 年 一共 抢 了 多少 个 篮板	科比 在 2004 年 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_rebounds ) ) )
2004 赛季 科比 布莱恩特 有 多少 次 抢断	科比 在 2004 赛季 有 多少 次 抢断	科比 在 2004 赛季 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
上赛季 哪位 球员 至少 有过 三次 助攻	哪个 球员 上赛季 至少 有 三次 助攻	哪个 球员 上 个 赛季 至少 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 是 控球 后卫 或 前锋	哪些 球员 是 控球 后卫 或 前锋	哪些 球员 是 控球 后卫 或 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 失误 与 科比 · 布莱恩特 在 一个 赛季 中 失误 最少 相同	他们 的 失误 和 科比 一个 赛季 中 最少 的 失误 是 一样 的	谁 的 失误 是 科比 一个 赛季 最少 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 赛季 积分	哪个 球员 整个 赛季 的 得分 都 比 科比 高	还有 什么 球员 能比 科比 · 布莱恩特 的 赛季 积分 更 多 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 的 得 分数 为 3 的 赛季 中 ， 有 多少 场 比赛 是 科比 · 布莱恩特	在 他 的 得分 是 3 分 的 赛季 里 科比 有 多少 场 比赛	在 那个 赛季 ， 他 的 得分 是 3 分 ， 而 科比 · 布莱恩特 参加 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
哪个 球员 在 赛季 中有 3 次 以上 的 助攻	哪个 球员 本赛季 有 3 次 或 更 多 的 助攻	哪个 球员 本赛季 有 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 不是 控球 后卫	哪些 球员 不是 控卫	哪些 球员 不是 控球 后卫	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string ! = ) en.position.point_guard ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 每场 比赛 有 三次 以上 犯规	本赛季 球员 每场 犯规 超过 三次	哪个 球员 本赛季 场均 犯规 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 作为 一名 湖人队 有 多少 场 全场 比赛	科比 作为 湖人队 的 一员 ， 整个 赛季 有 多少 次 拦网	作为 湖人队 的 一员 ， 科比 整个 赛季 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_blocks ) ) )
当 篮板 数 等于 3 时 ， 科比 布莱恩特 的 得分 有 多少	当 科比 的 篮板 追平 3 分时 ， 他 整个 赛季 得分 多少 ？	当 篮板 数为 3 时 ， 科比 在 整个 赛季 的 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
科比 布莱恩特 在 一个 赛季 取得 了 3 次 助攻 的 成绩	科比 在 一个 三次 助攻 的 赛季 里 得到 了 多少 分	科比 在 一个 赛季 贡献 了 3 次 助攻 的 情况 下 拿下 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
科比 布莱恩特 属于 哪支 球队 得 分为 3 分	科比 · 布莱恩特 属于 哪支 球队 得 了 3 分	科比 得 了 3 分 ， 他 属于 哪支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string team ) ) )
得到 3 次 助攻 后 科比 得到 了 多少 次 抢断	科比 在 得到 3 次 助攻 后 得到 了 多少 次 抢断	3 次 助攻 之后 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
多少 个 赛季 科比 布莱恩特 得分 超过 3 分	科比 有 多少 个 赛季 得分 超过 3 分	科比 · 布莱恩特 有 多少 个 赛季 得分 超过 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
一个 赛季 犯规 次数 与 一个 赛季 球员 科比 布莱恩特 犯规 次数 相同 的 球员	一个 赛季 犯规 次数 与 科比 相同 的 球员	一个 赛季 的 犯规 次数 与 科比 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 比 科比 布莱恩特 更少 的 全 季节 抢断	哪个 球员 整个 赛季 的 抢断 都 不 比 科比 少	有 哪个 球员 的 全 赛季 抢断 数 不 低于 科比	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 同一 赛季 中 ， 他 参加 了 3 场 比赛 ， 并 指出 了 科比 · 布莱恩特 犯规 的 次数	在 他 参加 3 场 比赛 的 同一个 赛季 里 ， 说出 科比 的 犯规 次数	在 同一个 赛季 ， 他 参加 了 3 场 比赛 ， 说出 了 科比 犯规 的 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_fouls ) ) )
哪些 球员 在 两个 位置 上 比赛	哪位 选手 在 两个 位置 比赛	哪个 球员 踢 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 两个 位置 的 球员	两个 位置 的 玩家	双位 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 取得 了 多少 次 抢断	科比 在 这个 赛季 中 抢断 了 多少 次	这个 赛季 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
在 两个 位置 上 比赛 的 球员	两种 姿势 的 运动员	在 两个 位置 上 打球 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 本赛季 有 超过 3 个 篮板 的 球员	说出 一个 本赛季 篮板 超过 三个 的 球员	说出 一个 本赛季 篮板 数 超过 3 个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 的 位置 是 什么	科比 打 什么 位置	科比 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
科比 布莱恩特 在 赛季 中 打 了 多少 场 比赛 他 的 总 积数 等于 3	科比 布莱恩特 在 这个 赛季 打 了 多少 场 比赛 ， 他 的 盖帽 总数 是 3	科比 在 这个 赛季 一共 打 了 多少 场 比赛 ， 他 的 盖帽 总数 是 3 个	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
是否 有 球员 在 任何 一个 赛季 的 得分 都 低于 科比 布莱恩特 的 得分 总分	有没有 球员 在 任何 一个 赛季 的 得分 低于 科比 的 总得分 ？	有没有 球员 在 任何 一个 赛季 的 得分 都 低于 科比 的 总得分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 得分 最少 的 球员	一个 赛季 篮板 最少 的 球员	一个 赛季 中 篮板 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 他 有 3 次 抢断 时 科比 布莱恩特 有 多少 失误	科比 有 3 次 抢断 时有 多少 次 失误	当 科比 抢断 3 次时 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_turnovers ) ) )
一个 赛季 球员 科比 布莱恩特 的 抢断 数量 超过 一个 赛季 3 次 抢断	一个 赛季 的 抢断 次数 科比 一个 赛季 3 次 抢断	科比 一个 赛季 的 抢断 次数 科比 一个 赛季 的 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_steals ) ) )
有 多少 球员	有 多少 人	有 多少 球员	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
在 一个 赛季 中 比 一名 球员 科比 布莱恩特 打得 更少 比赛 的 球员 已经 打 了 一个 赛季	在 一个 赛季 中 比 科比 打得少 的 球员	一个 赛季 上场比赛 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 多少 场 比赛 ， 科比 · 布莱恩特 有 3 次 抢断	科比 一个 赛季 有 多少 场 比赛 3 次 抢断	科比 一个 赛季 有 多少 场 比赛 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_games_played ) ) )
什么 球员 有 最 多 的 全季 犯规	哪个 球员 犯规 次数 最 多	哪个 球员 赛季 犯规 次数 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 打 了 3 场 以上 的 比赛	玩过 3 次 以上 的 人	谁 玩 过 3 场 以上	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 超过 3 场 比赛 的 球员	一个 赛季 打 了 3 场 以上 的 球员	一个 赛季 打 了 3 场 以上 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 的 助攻 数 超过 3 次	哪些 球员 一个 赛季 助攻 超过 3 次	是 什么 球员 在 一个 赛季 中 贡献 了 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 取得 了 3 个 篮板球 犯规 次数	科比 本赛季 3 个 篮板 的 犯规 次数	本赛季 科比 抢下 3 个 篮板 ， 却 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
哪个 球员 比 科比 布莱恩特 犯规 更 多 ， 或者 每个 赛季 都 犯 同样 的 犯规	哪个 球员 的 犯规 次数 比 科比 多 ， 或者 每个 赛季 相同	哪个 球员 每个 赛季 的 犯规 次数 比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 不 属于 洛杉矶 湖人队	哪个 球员 不 属于 洛杉矶 湖人队	哪位 球员 不 属于 洛杉矶 湖人队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string ! = ) en.team.lakers ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 助攻	哪个 球员 的 助攻 比 科比 多	哪个 球员 的 助攻 数比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 失误 时犯 了 多少 次 犯规	科比 在 三次 失误 中 犯规 了 多少 次	当 科比 失误 三次 时 ， 他 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
在 他 有 三个 篮板 的 所有 赛季 中 ， 科比 布莱恩特 的 犯规 情况 如何	科比 在 他 有 三个 篮板 的 所有 赛季 中是 如何 犯规 的	科比 · 布莱恩特 在 所有 的 赛季 中有 多少 人 犯规 ， 他 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 三场 比赛 中 出场 时有 多少 失误	科比 在 三场 比赛 中有 多少 失误	科比 在 三场 比赛 中有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
在 他 的 赛季 中 打 控卫有 多少 次 助攻 是 科里 的 负责人	在 科比 本赛季 担任 控卫 期间 ， 科比 有 多少 次 助攻	在 他 打 控卫 的 赛季 中 ， 科比 助攻 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
扮演 控球 后卫 或 前锋 的 球员	打 控球 后卫 或 前锋 位置 的 球员	打 位置 控球 后卫 或 前锋 的 球员	( call SW.listValue ( call SW.concat en.position.point_guard en.position.forward ) )
一个 赛季 得分 少于 一个 赛季 球员 科比 布莱恩特 的 球员	一个 赛季 得分 低于 科比 的 球员	一个 赛季 得分 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 每 赛季 少于 三个 盖帽 的 球员 命名 为	说出 每个 赛季 少于 三个 盖帽 的 球员	说出 一名 每个 赛季 盖帽 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
自从 他 去 职业 球员 以来 ， 科比 有 多少 场 比赛	科比 职业生涯 以来 打 了 多少 场 比赛	自从 科比 成为 职业 球员 以来 ， 他 参加 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
说出 本赛季 至少 有 三次 犯规 的 球员	说出 一个 本赛季 至少 有 三次 犯规 的 球员	问 : 举出 一个 本赛季 至少 有 三次 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 没有 3 个 篮板	哪个 球员 没有 3 个 篮板	哪个 球员 没有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 3 个 街区 的 科比 布莱恩特 犯规 次数	科比 三个 盖帽 的 犯规 次数	科比 的 犯规 次数 ， 他 有 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_fouls ) ) )
科比 布莱恩特 有 多少 三分 失误	科比 有 多少 次 三分 失误	科比 的 三分 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
什么 赛季 科比 布莱恩特 打 控卫	科比 在 哪个 赛季 打 控卫	科比 在 哪个 赛季 打 的 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
科比 布莱恩特 在 控卫 位置 得分 多少 分	科比 在 控球 后卫 的 位置 上 得 了 多少 分	科比 在 控卫 位置 上 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
哪个 球员 有 最少 的 篮板球	哪个 球员 篮板 最少	哪个 球员 的 篮板 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 了 多少 次 犯规	科比 的 犯规 次数	科比 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 抢断	科比 一个 赛季 偷 了 多少 次球	科比 一个 赛季 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
科比 布莱恩特 为 湖人队 效力 了 多少 个 赛季	科比 布莱恩特 为 湖人 效力 了 多少 个 赛季	科比 为 湖人队 打 了 多少 个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
什么 位置 是 科比 在 三次 投篮 时 的 表现	科比 三次 投篮 都 被 挡 在 了 哪个 位置	当 科比 三次 盖帽 的 时候 ， 他 打 的 是 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
哪个 球员 每 赛季 得分 比 科比 布莱恩特 多	哪个 球员 每个 赛季 的 得分 都 比 科比 高	哪个 球员 每个 赛季 的 得分 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 的 球员 超过 3 个 盖帽	哪个 球员 在 这个 赛季 中 超过 了 3 个 盖帽	哪个 球员 本赛季 盖帽 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 次 抢断	科比 在 3 场 比赛 后 有 多少 次 抢断	3 场 比赛 后 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
什么 球员 发挥 最多 的 位置	哪个 球员 的 位置 最 多	哪个 球员 打 最 多 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 犯规 次数 相同 的 球员	一个 赛季 中 犯规 次数 与 科比 相同 的 球员	一个 赛季 的 犯规 次数 和 科比 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 对 洛杉矶 湖人 有 多少 次 犯规	科比 - 布莱恩特 在 洛杉矶 湖人队 有 多少 次 犯规	科比 在 洛杉矶 湖人队 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_fouls ) ) )
哪个 球员 的 赛季 总数 最少	哪个 球员 在 整个 赛季 的 禁区 最少	哪个 球员 的 全 赛季 盖帽 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 个 篮板球 的 季节 里 有 多少 次 抢断	科比 布莱恩特 在 三个 篮板 的 赛季 里 有 多少 次 抢断	科比 · 布莱恩特 在 3 个 篮板 的 赛季 里 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_steals ) ) )
在 他 有 三个 盖帽 的 比赛 中 ， 科比 布莱恩特 有 多少 次 抢断	科比 在 三次 盖帽 的 比赛 中有 多少 次 抢断	科比 在 三次 盖帽 的 比赛 中 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
一个 赛季 至少 3 次 抢断 的 球员	一个 赛季 至少 3 次 抢断 的 球员	一个 赛季 至少 抢断 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 得分 等于 或 少于 科比 布莱恩特	哪个 球员 的 得分 与 科比 相同 或 更少	哪个 球员 得分 和 科比 一样 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 的 助攻 数比 科比 · 布莱恩特 少	哪个 球员 的 助攻 比 科比 少	哪些 球员 的 助攻 数比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 至少 和 科比 布莱恩特 一样 多 的 比赛	哪位 球员 在 一个 赛季 里 至少 打 了 和 科比 一样 多 的 比赛	哪个 球员 在 一个 赛季 中 至少 有 科比 这样 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 没有 3 次 抢断	哪个 玩家 没有 3 次 抢断	哪个 球员 没有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 失误 比 三个 少	哪个 球员 的 失误 少于 三次	哪个 球员 的 失误 次数 少于 三次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 控球 后卫 的 一个 赛季 中 ， 科比 · 布莱恩特 的 失误 总数 是 多少 ？	科比 在 控卫 一个 赛季 的 失误 总数 是 多少	科比 在 控卫 位置 上 一个 赛季 的 失误 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
科比 布莱恩特 在 一个 赛季 中能 有 多少 篮板球	科比 一个 赛季 能 打 多少 个 篮板	科比 一个 赛季 能 抢 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_rebounds ) ) )
谁 是 一个 每 赛季 甚至 没有 3 次 抢断 的 球员	谁 是 一个 赛季 连 3 次 抢断 都 没有 的 球员	谁 是 一个 赛季 连 3 次 抢断 都 没有 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
他们 在 一个 赛季 中 领先 犯规	谁 在 一个 赛季 内 犯规 领先	谁 在 一个 赛季 中 犯规 次数 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 不少 于 3 次 的 球员 至少 3 次	一个 赛季 犯规 不少 于 3 次 的 球员 至少 是 3 次	一个 赛季 至少 有 3 次 犯规 的 球员 至少 是 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 得分 多少 分	科比 这个 赛季 得 了 多少 分	这个 赛季 科比 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
有没有 像 科比 布莱恩特 那样 每 赛季 平均 得分 相同 的 球员	有没有 一个 球员 的 平均 每季 得分 和 科比 一样	有没有 一个 球员 的 赛季 平均 得分 和 科比 一样 高	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 有 多少 同样 或 更 多 的 抢断	什么样 的 球员 在 本赛季 中 抢断 科比 的 次数 相同 或 更 多	哪些 球员 在 这个 赛季 有 和 科比 一样 甚至 更 多 的 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪些 球员 和 科比 · 布莱恩特 在 同一个 赛季 中 出场	哪些 球员 和 科比 在 同一个 赛季 打过 球	哪些 球员 和 科比 · 布莱恩特 在 同一个 赛季 打球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 赛季 科比 布莱恩特 有 3 个 全季 助攻	科比 整个 赛季 有 3 次 助攻	哪个 赛季 科比 有 3 次全 赛季 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
哪位 球员 只 为 一支 球队 效力	哪个 球员 只 为 一个 队 效力 过	哪位 球员 只 效力 过 一个 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 比 科比 布莱恩特 少得 多 的 助攻	他 的 助攻 比 科比 少	谁 的 助攻 数比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一场 打 了 3 场 比赛 的 赛季 中有 多少 篮板球	科比 在 一个打 了 3 场 比赛 的 赛季 里 抢 了 多少 个 篮板	科比 在 一个 赛季 打 了 3 场 比赛 ， 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 布莱恩特 得到 3 分时 有 多少 助攻	科比 拿下 3 分时 有 多少 次 助攻	当 科比 得到 3 分 的 时候 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中 得到 了 多少 分 ， 他 只 得到 了 3 次 助攻	科比 在 一个 只有 三次 助攻 的 赛季 里 得 了 多少 分	科比 在 一个 只有 3 次 助攻 的 赛季 里 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
什么 球员 在 整个 赛季 都 有 与 科比 布莱恩特 相同 数量 的 犯规	哪个 球员 整个 赛季 的 犯规 次数 都 和 科比 一样	哪个 球员 的 犯规 数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 超过 3 个 篮板 的 比赛 中 ， 科比 布莱恩特 平均 失误 多少 次	科比 在 3 个 篮板 以上 的 比赛 中 平均 失误 次数 是 多少	科比 在 3 个 篮板 以上 的 比赛 中 平均 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
玩家 玩游戏 的 次数 与 科比 布莱恩特 在 一个 赛季 中玩 的 游戏 次数 相同	什么样 的 球员 在 一个 赛季 中 打 了 和 科比 最少 的 比赛 一样 的 比赛 ？	在 一个 赛季 中 ， 科比 最少 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 得分 少于 科比 布莱恩特	哪个 球员 得分 比 科比 少	什么 球员 得分 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 拥有 比 kobe   bryant 更 多 或 相同 数量 的 篮板球	比 科比 有 更 多 或 同等 数量 的 篮板	谁 的 篮板 数比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 有 超过 3 次 失误	哪个 球员 的 失误 超过 3 次	什么 球员 失误 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 的 犯规 次数 与 科比 布莱恩特 在 一个 赛季 犯规 时 的 犯规 次数 一样 多	科比 在 一个 赛季 中 犯规 次数 最多 的 球员 是 谁 ？	哪个 球员 的 犯规 次数 能 达到 科比 一个 赛季 最多 的 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 多少 场 比赛 ， 科比 布莱恩特 有 超过 三个 盖帽	科比 在 一个 赛季 中有 多少 场 比赛 有 超过 三个 盖帽	一个 赛季 中 科比 有 多少 场 比赛 盖帽 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
什么 球员 没有 3 次 抢断	哪个 球员 没有 3 次 抢断	什么 球员 没有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_steals ) ( string ! = ) ( number 3 steal ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 分时 有 多少 篮板	科比 拿下 3 分时 有 多少 个 篮板	当 科比 得到 3 分 的 时候 他 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
哪支 球队 做 了 不到 3 次 失误 的 科比 布莱恩特 比赛	科比 在 哪支 球队 的 失误 少于 3 次	科比 在 哪个 球队 的 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
谁 为 洛杉矶 湖人 或 克利夫兰 骑士队 效力	为 洛杉矶 湖人队 或 克利夫兰 骑士队 效力	谁 效力 于 洛杉矶 湖人队 或 克利夫兰 骑士队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 取得 了 与 科比 布莱恩特 一样 多 的 积分	什么样 的 球员 在 一个 赛季 里 得分 和 科比 一样 多	是 什么 球员 在 一个 赛季 中 得到 了 和 科比 一样 多 的 分数	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 每个 赛季 的 职业生涯 最 多	哪个 球员 每个 赛季 有 最 多 的 职业 障碍	哪个 球员 每个 赛季 的 生涯 盖帽 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 年 科比 布莱恩特 的 位置	科比 在 2004 年 打过 哪个 位置	科比 2004 年 打 哪个 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
科比 布莱恩特 在 赛季 中 打出 了 多少 个 盖帽	科比 在 这个 赛季 中 的 得分 是 多少 ？	科比 在 这个 赛季 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
将 球员 命名 为 少于 3 次 助攻	说出 助攻 少于 三次 的 球员	说出 助攻 少于 三次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 控卫 位置 上 的 球员 科比 布莱恩特 队	得分 后卫 科比 布莱恩特 的 球队	球员 科比 · 布莱恩特 的 球队 ， 他 是 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
科比 布莱恩特 在 他 最好 的 得分 赛季 中 的 位置	科比 布莱恩特 在 他 最好 的 得分 赛季 打 什么 位置	科比 在 他 得分 最好 的 赛季 里 是 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
当 科比 布莱恩特 有 3 个 全季 助攻 时 他 有 多少 篮板球	当 科比 整个 赛季 有 3 次 助攻 时 他 有 多少 个 篮板	当 科比 · 布莱恩特 全 赛季 有 3 次 助攻 时 ， 他 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
什么 球员 比 科比 布莱恩特 有 更 多 的 盖帽 ， 助攻 数是 3	哪个 球员 的 盖帽 数比 科比 多 ， 科比 的 助攻 数是 3	有 什么 球员 能比 科比 - 布莱恩特 的 盖帽 数 还 多 ， 他 的 助攻 数是 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
控卫 科比 布莱恩特 在 所有 赛季 的 抢断 总数	得分 后卫 科比 · 布莱恩特 所有 赛季 的 总 抢断 次数	控球 后卫 科比 · 布莱恩特 所有 赛季 的 抢断 总数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
一个 赛季 失误 少于 3 次 的 球员	一个 赛季 失误 少于 3 次 的 球员	一个 赛季 失误 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 多少 犯规 有 控球 后卫 科比 布莱恩特	控卫 科比 一个 赛季 有 多少 次 犯规	控球 后卫 科比 · 布莱恩特 一个 赛季 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
科比 布莱恩特 在 三场 比赛 中有 多少 抢断	科比 在 三场 比赛 中有 多少 次 抢断	科比 在 三场 比赛 中 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
科比 · 布莱恩特 在 洛杉矶 湖人队 打球 的 那个 赛季 取得 了 多少 次 抢断	科比 - 布莱恩特 在 洛杉矶 湖人队 的 那个 赛季 有 多少 次 抢断	科比 在 洛杉矶 湖人队 的 这个 赛季 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
科比 布莱恩特 在 本赛季 取得 了 3 次 助攻 的 助攻 数	科比 在 本赛季 的 三次 盖帽 中 助攻 了 多少 次	科比 本赛季 3 次 盖帽 的 助攻 有 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
科比 布莱恩特 在 本赛季 场均 3 次 助攻 的 情况 下 得分 多少 分	当 科比 在 本赛季 平均 每场 3 次 助攻 时 ， 他 得到 了 多少 分 ？	科比 在 本赛季 场均 3 次 助攻 的 情况 下 拿下 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
什么 球队 为 科比 布莱恩特 效力	科比 为 哪支 球队 效力	科比 为 哪支 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
科比 布莱恩特 在 过去 3 个 赛季 中 打 了 多少 场 比赛	科比 在 过去 三个 赛季 打 了 多少 场 比赛	科比 在 过去 的 三个 赛季 里 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
科比 在 3 次 封盖 后 得到 了 多少 篮板	科比 在 三次 盖帽 后 得到 了 多少 个 篮板	科比 投进 3 个 盖帽 后 抢 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
科比 布莱恩特 的 位置 是 什么	科比 打 什么 位置	科比 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
什么 球员 在 2004 年 没有 参赛	2004 年 哪些 球员 没有 参加 比赛	哪些 球员 在 2004 年 没有 参加 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 拥有 最少 的 科比 布莱恩特 失误 次数	哪个 球员 的 失误 次数 最少	哪个 球员 的 失误 次数 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 得不到 3 分	哪个 球员 没有 得到 3 分	哪个 球员 没有 得到 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 打 了 3 场 比赛 时 打出 了 多少 盖帽	科比 在 他 打 了 3 场 比赛 的 那个 赛季 中 制造 了 多少 个 盖帽	科比 在 本赛季 打 了 3 场 比赛 ， 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
在 他 有 三次 犯规 的 那 一年 里 ， 科比 布莱恩特 打 了 几场 比赛	科比 布莱恩特 在 一年 中有 几场 比赛 他 三次 犯规	科比 在 他 有 三次 犯规 的 那 一年 里 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_games_played ) ) )
当 科比 布莱恩特 在 一个 赛季 放弃 了 3 次 失误 时 ， 他 通常 会 给出 多少 次 犯规	当 科比 在 一个 赛季 中 3 次 失误 时 ， 他 通常 会 犯规 多少 次	当 科比 一个 赛季 失误 3 次时 ， 他 通常 会 犯规 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 一个 赛季 犯 了 多少 次 犯规 ， 这比 三次 失误 还 多	科比 在 一个 赛季 中有 多少 次 犯规 超过 了 三次 失误	科比 一个 赛季 有 多少 次 犯规 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_fouls ) ) )
什么 赛季 科比 布莱恩特 得到 3 分	科比 在 哪个 赛季 得 了 3 分	哪个 赛季 科比 得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
在 所有 赛季 中 ， 球员 的 得分 与 科比 布莱恩特 一样 多	什么样 的 球员 在 整个 赛季 的 得分 都 和 科比 一样 多	是 什么 球员 在 所有 赛季 中 得分 都 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 有 3 次 犯规 ， 他 有 3 次 助攻	科比 本赛季 被 罚 了 多少 次 犯规 ， 他 有 3 次 助攻	本赛季 科比 3 次 助攻 被判 犯规 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
团队 的 数量 是 多少	这个 队 的 人数 是 多少	这个 队 的 人数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
哪个 球员 每 赛季 的 失误 比 科比 布莱恩特 少	哪个 球员 每个 赛季 的 失误 比 科比 少	哪个 球员 的 失误 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 得分 少于 3 的 球员	一个 赛季 得分 少于 3 分 的 球员	一个 赛季 得分 低于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 少于 3 个 盖帽	哪个 球员 的 盖帽 少于 3 个	什么 球员 有 少于 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 控卫 球员 比 科比 布莱恩特 有 更 多 的 积分	哪个 控球 后卫 的 得分 比 科比 高	哪个 控球 后卫 的 得分 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 篮板球	科比 在 三场 比赛 后 有 多少 个 篮板	3 场 比赛 后 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
找到 那些 在 特定 赛季 中 参加 过 少于 或 超过 3 场 比赛 的 球员	找出 在 一个 赛季 中 参加 少于 或 多于 3 场 比赛 的 球员	找出 那些 在 一个 赛季 中 参加 了 少于 或 多于 3 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 多 的 失误	哪个 球员 的 失误 和 科比 一样 多	哪个 球员 的 失误 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 科比 布莱恩特 队 打 了 3 次 犯规	科比 - 布莱恩特 的 三次 犯规 是 什么 队	哪支 球队 的 科比 - 布莱恩特 犯规 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
哪个 球员 在 一个 赛季 中 参加 过 最少 的 比赛	哪个 球员 在 一个 赛季 最少 的 比赛 中 上场	哪个 球员 是 一个 赛季 最少 出场 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 打 控卫 或 前锋	哪个 球员 打 控卫 或 前锋	哪个 球员 不是 控球 后卫 就是 前锋	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.concat en.position.point_guard en.position.forward ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 属于 洛杉矶 湖人队 或 克利夫兰 骑士队	哪个 球员 属于 洛杉矶 湖人队 还是 克利夫兰 骑士队	哪位 球员 属于 洛杉矶 湖人队 或 克利夫兰 骑士队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 的 篮板球	哪个 球员 的 篮板 比 科比 多	哪个 球员 比 科比 抢下 更 多 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 控卫 位置 上 的 球员 科比 布莱恩特 的 赛季	得分 后卫 科比 布莱恩特 的 赛季	本赛季 的 最佳 控球 后卫 是 科比 · 布莱恩特	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string season ) ) )
球衣 号码 最低 的 球员	球衣 号码 最低 的 球员	球衣 号码 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 得到 3 个 篮板 后 ， 科比 有 多少 盖帽	科比 在 得到 3 个 篮板 后 的 盖帽	在 得到 3 个 篮板 之后 科比 做 了 多少 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_blocks ) ) )
科比 布莱恩特 本赛季 取得 了 多少 分 ， 他 造成 了 3 次 失误	科比 布莱恩特 在 本赛季 的 三次 失误 中得 了 多少 分	科比 这个 赛季 失误 3 次 ， 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
在 什么 赛季 科比 布莱恩特 总共 得到 3 次 助攻	科比 在 哪个 赛季 总共 助攻 3 次	问 : 科比 在 哪个 赛季 得到 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
一个 赛季 的 得分 超过 球员 科比 布莱恩特 的 一个 赛季	一个 赛季 得分 高于 科比 的 球员	一个 赛季 得分 比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 多少 场 比赛 中 ， 科比 · 布莱恩特 获得 了 3 次 失误	科比 在 几场 比赛 中 3 次 失误	科比 在 多少 场 比赛 中有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
这是 科比 · 布莱恩特 犯下 3 次 犯规 的 季节	说出 科比 布莱恩特 三次 犯规 的 赛季	说出 科比 犯规 3 次 的 那个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
什么 赛季 科比 布莱恩特 有 3 次 犯规	科比 在 哪个 赛季 有 3 次 犯规	科比 哪个 赛季 有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
在 哪个 位置 科比 得到 3 分	科比 在 哪个 位置 得 了 3 分	在 哪个 位置 科比 得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
本赛季 至少 3 场 比赛 中有 多少 球员 有 比赛 时间	本赛季 至少 3 场 比赛 中有 多少 球员 有 上场 时间	有 多少 球员 在 本赛季 至少 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 总 抢断 次数 相当于 科比 布莱恩特 赛季 最低 抢断 次数 的 球员	一个 赛季 中 总 抢断 次数 相当于 科比 一个 赛季 中 最低 抢断 次数 的 球员	一个 赛季 总 抢断 数 等于 科比 一个 赛季 最低 抢断 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 在 一个 赛季 有 3 次 助攻 时 他 的 位置 是 什么	当 科比 一个 赛季 有 3 次 助攻 时 他 的 位置 是 什么	当 科比 一个 赛季 有 3 次 助攻 时 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 一个 赛季 中 获得 了 3 个 盖帽	科比 在 一个 三个 盖帽 的 赛季 中 的 得分	科比 的 得分 在 一个 赛季 中有 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
什么 球员 与 科比 布莱恩特 有 相同 或 更 少 的 犯规	哪个 球员 的 犯规 次数 与 科比 相同 或 更少	哪个 球员 的 犯规 次数 和 科比 一样 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 的 得分 超过 2 分	哪些 球员 一个 赛季 拿下 2 分 以上	什么 球员 在 一个 赛季 中 得到 超过 2 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 得分 最少	哪个 球员 得分 最少	哪个 球员 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 得分 最少 的 球员	哪个 球员 本赛季 助攻 最少	本赛季 助攻 最少 的 球员 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 是 科比 布莱恩 队友	谁 是 科比 布莱恩 茨 的 队友	科比 · 布莱恩特 的 队友 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 3 个 盖帽	科比 布莱恩特 三个 盖帽	科比 3 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_blocks ) ) )
什么 球员 每 赛季 没有 比 科比 布莱恩特 更 多 的 失误	哪个 球员 每个 赛季 的 失误 都 不 比 科比 多	没有 哪个 球员 比 科比 · 布莱恩特 每个 赛季 的 失误 次数 更 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 的 一个 赛季 失误 次数	科比 - 布莱恩特 一个 赛季 的 失误 次数	科比 一个 赛季 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
在 赛季 期间 ， 科比 布莱恩特 的 得分 有 多少	科比 在 本赛季 的 犯规 次数	这个 赛季 科比 · 布莱恩特 得 了 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 这个 赛季 得到 3 次 抢断 得分 多少 分	科比 本赛季 三次 抢断 得到 了 多少 分 ？	本赛季 科比 抢断 三次 ， 他 到底 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
在 他 作为 控球 后卫 的 赛季 中 ， 科比 布莱恩特 执行 了 多少 次 盖帽	在 科比 担任 控球 后卫 的 那个 赛季 里 ， 科比 一共 完成 了 多少 次 拦网	在 他 担任 控球 后卫 的 赛季 中 ， 科比 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_blocks ) ) )
球员 在 赛季 中 总体 上 超越 了 科比 布莱恩特	在 本赛季 总 篮板 数 超过 科比 布莱恩特 的 球员	在 本赛季 中 总 篮板 数 超过 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 助攻	科比 有 多少 次 助攻	科比 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
哪个 球员 的 犯规 次数 最少	哪个 球员 犯规 次数 最少	哪个 球员 犯规 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 不是 3 的 赛季 中 ， 球员 的 犯规 总数 是 多少	什么 球员 一个 赛季 的 犯规 总数 不是 3 次	哪个 球员 一个 赛季 的 犯规 总数 不是 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string ! = ) ( number 3 foul ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 拥有 最少 的 科比 布莱恩特 抢断 数	哪个 球员 的 抢断 次数 最少	哪个 球员 抢断 科比 的 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 比 科比 布莱恩特 有 更 多 的 盖帽	本赛季 谁 的 盖帽 比 科比 多	本赛季 有 什么 球员 能比 科比 拥有 更 多 的 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 打 了 3 场 比赛 时有 多少 篮板	科比 在 他 打 了 3 场 比赛 的 赛季 里 有 多少 个 篮板	科比 在 本赛季 打 了 3 场 比赛 ， 他 的 篮板 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
科比 布莱恩特 平均 每场 比赛 3 次 抢断	科比 哪个 赛季 平均 每场 3 次 抢断	科比 在 哪个 赛季 场均 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
这个 赛季 球员 比 科比 布莱恩特 有 更 多 的 抢断	本赛季 哪个 球员 的 抢断 次数 比 科比 还 多	本赛季 有 什么 球员 比 科比 抢断 的 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 任何 一个 赛季 都 参加 过 最少 的 比赛	哪个 球员 在 一个 赛季 中 上场 次数 最少	哪个 球员 在 一个 赛季 的 出场 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 是 最 多 的 球队	在 大多数 球队 里 是 哪个 球员	哪个 球员 参加 了 最 多 的 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 最多 的 球员	一个 赛季 中 犯规 最多 的 球员	一个 赛季 中 犯规 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 哪位 球员 犯规 次数 超过 三次	哪个 球员 本赛季 犯规 超过 三次	哪个 球员 本赛季 犯规 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
至少 与 科比 布莱恩特 一样 多 的 失误 的 球员	至少 和 科比 一样 多次 失误 的 球员	至少 有 和 科比 一样 多 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 什么 位置 科比 能够 制造 3 个 盖帽	科比 在 什么 位置 能 三个 盖帽	科比 在 什么 位置 能够 投出 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string position ) ) )
在 3 次 抢断 后 科比 布莱恩特 获得 了 多少 次 助攻	科比 在 三次 抢断 后 得到 了 多少 助攻	科比 抢断 3 次 之后 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
科比 布莱恩特 在 本赛季 补 3 次 助攻 的 助攻 数是 多少 ？	科比 本赛季 助攻 3 次 的 次数 是 多少 ？	科比 · 布莱恩特 本赛季 的 3 次 助攻 有 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
科比 布莱恩特 作为 控球 后卫 得到 了 多少 篮板	科比 · 布莱恩特 作为 控球 后卫 得到 了 多少 个 篮板	作为 控球 后卫 ， 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
在 一名 球员 科比 布莱恩特 担任 控球 后卫 的 比赛 中 打过 多少 场 比赛	科比 - 布莱恩特 在 控球 后卫 一个 赛季 的 上场 次数	科比 在 控球 后卫 位置 上 一个 赛季 的 上场 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_games_played ) ) )
哪个 球员 至少 有 3 个 盖帽	哪位 选手 至少 三个 盖帽	哪位 球员 投了 最少 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 得分 多于 或 少于 3 分	什么 球员 一个 赛季 得分 不到 3 分	什么 球员 在 一个 赛季 中 得分 超过 或 少于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 洛杉矶 队 的 球员 洛杉矶 湖人队 的 比赛 数量	科比 - 布莱恩特 一个 赛季 的 比赛 次数 ， 他 的 球队 是 洛杉矶 湖人队	洛杉矶 湖人队 球员 科比 · 布莱恩特 一个 赛季 的 上场 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
在 一个 赛季 中 比 科比 布莱恩特 少 抢断 的 球员	在 一个 赛季 中 抢断 次数 少于 科比 的 球员	一个 赛季 抢断 比 科比 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
作为 一名 湖人队 ， 每 赛季 平均 有 多少 次 抢断	作为 一个 湖人 球员 科比 每个 赛季 平均 有 多少 次 抢断	作为 一个 湖人 球员 ， 科比 平均 每个 赛季 抢断 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
平均 每 赛季 抢断 次数 比 科比 布莱恩特 少	平均 每个 赛季 的 抢断 次数 比 科比 还少	平均 每个 赛季 谁 的 抢断 数比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 犯 了 最 多 的 犯规	谁 犯规 最 多	谁 犯规 次数 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 有 3 个 盖帽 的 赛季 中 ， 有 多少 次 抢断 归因于 科比 · 布莱恩特	本赛季 他 有 3 个 盖帽 ， 有 多少 次 抢断 是 科比 的 功劳	在 这个 赛季 ， 他 有 3 次 盖帽 ， 这要 归功于 科比	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_steals ) ) )
什么 球员 在 一个 赛季 只 参加 过 一场 或 两场 比赛	哪个 球员 一个 赛季 只 打 了 一两场 比赛	哪个 球员 一个 赛季 只 打 了 一两场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一个 赛季 担任 控球 后卫 时犯 了 多少 失误	科比 作为 控球 后卫 一个 赛季 有 多少 失误	作为 控球 后卫 ， 科比 一个 赛季 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
在 3 次 抢断 后 ， 科比 · 布莱恩特 犯 了 多少 次 犯规	科比 在 三次 抢断 后 犯规 了 多少 次	科比 抢断 3 次后 犯规 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_fouls ) ) )
科比 布莱恩特 在 本赛季 取得 了 多少 次 抢断 ， 他 有 3 次 助攻	科比 本赛季 3 次 助攻 的 抢断 次数	本赛季 科比 3 次 助攻 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
2004 年 常规赛 期间 科比 布莱恩特 放弃 了 多少 失误	2004 年 常规赛 科比 放弃 了 多少 次 失误	科比 在 2004 年 常规赛 中 放弃 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
什么 球员 整个 赛季 犯规 次数 最少	哪个 球员 全 赛季 犯规 最少	哪个 球员 本赛季 犯规 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 洛杉矶 湖人队 的 球员 科比 布莱恩特 的 赛季	洛杉矶 湖人队 科比 - 布莱恩特 的 赛季	洛杉矶 湖人队 球员 科比 · 布莱恩特 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
科比 布莱恩特 为 洛杉矶 湖人队 效力 的 位置	科比 布莱恩特 在 洛杉矶 湖人队 打 什么 位置	科比 在 洛杉矶 湖人队 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
在 2004 赛季 ， 科比 布莱恩特 打 了 几场 比赛	科比 在 2004 赛季 打 了 多少 场 比赛	科比 在 2004 赛季 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
科比 布莱恩特 有 3 次 失误 时有 多少 次 抢断	科比 有 3 次 失误 ， 他 有 多少 次 抢断 ？	当 科比 有 3 次 失误 时 ， 他 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
当 科比 布莱恩特 犯 3 次 犯规 时 ， 他 的 位置 是 什么 ？	科比 三次 犯规 的 位置 是 什么	当 科比 犯规 3 次时 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
多少 个 赛季 科比 打 了 超过 3 场 比赛 ， 他 的 职业生涯 反弹 总数 是 多少	科比 打 了 多少 个 赛季 超过 3 场 比赛 ， 他 的 职业生涯 反弹 总数 是 多少	科比 有 多少 个 赛季 超过 3 场 比赛 ， 他 的 职业生涯 总 篮板 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_rebounds ) ) )
什么 球员 在 整个 赛季 最多 有 3 场 比赛	哪个 球员 整个 赛季 最多 打 了 3 场 比赛	哪个 球员 整个 赛季 最多 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 3 次 抢断 的 赛季 中 ， 科比 布莱恩特 有 多少 次 盖帽	在 三次 以上 抢断 的 赛季 里 科比 有 多少 个 盖帽	在 3 次 以上 抢断 的 赛季 中 ， 科比 能 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
命名 一名 本赛季 不 超过 3 个 篮板 的 球员	说出 一个 本赛季 不 超过 三个 篮板 的 球员	说出 一个 本赛季 篮板 不 超过 3 个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 了 多少 失误	科比 有 多少 失误	科比 有 多少 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
今年 科比 布莱恩特 将会 是 什么样 的 球队	今年 科比 将 参加 哪支 球队	科比 今年 会 是 哪支 球队 呢	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
2004 年 科比 布莱恩特 获得 了 多少 失误	科比 在 2004 年 有 多少 次 失误	科比 在 2004 年 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 3 个 失误 的 位置	科比 的 三次 失误 是 什么 位置	科比 在 什么 位置 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
有 三个 街区 的 科比 布莱恩特 有 多少 篮板球	三个 盖帽 的 科比 布莱恩特 有 多少 个 篮板	3 个 盖帽 的 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_rebounds ) ) )
哪位 球员 为 大多数 球队 效力	哪个 球员 为 大多数 球队 效力 过	哪个 球员 为 最 多 的 球队 效力	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 一个 赛季 的 篮板 数	球员 科比 布莱恩 一个 赛季 的 篮板 数	球员 科比 · 布莱恩特 一个 赛季 的 篮板 数	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
哪个 球员 比 科比 布莱恩特 有 更 多 分数	哪个 球员 比 科比 得分多	哪个 球员 得分 比 科比 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 洛杉矶 队 湖人队 的 球员 科比 布莱恩特 抢断 数量	洛杉矶 湖人队 科比 - 布莱恩特 一个 赛季 的 抢断 次数	洛杉矶 湖人队 一个 赛季 的 抢断 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_steals ) ) )
什么 球员 有 超过 3 个 全 季节 块	哪个 球员 在 整个 赛季 有 3 个 以上 的 禁区	什么 球员 赛季 盖帽 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 得到 3 分 的 时候 有 多少 篮板	科比 一个 赛季 拿下 3 分时 ， 他 能 得到 多少 个 篮板	当 科比 一个 赛季 得到 3 分 的 时候 ， 他 能 抢下 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
一个 赛季 球员 科比 布莱恩特 在 一个 赛季 中有 3 次 犯规 抢断 次数	科比 - 布莱恩特 一个 赛季 3 次 犯规 的 抢断 次数	科比 · 布莱恩特 一个 赛季 抢断 的 次数 ， 一个 赛季 有 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_steals ) ) )
在 3 次 失误 之后 ， 科比 布莱恩特 得到 了 多少 次 助攻	科比 在 3 次 失误 后 得到 了 多少 次 助攻	3 次 失误 之后 科比 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
一个 玩家 少玩 的 玩家 比 科比 布莱恩特	一个 比 科比 打得少 的 球员	谁 能比 科比 打得少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 位置 最少	哪个 球员 的 位置 最少	哪个 球员 的 位置 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 赛季 期间 ， 科比 布莱恩特 获得 了 多少 失误	在 2004 赛季 科比 有 多少 失误	在 2004 赛季 ， 科比 得到 了 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
当 她 本赛季 三次 失误 时 ， 科比 的 位置 是 什么	当 科比 本赛季 有 三次 换人 时 ， 她 在 哪个 位置	当 科比 本赛季 有 三次 失误 的 时候 ， 她 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
什么 季节 科比 布莱恩特 为 拉 湖人队 效力	科比 · 布莱恩特 为 湖人队 效力 的 赛季	科比 为 洛杉矶 湖人队 效力 了 几个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
什么 是 洛杉矶 湖人队 的 科比 布莱恩特 的 位置	科比 在 湖人队 的 位置 是 什么	科比 在 湖人队 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string position ) ) )
本赛季 球员 的 失误 少于 3 次	哪些 球员 本赛季 失误 少于 3 次	什么 球员 本赛季 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string ! = ) ( number 3 turnover ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 玩家 获得 了 最大 数量 的 棋子	哪 一个 玩家 的 积木 数是 最大 的	哪位 球员 盖帽 数最多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 得到 3 分时 有 多少 失误	科比 拿下 3 分时 有 多少 失误	当 科比 得到 3 分 的 时候 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
有 多少 职位	有 多少 个 职位	有 多少 个 职位	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.position ) ( string ! type ) ) ) )
一个 赛季 没有 比 科比 布莱恩特 更 多 篮板球 的 球员	在 一个 赛季 里 没有 比 科比 更 多 篮板 的 球员	一个 赛季 没有 比 科比 抢下 更 多 篮板 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
2004 赛季 球员 科比 布莱恩特 的 位置	2004 赛季 科比 的 位置	2004 年 赛季 科比 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
科比 布莱恩特 有 多少 篮板球	科比 有 多少 个 篮板	科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 抢断	科比 - 布莱恩特 一个 赛季 3 次 抢断	一个 赛季 抢断 3 次 的 科比	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string team ) ) )
说出 一名 2004 年 没 参加 比赛 的 球员	说出 一个 2004 年 没有 参加 比赛 的 球员 的 名字	说出 一个 2004 年 没有 参加 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
命名 一名 助攻 一个 赛季 的 球员 至少 与 科比 布莱恩特 相同	说出 一个 单 赛季 助攻 的 球员 至少 和 科比 布莱恩特 一样	说出 一个 在 一个 赛季 中 助攻 的 球员 至少 和 科比 · 布莱恩特 是 一样 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球队 为 科比 布莱恩特 效力	科比 为 哪支 球队 效力	科比 为 哪支 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string team ) ) )
每个 赛季 平均 每场 不 超过 3 个 篮板球	平均 每个 赛季 不 超过 3 个 篮板	他 每个 赛季 平均 只有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 个 犯规 中 的 平均 得分 是 多少 分	科比 在 三次 犯规 的 赛季 中 平均 得分 是 多少	科比 平均 每个 赛季 3 次 犯规 得到 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_points ) ) )
什么 是 科比 布莱恩特 队	什么 是 科比 布莱恩 茨队	科比 · 布莱恩特 的 球队 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ) )
将 那些 在 任何 一个 赛季 中有 篮板球 的 球员 命名 为 等于 3 的 球员	说出 那些 一个 赛季 篮板 数 少于 3 的 球员	说出 那些 在 任何 一个 赛季 的 篮板 数都 少于 3 个 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 持有 两个 或 更 少 的 位置	什么样 的 球员 拥有 两个 或 更 少 的 位置	什么 玩家 持有 两个 或 两个 以下 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 本赛季 他 平均 三个 盖帽 让 科比 队 效力 于 什么 球队	科比 在 本赛季 为 哪支 球队 效力 ？ 他 平均 三个 盖帽	科比 在 这个 赛季 为 哪支 球队 效力 ? 他场 均 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string team ) ) )
科比 布莱恩特 有 3 个 抢断 时 助攻 总数 是 多少	当 科比 有 3 次 抢断 时 ， 他 一个 赛季 的 助攻 总数 是 多少 ？	当 科比 抢断 3 次时 ， 他 一个 赛季 的 总 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
科比 布莱恩特 本赛季 的 助攻 有 3 次 助攻	科比 本赛季 的 助攻 他 有 3 次 助攻	科比 本赛季 的 助攻 数是 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
与 科比 布莱恩特 相比 ， 失误 次数 少于 或 少于 同一 数量 的 人	他 和 科比 的 失误 次数 不到 或 相同	谁 的 失误 次数 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 本赛季 ， 科比 布莱恩特 有 3 次 助攻 ， 他 打 了 多少 场 比赛	在 科比 - 布莱恩特 三次 助攻 的 赛季 里 他 打 了 多少 场 比赛	本赛季 科比 3 次 助攻 ， 他 参加 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_games_played ) ) )
什么 球员 整个 赛季 的 抢断 最少	哪个 球员 整个 赛季 的 抢断 次数 最少	哪个 球员 的 抢断 数是 整个 赛季 最少 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 那些 在 任何 一个 特定 赛季 中 犯规 总数 小于 3 的 球员 命名 为	说出 在 任何 一个 赛季 中 犯规 总数 少于 3 次 的 球员	说出 那些 在 某 一 特定 赛季 总 犯规 次数 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 次 助攻 时 ， 有 多少 失误	科比 有 3 次 助攻 时有 多少 失误	当 科比 有 3 次 助攻 时 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
谁 与 科比 布莱恩特 有 同样 或 更 多 的 抢断	他 和 科比 有 相同 或 更 多 的 抢断	谁 的 抢断 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 一个 控球 后卫 的 赛季 中 得分	科比 · 布莱恩特 在 控卫 生涯 中 的 得分	科比 在 一个 赛季 中 担任 控球 后卫	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
本赛季 球员 的 比赛 数量 与 比 科比 相同 或 更 多	本赛季 哪些 球员 比 科比 打 了 同样 数量 或 更 多 的 比赛	本赛季 有 哪些 球员 比 科比 打 了 同样 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 为 任何 一支 球队 效力 时 ， 每个 赛季 场均 3 个 篮板	科比 - 布莱恩特 在 为 任何 球队 效力 时 ， 一个 赛季 平均 有 3 个 篮板 吗 ？	科比 · 布莱恩特 在 任何 球队 都 能场 均 3 个 篮板 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
当 科比 布莱恩特 在 一个 赛季 中有 2 个 盖帽 时 ， 他 制造 了 多少 失误	当 科比 布莱恩特 一个 赛季 有 两个 盖帽 时 ， 他 有 多少 失误	当 科比 一个 赛季 有 2 个 盖帽 时 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_turnovers ) ) )
什么 球员 在 2004 赛季 没有 参加 比赛	2004 赛季 哪些 球员 没有 上场	哪些 球员 在 2004 赛季 没有 参加 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 失误 最多 的 球员	一个 赛季 中 失误 最多 的 球员	一个 赛季 失误 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 抢断 次数 最多 的 球员	一个 赛季 中 抢断 次数 最多 的 球员	一个 赛季 抢断 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 个 盖帽 的 球员 科比 布莱恩特 赛季 的 得 分数	科比 - 布莱恩特 一个 赛季 有 3 个 盖帽 的 得分	科比 在 一个 赛季 中 得到 3 个 盖帽 的 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
在 赛季 中 得分 与 科比 相同 或 更 少 的 球员	本赛季 得分 与 科比 相同 或 更 少 的 球员	在 赛季 中 得分 与 科比 相同 或 更 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 3 场 比赛 的 位置 是 什么	科比 在 什么 位置 打 了 3 场 比赛	科比 以 什么 位置 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
科比 布莱恩特 做 了 多少 次 抢断	科比 · 布莱恩特 偷 了 多少 次球	科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
哪支 球队 做 了 3 次 助攻 ， 科比 布莱恩特 上场	科比 · 布莱恩特 为 哪支 球队 助攻 三次	科比 在 哪个 队有 三次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string team ) ) )
四季 都 有 超过 3 次 失误 的 球员	所有 赛季 失误 超过 3 次 的 球员	球员 在 整个 赛季 有 超过 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 打 3 场 比赛 的 位置 是 什么 ？	科比 本赛季 打 了 3 场 比赛 ， 他 的 位置 是 什么	科比 在 本赛季 打 了 三场 比赛 ， 他 的 地位 如何	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string position ) ) )
这是 本赛季 科比 布莱恩特 造成 3 次 犯规	这个 赛季 科比 布莱恩特 犯规 3 次	哪个 赛季 科比 犯规 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
科比 布莱恩特 在 2004 赛季 取得 了 多少 失误	科比 在 2004 赛季 有 多少 失误	科比 在 2004 赛季 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_turnovers ) ) )
科比 布莱恩特 有 多少 助攻 谁 有 三个 篮板球	科比 有 多少 次 助攻 ， 他 有 三个 篮板	科比 有 多少 次 助攻 ， 他 有 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
在 哪个 赛季 科比 得到 3 次 抢断	科比 在 哪个 赛季 得到 了 3 次 抢断	哪个 赛季 科比 得到 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
一个 赛季 没有 比 球员 科比 布莱恩特 打得 更 多 比赛 的 球员	在 一个 赛季 中 没有 比 科比 更 多 比赛 的 球员	一个 赛季 没有 比 科比 打更 多 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 在 2004 年 或 2010 年 参赛	哪个 球员 在 2004 年 或 2010 年 打 过球	2004 年 和 2010 年 哪个 球员 参加 了 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 得分 得分 的 每 赛季 平均值 ， 而 科比 布莱恩特 是 控球 后卫	科比 · 布莱恩特 担任 控球 后卫 时 ， 每个 赛季 平均 得分 是 多少 ？	当 科比 还是 控球 后卫 的 时候 ， 他 每个 赛季 的 平均 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_points ) ) )
科比 布莱恩特 在 一个 赛季 犯 了 多少 盖帽 ， 他 犯 了 3 个 犯规	科比 在 一个 三次 犯规 的 赛季 里 ， 一共 制造 了 多少 个 盖帽	科比 在 一个 赛季 中有 3 次 犯规 ， 他 一共 盖帽 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_blocks ) ) )
什么 是 玩家 的 数量	玩家 的 号码 是 多少	玩家 的 号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
每个 赛季 他们 都 有 与 科比 相同 数量 的 犯规	他们 每个 赛季 的 犯规 次数 都 和 科比 一样 多	他们 每个 赛季 的 犯规 次数 都 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 拥有 最少 的 科比 布莱恩特 点数	哪个 球员 得分 最少	哪个 球员 的 得分 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 那些 在 任何 一个 赛季 中 都 有 得分 的 球员 命名 为 小于 或 大于 3	说出 任何 一个 赛季 得分 低于 或 超过 3 分 的 球员	说出 在 任何 一个 赛季 得分 低于 或 高于 3 分 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string ! = ) ( number 3 point ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 控球 后卫 位置 上 得到 了 多少 助攻	科比 在 控卫 的 位置 上 得到 了 多少 次 助攻	当 科比 担任 控球 后卫 时 ， 他 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_assists ) ) )
本赛季 与 科比 布莱恩特 的 得分 相同 或 更少	他 本赛季 的 得分 和 科比 差不多	谁 在 这个 赛季 的 得分 和 科比 一样 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中将 科比 布莱恩特 的 季后赛 得分 最高	哪位 球员 平了 科比 布莱恩 茨 单 赛季 最高 的 赛季 得分	哪个 球员 追平 了 科比 布莱恩特 单 赛季 最高 的 赛季 得分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
找到 在 任何 一个 赛季 都 有 过 盖帽 的 球员 与 任何 一个 赛季 由 科比 布莱恩特 执行 的 盖帽 相同 的 数量	找出 在 任何 一个 赛季 中 完成 拦网 的 球员 ， 其 数量 与 科比 在 任何 一个 赛季 中 完成 拦网 的 数量 相同	找出 在 任何 一个 赛季 中 盖帽 次数 与 科比 在 任何 一个 赛季 中 盖帽 次数 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 取得 了 多少 失误 ， 他 取得 了 3 分	科比 - 布莱恩特 本赛季 有 多少 次 失误 ， 他 得 了 3 分	科比 这个 赛季 3 分 的 失误 有 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_turnovers ) ) )
科比 布莱恩特 在 3 个 篮板 后 得分 多少 分	科比 在 3 个 篮板 后 得 了 多少 分	科比 在 3 个 篮板 之后 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_points ) ) )
哪个 球员 在 本赛季 的 得分 与 科比 布莱恩特 相同	哪个 球员 的 得分 和 科比 一样	哪个 球员 在 这个 赛季 的 得分 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 有 3 次 失误 ， 有 多少 篮板球	科比 一个 赛季 有 几个 篮板 3 次 失误	一个 赛季 有 3 次 失误 的 科比 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
在 一个 赛季 中 ， 科比 布莱恩特 有 多少 犯规 超过 三次 助攻	科比 在 一个 赛季 中有 多少 次 犯规 超过 三次 助攻	科比 一个 赛季 有 多少 次 犯规 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
哪个 球员 在 一个 赛季 中 得分 比 科比 布莱恩特 多	哪个 球员 一个 赛季 得分 比 科比 还 多	哪个 球员 在 一个 赛季 中 得分 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 篮板球	科比 抢 了 多少 篮板	科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
在 所有 赛季 中 ， 与 科比 布莱恩特 队 比赛 次数 相同 的 球员	与 科比 布莱恩特 在 整个 赛季 的 比赛 次数 相同 的 球员	和 科比 一样 打 了 所有 赛季 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 本赛季 的 位置 是 3 次 失误	科比 在 本赛季 的 位置 是 什么 ？ 他 三次 失误	科比 在 这个 失误 三次 的 赛季 中 处于 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
哪位 球员 打 了 3 次 以上 的 犯规	哪个 球员 犯规 超过 3 次	哪个 球员 犯规 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 球员 的 三次 犯规 超过 三次	什么 球员 一个 赛季 犯规 超过 三次	什么 球员 在 一个 赛季 中 犯规 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 街区	科比 有 多少 个 盖帽	科比 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) )
科比 布莱恩特 有 多少 失误	科比 有 多少 失误	科比 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
本赛季 哪位 球员 的 助攻 数 不 超过 3 次	哪个 球员 本赛季 助攻 不 超过 三次	哪个 球员 本赛季 的 助攻 数 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 在 一个 赛季 中 打出 了 创纪录 的 比赛 数	他 在 一个 赛季 中 打 了 创纪录 的 比赛	谁 创造 了 一个 赛季 上场比赛 的 记录	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 在 一个 赛季 中 打 不到 三场 比赛 时 ， 他 是 什么 球队	当 科比 一个 赛季 只 打 了 不到 三场 比赛 时 ， 他 是 哪支 球队 的 ？	当 科比 一个 赛季 只 打 了 不到 三场 比赛 的 时候 ， 他 是 哪个 球队 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string team ) ) )
科比 · 布莱恩特 为 洛杉矶 湖人队 打 了 几场 比赛	科比 · 布莱恩特 为 洛杉矶 湖人队 打 了 多少 场 比赛	科比 为 洛杉矶 湖人队 打 了 几场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
在 科比 布莱恩特 在 3 场 比赛 中有 比赛 时间 的 那个 赛季 ， 他 负责 的 助攻 数是 多少	在 科比 布莱恩特 在 3 场 比赛 中有 比赛 时间 的 那个 赛季 ， 他 有 多少 次 助攻	在 本赛季 科比 有 3 场 比赛 的 时候 ， 他 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
什么 是 科比 布莱恩特 赛季 的 平均 成交量	科比 布莱恩特 赛季 平均 营业额	科比 · 布莱恩特 赛季 的 平均 交易 率 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) )
什么 球员 在 一个 赛季 中 抢断 最 多	哪个 球员 在 一个 赛季 里 偷球 最 多	哪个 球员 在 一个 赛季 中 抢断 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 哪一年 得到 三分	科比 布莱恩 茨 在 哪一年 总共 得到 三分	哪一年 科比 布莱恩特 的 总得分 是 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
找到 那些 参加 比赛 的 玩家 小于 kobe   bryant 玩游戏 时间 的 游戏 数量	找出 那些 参加 的 比赛 次数 少于 科比 的 比赛 次数 的 球员	找出 那些 参加 比赛 的 场次 少于 科比 的 场次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 得到 3 分时 ， 他 犯 了 多少 次 犯规	科比 拿下 3 分时 犯规 了 多少 次	当 科比 得到 3 分时 ， 他 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
本赛季 控球 后卫 科比 布莱恩特 有 多少 次 抢断	控卫 科比 - 布莱恩特 本赛季 有 多少 次 抢断	控球 后卫 科比 · 布莱恩特 这个 赛季 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
说出 一个 比 kobe   bryant 拥有 更 多 积木 的 球员	说出 一个 比 科比 有 更 多 盖帽 的 球员	说出 一个 比 科比 盖帽 更 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 失误 的 位置	科比 - 布莱恩特 一个 赛季 有 3 次 失误 的 位置	科比 的 位置 ， 一个 赛季 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
什么 球员 的 积分 比 科比 布莱恩特 的 积分 多 3 分	哪个 球员 的 盖帽 数比 科比 多 3 分	还有 什么 球员 能比 科比 - 布莱恩特 得到 更 多 的 盖帽 呢	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_points ) ) )
球员 科比 布莱恩特 队 在 一个 赛季 中 得到 3 分	一个 赛季 拿下 3 分 的 科比 - 布莱恩特 队	球队 球员 科比 · 布莱恩特 一个 赛季 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string team ) ) )
科比 布莱恩特 队 本赛季 有 3 个 篮板球	科比 布莱恩特 队 本赛季 有 3 个 篮板	科比 · 布莱恩特 本赛季 抢下 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string team ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 三分 助攻	科比 一个 赛季 有 多少 次 三分 助攻	科比 一个 赛季 有 多少 次 三分 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 2004 赛季 做出 了 多少 助攻	科比 在 2004 赛季 助攻 了 多少 次	科比 在 2004 赛季 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_assists ) ) )
什么 球员 的 位置 最少	哪个 球员 的 位置 最少	哪个 球员 打 了 最少 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 整个 赛季 都 有 3 次 助攻	哪个 球员 整个 赛季 的 助攻 都 在 3 次 以下	什么 球员 整个 赛季 只有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 助攻 时 的 表现 如何	科比 助攻 三次 时 ， 他 在 哪个 位置 打球	当 科比 送 出 三次 助攻 时 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string position ) ) )
科比 布莱恩特 在 哪个 季节 做出 3 次 助攻	科比 在 哪个 赛季 助攻 3 次	科比 在 哪个 赛季 都 有 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string season ) ) )
谁 的 失误 少于 3 次	不到 三次 失误	谁 失误 次数 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 科比 布莱恩特 获得 了 多少 积分	科比 这个 赛季 得 了 多少 分	这个 赛季 科比 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
科比 布莱恩特 在 他 的 所有 赛季 积分 均 为 3 分时 的 位置	当 科比 的 全 赛季 积分 达到 3 分时 ， 他 在 哪个 位置 打球	当 科比 的 所有 赛季 积分 都 是 3 分 的 时候 ， 他 是 在 什么 位置 上 的 呢	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
谁 失误 最 多	谁 的 失误 最 多	谁 失误 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 的 得分 低于 科比 布莱恩特	哪个 球员 本赛季 得分 比 科比 少	哪个 球员 在 本赛季 得分 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 任何 一个 赛季 中 找到 一个 3 个 或 更少 积木 的 球员	找 一个 在 任何 一个 赛季 中有 3 个 或 更少 盖帽 的 球员	找到 一个 在 任何 一个 赛季 拥有 3 个 或 更少 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 科比 布莱恩特 的 失误 次数 为 3 次	本赛季 科比 - 布莱恩特 的 失误 次数 是 3 次	本赛季 科比 的 失误 次数 是 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_turnovers ) ) )
什么 球员 至少 与 科比 布莱恩特 一样 多 的 赛季 积分	哪个 球员 的 赛季 积分 至少 和 科比 一样 多	有 哪个 球员 的 赛季 积分 能 和 科比 一样 多 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 打 了 3 场 或 更 少 的 比赛	玩过 3 次 或 更少 游戏 的 人	谁 玩 过 3 次 或 更 少 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 助攻 最多为 3 的 球员	一个 赛季 助攻 最多 3 次 的 球员	一个 赛季 的 助攻 不 超过 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 抢断 少于 三次 的 球员	一个 赛季 只有 不到 三次 抢断 的 球员	一个 赛季 抢断 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中 在 控卫 位置 上 打 了 多少 场 比赛	科比 一个 赛季 在 控卫 位置 上 打 了 多少 场 比赛	科比 一个 赛季 在 控卫 位置 上 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_games_played ) ) )
科比 布莱恩特 在 一个 赛季 中 打 了 多少 场 比赛 ， 他 拿下 了 3 分	科比 一个 赛季 打 了 多少 场 比赛 ， 他 得 了 3 分	科比 在 一个 赛季 中 打 了 多少 场 3 分 的 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
2004 年 球员 比 科比 布莱恩特 得分 更 多	2004 年 哪些 球员 的 得分 比 科比 高	还有 什么 球员 比 科比 在 2004 年 的 得分 还 多 呢	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_points ) ) )
3 次 失误 之后 ， 科比 布莱恩特 得到 了 多少 篮板球	科比 在 3 次 失误 后 得到 了 多少 个 篮板	3 次 失误 之后 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_rebounds ) ) )
一个 赛季 的 盖帽 数量 不 低于 一个 赛季 球员 科比 布莱恩特 的 盖帽 数量	一个 赛季 的 盖帽 数 不少 于 科比 一个 赛季 的 盖帽 数 的 球员	一个 赛季 盖帽 数 不 低于 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 在 本赛季 只有 3 次 失误 就 有 多少 次 抢断	科比 在 本赛季 只有 3 次 失误 的 情况 下 抢断 了 多少 次	在 这个 只有 3 次 失误 的 赛季 中 ， 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_steals ) ) )
什么 是 科比 布莱恩特 全季 总分	科比 布莱恩特 全 赛季 总 积分 是 多少	科比 · 布莱恩特 整个 赛季 的 总得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
在 赛季 期间 ， 哪个 牌手 制造 了 最 少量 的 积木	哪 一个 台板 在 这个 季节 的 积木 最少 ？	哪个 球员 在 赛季 中 盖帽 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 没有 打 3 场 比赛	哪个 玩家 没有 玩 3 个 游戏	什么 玩家 不玩 3 个 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string ! = ) ( number 3 game ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 赛季 中 得分 不到 4 分	哪个 球员 一个 赛季 得分 不到 4 分	什么 球员 在 一个 赛季 中 得分 低于 4 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 3 场 比赛 中 造成 了 多少 失误	科比 在 3 场 比赛 中 失误 了 多少 次	科比 在 3 场 比赛 中有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_turnovers ) ) )
将 球员 命名 为 每 赛季 比 科比 布莱恩特 更 多 失误	说出 每个 赛季 失误 次数 比 科比 多 的 球员	说出 一个 赛季 失误 比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 失误 ， 他 有 3 个 篮板	科比 一个 赛季 有 多少 失误 他 有 3 个 篮板	科比 一个 赛季 有 3 个 篮板 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_turnovers ) ) )
科比 · 布莱恩特 在 全场 比赛 中 得到 了 3 分 的 助攻 数	科比 整个 赛季 有 多少 次 助攻 ， 当时 也 有 3 分	科比 在 本赛季 得到 3 分 的 时候 ， 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
在 他 的 洛杉矶 湖人 赛季 期间 ， 科比 布莱恩特 有 多少 篮板球	在 他 洛杉矶 湖人队 的 赛季 里 科比 有 多少 个 篮板	在 他 的 洛杉矶 湖人队 赛季 中 ， 科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_rebounds ) ) )
科比 布莱恩特 在 赛季 中有 3 次 抢断 ， 平均 有 3 次 助攻	科比 在 本赛季 平均 三次 助攻 时有 多少 次 抢断	在 本赛季 平均 3 次 助攻 的 情况 下 ， 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_steals ) ) )
科比 布莱恩特 在 哪个 赛季 取得 了 3 个 盖帽	在 哪个 赛季 科比 布莱恩特 制造 了 3 个 盖帽	在 这 几个 赛季 中 ， 科比 一共 盖帽 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string season ) ) )
一个 赛季 的 积分 数 与 一个 赛季 球员 科比 布莱恩特 积分 相同 的 球员	一个 赛季 得分 和 科比 相同 的 球员	一个 赛季 的 得分 和 科比 · 布莱恩特 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_points ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
将 与 kobe   bryant 相同 数量 的 块 命名 为 玩家	说出 一个 和 科比 · 布莱恩特 有 相同 盖帽 数 的 球员	说出 一个 和 科比 一样 盖帽 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 本赛季 为 这些 湖人队 造成 了 多少 失误	科比 - 布莱恩特 这个 赛季 在 湖人队 有 多少 失误	科比 这个 赛季 为 湖人队 失误 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
玩家 最多 在 两个 位置 上玩过 什么	什么 球员 最多 打过 两个 位置	什么 球员 最多 打 两个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 失误 少于 3 次	哪个 球员 的 失误 少于 3 次	什么 球员 失误 少于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 都 有 超过 3 次 助攻	每个 赛季 有 超过 3 次 助攻	他 每个 赛季 都 能 得到 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
来自 洛杉矶 队 湖人队 的 球员 科比 布莱恩特 的 失误 次数	洛杉矶 湖人队 科比 - 布莱恩特 一个 赛季 的 失误 次数	洛杉矶 湖人队 球员 科比 · 布莱恩特 一个 赛季 的 失误 次数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 布莱恩特 只有 三分 的 助攻 总数 是 多少	科比 只有 三分 的 赛季 助攻 总数 是 多少 ？	在 科比 只有 3 分 的 赛季 中 ， 他 的 总 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
什么 是 球员 科比 布莱恩特 的 数量	科比 的 号码 是 多少	科比 的 号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
科比 布莱恩特 在 一个 赛季 造成 3 次 失误 的 助攻 数量 上 有 多少 助攻	科比 在 一个 赛季 中 3 次 失误 的 助攻 次数	科比 在 一个 失误 三次 的 赛季 里 助攻 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
3 场 比赛 后 科比 布莱恩特 有 多少 次 助攻	科比 在 3 场 比赛 后 有 多少 次 助攻	科比 在 3 场 比赛 后 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
谁 有 相当于 或 超过 3 次 失误	三次 以上 失误	谁 的 失误 次数 等于 或 多于 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断 作为 控球 后卫	科比 · 布莱恩特 作为 控卫有 多少 次 抢断	作为 控球 后卫 ， 科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_steals ) ) )
当 科比 布莱恩特 的 全季 失误 等于 3 时 ， 科比 布莱恩特 的 表现 如何	当 科比 整个 赛季 的 失误 率 达到 3 平时 ， 他 在 哪个 位置 上 打球 ？	当 科比 整个 赛季 的 失误 达到 3 次 的 时候 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
谁 有 超过 3 次 抢断	偷 了 三次 以上	谁 抢断 超过 3 次	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 一个 不 等于 三个 赛季 的 总 篮板 数	什么 球员 一个 赛季 的 篮板 总数 不 等于 三个	什么 球员 一个 赛季 的 篮板 总数 不 等于 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那里 有 多少 队	有 多少 队	有 多少 个队	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.team ) ( string ! type ) ) ) )
谁 在 一个 赛季 中 打 了 3 场 以上 的 比赛	一个 赛季 打 了 3 场 以上	谁 一个 赛季 打 了 3 场 以上	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 在 与 科比 布莱恩特 相同 的 赛季 中 出场	哪个 球员 和 科比 在 同一个 赛季 打过 球	哪个 球员 和 科比 · 布莱恩特 在 同一个 赛季 打球	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string season ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 打 了 3 场 比赛	科比 打 了 三场 比赛	科比 打 了 三场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_games_played ) ) )
谁 打 了 3 场 或 更 多场 比赛	玩过 3 次 或 更 多 游戏 的 人	谁 玩 过 3 次 或 更 多 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 打 不到 3 场 比赛 的 球员	一个 赛季 只 打 了 不到 3 场 比赛 的 球员	一个 赛季 上场 少于 3 场 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 球队 数量 最少	哪个 队员 在 队里 人数 最少	哪个 队员 的 人数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 打 了 不到 三场 比赛	哪个 玩家 玩 了 不到 三个 游戏	哪个 球员 上场 少于 三场	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 三次 失误 时有 多少 助攻	科比 三次 失误 时有 多少 次 助攻	当 科比 失误 三次 时 ， 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_assists ) ) )
谁 犯 了 3 次 或 更 多 的 犯规	三次 以上 犯规	谁 有 超过 或 等于 3 次 犯规	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 场 比赛 让 科比 布莱恩特 出场 失误	科比 · 布莱恩特 有 几场 比赛 失误	科比 打 了 多少 场有 失误 的 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
哪个 赛季 科比 布莱恩特 打 了 3 场 比赛	科比 在 哪个 赛季 打 了 3 场 比赛	科比 哪个 赛季 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string season ) ) )
什么 年度 科比 布莱恩特 有 3 次 抢断	科比 在 哪一年 有 3 次 抢断	哪一年 科比 有 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string season ) ) )
一个 赛季 最多 有 3 次 失误 的 球员	一个 赛季 最 多 失误 3 次 的 球员	一个 赛季 最多 有 3 次 失误 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 犯规 次数 与 科比 布莱恩特 相同	哪个 球员 的 犯规 次数 和 科比 相同	哪个 球员 的 犯规 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_fouls ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
无论是 洛杉矶 湖人队 还是 克利夫兰 骑士队	不是 洛杉矶 湖人队 就是 克利夫兰 骑士队	要么 是 洛杉矶 湖人队 ， 要么 是 克利夫兰 骑士队	( call SW.listValue ( call SW.concat en.team.lakers en.team.cavaliers ) )
他们 在 一个 赛季 中 获得 了 大多数 篮板球 的 记录	谁 创下 了 一个 赛季 篮板 最多 的 纪录	谁 创造 了 单 赛季 篮板 最多 的 记录	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 助攻	科比 有 多少 次 助攻	科比 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_assists ) ) )
什么 时候 科比 布莱恩特 出场	科比 什么 时候 打球 的	科比 什么 时候 打球	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ) )
什么 球员 比 科比 布莱恩特 有 更 少 的 抢断	什么 球员 的 抢断 比 科比 少	什么 球员 的 抢断 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 犯规 3 次 犯规 时 的 位置	科比 在 一个 赛季 中 犯规 3 次时 处于 什么 位置	当 科比 在 一个 赛季 中 犯规 3 次时 ， 他 处于 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string position ) ) )
湖人 或 骑士队 中有 多少 球员	湖人 或 骑士队 有 多少 球员	有 多少 球员 曾经 效力 过 湖人 或 骑士	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最少 的 抢断 数	哪个 球员 的 抢断 次数 最少	哪个 球员 的 抢断 次数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 中 ， 所有 球员 都 拥有 与 科比 布莱恩特 相同 的 比赛	什么 球员 在 整个 赛季 的 表现 都 和 科比 一样	有 哪些 球员 在 整个 赛季 中 都 能 和 科比 打 同样 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 2004 赛季 ， 科比 布莱恩特 队 参加 了 比赛	2004 赛季 科比 在 哪支 球队 打球	科比 · 布莱恩特 2004 年 赛季 效力 于 哪支 球队	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
什么 球员 与 科比 布莱恩特 的 位置 相同	哪个 球员 的 位置 和 科比 一样	什么 球员 和 科比 · 布莱恩特 打 同一个 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 3 个 篮板球 时有 多少 次 犯规	科比 有 3 个 篮板 的 时候 犯规 了 多少 次	科比 抢下 3 个 篮板 时 犯规 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_fouls ) ) )
科比 布莱恩特 对 洛杉矶 湖人 有 多少 失误	科比 - 布莱恩特 在 洛杉矶 湖人队 有 多少 失误	科比 在 湖人 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_turnovers ) ) )
科比 布莱恩特 在 一个 赛季 中有 3 次 助攻 失误 多少 次	科比 一个 赛季 有 多少 失误 ， 他 有 3 次 助攻	科比 一个 赛季 有 3 次 助攻 ， 他 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
哪个 球员 至少 有 3 次 失误	哪个 球员 至少 有 3 次 失误	哪个 球员 至少 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
到 目前为止 ， 本赛季 科比 布莱恩特 得到 了 多少 助攻	到 目前为止 科比 这个 赛季 有 多少 次 助攻	到 目前为止 ， 科比 本赛季 得到 了 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) )
科比 布莱恩特 有 多少 个 赛季 不 超过 3 次 助攻	科比 有 多少 个 赛季 没有 超过 三次 助攻	科比 有 多少 个 赛季 助攻 数 不 超过 3 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_assists ) ) )
科比 布莱恩特 在 三个 盖帽 上 有 多少 助攻	科比 在 三次 盖帽 中有 多少 次 助攻	科比 在 三次 盖帽 中有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 盖帽 ， 他 有 3 次 助攻	科比 在 一个 三次 助攻 的 赛季 中 ， 一共 完成 了 多少 次 盖帽	科比 在 一个 赛季 中有 多少 次 盖帽 和 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
一个 赛季 失误 次数 不 超过 科比 布莱恩特 的 球员	一个 赛季 失误 次数 不 超过 科比 的 球员	一个 赛季 失误 次数 不 超过 科比 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最高分 的 科比 布莱恩特	哪个 球员 的 得分 最高	哪个 球员 的 得分 最高	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 球员	有 多少 玩家	有 多少 玩家	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.player ) ( string ! type ) ) ) )
科比 布莱恩特 只 打 了 3 场 比赛 的 季节 抢断 总数 是 多少	在 科比 只 打 了 三场 比赛 的 赛季 里 ， 总 的 抢断 次数 是 多少 ？	在 科比 只 打 了 三场 比赛 的 赛季 中 ， 抢断 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_steals ) ) )
什么 球员 有 3 次 以上 的 助攻	哪个 球员 有 3 次 或 更 多 的 助攻	哪个 球员 有 3 次 以上 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 的 位置 最 多	哪位 选手 的 位置 最 多	哪个 球员 打 了 最 多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 科比 布莱恩特 的 球队 是 本赛季 洛杉矶 湖人队 的 比赛 数量	科比 - 布莱恩特 本赛季 在 洛杉矶 湖人队 的 比赛 次数 是 多少	本赛季 湖人队 的 科比 · 布莱恩特 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
在 赛季 中有 超过 3 个 盖帽 的 球员	一个 赛季 中 超过 或 少于 3 个 盖帽 的 球员	球员 在 赛季 中有 多于 3 个 盖帽 和 少于 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_blocks ) ( string ! = ) ( number 3 block ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 犯 了 更 多 的 犯规 ， 科比 布莱恩特 在 一个 赛季	什么 球员 在 一个 赛季 里 犯 了 比 科比 更 多 的 犯规	哪个 球员 在 一个 赛季 中 犯规 比 科比 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 的 位置 是 什么	科比 打 什么 位置	科比 打 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) )
科比 布莱恩特 在 2004 赛季 的 表现 如何	科比 在 2004 赛季 打 什么 位置	科比 在 2004 赛季 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
科比 布莱恩特 在 整个 赛季 都 有 多少 失误	科比 整个 赛季 有 多少 失误	科比 在 整个 赛季 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_turnovers ) ) )
在 整个 赛季 中 ， 球员 的 犯规 比 科比 布莱恩特 少	什么 球员 在 整个 赛季 的 犯规 都 比 科比 少	有 什么 球员 比 科比 · 布莱恩特 整个 赛季 的 犯规 次数 少 的 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 比 科比 布莱恩特 获得 更 多 的 块 或 至少 相同	哪个 球员 比 科比 得到 更 多 的 盖帽 或者 至少 是 相同 的	有 什么 球员 能比 科比 得到 更 多 的 盖帽 ， 或者 至少 是 一样 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 参赛 不 超过 两支 球队	哪位 球员 只 参加 过 两队 比赛	哪位 球员 只 效力 过 两支 球队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 与 洛杉矶 湖人队 比赛 的 赛季 中 ， 有 多少 场 比赛 是 科比 · 布莱恩特	科比 本赛季 在 洛杉矶 湖人队 打 了 多少 场 比赛	科比 · 布莱恩特 在 洛杉矶 湖人队 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_games_played ) ) )
科比 · 布莱恩特 在 控球 后卫 时犯 了 多少 次 犯规	科比 在 控卫 的 时候 有 多少 次 犯规	当 科比 还是 控球 后卫 的 时候 ， 他 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_fouls ) ) )
科比 · 布莱恩特 在 本赛季 打 了 3 场 比赛 得分 多少 分	科比 在 他 打 了 3 场 比赛 的 赛季 中得 了 多少 分	科比 在 过去 的 3 场 比赛 中 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_points ) ) )
在 2004 赛季 ， 科比 布莱恩特 参加 了 多少 场 比赛	科比 在 2004 赛季 打 了 多少 场 比赛	科比 在 2004 赛季 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_games_played ) ) )
找到 那些 在 任何 一个 特定 赛季 中 失误 总数 少于 3 的 球员	找出 在 任何 一个 特定 赛季 总 失误 次数 少于 3 次 的 球员	找出 那些 在 任何 一个 特定 的 赛季 中 失误 总数 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 turnover ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 三次 助攻 时 ， 他 在 一个 赛季 中 的 盖帽 总数 是 多少	当 科比 有 三次 助攻 时 ， 他 一个 赛季 的 总 盖帽 数是 多少 ？	当 科比 有 3 次 助攻 时 ， 他 一个 赛季 的 盖帽 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_blocks ) ) )
科比 布莱恩特 有 多少 篮板球	科比 有 多少 个 篮板	科比 抢下 了 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_rebounds ) ) )
湖人 的 科比 布莱恩特 有 多少 助攻	湖人 的 科比 布莱恩特 有 多少 次 助攻	湖人队 的 科比 · 布莱恩特 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
什么 球员 有 不少 于 3 个 全季 的 篮板球	哪个 球员 整个 赛季 篮板 不少 于 3 个	什么 球员 赛季 篮板 不少 于 3 个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 玩 了 最 多 的 游戏	谁 玩 得 最 多	谁 玩 过 最 多 的 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
有 多少 篮板 球员 不是 3 号 球员	有 多少 个 篮板 不是 3 个 篮板	有 多少 篮板 不是 3 号 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_rebounds ) ( string ! = ) ( number 3 rebound ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 打 了 超过 3 场 比赛	哪个 玩家 玩 了 3 个 以上 的 游戏	什么 玩家 玩 了 超过 3 场 游戏	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 game ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 有 最少 的 篮板球	哪个 球员 篮板 最少	哪个 球员 的 篮板 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
每个 赛季 有 超过 3 次 助攻 的 人	每个 赛季 有 超过 3 次 助攻	谁 每个 赛季 都 有 超过 3 次 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 得分 最低	得分 最少 的 人	谁 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 是 科比 布莱恩特 在 一个 赛季 得到 3 个 或 更 多 盖帽 的 助攻 数	当 科比 在 一个 赛季 中 得到 3 个 或 更 多 的 盖帽 时 ， 他 得到 了 多少 次 助攻	当 科比 一个 赛季 得到 3 次 以上 盖帽 的 时候 ， 他 的 助攻 数是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_assists ) ) )
哪个 赛季 科比 · 布莱恩特 3 个 篮板	哪个 赛季 科比 拿 了 3 个 篮板	哪个 赛季 科比 抢下 3 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string season ) ) )
什么 是 科比 布莱恩特 的 位置	科比 的 位置 是 什么	科比 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string position ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 少于 两个 位置	哪一位 选手 少于 两个 位置	哪个 球员 的 位置 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 得分 最少 的 是 什么	哪个 球员 本赛季 得分 最少	哪个 球员 本赛季 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 在 多少 场 比赛 中 得到 3 分	科比 在 几场 比赛 中得 了 3 分	科比 在 几场 比赛 中得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_games_played ) ) )
什么 球员 发挥 最少 的 位置	哪个 球员 的 位置 最少	哪个 球员 的 位置 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 与 科比 布莱恩特 有 同样 数量 的 失误	哪个 球员 的 失误 和 科比 一样 多	有 哪个 球员 的 失误 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_turnovers ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 占据 了 最 多 的 位置	哪个 球员 占据 了 最 多 的 位置	哪个 球员 占据 了 最 多 的 位置	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string position ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 还 拥有 3 个 盖帽 时 ， 科比 布莱恩特 有 多少 分	当 科比 有 3 个 盖帽 的 时候 ， 他 整个 赛季 有 多少 分 ？	当 科比 还有 3 个 盖帽 的 时候 ， 他 整个 赛季 的 得分 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_points ) ) )
每个 赛季 与 kobe   bryant 相同 或 更 少 的 盖帽 的 球员	每个 赛季 的 盖帽 数 与 科比 相同 或 更 少 的 球员	每个 赛季 盖帽 和 科比 一样 少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 一个 赛季 中 打 得 最 多	哪个 球员 一个 赛季 打得 最多	哪个 球员 在 一个 赛季 中 打 了 最 多 的 比赛	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪位 球员 最多 与 两队 比赛	哪 一个 球员 最 多 参加 过 两支 球队	哪位 球员 最 多 参加 过 两个 队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string team ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 整个 赛季 中 ， 球员 比 科比 布莱恩特 有 更 多 的 抢断	哪个 球员 在 整个 赛季 的 抢断 次数 都 比 科比 多	在 所有 的 赛季 中 ， 还有 什么 球员 比 科比 抢断 更 多 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
作为 控球 后卫 ， 科比 · 布莱恩特 有 多少 个 赛季 的 篮板球	科比 · 布莱恩特 作为 控卫 整个 赛季 有 多少 个 篮板	作为 控球 后卫 ， 科比 整个 赛季 有 多少 个 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_rebounds ) ) )
将 球员 命名 为 至少 与 科比 布莱恩特 一样 多 的 抢断	说出 一个 至少 和 科比 一样 抢断 的 球员	说出 一个 和 科比 抢断 次数 一样 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 他 的 盖帽 数 超过 3 的 赛季 中 打 了 多少 场 比赛	科比 在 一个 盖帽 数 超过 3 的 赛季 里 打 了 多少 场 比赛	科比 在 一个 盖帽 数 超过 3 次 的 赛季 里 打 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ( string = ) ( number 3 block ) ) ( string num_games_played ) ) )
本赛季 科比 布莱恩特 得分 多少 分	科比 本赛季 得 了 多少 分	科比 这个 赛季 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_points ) ) )
将 科比 布莱恩特 总分 得 分为 3 的 赛季 命名	说出 科比 - 布莱恩 茨 得分 3 分 的 赛季	问 : 说出 一个 科比 · 布莱恩特 总得 分为 3 分 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_points ) ) )
什么 球员 至少 有 一个 赛季 中 科比 布莱恩特 的 失误	什么样 的 球员 一个 赛季 的 失误 至少 和 科比 一样 多	在 一个 赛季 中 ， 有 多少 球员 的 失误 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_turnovers ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 的 得分 是 3 分	科比 在 什么 位置 得到 3 分	科比 在 什么 位置 得到 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string position ) ) )
一个 赛季 助攻 数 不 等于 三 的 球员	一个 赛季 助攻 不 等于 三次 的 球员	一个 赛季 助攻 不 等于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 他 得到 3 分 的 赛季 中 ， 科比 布莱恩特 的 助攻 数 达到 了 多少	科比 在 他 拿下 三分 的 赛季 里 助攻 了 多少 次	科比 在 本赛季 拿下 3 分 的 时候 助攻 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_assists ) ) )
科比 布莱恩特 在 一个 赛季 中 的 平均 犯规 数是 多少	科比 一个 赛季 平均 犯规 多少 次	科比 平均 一个 赛季 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
球员 在 一个 赛季 中 的 助攻 数不到 4 次	什么 球员 一个 赛季 的 助攻 少于 4 次	是 什么 球员 在 一个 赛季 中 只有 不到 4 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string ! = ) ( number 3 assist ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 2004 赛季 的 位置 是 什么 ？	科比 在 2004 赛季 的 位置 是 什么	科比 在 2004 赛季 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string position ) ) )
在 2004 赛季 ， 科比 布莱恩特 队 的 表现 如何	科比 在 2004 赛季 为 哪支 球队 效力	科比 在 2004 赛季 为 哪支 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string team ) ) )
当 他 有 三次 失误 时 ， 他会 说出 科比 布莱恩特 的 位置	当 科比 有 三次 失误 时 说出 他 的 位置	说出 科比 · 布莱恩特 三次 失误 时 的 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string position ) ) )
球员 在 一个 赛季 犯规 比 球员 科比 布莱恩特 更 多	一个 赛季 中 犯规 次数 多于 科比 的 球员	一个 赛季 犯规 次数 比 科比 还 多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
拥有 最少 球队 数量 的 球员	最少 队数 的 球员	队数 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string team ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 在 本赛季 得分 最少	哪个 球员 本赛季 得分 最少	哪个 球员 本赛季 得分 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 打 了 3 场 比赛 的 球员 科比 布莱恩特 的 一个 赛季 中 的 盖帽 数量	科比 - 布莱恩特 在 一个 赛季 中 打 了 3 场 比赛	科比 · 布莱恩特 一个 赛季 的 盖帽 数 ， 他 一个 赛季 打 了 3 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
什么 位置 是 科比 布莱恩特 在 他 有 3 次 抢断 的 赛季 中 的 表现	科比 - 布莱恩特 本赛季 有 3 次 抢断 ， 他 在 哪个 位置 打球	当 科比 本赛季 有 3 次 抢断 的 时候 ， 他 的 位置 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string position ) ) )
在 一个 赛季 中 ， 他 的 得分 低于 科比 布莱恩特	他 一个 赛季 的 得分 比 科比 还少	谁 的 得分 比 科比 还少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 赛季 期间 ， 他 得到 3 分 ， 科比 布莱恩特 负责 的 犯规 次数 是 多少	在 这个 赛季 他 得到 了 3 分 ， 科比 的 犯规 次数 是 多少	本赛季 他 得到 了 3 分 ， 科比 的 犯规 次数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_fouls ) ) )
在 整个 赛季 中 与 科比 布莱恩特 犯规 次数 相同 的 球员	在 整个 赛季 中 犯规 次数 与 科比 相同 的 球员	在 所有 赛季 中 犯规 次数 与 科比 相同 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 赛季 中 的 平均 犯规 次数 仅限于 3 个 篮板	科比 - 布莱恩特 在 三个 篮板 以内 的 赛季 平均 犯规 次数	科比 · 布莱恩特 在 3 个 篮板 的 赛季 里 平均 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string num_assists ) ) )
这是 一支 有 3 次 失误 的 科比 布莱恩特 队	那 是 科比 的 球队 ， 他 有 3 次 失误	哪支 球队 的 科比 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string team ) ) )
与 科比 布莱恩特 有 同样 数量 的 助攻	他 和 科比 有 同样 的 助攻 次数	谁 拥有 和 科比 一样 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
当 科比 布莱恩特 有 3 个 全季 失误 时 他 有 多少 全季分	当 科比 布莱恩特 整个 赛季 有 3 次 失误 时 ， 他 整个 赛季 有 多少 分	当 科比 整个 赛季 有 3 次 失误 时 ， 他 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
什么 球员 有 3 个 或 更 少 的 篮板球	哪些 球员 有 3 个 或 更 少 的 篮板	什么 球员 有 3 个 或 更 少 的 篮板	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 rebound ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中有 3 次 失误 的 球员 科比 布莱恩特 赛季 的 得 分数	科比 - 布莱恩特 一个 赛季 有 3 次 失误 的 得分	科比 一个 赛季 的 得分 ， 他 一个 赛季 有 3 次 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
什么 球员 比 科比 布莱恩特 在 一个 赛季 取得 更 多 的 抢断	什么 球员 一个 赛季 的 抢断 次数 比 科比 还 多	什么 球员 比 科比 一个 赛季 的 抢断 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 他 的 抢断 数比 科比 布莱恩特 少	他 本赛季 几乎 没有 抢断 科比	谁 能比 科比 更少 的 抢断 呢	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 本赛季 得分 不到 3 分	本赛季 得分 不到 3 分	谁 本赛季 的 得分 低于 3 分	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 point ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 拥有 总 积数 的 球员 等于 一个 赛季 中 对于 科比 布莱恩特 来说 最多 的 盖帽	一个 赛季 总 拦网 次数 相当于 科比 一个 赛季 最 多 拦网 次数 的 球员	一个 赛季 总 盖帽 数 等于 科比 一个 赛季 总 盖帽 数 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 比赛 中 得分 多少 ， 上赛季 他 有 三次 抢断	科比 在 上赛季 三次 抢断 的 比赛 中得 了 多少 分	上 个 赛季 科比 抢断 三次 ， 他 在 比赛 中 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_points ) ) )
科比 布莱恩特 在 3 次 抢断 时有 多少 助攻	科比 三次 抢断 时有 多少 次 助攻	当 科比 抢断 3 次时 ， 他 有 多少 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_assists ) ) )
2004 赛季 科比 布莱恩特 有 多少 次 抢断	科比 在 2004 赛季 有 多少 次 抢断	科比 在 2004 赛季 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_steals ) ) )
谁 得分 最高	谁 得分 最 多	谁 得分 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
那些 被 淘汰 出局 的 球员	被	被 抢 篮板 超过 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_rebounds ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
本赛季 球员 科比 布莱恩特 的 3 个 篮板 位置 是 什么 ？	科比 本赛季 3 个 篮板 的 位置 是 什么	本赛季 抢下 3 个 篮板 的 科比 现在 处于 什么 位置	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_rebounds ) ( string = ) ( number 3 rebound ) ) ( string position ) ) )
每场 比赛 少于 三次 犯规 的 球员 ， 本赛季 最少 的 球员	本赛季 每场 犯规 少于 三次 的 球员	本赛季 场均 犯规 少于 3 次 的 球员 是 犯规 最少 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 中 打 得 最少 的 球员	一个 赛季 中 比赛 最少 的 球员	一个 赛季 最少 上场比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
控球 后卫 科比 布莱恩特 在 一个 赛季 中有 多少 失误	控卫 科比 一个 赛季 有 多少 失误	控球 后卫 科比 · 布莱恩特 一个 赛季 有 多少 失误	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string position ) ( string = ) en.position.point_guard ) ( string num_turnovers ) ) )
找到 科比 布莱恩特 也 获得 3 次 抢断 的 赛季 中 的 盖帽 数量	找出 科比 在 这个 赛季 中 3 次 抢断 的 盖帽 数	找出 本赛季 科比 抢断 3 次 的 盖帽 数	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 篮板 和 助攻	科比 一个 赛季 有 多少 个 篮板 和 助攻	科比 一个 赛季 有 多少 个 篮板 和 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
科比 布莱恩特 在 3 场 全季 比赛 中有 多少 场 全场 比赛	科比 · 布莱恩特 在 3 场全 赛季 比赛 中有 多少 个 全 赛季 盖帽	科比 在 3 场 常规赛 中有 多少 个 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ( string = ) ( number 3 game ) ) ( string num_blocks ) ) )
有 三次 失误 的 科比 布莱恩特 有 多少 分	三次 失误 的 科比 布莱恩特 得 了 多少 分	有 三次 失误 的 科比 得到 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_points ) ) )
四季 不到 3 个 盖帽 的 球员	在 所有 赛季 中 少于 3 个 盖帽 的 球员	球员 在 整个 赛季 都 只有 不到 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 少于 3 次 抢断	哪个 球员 的 抢断 次数 少于 3 次	什么 球员 有 少于 3 次 抢断	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_steals ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 steal ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 场均 至少 有 3 次 助攻 的 球员	一个 赛季 平均 每场 至少 助攻 三次 的 球员	平均 每场 至少 3 次 助攻 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
这个 赛季 球员 的 抢断 最少	哪个 球员 本赛季 的 抢断 最少	哪个 球员 本赛季 抢断 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string num_steals ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 为 拉 湖人 或 克利夫兰 骑士队 效力	无论是 洛杉矶 湖人队 还是 克利夫兰 骑士队	谁 效力 于 洛杉矶 湖人队 或 克利夫兰 骑士队	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string team ) ( string = ) ( call SW.concat en.team.lakers en.team.cavaliers ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
在 一个 赛季 中 ， 球员 的 得分 比 科比 布莱恩特 少	什么 球员 一个 赛季 的 得分 低于 科比	什么 球员 在 一个 赛季 中 得分 比 科比 还少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 盖帽 ， 他 得到 3 分	科比 - 布莱恩特 一个 赛季 有 多少 个 盖帽 ， 他 得 了 3 分	科比 在 一个 赛季 中有 多少 次 盖帽 ， 他 得到 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string num_blocks ) ) )
科比 布莱恩特 在 2004 赛季 出场	科比 · 布莱恩特 在 2004 赛季	科比 · 布莱恩特 参加 了 2004 年 的 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string season ) ) )
说出 一个 玩过 和 科比 布莱恩特 一样 多 的 比赛 的 球员	说出 一个 和 科比 打 过 同样 多 比赛 的 球员	说出 一个 像 科比 一样 打 了 很多 场 比赛 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_games_played ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_games_played ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 犯规 少于 三次 的 球员	一个 赛季 犯规 少于 三次 的 球员	一个 赛季 犯规 少于 3 次 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 犯 了 多少 次 犯规	科比 有 多少 次 犯规	科比 有 多少 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string num_fouls ) ) )
什么 赛季 科比 布莱恩特 得到 3 分	科比 在 哪个 赛季 得 了 3 分	哪个 赛季 科比 得 了 3 分	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ( string = ) ( number 3 point ) ) ( string season ) ) )
科比 布莱恩特 得分 多少 分	科比 得 了 多少 分	科比 得 了 多少 分	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) )
在 什么 赛季 ， 科比 只 放弃 了 3 次 犯规	科比 在 哪个 赛季 只罚 了 3 次 犯规	哪个 赛季 科比 只 丢 了 3 次 犯规	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string season ) ) )
当 他 和 失去 的 安吉尔 湖人 一起 时 ， 球员 科比 布莱恩特 在 所有 赛季 的 助攻 总数 是 多少	当 科比 在 洛杉矶 湖人队 的 时候 ， 他 整个 赛季 的 助攻 总数 是 多少 ？	当 科比 · 布莱恩特 在 洛杉矶 湖人队 的 时候 ， 他 所有 赛季 的 助攻 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string num_assists ) ) )
谁 与 科比 布莱恩特 有 相同 或 更 多 的 犯规	他 和 科比 有 相同 或 更 多 的 犯规	谁 的 犯规 次数 和 科比 一样 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 拥有 与 科比 布莱恩特 相同 数量 的 全季 助攻	哪个 球员 在 整个 赛季 的 助攻 次数 都 和 科比 一样	有 哪位 球员 能 像 科比 一样 在 整个 赛季 都 有 如此 多 的 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string num_assists ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
谁 有 超过 3 次 助攻	三次 以上 助攻	谁 有 超过 3 次 助攻	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_assists ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 assist ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 得分 比 科比 布莱恩特 少	哪个 球员 得分 低于 科比	哪个 球员 得分 比 科比 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
一个 赛季 有 三次 以上 犯规 的 球员	一个 赛季 内 犯规 三次 或 三次 以上 的 球员	一个 赛季 有 三次 以上 犯规 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_fouls ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 foul ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
什么 球员 全季 不到 3 个 盖帽	哪个 球员 整个 赛季 的 盖帽 都 不到 3 个	什么 球员 整个 赛季 只有 不到 3 个 盖帽	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 block ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
哪个 球员 的 位置 最 多	哪个 选手 的 位置 最 多	哪个 球员 的 2 号 位置 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 在 一个 赛季 中有 多少 次 盖帽	科比 在 一个 赛季 中有 多少 个 盖帽	科比 一个 赛季 有 多少 次 盖帽	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
当 一个 赛季 犯规 3 次 犯规 时 ， 哪支 球队 为 科比 布莱恩特 效力	当 科比 在 一个 赛季 中 犯规 3 次时 ， 他 为 哪支 球队 效力	当 科比 在 一个 赛季 中有 3 次 犯规 时 ， 他 为 哪个 球队 效力	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_fouls ) ( string = ) ( number 3 foul ) ) ( string team ) ) )
什么 球员 全 季节 的 盖帽 都 不过 是 全 季节 盖帽	什么样 的 球员 整个 赛季 都 不 超过 科比 布莱恩特	什么 球员 的 全 赛季 封盖 不 超过 科比 布莱恩特 的 全 赛季 封盖	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_blocks ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_blocks ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 布莱恩特 有 多少 次 抢断	科比 有 多少 次 抢断	科比 抢断 了 多少 次	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ) )
命名 单一 位置 的 球员	以 一个 位置 命名 玩家	指定 一个 位置 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string position ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
球员 科比 布莱恩特 在 一个 赛季 中有 3 次 助攻 的 犯规 次数	科比 - 布莱恩特 一个 赛季 3 次 助攻 的 犯规 次数	科比 一个 赛季 的 犯规 次数 和 3 次 助攻	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_fouls ) ) )
2004 赛季 科比 布莱恩特 的 盖帽 总数 是 多少 ？	科比 在 2004 赛季 的 总得分 是 多少 ？	2004 赛季 科比 的 盖帽 总数 是 多少	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string season ) ( string = ) ( date 2004 -1 -1 ) ) ( string num_blocks ) ) )
在 一个 赛季 中 ， 多少 次 盖帽 超过 3 次 ， 科比 布莱恩特 上场	科比 在 一个 赛季 中用 3 次 以上 的 抢断 完成 了 多少 个 盖帽	科比 在 一个 赛季 中有 多少 次 盖帽 和 3 次 抢断	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_steals ) ( string = ) ( number 3 steal ) ) ( string num_blocks ) ) )
在 他 有 3 次 失误 的 赛季 中 ， 他 指出 了 科比 · 布莱恩特 参加 的 比赛 数量	在 他 有 3 次 失误 的 赛季 里 ， 科比 参加 的 比赛 有 多少	在 他 有 3 次 失误 的 赛季 中 ， 科比 参加 了 多少 场 比赛	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_turnovers ) ( string = ) ( number 3 turnover ) ) ( string num_games_played ) ) )
是否 有 球员 在 一个 赛季 中 得分 总分 大于 同一 赛季 在 科比 布莱恩特 得分 的 总得 分数	有没有 球员 一个 赛季 的 总得分 超过 科比 同一 赛季 的 总得分 ？	有没有 球员 在 一个 赛季 的 总得分 比 科比 在 同一 赛季 的 总得分 还 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string num_points ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_points ) ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
说出 一个 赛季 得分 最高 的 球员	说出 一个 赛季 得分 最多 的 球员	说出 一个 赛季 得分 最多 的 球员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string num_points ) ) ) ) ( call SW.domain ( string player ) ) ) ( string player ) ) )
科比 · 布莱恩特 为 洛杉矶 湖人队 效力 了 多少 个 赛季	科比 · 布莱恩特 为 洛杉矶 湖人队 效力 了 多少 个 赛季	科比 · 布莱恩特 在 洛杉矶 湖人队 打 了 多少 个 赛季	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string team ) ( string = ) en.team.lakers ) ( string season ) ) )
科比 布莱恩特 凭借 3 次 助攻 得到 了 多少 篮板球	科比 三次 助攻 有 多少 个 篮板	科比 · 布莱恩特 3 次 助攻 抢下 多少 篮板	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.player.kobe_bryant ( call SW.reverse ( string player ) ) ) ( string num_assists ) ( string = ) ( number 3 assist ) ) ( string num_rebounds ) ) )
什么 块 在 块 1 的 右边 ， 长度 为 3 英寸	哪个 街区 在 街区 1 的 右边 ， 长 3 英寸	什么 街区 在 街区 1 的 右边 ， 长度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 与 块 1 具有 相同 宽度 的 块 具有 高度	选择 与 块 1 具有 相同 宽度 和 高度 的 块	选择 与 块 1 的 高度 相同 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
块 1 右边 3 英寸 块	1 号 区块 右侧 3 英寸 区块	在 第一座 右边 3 英寸 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 最少 块 之上 的 块	在 最小 的 块 上 找到 块	找到 最小 块 上面 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 与 块 1 宽度 相同 的 块	选择 与 块 1 宽度 相同 的 块	选择 一个 与 第一个 方块 宽度 相同 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 长度 为 3 个 icnhes 且 位于 块 1 右侧 的 块	选择 长度 为 3   icnhes 且 位于 块 1 右侧 的 块	选择 长度 为 3 个 icnhes 且 位于 第 1 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 长度 最多为 块 1 的 高度	长度 在 块 1 最大 高度 处 的 块	块 的 长度 在 块 1 的 最 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
阻止 块 1 的 左边 3 英寸 宽	1 号 街区 左侧 3 英寸 宽 的 街区	1 号 街区 左边 的 街区 宽 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 宽度 小于 块 1 长度 的 块	找到 所有 宽度 小于 块 1 长度 的 块	找到 所有 比 第一个 街区 的 长度 还 小 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 的 高度 小于 块 1 的 长度	高度 小于 块 1 长度 的 块	块 的 高度 小于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 之上 的 块	找 一个 在 第一块 上面 的 块	找到 第一块 上面 的 一块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 1 留下 了 什么 金字塔 形状 的 块	第一个 街区 的 左边 是 什么 金字塔 形 的 街区	1 号楼 还 剩 什么 金字塔 型 的 楼	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 比块 1 短 的 所有 块	找到 比 1 号 街区 短 的 所有 街区	找到 所有 比 第一个 街区 短 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 一块 最高 与 块 1 宽度 相同 的 块	找 一个 高达 1 块 宽 的 块	找到 一个 最多 和 1s 宽度 一样 高 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 的 上方 和 左侧	1 号 街区 左上方	在 第一座 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 位于 另外 两个 块 左侧 的 块	找到 另 两个 街区 左边 的 街区	在 另外 两个 块 的 左边 找到 一个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 在 块 1 的 右下方	1 号 区块 右下方 区块	在 第一个 街区 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
不 超过 3 英寸 宽 的 块	不 超过 3 英寸 宽 的 块	不 超过 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 长度 为 3 英寸 的 块 右侧 的 块	选择 位于 长度 为 3 英寸 的 块 右侧 的 块	选择 块 的 右边 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 宽度 小于 块 1 高度 的 块	找到 宽度 小于 块 1 高度 的 块	找到 一个 宽度 小于 第 1 块 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 所有 3 或 6 英寸 宽 的 块	找 我 所有 3 或 6 英寸 宽 的 街区	找到 所有 3 或 6 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
顶部 附近 有 3 英寸 的 挡 块	靠近 顶部 的 3 英寸 块	接近 顶部 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 或块 2	定位 块 1 或块 2	找到 第一座 或 第二座	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
特殊 街区 左侧	特殊 街区 左侧	特殊 块 左	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 我长 3 英寸 的 块	给 我 找 一个 3 英寸 长 的 街区	给 我 找 一个 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
什么 金字塔 形状 的 块 在 块 1 上方	第一块 上面 是 什么 金字塔 形 的 块	1 号楼 上面 是 什么 金字塔 形状 的 楼	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 街区 是 独特 的 ， 形状 像 金字塔	哪一块 是 独一无二 的 ， 形状 像 金字塔	什么 街区 是 独一无二 的 ， 形状 像 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 两个 或 更 多块 右边 的 块	找 我 两个 或 两个 以上 街区 右边 的 街区	给 我 找 两个 或 两个 以上 街区 右边 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 最长 的 砖	选择 最长 的 砖	选择 最长 的 砖块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
找到 高度 为 3 的 块 右侧 的 块	在 一个 3 米 高 的 街区 的 右边 找 一个 街区	在 第三个 街区 的 右边 找到 一个 街区 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 是 块 1 左边 的 两个 块	什么 街区 在 街区 1 左边 的 两个 街区	什么 街区 离 第一座 左边 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
选择 3 英寸 宽 的 块	选择 3 英寸 宽 的 块	选择 3 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 超过 3 英寸 的 所有 积木	找 我 所有 超过 3 英寸 的 街区	找到 所有 大于 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 宽度 为 3 英寸 的 块 下方	在 宽度 为 3 英寸 的 块 下面 的 块	在 宽度 为 3 英寸 的 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 与 块 1 长度 相同 的 块	找到 与 块 1 长度 相同 的 块	查找 与 块 1 长度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 我 左边 超过 2 个 街区 的 所有 街区	找到 左边 有 两个 街区 以上 的 街区	找到 它 左边 超过 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 右边 是 什么 块	哪个 街区 在 1 号 街区 的 右边	哪个 街区 在 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
阻止 块 1 的 上方 和 左侧	街区 1 左上方 街区	在 第一座 的 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 块 1 左侧 的 块 右侧 的 块	找到 块 右边 的 块 ， 即块 1 左边 的 块	找到 block   1 左边 的 block 的 右边 的 block	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
第 1 块 有 多 宽	1 号 街区 有 多 宽	第一座 有 多 宽	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
选择 块 1 右侧 和 左侧 的 块	选择 块 1 左右 的 块	选择 块 1 左右 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 1 右边 是否 有 3 英寸 长 的 块	1 号 街区 右边 有 3 英寸 长 的 街区 吗	1 号 街区 右边 有 3 英寸 长 的 街区 吗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
是否 有 任何 块 的 高度 最多为 3 英寸 或 6 英寸	有 高度 不 超过 3 英寸 或 6 英寸 的 积木 吗	有 高度 不 超过 3 英寸 或 6 英寸 的 积木 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 最 左边 的 砖块	选择 最 左边 的 砖块	选择 最 左边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 在 上面 的 块 ， 宽度 为 3 英寸	选择 块 1 上方 宽度 为 3 英寸 的 块	选择 第一块 在 上面 ， 宽度 为 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 3 英寸 高 的 块	找 我 所有 3 英寸 高 的 街区	帮 我 找到 所有 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 所有 高于 3 英寸 高 的 街区 的 街区	找 我 所有 3 英寸 高 的 街区	找到 所有 3 英寸 以上 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
哪 块砖 短于 3 英寸	哪 块砖 短于 3 英寸	哪 块砖 短于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 具有 金字塔 形状 的 块 ， 位于 块 1 的 右侧	找到 一个 金字塔 形状 的 块 ， 它 在 块 1 的 右边	找到 一个 金字塔 形状 的 方块 ， 在 第一个 方块 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
第 3 块 左边	3 区 左侧	第三座 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
阻止 特殊 区块	特殊 块 上方 的 块	特殊 块 上 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 下方 和 右侧 的 块	在 1 号 街区 的 右下方 找到 一个 街区	在 第一个 街区 的 右下方 找 一个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 3 英寸 长 的 块	找到 3 英寸 长 的 木块	找到 3 英寸 长 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 下面 三 英寸 块	低于 3 英寸 的 块	块 低于 三 英寸 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
块 1 右侧 3 英寸 高 的 块	1 号 街区 右侧 3 英寸 高 的 街区	在 第一 街区 的 右边 有 一个 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 任何 金字塔 形状 的 块	给 我 找个 金字塔 形 的 块	找到 任何 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 宽 3 英寸	哪 块砖 3 英寸 宽	哪一块 砖 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 的 左边 有 最 多 的 块	哪个 块 左边 的 块 最 多	哪 一个 方块 在 它 的 左边 有 最 多 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 的 正下方 的 所有 块	找到 1 号 街区 的 所有 街区	给 我 找到 所有 在 第一个 街区 的 正下方 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
选择 形状 最多 的 块	选择 形状 最多 的 块	选择 形状 最多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
块 1 右边 3 英寸 高	1 号 街区 右侧 3 英寸 高	1 号 街区 的 右边 ， 有 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 的 长度 是 块 1 的 长度	长度 为块 1 长度 的 块	块 的 长度 为块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 块 1 左边 3 英寸 长 的 砖块	找到 1 号 街区 剩下 的 3 英寸 长 的 砖块	把 1 号楼 剩下 的 3 英寸 长 的 砖头 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 特殊 块 左侧 的 块	选择 特殊 块 左侧 的 块	选择 特殊 块 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
什么 块 是 块 右边 的 块 1 或 2	哪个 街区 在 1 号 或 2 号 街区 的 右边	哪个 街区 是 在 它 右边 的 第 1 或 第 2 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
金字塔 形 的 块	金字塔 形 的 块	金字塔 形 的 石块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 上方 和 下方 的 所有 块	找到 1 号 街区 上下 的 所有 街区	找到 1 号 街区 上下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪 块砖 的 长度 比砖 1 的 长度 短	哪 块砖 的 长度 比砖 1 的 长度 短	哪 块砖 的 长度 比砖 1 的 长度 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
命名 具有 两个 或 更 多 形状 的 块	命名 具有 两个 或 多个 形状 的 块	说出 具有 两个 或 多个 形状 的 块 的 名称	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string >= ) ( number 2 ) ) )
砖 1 或 2 留下 的 砖	哪 块砖 是 砖 1 或 砖 2 的 剩余 部分	1 号 砖 和 2 号 砖 还 剩 哪一块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪 块砖 不到 两块 砖	哪 块砖 比 两块 砖高	哪 块砖 比 两块 砖高	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 与 块 1 具有 相同 形状 的 所有 块	找到 所有 形状 与 块 1 相同 的 块	找到 和 第一个 街区 形状 相同 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
右侧 和 左侧 有块 1 的 块	左右 各有 一个 街区 的 街区	块 在 左右 都 有 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 在 高度 为 3 英寸 的 块 上方	哪个 街区 在 三 英寸 高 的 街区 之上	什么 方块 在 三 英寸 高 的 方块 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 所有 金字塔 形状 的 块	选择 棱锥 体 形状 的 所有 块	选择 所有 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 与 块 1 高度 相同 的 块	找到 与 块 1 高度 相同 的 块	找到 与 第一块 相同 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
找到 块 1 或块 2 右侧 的 块	在 1 区 或 2 区 的 右边 给 我 找个 街区	给 我 找 一个 街区 在 街区 1 或 街区 2 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
阻挡 块 1 的 宽度 更 高 或 相同 的 高度	块 高 或 与 块 1 的 宽度 相同 的 高度	块 高 或 与 块 1 的 宽度 相同 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 一块 至少 与 砖 1 一样 宽 的 砖	选择 至少 与 砖块 1 一样 宽 的 砖块	选择 至少 与 砖块 1 一样 宽 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
得到 块 1 上方 的 第二个 块	把 第二个 街区 移 到 第一个 街区 的 上方	得到 第一个 街区 上面 的 第二个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 最 多 2 种颜色 的 所有 积木	找到 所有 最多 有 两种 颜色 的 方块	给 我 找到 所有 不 超过 两种 颜色 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
上面 没有 块 1 的 块	上面 没有 块 1 的 块	上面 没有 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string ! = ) en.block.block1 ) )
找到 我 上面 有 2 个 街区 的 所有 砖块	把 上面 两个 街区 的 砖头 都 找 出来	把 上面 有 两块 砖 的 砖 都 找 给 我	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 超过 两个 块 是 正确 的	两个 街区 以上 的 街区	两个 以上 的 街区 是 对 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 砖像 砖 1 一样 宽	什么 砖 和 砖 1 一样 宽 是 长 的	什么 砖 和 砖 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 我 右边 少于 2 个 街区 的 所有 街区	给 我 找 一个 右边 不到 两个 街区 的 街区	找到 它 右边 少于 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 是 什么 颜色	块 1 是 什么 颜色	第一座 是 什么 颜色 的	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
找到 位于 3 英寸 高 的 块 顶部 的 块	找到 位于 块 顶部 3 英寸 高 的 块	找到 位于 3 英寸 高 的 方块 顶部 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下面 的 所有 块 2	找到 1 号 街区 下 的 2 号 街区	找到 1 号楼 下面 的 2 号楼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
阻挡 其他 两个 街区	其他 两个 街区 下 的 街区	在 另外 两个 街区 下面 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 下面 的 所有 块	帮 我 找到 1 号 街区 下面 的 所有 街区	给 我 找到 下面 第一个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 大于 3 英寸 的 块	找到 宽度 超过 3 英寸 的 块	找到 大于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
高度 为 3 英寸 的 块 左侧 的 块	高度 为 3 英寸 的 块 左边 的 块	高度 为 3 英寸 的 块 的 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 砖 在 3 英寸 长 的 砖 下面	3 英寸 长 的 砖 下面 是 什么 砖	什么 砖 在 3 英寸 长 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
第 1 块 右边 2 个 街区	1 区 右侧 2 个 街区	在 第一座 右边 的 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 我 下面 至少 2 个 街区 的 所有 街区	找到 至少 两个 街区 下面 的 所有 街区	找到 至少 2 个 街区 下面 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 块 宽 至少 3 英寸	找 我 所有 街区 至少 3 英寸 宽	找到 所有 至少 3 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 的 右边 是 什么 块	哪个 街区 在 1 号 街区 的 右边	哪个 街区 在 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
阻止 比块 1 的 长度 更 宽	块 大于 块 1 的 长度	块 比块 1 的 长度 更 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 3 英寸 宽 的 金字塔 形块	找 我 那块 3 英寸 宽 的 金字塔 形 的 石头	给 我 找 3 英寸 宽 的 金字塔 形状 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 种 特殊 砖 是 金字塔 形 的	哪块 特殊 的 砖 是 金字塔 形 的	金字塔 形状 的 特殊 砖 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
找到 块 1 左下方 的 所有 块	找到 1 号 街区 左下 的 所有 街区	找到 所有 剩下 的 街区 和 一号 街区 以下 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 块 1 下方 和 上方 的 所有 块	把 1 号 街区 的 所有 街区 都 找 出来	为 我 找到 所有 的 街区 ， 街区 1 在 上面 和 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
什么 块 是 3 英寸 或 更 小 的 宽度	哪个 街区 3 英寸 或 以下 宽	什么 块 是 3 英寸 或 更 少 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 上方 和 右侧 的 所有 块	找到 1 号 街区 右上方 的 所有 街区	找到 1 号 街区 右上方 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 在 块 1 左侧 或 右侧 的 所有 金字塔 块	给 我 找 块 1 左边 或 右边 的 所有 金字塔 块	给 我 找到 所有 的 金字塔 方块 ， 在 第一块 的 左边 或 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 颜色 的 砖 1	砖 1 是 什么 颜色 的	砖 是 什么 颜色 的	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
什么 街区 位于 3 英寸 高 的 街区 左侧	3 英寸 高 的 街区 左边 是 哪个 街区	3 英寸 高 的 大楼 左边 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 高度 等于 3 英寸 的 块 下面 的 所有 块	找出 低于 高度 等于 3 英寸 的 块 的 所有 块	找出 所有 高度 在 3 英寸 以下 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 不是 第 1 块 的 所有 区块	找 我 所有 街区 不 在 街区 1 的 右边	帮 我 找到 不是 第一个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string ! = ) en.block.block1 ) )
块 的 高度 至少 是 块 1 的 高度	高度 至少 为块 1 高度 的 块	块 的 高度 至少 为块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪个 块 上面 有 最 多 的 块	哪个 街区 上面 的 街区 最 多	什么 街区 上面 的 街区 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 第 1 块 左边 3 英寸 长 的 块	找到 街区 1 左边 3 英寸 长 的 街区	找到 1 号 街区 左边 3 英寸 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
左边 和 上面 的 块 1	1 区 左上方	1 号楼 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
什么 块 有 左边 和 右边 的 块 1	哪个 街区 有 街区 1 左右	什么 街区 有 街区 1 左右	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
块 1 的 形状 是 什么	块 1 是 什么 形状	第一座 是 什么 形状	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
一块 砖 ， 长度 在 3 到 6 英寸 之间	长度 在 3 到 6 英寸 之间 的 砖	一块 砖 的 长度 在 3 到 6 英寸 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 位于 最小 数量 块 的 左侧 的 块	找到 位于 最小 块数 左侧 的 块	定位 位于 最小 块数 左侧 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 或 6 英寸 宽 的 块	选择 3 或 6 英寸 宽 的 块	选择 3 或 6 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
块 的 宽度 至少 是 块 1 的 高度	宽度 至少 为块 1 高度 的 块	块 的 宽度 至少 为块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪个 块 位于 块 1 下方 ， 高度 至少 为 3 英寸	哪个 街区 在 1 号 街区 下面 至少 3 英寸 高	哪个 街区 低于 至少 3 英寸 高 的 街区 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
块 1 的 左侧 和 右侧 是 什么 块	什么 街区 在 街区 1 的 左右	第一个 街区 的 左边 和 右边 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 1 上方 有 哪些 特殊 块	1 号 街区 上方 有 哪些 特殊 街区	1 号楼 上面 有 什么 特别 的 街区 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
选择 块 1 下方 和 右侧 的 砖块	选择 1 号 地块 右侧 和 下方 的 砖块	选择 1 号 街区 右下方 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
3 英寸 长 的 块	3 英寸 长 的 木块	3 英寸 长块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 宽度 最小 的 砖块	选择 宽度 最小 的 砖	选择 宽度 最小 的 砖	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
哪个 特殊 的 砖 在 砖 1 的 右边	哪块 特别 的 砖 在 砖 1 的 右边	哪个 特殊 的 砖块 在 砖块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 超过 2 个 街区 的 所有 街区	找到 两个 街区 以外 的 所有 街区	找到 所有 剩下 的 大于 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 英寸 区块 右侧 的 砖块	选择 3 英寸 砖 右边 的 砖	选择 3 英寸 砖 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
块 的 长度 是 块 1 的 宽度	长度 为块 1 宽度 的 块	块 的 长度 为块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
什么 是 块 高度	积木 的 高度 是 多少	积木 的 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
阻止 两个 或 更 多块 的 左边	两个 或 两个 以上 街区 左边 的 街区	两个 或 多个 街区 的 左边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 砖 1 或 砖 2	选择 砖块 1 或 砖块 2	选择 砖块 1 或 砖块 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
找到 我 最 多 3 英寸 长 的 块	找 我 所有 街区 最长 3 英寸	给 我 找 所有 不 超过 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 是 特殊 的 ， 并 在 块 1 下面	哪些 区块 是 特别 的 ， 在 区块 1 之下	什么 街区 是 特别 的 ， 在 街区 1 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 不是 第 1 块 下面 的 所有 块	找到 所有 不 在 1 号 街区 下 的 街区	找到 1 号楼 以下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string ! = ) en.block.block1 ) )
找到 第 1 块 未 离开 的 所有 区块	找到 1 号 街区 以外 的 所有 街区	找到 1 号 街区 以外 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
选择 最短 的 块	选择 最短块	选择 最短块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
找到 块 1 上面 的 所有 特殊 块	给 我 找 第一个 街区 上面 的 所有 特殊 街区	给 我 找到 上面 第一个 街区 的 所有 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 块 1 右侧 的 块 ， 高度 为 3 英寸	选择 块 1 右侧 高度 为 3 英寸 的 块	选择 块 1 的 右边 ， 高度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 至少 3 英寸 宽 的 街区	给 我 找个 至少 3 英寸 宽 的 街区	给 我 找个 至少 3 英寸 宽 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 在 块 1 下面 和 下面	什么 街区 在 街区 1 的 左边 和 下面	哪个 街区 在 第一个 街区 的 左边 和 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 的 总 高度	找出 积木 的 总 高度	求 出 积木 的 总 高度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
阻止 两个 或 更 多块 的 右边	两个 或 两个 以上 街区 右侧	向右转 两个 或 两个 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 块 与 块 1 的 颜色 相同	哪个 块 与 块 1 的 颜色 相同	哪个 方块 与 第一个 方块 的 颜色 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
找到 一个 小于 6 英寸 的 块	给 我 找个 小于 6 英寸 的 街区	给 我 找 一个 小于 6 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪 块砖 是 3 英寸 高 的 砖 的 左边	哪 块砖 在 砖 的 左边 3 英寸 高	哪 块砖 在 3 英寸 高 的 砖 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 左侧 的 块	找到 街区 1 左边 的 街区	找到 block   1 左边 的 block	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 块 1 右侧 的 特殊 块	选择 块 1 右侧 的 特殊 块	选择 块 1 右边 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 一个 大于 块 1 的 块	选择 大于 块 1 的 块	选择 一个 比 第一个 块 大 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
第 1 区 左侧 3 英寸 区块	块 1 左侧 3 英寸 块	1 号楼 左 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 的 宽度 小于 3 英寸	哪个 街区 的 宽度 小于 3 英寸	哪一块 的 宽度 小于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 一个 宽度 为 3 英寸 的 块 ， 块 1 位于 右侧	找到 一个 块 ， 其 宽度 为 3 英寸 ， 块 1 位于	找 一个 三 英寸 宽 的 街区 ， 街区 1 在 它 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 的 所有 特殊 块	帮 我 找到 1 号 街区 下面 的 所有 特殊 街区	给 我 找到 第一个 街区 下面 所有 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 高 的 街区 块	找 我 3 英寸 高 的 街区	给 我 找 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 左侧 的 特殊 块	找到 1 号 街区 左边 的 特殊 街区	找到 第 1 块 左边 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪 块砖 不比 砖 1 宽	哪 块砖 不比 砖 宽 1 长	哪一块 砖 的 宽度 不 超过 砖 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 高于 3 英寸 的 块 下方	在 高度 为 3 英寸 的 块 下面 的 块	低于 高度 为 3 英寸 的 块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 下方 3 英寸 长 的 块	选择 块 1 下 3 英寸 长 的 块	选择 块 1 下 的 块 是 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 另外 两个 街区 之下 是否 有 一个 街区	在 另外 两个 街区 下面 有 一个 街区 吗	另外 两个 街区 下面 有 一个 街区 吗	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
命名 一个 左边 有块 1 的 块	命名 左边 有块 1 的 块	说出 一个 左边 有 block   1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
什么 块 在 两个 块 之上	两个 街区 以上 是 哪个 街区	什么 街区 在 两个 街区 上面	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 最 多 只有 一个 块	最 多 一个 街区 右边 的 街区	在 最 多 一个 街区 右边 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 或 2 下面 的 所有 块	找到 下面 1 或 2 个 街区 的 所有 街区	给 我 找到 下面 第 1 或 第 2 块 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 所有 特殊 的 街区	找到 所有 特别 的 街区	帮 我 找到 所有 特别 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 最大 块数 左侧 的 块	找到 最大 块数 左边 的 块	找到 最大 块数 的 左边 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左边 的 块 ， 块 1 在 上面	给 我 找 块 左边 的 那块 第一块 上面 的 那块	找到 在 第一个 街区 左边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 右边 的 所有 块	找到 1 号 街区 右边 的 所有 街区	找到 所有 在 第一个 街区 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 宽度 最大 的 块	选择 宽度 最大 的 块	选择 具有 最大 宽度 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string width ) ) ) )
哪个 块 位于 不 超过 两个 块 的 左侧	哪个 街区 在 不 超过 两个 街区 的 左边	不 超过 两个 街区 的 左边 是 哪个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
低于 最小 块数 的 块	低于 最小 块数 的 块	块数 小于 最小 块数 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 在 3 英寸 宽 的 砖 上面	哪 块砖 比 3 英寸 宽 的 砖 高	哪一块 砖 在 3 英寸 宽 的 砖 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 所有 3 或 6 英寸 高 的 块	找 我 所有 3 或 6 英寸 高 的 街区	找到 所有 3 或 6 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 我 至少 两个 街区 以上 的 街区	在 至少 两个 街区 的 地方 给 我 找个 街区	给 我 找 一个 至少 两个 街区 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 右侧 的 块	选择 块 1 右侧 的 块	选择 block   1 右侧 的 block	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 长度 超过 3 或 6 英寸 的 那些 块	找到 那些 长度 超过 3 或 6 英寸 的 块	找到 那些 长度 超过 3 或 6 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 1 的 高度	块 1 高度	第一座 高度	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
块 比块 1 短	短于 块 1 的 块	比 第一块 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 比块 1 短	比 一号 街区 短 的 街区	比 第一块 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 块 1 下方 和 左侧 的 块	选择 块 1 下方 和 左侧 的 块	选择 块 1 的 左下方 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
什么 砖 左边 不 超过 两块 砖	哪 块砖 的 左边 不 超过 两块 砖	什么 砖 的 左边 最 多 只有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 最 少量 块 右侧 的 块	选择 数量 最少 的 块 右边 的 块	选择 块 数量 最少 的 右边 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 一个 不是 3 英寸 的 块	选择 不 超过 3 英寸 的 块	选择 一个 不是 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
是否 有 一个 长度 的 块 ， 其 测量 值 等于 块 1 的 高度	是否 有 长度 等于 块 1s 高度 的 块	是否 有 一个 长度 与 第 1 块 高度 相等 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 特殊 砖块 左侧 的 块	在 这块 特殊 的 砖 左边 选 一块 砖	选择 一块 特殊 砖 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 顶部 的 块	找到 1 号 街区 顶部 的 街区	找到 第一块 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 和 块 1 一样 高 的 块	找 我 一个 街区 那么 高 的 街区	帮 我 找到 所有 和 第一个 街区 一样 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
选择 一块 至少 3 英寸 宽 的 砖	选择 至少 3 英寸 宽 的 砖	选择 一块 至少 3 英寸 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 街区 有 最大 的 高度	哪个 街区 的 高度 最大	什么 街区 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
在 左边 2 个 街区 内 阻止	左边 两个 街区 内 的 街区	左边 两个 街区 以内 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 砖 右边 至少 有 2 块砖	哪 块砖 右边 至少 有 两块 砖	什么 砖 的 右边 至少 有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 是 特殊 砖 的 左边	哪 块砖 在 这块 特殊 砖 的 左边	特殊 砖 的 左边 是 哪 块砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 一个 宽度 等于 或 小于 块 1 的 块	给 我 找 一个 宽度 等于 或 小于 块 1 的 块	给 我 找 一个 宽度 等于 或 小于 第一座 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
阻止 从块 1 向 右 和 向上 阻止	从 1 号 街区 向右转	右转 ， 从 第一个 街区 往上走	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
选择 具有 相同 宽度 和 高度 的 块	选择 具有 相同 宽度 和 高度 的 块	选择 一个 具有 相同 宽度 和 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找到 我 在 块 1 下面 的 所有 3 英寸 宽 的 块	找到 1 号 街区 下面 所有 3 英寸 宽 的 街区	找到 1 号楼 下面 所有 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 或块 2 左侧 的 块	找到 块 1 或块 2 左边 的 块	找到 第 1 块 或 第 2 块 剩下 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 下方 和 右边 的 所有 块	找到 1 号 街区 右下方 的 所有 街区	给 我 找到 第一块 在 下面 和 右边 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 左边 有 最少 块 的 块	找到 左边 最少 块 的 块	在 左侧 找到 它 旁边 有 最少 块 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 右侧 块数 最少 的 砖块	选择 右边 块数 最少 的 砖块	选择 右边 有 最少 块 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 3 英寸 宽 的 块	找到 3 英寸 宽 的 块	找出 3 英寸 宽 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
什么 块 是 下面 和 左边 的 块 1	下面 和 左边 的 第一个 街区 是 什么 街区	什么 街区 是 街区 1 的 左下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 特殊 的 3 英寸 高 的 块	选择 特殊 的 3 英寸 高 的 块	选择 特殊 的 3 英寸 高 的 模块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 一个 3 英寸 长 的 块	找 一个 3 英寸 长 的 街区	找 一个 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
只要 砖 1 宽 ， 什么 砖	什么 砖 只要 砖 1 宽	什么 砖 和 砖 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
高度 为 3 英寸 ， 宽度 为 3 英寸 的 块	高 3 英寸 宽 3 英寸 的 砌块	高 3 英寸 ， 宽 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 块 比块 1 高	哪个 街区 比 一号 街区 高	什么 街区 比 第一座 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
在 块 1 下 选择 具有 金字塔 形状 的 块	在 块 1 下 选择 具有 金字塔 形状 的 块	在 第一块 下面 选择 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 右边 和 上面 的 块	找 我 1 号 街区 的 右边 和 上面	给 我 找 一个 街区 ， 第一个 街区 在 右上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 街区 右侧 的 街区 1	找到 我 所有 街区 都 在 上面	找到 我 在 上面 第一个 街区 右边 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 块 1 高 的 块 很长	找 我 所有 的 街区 只要 1 号 街 区长	给 我 找到 所有 高到 第一个 街区 那么 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 上方 的 所有 特殊 块	给 我 找 第一 区 上面 所有 的 特别 街区	找到 1 号 楼上 所有 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 我 在 块 1 下方 的 所有 块	找 我 下面 的 所有 街区 1 在 上面	找到 我 下面 的 所有 街区 上面 的 街区 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
让 我 在 3 英寸 街区 的 右边 一个 街区	在 3 英寸 街区 的 右边 给 我 一个 街区	给 我 找 一个 3 英寸 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一块 至少 3 英寸 长 的 块	找 一个 至少 3 英寸 长 的 街区	找 一个 至少 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
第 1 块 的 特殊 区块	1 区 特殊 街区 右侧	第 1 街区 的 特殊 街区 右	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 一个 至少 3 英寸 宽 的 块	找 一个 至少 3 英寸 宽 的 街区	找 一个 至少 3 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 最 多 两个 块 以上	最 多 两个 街区 以上 的 街区	顶多 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 不 超过 3 或 6 英寸	哪 块砖 不 超过 3 或 6 英寸	哪一块 砖 的 宽度 不 超过 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 块 下面 的 块 数最多	哪个 街区 下面 的 街区 最 多	什么 街区 下面 的 街区 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 3 或 6 英寸 高 的 街区	给 我 找 一个 3 或 6 英寸 高 的 街区	给 我 找 一个 3 或 6 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 我 最 多 2 个 街区 以上 的 所有 街区	找 我 上面 最 多 两个 街区	找到 我 上面 最 多 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 右边 第 2 块	1 号 街区 右侧 第 2 个 街区	在 第一座 右边 第二个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 一个 左边 最多 2 个 街区 的 街区	选择 一个 最 左边 2 个 街区 的 街区	选择 最 左边 2 个 方块 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 3 英寸 长 的 块 下面	3 英寸 长 的 积木 下面 是 什么 积木	3 英寸 长 的 方块 下面 是 什么 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
长度 为 3 英寸 或 6 英寸 的 块	长度 为 3 英寸 或 6 英寸 的 块	长度 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
块 的 长度 最小 为块 1 的 高度	长度 最小 为块 1 高度 的 块	块 的 长度 是 块 1 的 高度 的 最小值	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 金字塔 块 右边 的 所有 街区	找 我 金字塔 右边 的 所有 街区	找到 金字塔 右边 所有 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 我 所有 的 块 比 3 英寸 宽	找 我 所有 3 英寸 宽 的 街区	找到 所有 大于 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 在 块 1 的 右边 和 上面	哪个 街区 在 1 号 街区 的 右边 和 上面	哪个 街区 在 第一 街区 的 右上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
在 块 1 下面 找到 一个 特殊 块	在 第一块 下面 找 一个 特殊 的 块	在 第一个 街区 下面 找到 一个 特别 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 块 1 右侧 的 块 ， 块 1 位于 下方	找到 块 1 的 右边 的 块	找到 在 第一个 方块 下面 的 方块 右边 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
块 1 左侧 的 块 左侧 的 块	块 左边 的 块 左边 的 块	这是 block   1 左边 的 block	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 比块 1 更 宽 的 块	找 一个 比 1 号 街区 高 的 街区	找 一个 比 第一个 街区 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪 块砖 不 高于 3 或 6 英寸	哪 块砖 不 高于 3 或 6 英寸	哪一块 砖 不 超过 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 我 上面 至少 有 2 个 街区 的 所有 街区	找到 上面 至少 有 两个 街区 的 所有 街区	给 我 找到 上面 至少 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 区块 位于 区块 1 下方 的 区块 下方	哪个 街区 在 街区 1 下面 的 街区 下面	哪个 街区 在 第一 街区 的 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 我 上面 不到 2 个 街区 的 所有 街区	把 上面 不到 两个 街区 的 所有 街区 都 找 出来	找到 上面 小于 2 块 的 所有 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 高于 3 或 6 英寸	哪 块砖 比 3 或 6 英寸 高	哪一块 砖 高于 3 英寸 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 的 高度 小于 或 等于 块 1 的 长度	哪个 块 的 高度 小于 或 等于 块 1 的 长度	什么 块 的 高度 小于 或 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 至少 3 英寸 宽 或 6 英寸 宽 的 块	找到 宽度 至少 为 3 英寸 或 6 英寸 的 块	找 一块 至少 3 英寸 或 6 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 特殊 的 块	找到 那个 特别 的 街区	找到 特殊 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) )
是否 有 一个 宽度 等于 3 或 6 英寸 的 块	有 宽度 等于 3 或 6 英寸 的 块 吗	是否 有 宽度 等于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
只要 第 1 块 就 找到 我 所有 的 块	找 我 所有 街区 只要 1 街区	找到 所有 的 街区 ， 只要 第一个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
块 是 特殊 的 块 的 右边	街区 右边 的 街区 很 特别	特殊 块 的 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 宽度 与 块 1s 长度 相同 的 块	选择 宽度 与 块 1s 长度 相同 的 块	选择 一个 与 1s 长度 相同 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 块 1 下面 也 是 3 英寸 长 的 块	在 街区 1 下面 找到 同样 长 3 英寸 的 街区	找到 第一块 下面 的 方块 ， 它 也 有 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 长度 为 3 英寸 且 高于 块 1 的 块	选择 长度 为 3 英寸 且 高于 块 1 的 块	选择 长度 为 3 英寸 且 在 第 1 块 之上 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 形状 的 所有 块	帮 我 找到 所有 形状 为 1 号 街区 的 街区	给 我 找到 所有 1 号 街区 形状 的 街区	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
块 的 长度 至少 是 块 1 的 宽度	长度 至少 为块 1 宽度 的 块	长度 至少 为块 1 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
是否 有 一个 块 位于 块 1 的 左侧	有 一个 街区 在 街区 1 的 左边 吗	1 号 街区 左边 有 街区 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
找到 我 下面 两个 或 更 多块 的 块	找到 两个 或 两个 以上 街区 下面 的 街区	给 我 找 两个 或 两个 以上 街区 下面 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 块 1 的 左边 ， 宽度 为 3 英寸	哪个 块 在 块 1 的 左边 ， 宽度 是 3 英寸	什么 街区 在 第一 街区 的 左边 ， 宽度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 位于 块 1 左侧 ， 块 1 位于 下方	哪个 街区 在 街区 1 的 左边	哪个 街区 在 街区 的 左边 ， 第一个 街区 在 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 2 区块 下面 的 区块	选择 2 块 下面 的 块	选择 2 个 方块 下面 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 宽度 小于 块 1 的 长度	宽度 小于 块 1 长度 的 块	块 的 宽度 小于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 位于 下方 和 左侧 的 块	找到 1 号 街区 的 左边 和 下面 的 街区	帮 我 找到 第一个 街区 在 它 的 左下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
哪种 砖 的 颜色 最 多	哪 块砖 的 颜色 最 多	哪 块砖 颜色 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string color ) ) )
在 块 1 上方 的 块 右侧 的 块	块 1 上方 的 块 右侧 的 块	在 第一个 街区 上面 的 街区 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
一块 3 英寸 长 的 块	3 英寸 长 的 木块	一个 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 特殊 区块 下面 的 所有 区块	在 特殊 街区 下面 找 我 所有 街区	找到 特殊 街区 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 特殊 的 块 并 在 块 1 下面	选择 块 1 下方 的 特殊 块	选择 块 1 以下 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
阻止 块 1 的 右侧	街区 不 在 街区 1 的 右侧	在 第一座 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string ! = ) en.block.block1 ) )
块 的 平均 高度	砌块 平均 高度	滑车 平均 高度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
哪个 块 在 块 1 的 上方 和 左侧	哪个 街区 在 街区 1 的 左上方	哪个 街区 在 街区 1 的 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 块 1 上方 的 所有 块	把 1 号楼 上面 的 所有 街区 都 找 出来	找到 1 号 街区 以上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 阻止 1 块 的 所有 块 都 不 对	找到 1 号 街区 不 合适 的 所有 街区	找到 我 所有 的 块 ， 那块 1 是 不 对 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string ! = ) en.block.block1 ) )
块 1 的 上方 和 左侧 是 什么 块	什么 街区 在 街区 1 的 左上方	什么 街区 在 街区 1 的 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 右侧 的 金字塔 块	区块 1 右侧 的 金字塔 区块	1 号楼 右边 的 金字塔 座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
选择 少于 两种 颜色 的 块	选择 少于 两种 颜色 的 块	选择 少于 两种 颜色 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
块 下面 2 块	低于 2 个 街区	低于 2 个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻挡 在 3 英寸 宽 的 块 上方	在 3 英寸 宽 的 块 上面 的 块	块 上面 的 块 是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
块 2 下 的 块 较 小	街区 2 下面 的 街区 更 小	第二 街区 下面 的 街区 比较 小	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 位于 块 1 上方 的 块 上方 的 块	帮 我 找到 1 号 街区 上方 的 街区	找到 在 第一个 方块 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 块 1 的 右边 和 下面	什么 街区 在 街区 1 的 右边 和 下面	什么 街区 在 第一 街区 的 右边 和 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 长 的 块 ， 块 1 是 剩下 的	找到 1 号 街区 左边 所有 3 英寸 长 的 街区	把 第一个 街区 剩下 的 所有 3 英寸 长 的 街区 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
什么 块 最 多 有 两个 块	哪个 街区 上面 最多 有 两个 街区	什么 街区 最多 有 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 和 块 1 一样 宽	哪个 街区 和 第一 街区 一样 高宽	什么 街区 和 第一座 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
块 有 两个 以上 的 形状	两个 以上 形状 的 块	具有 两个 以上 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string > ) ( number 2 ) ) )
阻止 两个 或 更 多块	两个 或 多个 街区 以上 的 街区	两个 或 两个 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 金字塔 块 上方 的 所有 块	找到 金字塔 上面 的 所有 方块	找到 金字塔 上面 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
高度 至少 为 3 英寸 的 块	高度 至少 为 3 英寸 的 砌块	块 的 高度 至少 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪个 块 的 右侧 块 数最多	哪个 街区 右边 的 街区 最 多	哪个 街区 右边 的 街区 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 宽 的 块 ， 就 在 块 1 的 右边	找到 1 号 街区 右边 所有 3 英寸 宽 的 街区	找到 1 号 街区 右边 所有 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 的 长度 最短	哪个 街区 最短	哪个 块 的 长度 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
在 最 多 两个 街区 找到 一个 街区	最多 在 两个 街区 以上 找 一个 街区	找到 上面 的 一个 街区 ， 最 多 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 高 的 块 ， 块 1 在 上面	找 我 所有 3 英寸 高 的 街区 1 号 在 上面	把 上面 第一座 的 3 英寸 高 的 积木 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 1 左下方 的 块	街区 1 下方 街区 左侧	在 第一座 下面 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
高度 小于 3 英寸 的 块	高度 小于 3 英寸 的 块	高度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 或块 2 上方 的 块	查找 块 1 或块 2 上方 的 块	找到 街区 1 或 街区 2 以上 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 在 块 1 左下方 的 所有 块	找到 1 号 街区 左下 的 所有 街区	找到 所有 左边 的 街区 和 1 号 街区 以下 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
什么 砖 至少 和 砖 1 一样 高	哪 块砖 至少 和 砖 1 一样 高	什么 砖 至少 和 砖 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
两种 或 更 多种 颜色 的 块	两种 或 更 多 颜色 的 块	两种 或 两种 以上 颜色 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string >= ) ( number 2 ) ) )
块 1 留下 三 英寸 宽 的 块	1 号 街区 的 左边 有 3 英寸 宽 的 街区	第一座 还 剩 三 英寸 宽 的 东西	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
块 1 在 块 1 的 右侧 ， 并且 在 块 1 的 右侧	一号 街区 右边 和 一号 街区 右边 的 街区	这 是 块 1 的 右边 ， 这 是 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
块 上方 至少 3 英寸 长	块体 以上 至少 3 英寸 长	以上 块 至少 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
从 第 1 块 开始 阻止 上方 和 下方	1 号 区块 上方 和 右侧 的 区块	上面 的 块 和 来自 块 1 的 rigth	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪个 砖 是 金字塔 形砖 的 右边	哪 块砖 在 金字塔 形砖 的 右边	哪 块砖 在 金字塔 形砖 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
在 上面 两个 街区 阻挡	至少 两个 街区	至少 过 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 英寸 长 的 块 上方 的 块	在 块 1 上方 选择 一个 3 英寸 长 的 块	选择 一个 块 上面 的 块 是 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 最 宽 的 块	选择 最 宽 的 块	选择 最 宽块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string width ) ) ) )
什么 块 在 块 1 的 右边 和 上面	哪个 街区 在 1 号 街区 的 右边 和 上面	哪个 街区 在 第一 街区 的 右上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 我 最 多 低于 2 个 街区 的 所有 街区	找到 2 个 街区 以下 最多 的 街区	帮 我 找到 最多 在 2 个 街区 以下 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 短于 3 英寸 的 街区	找 我 所有 小于 3 英寸 的 街区	找到 所有 小于 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 一个 低于 不 超过 两个 块 的 块	找 一个 不 超过 两个 街区 的 街区	找到 一个 不 超过 两个 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
在 右侧 和 下方 有块 1 的 块	右下方 有 1 号 区块 的 区块	块 在 右边 和 下面 有块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 两个 以上 块 的 左边	哪个 街区 在 两个 街区 的 左边	哪个 街区 在 两个 街区 以上 的 左边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
高度 为 3 英寸 或 6 英寸 的 块	高度 为 3 英寸 或 6 英寸 的 块	块 的 高度 为 3 英寸 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
只要 块 1 ， 最 多 找到 我 所有 的 块	找 我 所有 街区 最 多 只要 1 街区	找到 我 所有 的 街区 ， 只要 街区 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻止 位于 块 1 上方 的 块 下方	块 1 上 的 块 下面 的 块	在 第一块 上面 的 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
3x3 英寸 的 块	3x3 英寸 块	3   *   3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 以上 的 所有 块	找到 1 号 街区 下面 的 所有 街区	找到 上面 第一个 街区 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
块 1 中 的 块	一号 街区	第一座 中 的 第一座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 右侧 的 特殊 块	1 号 街区 右侧 的 特殊 街区	1 号楼 右边 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 我 比块 1 的 高度 更 宽 的 块	找到 所有 比 1 号 街区 宽 的 街区	找到 比 1 号楼 还 宽 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 最 左边 的 砖块	选择 最 左边 的 砖块	选择 最 左边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 金字塔 块 右边 的 所有 块	找到 金字塔 块 右边 的 所有 块	找到 我 所有 的 街区 ， 金字塔 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
哪个 块 至少 与 块 1 一样 高	哪 一个 街区 至少 和 街区 1 一样 高	哪一块 至少 和 第一块 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
不能 相形见绌	不能 同 相	不能 倒 相	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 块 2 下面 的 块	选择 块 2 下 的 块	选择 方块 2 以下 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 少于 2 个 形状 的 块	找到 所有 小于 2 个 形状 的 块	找到 所有 小于 2 个 形状 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
选择 块 1 左侧 的 块	选择 块 1 左侧 的 块	选择 块 1 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 所有 特殊 块	找到 1 号 街区 下 的 所有 特殊 街区	找到 1 号楼 下面 的 所有 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 两个 块 左侧 的 块	选择 两个 块 左侧 的 块	选择 两个 块 的 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左边 的 块 ， 其 形状 是 金字塔	给 我 找 块 1 左边 的 块 ， 它 的 形状 是 金字塔	帮 我 找到 第一座 左边 的 那座 ， 它 的 形状 是 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 下方 和 块 1 左侧 两个	街区 1 的 下方 和 左侧 两个 街区	往下走 两个 街区 ， 往 左 走 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 或 6 英寸 长 的 块	找 我 所有 3 或 6 英寸 长 的 街区	找到 所有 3 或 6 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 一个 特殊 的 金字塔 形块	给 我 找个 特殊 的 金字塔 形 的 块	给 我 找 一个 特殊 的 金字塔 形状 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
找到 我 和 块 1 一样 长 的 所有 块 都 很长	找 我 所有 的 街区 都 像 1 号 街区 那么 高	给 我 找到 所有 的 街区 ， 只要 街区 一长 就 够 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 所有 与 块 1 宽度 相同 的 块	给 我 找 一个 和 一号 街区 一样 宽 的 街区	找到 和 第一块 一样 宽 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
第 1 块 左边	1 区 左侧	第一座 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 低于 两个 块	哪个 街区 低于 两个 街区	哪个 街区 低于 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 金字塔 块 下面 的 所有 块	找到 金字塔 下面 的 所有 方块	找到 金字塔 下面 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 宽度 为 3 英寸 ， 金字塔 形状 的 全部	选择 宽度 为 3 英寸 、 形状 为 棱锥 体 的 所有 项	选择 所有 的 是 3 英寸 的 宽度 和 金字塔 的 形状	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 金字塔 块 左侧 的 所有 块	查找 位于 棱锥 体块 左侧 的 所有 块	找到 一个 金字塔 方块 左边 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 块 1 右侧 的 特殊 块	选择 块 1 右侧 的 特殊 块	选择 块 1 右边 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 一个 在 右边 有 一个 特殊 区块 的 区块	给 我 找 一个 右边 有 特殊 街区 的 街区	给 我 找 一个 右边 有 特殊 街区 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
位于 块 1 下方 的 块 下方 的 块	低于 区块 1 的 区块	在 第 1 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 块 1 右边 和 上面 的 块	帮 我 找到 1 号 街区 的 右边 和 上面 的 街区	帮 我 找到 在 第一个 街区 上面 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 一块 3 英寸 高 的 街区	找 一个 3 英寸 高 的 街区	找 一个 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
阻止 块 1 右边 的 块 右边	块 的 右边 就是 块 1 的 右边	块 的 右边 就是 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 我 上面 超过 2 个 街区 的 所有 街区	找到 上面 有 两个 以上 街区 的 所有 街区	找到 上面 超过 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
有 一块 测量 为 3 英寸 或 6 英寸 的 块	有 尺寸 为 3 英寸 或 6 英寸 的 块 吗	有没有 3 英寸 或 6 英寸 的 积木	( call SW.listValue ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) )
块 1 上方 3 英寸 长 的 块	块 1 上方 3 英寸 长 的 块	1 号 楼上 方 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 比块 1 更 高 的 块 是 宽 的	找 一个 比 一号 街区 宽 的 街区	找 一个 比 第一个 街区 宽 的 街区 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 位于 至少 两个 其他 块 右侧 的 块	找到 至少 位于 其他 两个 街区 右侧 的 街区	找到 位于 至少 两个 其他 块 右边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 下面 不到 2 个 街区 的 所有 街区	找到 所有 低于 2 个 街区 的 街区	找到 所有 低于 2 个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 特殊 的 3 英寸 长 的 块	给 我 找 一个 特别 的 3 英寸 长 的 街区	给 我 找 一个 特别 的 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
块 1 右侧 的 特殊 块	1 号 街区 右侧 的 特殊 街区	1 号楼 右边 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
块 1 下方 3 英寸 高 的 块	1 号 街区 下方 3 英寸 高 的 街区	1 号楼 下面 有 3 英寸 高 的 楼	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
块 1 和 3 英寸 高度 留下 了 什么 块	1 号 和 3 号 街区 的 剩余 高度 是 多少 ？	还 剩下 多少 块 1 和 3 英寸 高 的 积木 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
特殊 的 块 ， 它 是 块 1 的 右侧	特别 的 街区 ， 在 街区 1 的 右边	这个 特殊 的 块 在 第一个 块 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string right ) ( string = ) en.block.block1 ) )
块 1 左侧 是 什么 块 ， 块 1 位于 右侧	块 1 在 块 的 左边 ， 块 1 在 块 的 右边	第 几块 在 左边 第 几块 在 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
块 比块 1 宽	块 宽 于 块 1	比 第一座 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 右边 3 英寸 块	1 号 区块 右侧 3 英寸 区块	在 第一座 右边 3 英寸 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 位于 最大 数量 的 其他 块 顶部 的 块	找到 位于 其他 块 的 最大 数量 顶部 的 块	查找 位于 其他 块 的 最高 数量 的 块 的 顶部	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 低于 两块 砖	哪 块砖 低于 两块 砖	哪 块砖 低于 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 块 比块 1 长 ， 是 宽 的	哪个 街区 比 街区 1 长宽	哪一块 比 第一块 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 3 英寸 宽 的 块 下方 的 所有 块	找 我 3 英寸 宽 的 街区 下面 的 所有 街区	找到 所有 3 英寸 以下 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下面 的 块	找到 1 号 街区 下 的 街区	帮 我 找 一下 第一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
什么 块 的 高度 不 等于 3 英寸	什么 砖 的 高度 不 等于 3 英寸	什么 积木 的 高度 不 等于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 块 1 下面 的 块	找到 块 1 下面 的 块	找到 第一块 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 之上 的 块	帮 我 找到 1 号楼 上面 的 那个 街区	帮 我 找到 第一个 街区 上面 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
阻挡 3 英寸 高和长	高 3 英寸 ， 长 3 英寸	块 3 英寸 高和长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
是否 有 一块 位于 另 一块 3 英寸 长 的 左侧	在 另 一个 街区 的 左边 有 3 英寸 长 的 街区 吗	在 另 一个 街区 的 左边 有 一个 3 英寸 长 的 街区 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 下方 的 金字塔 形块	选择 块 1 下 的 金字塔 形块	选择 第 1 块 下面 的 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
第 1 块 左边	1 区 左侧	第一座 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 上方 的 所有 块	找到 1 号 街区 以上 的 所有 街区	找到 1 号 楼上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 一个 短于 6 英寸 的 块	找 一个 短于 6 英寸 的 街区	找 一个 小于 6 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 是 金字塔 形状 并且 在 块 1 之上	什么 块 是 金字塔 形 的 ， 在 1 块 上面	什么 方块 是 金字塔 的 形状 ， 并且 在 第一个 方块 的 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 身高 3 英寸 的 街区	给 我 找 一个 3 英寸 高 的 街区	给 我 找 一个 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 超过 两个 块	哪个 街区 在 两个 街区 以上	什么 街区 比 两个 街区 还 高	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 高于 3 英寸 的 块	找 一个 3 英寸 以上 的 街区	找 一个 比 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 小于 3 英寸 长	哪个 街区 不到 3 英寸 长	什么 东西 不到 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 右侧 的 块 ， 其 形状 也 是 金字塔	找到 块 1 右侧 的 块 ， 其 形状 也 是 一个 金字塔	找到 第一块 右边 的 方块 ， 它 的 形状 也 是 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 在 上面 的 块	找到 第一块 上面 的 那块	找到 第一块 在 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
哪 块砖 的 宽度 小于 3 英寸	哪 块砖 的 宽度 小于 3 英寸	哪一块 砖 的 宽度 小于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
第 1 块 的 权利	1 区 右侧	第一座 权利	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 左侧 的 块	在 街区 1 的 左边 找 一个 街区	在 街区 1 的 左边 找到 一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 块 1 或 2 右侧 的 所有 砖块	选择 块 1 或块 2 右侧 的 所有 砖块	选择 第一块 或 第二块 的 所有 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 所有 街区 和 街区 1	找 我 所有 街区 和 1 街区 以上 的 地方	给 我 找到 所有 的 街区 和 整个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
什么 砖 是 3 英寸 宽 和 3 英寸 高	什么 砖 3 英寸 宽 3 英寸 高	什么 砖 3 英寸 宽 ， 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 超过 3 英寸 的 块	给 我 找 一个 3 英寸 宽 的 街区	给 我 找 一个 比 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻止 最 多 两个 块 是 对 的	最 多 两个 街区 右边 的 街区	那块 最多 两块 的 是 对 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 块 1 ， 块 1 在 左边	给 我 找个 街区 1 号 街区 在 左边	给 我 找 一个 街区 ， 第一座 在 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 的 块 比块 1 宽 或 宽	找到 所有 比 1 号 街区 宽 或 宽 的 街区	找到 所有 和 第一个 街区 一样 宽 或 比 第一个 街区 更 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 1 区 右侧 的 3 英寸 区块	选择 块 1 右侧 的 3 英寸 块	选择 1 号 地块 右侧 3 英寸 的 地块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 一个 块 下面 最 多 两个 街区	给 我 找 一个 不 超过 两个 街区 的 街区	给 我 找 一个 最 多 两个 街区 以下 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 左边 有 2 个 以上 街区 的 砖块	选择 左边 有 两个 以上 街区 的 砖块	选择 一个 在 它 左边 超过 2 个 街区 的 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 长度 是 多少	第一 区 的 长度 是 多少	第一座 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
选择 形状 数 最少 的 所有 块	选择 形状 数 最少 的 所有 块	选择 形状 最少 的 所有 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string shape ) ) )
哪 块砖 比 3 英寸 宽	哪 块砖 比 3 英寸 宽	哪一块 砖比 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 我 所有 3 英寸 高 的 特殊 块	找 我 所有 3 英寸 高 的 特殊 积木	找到 所有 3 英寸 高 的 特殊 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
在 特殊 区块 下面 阻止	特殊 块 下 的 块	特殊 块 下块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 位于 下方 并且 长度 为 3 英寸 的 块	找到 1 号 街区 下面 的 3 英寸 长 的 街区	找到 第一块 下面 的 木块 ， 它 的 长度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 3 英寸 区块 以上 的 区块	选择 高于 3 英寸 块 的 块	选择 一个 3 英寸 以上 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 位于 最大 块数 右侧 的 单个 块	找到 位于 最大 块数 右侧 的 单个 块	找到 位于 最大 块 的 右边 的 单个 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 块 1 左下方	1 号 区块 左下方	街区 左边 和 街区 1 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 一个 3 英寸 的 lwide 区块	找到 一个 3 英寸 长 的 砌块	找到 一个 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 砖 的 形状 像 金字塔	哪 块砖 的 形状 像 金字塔	哪一块 砖 的 形状 像 金字塔	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
在 块 1 上方 阻止 两个	1 区 以上 2 区	在 第一座 上面 的 第二座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 块 1 的 左下方	在 1 号 街区 的 左边 和 下面 是 什么 街区	在 第一个 街区 的 左边 和 下面 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 左侧 块数 最少 的 砖块	选择 左侧 块数 最少 的 砖	选择 最 左边 有 最少 块 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 高 3 英寸 ， 高于 块 1	哪个 街区 高 3 英寸 ， 高于 街区 1	什么 街区 是 3 英寸 高 ， 在 街区 1 之上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
什么 块长 3 英寸 或 更 短	哪个 街区 3 英寸 或 更 短	什么 块 是 3 英寸 或 更 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 或 2	1 区 或 2 区	要么 是 街区 1 ， 要么 是 街区 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
什么 砖 至少 3 或 6 英寸	什么 砖 至少 有 3 或 6 英寸	什么 砖 至少 3 或 6 英寸	( call SW.listValue ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) )
找到 位于 其 上方 的 第 1 块 的 所有 区块	找到 1 号 街区 右边 的 所有 街区	找到 它 上面 的 第一个 街区 右边 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 不 高于 砖 1 的 砖	选择 不 高于 砖 1 的 砖	选择 不 高于 砖块 1 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 在 块 1 上方 的 所有 3 英寸 宽 的 块	找到 1 号 街区 上方 3 英寸 宽 的 街区	找到 1 号 楼上 所有 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
在 块 1 上方 阻止 两个	1 区 以上 2 区	在 第一座 上面 的 第二座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
看到 块 1 上方 的 块 并 获得 该块 的 左侧 块	看 1 号 街区 上方 的 街区 ， 然后 从 左边 的 街区	参见 block   1 上面 的 block ， 然后 从 block   1 的 左边 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
3 英寸 砖 在 砖 1 的 左边	砖头 1 左边 是 多少 3 英寸 的 砖头	1 号 砖 的 左边 是 3 英寸 的 砖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 或块 2 下面 的 块	查找 块 1 或块 2 下 的 块	找到 块 1 或块 2 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪 块砖 的 长度 小于 3 或 6 英寸	哪 块砖 的 长度 小于 3 或 6 英寸	哪一块 砖 的 长度 小于 3 或 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
这是 特殊 区块 右侧 的 区块	哪个 街区 在 特殊 街区 的 右边	哪个 是 特殊 街区 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
块 1 的 右边 是 什么 块	哪个 街区 在 1 号 街区 的 右边	哪个 街区 在 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
块数	块数	数量 的 块	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 右侧 的 块	选择 块 1 右侧 的 块	选择 块 1 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 在 块 1 下方 2 个 街区 的 所有 街区	找到 1 号 街区 下 2 号 街区 的 所有 街区	找到 1 号楼 下面 的 2 号楼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 至少 3 英寸 高 的 块	选择 至少 3 英寸 高 的 块	选择 至少 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 下面 的 块	选择 块 1 下面 的 块	选择 块 1 以下 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
块 1 下方 3 英寸 块	1 号 区块 下方 3 英寸 区块	在 第一座 下面 3 英寸 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
第 1 块 左边 第 2 个 街区	街区 1 左侧 第二 街区	第一座 左边 第二个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
什么 块 的 宽度 为 3 英寸 ， 高于 块 1	哪个 区块 的 宽度 为 3 英寸 ， 高于 区块 1	什么 东西 的 宽度 是 3 英寸 ， 在 第一块 的 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
块 1 位于 块 1 右侧 ， 长度 为 3 英寸	位于 1 号 区块 右侧 ， 长度 为 3 英寸 的 区块	在 第一块 的 右边 ， 长度 为 3 英寸 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 一个 低于 3 英寸 区块 的 区块	选择 低于 3 英寸 块 的 块	选择 一个 低于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
高 3 英寸 ， 宽 3 英寸 的 块	3 英寸 高 3 英寸 宽 的 块	3 英寸 高 ， 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 不 高于 块 1 宽度 的 英寸 块	定位 不 高于 块 1 宽度 （ 英寸 ） 的 块	找到 不比 第一块 高几 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
在 块 1 的 正下方	1 号 区块 右下方	右转 ， 在 第一座 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 左边 有 两个 或 更 少块 的 块	找 一个 左边 有 两个 或 更少 街区 的 街区	找 一个 左边 有 两个 或 两个 以下 方块 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 2 右侧 的 块	选择 块 2 的 块 右侧	选择 block   2 的 右侧 block	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 金字塔 块	找 我 所有 的 金字塔 块	找到 所有 的 金字塔 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 在 块 1 下方 和 左侧 的 所有 块	找到 1 号 街区 左边 和 下面 的 所有 街区	帮 我 找到 1 号楼 左边 和 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 一个 宽度 与 块 1s 长度 相同 的 块	给 我 找 一个 和 第一块 一样 宽 的 块	给 我 找 一个 和 1s 长度 一样 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
选择 块 1 不 在 下面 的 块	选择 块 1 不 在 下面 的 块	选择 块 1 不 在 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string ! = ) en.block.block1 ) )
找到 我 所有 的 金字塔 块 ， 这 是 块 1 的 右边	找到 1 号 街区 右边 的 所有 金字塔 街区	给 我 找到 所有 的 金字塔 ， 就 在 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 块 左边 的 块	找 我 3 英寸 街区 左边 的 所有 街区	找到 所有 剩下 的 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
块 的 宽度 小于 块 1 的 高度	宽度 小于 块 1 高度 的 块	块 的 宽度 小于 块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
什么 块 具有 金字塔 的 形状 ， 位于 块 1 的 左侧	哪个 街区 有 金字塔 形状 ， 在 街区 1 的 左边	什么 东西 有 金字塔 的 形状 ， 在 第一座 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 在 块 1 下方 和 右侧 的 所有 块	找到 1 号 街区 右下 的 所有 街区	在 第一个 街区 的 右下方 找到 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 低于 块 1 或块 2	块 1 或块 2 以下 的 块	在 第 1 块 或 第 2 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
第 1 区 左侧 3 英寸 区块	块 1 左侧 3 英寸 块	1 号楼 左 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 高于 最少 块数 的 砖块	选择 块数 最少 的 砖	选择 块数 最少 的 砖	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 或块 2	找 我 1 区 还是 2 区	给 我 找到 第一座 或 第二座	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
找到 块 1 右侧 和 左侧 的 块	找到 街区 1 左右 的 街区	找到 1 号 街区 左右 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
什么 块 在 右边 和 左边 有块 1	哪个 街区 左右 各有 一个 街区	什么 街区 左右 都 有 街区 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 不 小于 3 英寸 高 的 块	找到 不 低于 3 英寸 高 的 街区	找出 不 小于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 不 比 任何 其他 块长	哪个 街区 不比 其他 任何 街 区长	什么 积木 不比 其他 的 长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
选择 3 英寸 长 的 砖 1 下面 的 砖	选择 砖 1 下面 3 英寸 长 的 砖	选择 1 块砖 下 3 英寸 长 的 砖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
哪 块砖 在 左边 不到 两块 砖	哪 块砖 在 不到 两块 砖 的 左边	少于 两块 砖 的 左边 是 哪 块砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 区 左侧 3 英寸 的 区块	一号 街区 左边 三 英寸 的 街区	在 第一个 街区 的 左边 有 一个 三 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
哪块 特殊 砖 在 砖 1 之上	砖 1 上面 是 哪块 特殊 的 砖	1 号 砖 上面 是 哪一块 特殊 的 砖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
找 我 一个 最 宽 6 英寸 的 街区	给 我 找 一个 最 宽 6 英寸 的 街区	给 我 找 一个 最多 6 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找 我 一个 3 英寸 长 的 特殊 区块	给 我 找 一个 3 英寸 长 的 特别 街区	给 我 找 一个 3 英寸 长 的 特殊 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 1 的 下方 和 左侧	1 号 区块 左下方	在 第一座 的 左下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
在 块 1 下面 的 块 的 右边 是否 有 一个 块	在 1 号 街区 的 右边 有 一个 街区 吗	在 第一个 街区 下面 的 街区 右边 有 一个 街区 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
块 的 平均 宽度 是 多少 ？	块 的 平均 宽度 是 多少	积木 的 平均 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
找到 块 1 的 所有 特殊 块 是 对 的	找到 1 号 街区 右边 的 所有 特殊 街区	找 我 所有 的 特殊 块 ， 那块 1 是 正确 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻挡 在 3 英寸 高 的 街区 右侧	挡块 位于 3 英寸 高 的 挡 块 右侧	块 在 3 英寸 高 的 块 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 左侧 块数 最少 的 砖块	选择 左侧 块数 最少 的 砖	选择 最 左边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 块 1 的 上方 和 右侧	1 号 区块 右上方 的 区块	在 第一座 的 右上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
块 的 宽度 至少 是 块 1 的 长度	宽度 至少 为块 1 长度 的 块	块 的 宽度 至少 为块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 块 1 左侧 的 特殊 块	选择 块 1 左侧 的 特殊 块	选择 第 1 块 左边 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string is_special ) ) )
什么 块 在 块 1 上方 的 块 上方	哪个 街区 在 街区 1 的 上面	在 第一个 街区 上面 的 街区 上面 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 最短 的 块	找到 最短 的 块	找到 最短 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
找到 块 1 的 块 1 和 块 1 的 右块 1	找到 1 号 街区 的 1 号 街区 和 1 号 街区 的 1 号 街区	找到 第一块 的 上 1 和 右 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
哪个 特殊 区块 位于 砖块 1 的 左侧	哪 一个 特别 的 街区 在 砖 1 的 左边	1 号 砖 左边 是 哪个 特殊 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
砖 的 高度 是 多少 1	砖 1 的 高度 是 多少	砖 的 高度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
选择 金字塔 块 右侧 的 块	选择 位于 棱锥 体块 右侧 的 块	选择 金字塔 方块 右边 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
什么 块 不 在 块 1 的 左边	哪个 街区 不 在 街区 1 的 左边	哪个 街区 不 在 第一座 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
任何 宽度 为 3 英寸 或 6 英寸 的 块	任何 宽度 为 3 英寸 或 6 英寸 的 块	宽度 为 3 英寸 或 6 英寸 的 任何 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
什么 块 至少 与 块 1 一样 长	哪个 街区 至少 和 第一 街区 一样 高是 长 的	哪个 街区 至少 和 第一座 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 的 平均 高度	求块 的 平均 高度	求 一个 街区 的 平均 高度	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
找到 我 有 两个 形状 的 所有 块	找到 所有 有 两种 形状 的 积木	找到 所有 有 两个 形状 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
找到 我 所有 宽度 小于 6 英寸 的 块	找到 所有 宽度 小于 6 英寸 的 街区	找到 所有 宽度 小于 6 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 块 1 左侧 的 块 ， 块 1 位于 块 上方	选择 块 1 所在 块 左侧 的 块	选择 第 1 块 在 其 上 的 块 的 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
哪 块砖 比砖 1 长	哪 块砖 比砖 1 长	哪一块 砖比 一块 砖长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 所有 的 金字塔 块 ， 块 1 是 正确 的	找到 1 号 区块 右边 的 所有 金字塔 区块	找到 我 所有 的 金字塔 方块 ， 第一个 方块 是 对 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 高度 为 3 英寸 的 块 ， 位于 块 1 的 右侧	选择 高度 为 3 英寸 且 位于 块 1 右侧 的 块	选择 高度 为 3 英寸 且 位于 第 1 块 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
3 英寸 长 的 块 ， 位于 块 1 上方	3 英寸 长 的 积木 在 积木 1 上面	3 英寸 长 ， 在 第一块 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 留在 3 英寸 块 的 块	找到 3 英寸 块 的 左边 块	找到 剩下 的 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 所有 宽度 与 块 1 长度 相同 的 块	给 我 找 所有 和 1 号 街区 一样 宽 的 街区	找到 所有 和 第一块 的 长度 一样 宽 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
第 1 区 下方 2 个 街区	1 号 街区 下 2 个 街区	在 第一座 下面 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
什么 块 在 两个 以上 块 的 右边	哪个 街区 在 两个 街区 的 右边	哪个 街区 在 两个 街区 以上 的 右边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
让 我 在 块 1 下面 和 块 上面	给 我 找个 1 号 楼上 下 的 街区	帮 我 在 1 号 楼上 下 找 一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
块 1 下面 的 块 2	一号 楼下 二号楼	第一座 下面 的 第二座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 比 第 1 块 更 靠岸 的 块	找 一个 比 一号 街区 更 坚固 的 街区	找到 比 第 1 块 恢复 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪 块砖 不 超过 2 种颜色	哪 块砖 的 颜色 不 超过 两种	哪一块 砖 的 颜色 不 超过 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
什么 块 是 3 英寸 或 更 高	哪个 街区 3 英寸 或 更 高	什么 块 是 3 英寸 或 更 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 两个 块 右边 的 块	找 一个 在 两个 街区 右边 的 街区	找 一个 在 两个 街区 右边 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 砖 比块 1 的 宽度 更长	找 我 所有 比 1 号楼 宽 的 砖块	帮 我 找到 所有 比 1 号楼 还 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 下面 的 块 是 3 英寸 宽	1 号 街区 下面 的 哪个 街区 3 英寸 宽	1 号楼 下面 的 那块 是 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 一个 像 块 1 或 更 宽 的 块	给 我 找 一个 和 1 号 街区 一样 宽 的 街区	给 我 找 一个 和 第一个 街区 一样 宽 或 更 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
第 1 块 右边 的 两个 街区	1 区 右侧 两个 街区	在 第一座 右边 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
是否 有 与 块 1 颜色 相同 的 块	有 和 第一块 颜色 一样 的 块 吗	是否 有 与 第一块 相同 颜色 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
找到 块 1 右下方 的 块	找到 第一个 街区 的 右边 和 下面 的 街区	找到 在 第一块 正下方 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
什么 块 是 大多数 块 的 左边	在 大多数 街区 的 左边 是 哪个 街区	哪个 街区 在 大多数 街区 的 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 宽度 是 多少 ？	这个 街区 的 宽度 是 多少	积木 的 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
块 长度 最多为 块 1 的 长度	长度 不 超过 块 1 长度 的 块	块 的 长度 不 超过 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
在 砖块 1 正下方 的 砖块 右侧 选择 一块 砖块	选择 砖块 右侧 砖块 1 正下方 的 砖块	选择 砖块 的 右边 ， 正好 在 砖块 1 的 正下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 一块 长度 不 超过 3 英寸 的 砖块	选择 一块 不 超过 3 英寸 长 的 砖	选择 一块 不 超过 3 英寸 长 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 上 方块 的 左侧 是 什么 块	什么 街区 在 街区 1 上方 的 街区 左边	什么 街区 在 第一 街区 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
第 1 块 左边 第 2 块	街区 1 左二	第一座 左二	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
哪个 街区 是 最高 的	哪个 街区 最高	哪个 街区 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
具有 最少 颜色 数 的 块	颜色 最少 的 块	颜色 最少 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string color ) ) )
选择 块 2 右侧 的 块	选择 块 2 右侧 的 块	选择 街区 2 右边 的 一个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
金字塔 形块 左侧 的 块	金字塔 形块 左侧 块	块体 位于 金字塔 形 块体 的 左侧	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
在 块 1 的 正下方	1 号 区块 右下方	右转 ， 在 第一座 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
第 1 块 有 多 高	一号 楼有 多 高	第一座 有 多 高	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
哪 一个 是 3 英寸 特殊 块	哪 一个 是 3 英寸 的 特殊 块	哪 一个 是 3 英寸 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 下面 有 少量 块 的 块	给 我 找 一个 下面 有 最少 街区 的 街区	给 我 找 一个 方块 数 最少 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 或 2 左边 的 所有 块	找到 1 区 或 2 区 左边 的 所有 街区	找到 1 号 或 2 号 街区 剩下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 所有 的 金字塔 块	找 我 所有 的 金字塔 块	找到 所有 的 金字塔 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
这是 1 区 左侧 3 英寸 高 的 街区	那 是 1 号 街区 左边 3 英寸 高 的 街区	哪个 是 1 号 街区 左边 的 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 宽度 等于 块 1 的 块	选择 与 块 1 宽度 相等 的 块	选择 一个 与 第 1 块 宽度 相等 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
阻止 块 1	1 号 街区 周围 街区	第 1 街区 附近	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
阻挡 超过 2 个 街区	超过 2 个 街区 的 街区	超过 2 个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻挡 另外 两个 人 的 权利	其他 两个 街区 的 右侧	在 另外 两个 街区 的 右边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 以上	1 号 区块 上方 的 区块	高于 第一座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 一个 长度 不 超过 3 英寸 的 块	找 一个 不长 3 英寸 的 街区	找 一个 长度 不 超过 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
找到 3 英寸 宽 的 特殊 区块	找到 3 英寸 宽 的 特殊 块	找到 3 英寸 宽 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 我 所有 的 3 英寸 长 的 块	找 我 所有 3 英寸 长 的 街区	帮 我 找到 所有 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
阻止 块 1 左侧 的 块 左侧	块 1 左边 的 块 的 左边	在 第 1 块 的 左边 的 块 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 我 下面 有 2 个 街区 的 所有 街区	找到 下面 有 两个 街区 的 所有 街区	给 我 找到 下面 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 种 特殊 砖 是 3 英寸 宽	哪块 特别 的 砖 3 英寸 宽	哪 一种 砖 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 左边 最少 块 的 块	找 一个 左边 有 最少 街区 的 街区	找 一个 最 左边 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
在 块 1 下方 阻止	1 号 街区 下 的 街区	低于 第一座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 特殊 的 块 ， 并 在 块 1 的 右侧 找到	找到 一个 特别 的 街区 ， 在 街区 1 的 右边	找到 一个 特殊 的 块 ， 在 第一个 块 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 特殊 区块 1 上方 的 区块	选择 1 号 特殊 街区 上方 的 街区	选择 上面 的 特殊 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
宽度 小于 3 英寸 或 6 英寸 的 块	宽度 小于 3 英寸 或 6 英寸 的 块	宽度 小于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 块 有 两个 或 更 少 的 形状	哪个 块 有 两个 或 更 少 的 形状	什么 方块 有 两个 或 更 少 的 形状	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
找到 长度 大于 块 1 的 块 很 高	查找 长度 大于 块 1 高度 的 块	找到 一个 长度 大于 第一块 的 方块 是 高 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 一个 下方 有 金字塔 形块 的 块	找 一个 下面 有 金字塔 形块 的 块	找到 一个 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
哪 块砖 最多 3 或 6 英寸 长	哪 块砖 最长 3 或 6 英寸	哪 块砖 最多 3 或 6 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 砖 的 左边 不 超过 两个 街区	哪 块砖 左边 不 超过 两个 街区	哪一块 砖 的 左边 不 超过 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 高度 小于 或 等于 块 1s 长度 的 块	选择 高度 小于 或 等于 块 1s 长度 的 块	选择 高度 小于 或 等于 第 1 块 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 右边 的 块 ， 它 有 一个 金字塔 的 形状	找 我 1 号楼 右边 的 那个 有 金字塔 形状 的 街区	找到 我 的 街区 ， 第一个 街区 在 右边 ， 有 一个 金字塔 的 形状	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
阻挡 了 另外 两个 人	其他 两个 街区 的 左边	还有 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 形状 是 金字塔 ， 宽度 为 3 英寸	形状 为 金字塔 ， 宽度 为 3 英寸 的 块	形状 为 金字塔 ， 宽度 为 3 英寸 的 石块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 是 上面 的 块 长度 为 3 英寸	上面 那块 3 英寸 长 的 是 什么	上面 那个 3 英寸 长 的 积木 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 上方 和 右侧 的 所有 块	找到 我 1 号 街区 右上方 的 所有 街区	在 第一个 街区 的 上面 和 右边 找到 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 特殊 ， 长度 为 3 英寸	长度 为 3 英寸 的 特殊 块	一种 特殊 的 木块 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪些 块 在 块 1 或 2 的 右侧	哪个 街区 在 街区 1 或 2 的 右边	哪个 街区 是 街区 1 的 右边 ， 哪个 街区 是 街区 2 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
砖 的 数量 是 多少	砖 的 数量 是 多少	砖 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 是 砖 的 平均 宽度	砖 的 平均 宽度 是 多少	砖 的 平均 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
第 1 块 左边	1 区 左侧	第一座 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
两个 街区 左边 是否 有 一个 街区	两个 多 街区 的 左边 有 一个 街区 吗	在 两条 街 的 左边 有 一个 街区 吗	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
是否 有 一个 比块 1 更 宽 的 块 高	有 比 一号 楼 宽 的 矮 一号 楼 吗	是否 有 一个 街区 的 高度 比 第一个 街区 的 宽度 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 块砖 在 砖 1 右边 的 砖 下面	哪 块砖 在 砖 1 右边 的 砖 下面	1 号 砖 右边 的 砖 下面 是 哪 块砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 块 1 长于 的 块	找到 块 1 大于	找到 一个 大于 第 1 块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 左边 至少 有 2 个 街区 的 所有 街区	找 我 左边 至少 有 两个 街区 的 所有 街区	找到 左边 至少 有 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 总长度 是 多少	这些 积木 的 总长度 是 多少	积木 的 总长度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
选择 块 1 和 块 2 下面 的 块	选择 块 1 和 块 2 下 的 块	选择 块 1 和 块 2 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
什么 块 比块 1 更长 是 宽 的	哪个 街区 比 1 街区 长宽	什么 块 比块 1 长是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
挡住 金字塔 块	金字塔 块 上 的 块	锥上 断块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 宽度 为 3 英寸 且 高于 块 1 的 块	找到 宽度 为 3 英寸 且 高于 块 1 的 块	找到 一块 宽度 为 3 英寸 且 在 第一块 上面 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 高于 砖 1 是 长 的	哪 块砖 比砖 高 1 是 长 的	哪 块砖 比砖 高 1 是 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 长度 比 另 一个 块 高 2 英寸 的 块	选择 比 另 一个 块 高出 两 英寸 的 块	选择 比 另 一个 块长 2 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
阻止 最少 数量 的 块	高于 最小 块数 的 块	块 大于 最小 块数	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 上方 的 块 是 特殊 的	在 特殊 街区 上方 的 街区	位于 特殊 块 之上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 3 英寸 长 的 块 以下 的 所有 块	找到 3 英寸 以下 的 所有 街区	找到 所有 3 英寸 以下 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一个 宽度 为 3 英寸 的 块 ， 块 1 位于 下方	给 我 找 一个 三 英寸 宽 的 街区 1 在 下面	给 我 找 一个 三 英寸 宽 的 街区 ， 第一座 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 在 1 或 2 砖 之上	哪 块砖 高于 砖 1 或 砖 2	哪 块砖 在 第一 块砖 的 上面 ， 还是 第二 块砖 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
块 宽度 小于 或 等于 块 1 的 高度	什么 块 宽度 小于 或 等于 块 1s 高度	什么 块 的 宽度 小于 或 等于 块 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 下方 3 英寸 长 的 块	1 号 区块 下方 3 英寸 长 的 区块	1 号楼 以下 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 金字塔 形状 的 块 ， 长度 为 3 英寸	给 我 找 一个 长 3 英寸 的 金字塔 形状 的 块	给 我 找 一个 金字塔 形状 的 ， 长度 为 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 砖比 砖 1 宽 ， 宽	哪 块砖 比 第一 块砖 宽	哪一块 砖比 一块 砖 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 我 所有 块 下面 的 块 1 是 对 的	找 我 那个 街区 下面 的 所有 街区	找到 我 在 第一个 街区 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 和 上方 的 块	选择 位于 块 1 左侧 和 上方 的 块	选择 块 1 的 左边 和 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 一个 埋 在 至少 两个 其他 街区 下 的 街区	找 一个 至少 埋 在 另外 两个 街区 下面 的 街区	找到 至少 埋 在 另外 两个 方块 下面 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 块 都 像 块 1 一样 宽	找 我 所有 的 街区 宽到 街区 1 长	找到 所有 的 街区 ， 只要 街区 1 长就行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 最 右边 的 砖块	选择 右边 的 砖块	选择 最 右边 的 砖块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 比块 1 的 宽度 短 的 所有 块	找到 比 街区 1 的 宽度 短 的 所有 街区	找到 比 第一个 街区 还 短 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 是 砖 的 平均 长度	砖 的 平均 长度 是 多少	砖 的 平均 长度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
找到 块 1 上方 的 所有 块	找到 1 号 街区 以上 的 所有 街区	找到 1 号 楼上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 左边 少于 2 个 街区 的 所有 街区	找 我 左边 不到 两个 街区 的 所有 街区	找到 所有 左边 少于 2 个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 以下 至少 2 个 街区 的 所有 街区	找到 下面 至少 有 两个 街区 的 所有 街区	为 我 找到 至少 2 个 街区 以下 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 块 下面 不到 两个 街区	给 我 找 一个 低于 两个 街区 的 街区	给 我 找 一个 低于 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 下方 和 右侧 有 1 个块	右下方 有 1 号 区块 的 区块	块 ， 它 有 块 1 在 下面 和 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
在 任何 其他 区块 上 堆积 了 一块 ， 但 只有 一块	有没有 一个 积木 堆 在 另 一个 积木 上 ， 但 只有 一个	除了 一个 木块 之外 ， 是否 还有 其他 木块 堆积 在 其他 木块 上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 高度 等于 块 1 长度 的 所有 块	选择 高度 等于 块 1 长度 的 所有 块	选择 高度 等于 第 1 块 长度 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
哪个 砖 至少 与 砖 1 一样 长	哪 块砖 至少 和 砖 1 一样 宽	哪 块砖 至少 和 砖 1 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
3 个 宽度 的 块 位于 块 1 的 右侧	哪个 3 宽 的 块 在 块 1 的 右边	哪个 3 宽 的 街区 在 街区 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 第二个 块 左边 的 块	找到 第二个 街区 左边 的 街区	找到 第二个 块 的 左边 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 高 的 街区 左边 的 街区	把 3 英寸 高 的 街区 都 找 出来	找到 所有 剩下 的 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
第 1 区块 以上 区块 的 权利	1 号 街区 上方 街区 右侧	在 第一座 楼上 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 比块 1s 高度 更 宽 的 块	选择 宽于 块 1s 高 的 块	选择 比 1s 高 更 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 与 块 1 具有 相同 高度 的 块	找到 与 块 1 高度 相同 的 块	找 一个 和 第一个 方块 高度 相同 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
选择 特殊 的 块 ， 块 1 在 上面	选择 特殊 且 块 1 位于 上方 的 块	选择 那个 特殊 的 块 ， 并且 那个 块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
位于 块 1 下 方块 的 左侧 的 块	块 1 下 方块 左侧 的 块	块 ， 在 块 1 下面 的 块 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
看看 第 1 块 的 右边 ， 找到 3 英寸 的 块	向右看 1 号 街区 ， 找到 3 英寸 街区	向右看 1 号 街区 ， 找到 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 不是 块 1 的 右边	不 在 1 号 街区 右侧 的 街区	不 在 第一块 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string ! = ) en.block.block1 ) )
找到 我 左边 有 两个 街区 的 街区	给 我 找 一个 左边 有 两个 街区 的 街区	帮 我 找 一个 左边 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 比块 1 高 的 所有 块	找到 比 1 号楼 高 的 所有 街区	找到 比 第一个 街区 还 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
什么 块 在 第一块 的 左边	第一 区 左边 是 哪个 街区	第一个 街区 的 左边 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
选择 一个 高于 3 英寸 的 块	选择 高于 3 英寸 的 块	选择 一块 高于 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 右边 有 金字塔 形状 的 块	块 右侧 为 棱锥 形状 的 块	块 的 右边 是 金字塔 形状 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
块 最 多 两个 块	最 多 两个 街区 右边 的 街区	右边 最 多 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
描述 块 1 的 形状	描述 块 1 的 形状	描述 第一块 的 形状	( call SW.listValue ( call SW.getProperty en.block.block1 ( string shape ) ) )
什么 砖 既 独特 又 3 英寸	什么 砖 既 独特 又 有 3 英寸	什么 砖 是 独特 的 和 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 一个 不 大于 块 1 高度 的 块	定位 不 大于 块 1 高度 的 块	找到 一个 不 超过 第一块 的 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 右侧 的 块 是 什么 块	第一个 街区 的 右边 是 哪个 街区	哪个 街区 在 第一 街区 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
选择 一块 至少 3 英寸 宽 的 砖	选择 至少 3 英寸 宽 的 砖	选择 一块 至少 3 英寸 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 金字塔 形状 的 块	定位 金字塔 形块	找到 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 块 有 两个 或 更 少 的 块	哪个 街区 下面 有 两个 街区 或 更少	什么 块 下面 有 两个 或 更 少 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 不 在 块 1 的 右侧	块 不 在 块 1 的 右侧	不 在 第一座 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string ! = ) en.block.block1 ) )
看看 第 1 块 的 右下方	看 1 号 街区 的 下方 和 右侧	请 看 1 号楼 的 右下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 右边 3 英寸 长 的 所有 块	找到 1 号 街区 右边 3 英寸 长 的 所有 街区	帮 我 找到 1 号 街区 右边 3 英寸 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
什么 块 的 宽度 为 3 英寸 ， 块 1 的 宽度 为 3 英寸	哪个 块 的 宽度 是 3 英寸 ， 块 1 在	什么 东西 的 宽度 是 3 英寸 ， 第一座 在 它 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
长度 小于 3 英寸 的 块	长度 小于 3 英寸 的 块	长度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 的 长度 小于 块 1 的 宽度	什么 块 的 长度 小于 块 1s 的 宽度	什么 块 的 长度 比块 的 宽度 小	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 右侧 3 英寸 宽 的 块	块 1 右侧 3 英寸 宽 的 块	3 英寸 宽 的 块 到 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 比块 1 高 的 所有 块	找到 比 1 号楼 高 的 所有 街区	找到 比 第一个 街区 还 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 上方 的 金字塔 块	区块 1 上方 的 金字塔 区块	金字塔 型 建筑 在 第一座 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
高度 最多为 3 英寸 的 块	高度 不 超过 3 英寸 的 砌块	高 不 超过 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 比块 1 短	哪个 街区 比 1 街区 短	什么 街区 比 第一座 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 位于 块 1 下方 的 块 ， 其 直径 为 3 英寸	找到 位于 块 1 下方 直径 为 3 英寸 的 块	找到 1 号 街区 下面 直径 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 一个 平均 长度 的 街区	给 我 找 一个 平均 长度 的 街区	给 我 找 一个 平均 长度 的 街区	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
具有 最小 宽度 的 块	宽度 最小 的 块	具有 最小 宽度 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
阻挡 3 英寸 以上 的 块	3 英寸 块 以上 的 块	块 以上 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 所有 3 英寸 高 的 街区 块	找 我 所有 3 英寸 高 的 街区	给 我 找 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 的 金字塔 块 ， 块 1 位于 右侧	找到 块 1 右侧 金字塔 形状 的 块	找到 一个 金字塔 形状 的 方块 ， 第一个 方块 在 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
块 1 左侧 和 上方 的 块 是 什么	1 号 街区 的 左边 和 上面 是 哪个 街区	1 号楼 及 1 号楼 以上 还 剩 几座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
高度 为块 1 高度 的 块	高度 为块 1 高度 的 块	块 的 高度 为块 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string height ) ) ) )
找到 我下 方块 数 最少 的 块	给 我 找 下面 最少 的 街区	给 我 找到 下面 最少 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 在 块 1 右侧 的 块 上方	1 号 街区 右侧 街区 上方 街区	在 街区 1 右边 的 街区 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 一个 3 英寸 高 的 金字塔 形块	找 一个 3 英寸 高 的 金字塔 形块	找 一个 3 英寸 高 的 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 6 英寸 或 更 短 的 块	找 一个 6 英寸 或 更 短 的 街区	找 一块 6 英寸 或 更 短 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 一个 与 块 1 一样 厚 的 块	选择 一个 厚 如块 1 长 的 块	选择 一块 和 第一块 一样 厚 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 一个 看起来 像 块 1 的 块	选择 一个 看起来 像 1 号 街区 的 街区	选择 一个 看起来 与 第一个 块 相似 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
找到 我 下面 块 1 以上 的 所有 块	找 我 下面 的 所有 街区 都 在 1 号 街区 上面	找到 1 号 街区 以上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 宽 的 积木	找 我 所有 3 英寸 宽 的 街区	把 3 英寸 宽 的 积木 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
块 的 长度 至少 是 块 1 的 长度	长度 至少 为块 1 长度 的 块	块 的 长度 至少 为块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 下面 的 所有 金字塔 块	查找 块 1 下 的 所有 棱锥 图块	找到 1 号 街区 以下 的 所有 金字塔 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 是 砖 1 的 左边	哪 块砖 在 砖 1 的 左边	哪个 砖块 在 砖块 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
块 1 的 上方 和 左侧	1 号 街区 左上方	在 第一座 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
高度 最小 的 块	高度 最小 的 块	高度 最小 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
块 1 的 长度 是 多少	第一 区 的 长度 是 多少	第一座 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
找到 我 最 多 2 个 形状 的 所有 块	找到 所有 最多 有 两个 形状 的 块	找到 所有 不 超过 2 个 形状 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
哪个 块 比块 1 宽 ， 是 长 的	哪个 街区 比 1 街区 宽 是 长 的	哪个 街区 比 第一个 街区 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪个 块 的 宽度 为 3 或 6 英寸	哪个 街区 的 宽度 是 3 英寸 或 6 英寸	哪一块 的 宽度 是 3 英寸 还是 6 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
选择 长度 为 3 或 6 英寸 的 块	选择 长度 为 3 或 6 英寸 的 块	选择 长度 为 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
找到 最瘦 的 块	找到 最瘦 的 街区	找到 最瘦 的 街区	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
块 1 的 宽度 是 多少	1 号 街区 的 宽度 是 多少	第一座 的 宽度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
找到 块 1 下面 的 所有 特殊 块	找到 1 号 街区 下 的 所有 特殊 街区	给 我 找到 所有 在 1 号楼 下面 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 位于 左侧 和 上方 的 块	找到 块 1 在 左上方 的 块	找到 第一个 街区 在 它 的 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 长 的 街区 块	找 我 所有 3 英寸 长 的 街区	给 我 找 所有 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
bloch 比块 1 的 长度 长	Bloch 比 Block   1 的 长度 长	bloch 比 block   1 的 长度 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 剩下 2 个 街区 的 所有 街区	找 我 剩下 两个 街区 的 所有 街区	找到 剩下 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 留下 的 所有 特殊 块	给 我 找些 特别 的 东西	给 我 找 一些 特殊 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 3 英寸 以上 的 所有 街区	找 我 3 英寸 以下 的 所有 街区	找到 所有 3 英寸 以下 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 形状 像 金字塔 或 立方体 的 块	找到 形状 像 金字塔 或 立方体 的 块	找出 形状 像 金字塔 或 立方体 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
找到 我 在 块 顶部 的 特殊 块	给 我 找 一个 特别 的 街区	给 我 找 一个 特殊 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
阻止 块 1 上方 的 块	块 1 以上 的 块 A	在 第一块 上 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 一个 短于 3 英寸 的 块	找 一个 短于 3 英寸 的 街区	找 一个 小于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 上方 的 块 ， 长度 为 3 英寸	选择 块 1 上方 长度 为 3 英寸 的 块	选择 第一块 上面 的 一块 ， 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 1 右侧 的 金字塔	区块 1 右侧 的 金字塔	金字塔 到 第一座 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
哪个 块 是 最小 的	哪个 街区 最小	哪一块 是 最小 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
哪 块砖 最 左边	哪 块砖 最 左边	哪 块砖 最 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
是否 有 一个 块 位于 最少 数量 的 其他 块 之上	有没有 比 其他 街区 最少 的 街区 多 的 街区	是否 有 一个 块 在 其他 块 的 最 上面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 下方 3 英寸 宽 的 块	块 1 下方 3 英寸 宽 的 块	在 第一座 下面 有 3 英寸 宽 的 底座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 块 在 块 1 下面 的 块 下面	什么 街区 在 街区 1 的 下面	第一个 街区 在 下面 的 街区 下面 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
阻止 剩余 最多 的 块	块 数最多 的 块	块 的 剩余 数目 最大 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 有 两种 或 更少 颜色 的 块	给 我 找 一块 颜色 不 超过 两种 的	给 我 找 一个 颜色 不 超过 两种 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
什么 砖 下面 有 2 块 以上 的 砖块	什么 砖 下面 有 两块 以上 的 砖	什么 砖 下面 有 两块 以上 的 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 长度 最小 的 块	找到 长度 最小 的 块	找出 长度 最小 的 方块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
阻止 在 特殊 区块 的 右侧	特殊 街区 右边 的 街区	在 一个 特殊 街区 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 块 1 上方 的 块	选择 块 1 上方 的 块	选择 第一块 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 所有 少于 2 种颜色 的 块	找到 所有 少于 两种 颜色 的 方块	找到 所有 小于 2 种颜色 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
找到 块 1 上方 和 左侧 的 块	找到 1 号 街区 左上方 的 街区	帮 我 找到 在 第一个 街区 左上方 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 左右 两侧 的 所有 块	找到 1 号 街区 左右 的 所有 街区	找到 1 号 街区 左右 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
什么 是 特殊 块 上面 的 块	特殊 街区 上面 的 街区 是 什么	特殊 块 上面 的 块 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 我 所有 的 块 ， 至少 只要 块 1 高	找到 所有 的 街区 ， 至少 只要 街区 1 高	找到 所有 至少 和 第一个 街区 一样 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 左边 3 英寸 高 的 块	找到 1 号 街区 左边 所有 3 英寸 高 的 街区	找到 1 号 街区 剩下 的 所有 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 块 1 上 方块 的 右侧 的 块	选择 块 1 上 方块 右侧 的 块	选择 块 1 上面 块 的 右边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 形状 像 立方体 或 金字塔 的 块	选择 形状 像 立方体 或 棱锥 体 的 块	选择 一个 立方体 或 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
块 最 多 有 两个 形状	最多 有 两个 形状 的 块	最多 有 两个 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
阻止 并 从 第 1 块 开始 离开	从 1 号 街区 向上 和 向 左 封锁	从 第一座 往 左 拐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
块 1 左侧 的 金字塔 块	块 1 左侧 的 棱锥 体块	第一座 左边 的 金字塔 座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 至少 3 英寸 长 的 砖块	找 我 所有 至少 3 英寸 长 的 砖块	给 我 找 所有 至少 3 英寸 长 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 右侧 3 英寸 块	块 1 右侧 3 英寸 块	在 第一座 右边 3 英寸 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
高度 块 不 超过 块 1 的 宽度	高度 不 超过 块 1 宽度 的 块	高度 不 超过 第一块 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 块 是 下面 和 右边 的 块 1	什么 街区 在 1 号 街区 的 下面 和 右边	下面 和 右边 的 第一个 街区 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 长度 大于 块 1 宽度 的 砖块	选择 长度 大于 块 1 宽度 的 砖	选择 长度 大于 第一 块砖 的 宽度 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 右上方 的 块	选择 右侧 上方 的 块	选择 右边 上方 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
第 1 块 的 第二个 左边	街区 1 左二	第一座 左边 第二个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
阻止 第一块 和 右边	一号 街区 上方 右侧	在 第一个 街区 的 上面 ， 在 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
块 的 总 宽度 是 多少	积木 的 总 宽度 是 多少	积木 的 总 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
阻止 至少 剩下 两个 区块	至少 还有 两个 街区	至少 还 剩下 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 长度 为 3 英寸 的 块 ， 块 1 在 上面	找 一个 长度 为 3 英寸 的 块 1 在 上面	找 一个 长度 为 3 英寸 的 木块 ， 木块 1 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 块 下面 的 块 1	找 我 在 1 号 街区 左边 的 所有 街区	找到 第一个 街区 以下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
3 英寸 砖 是 砖 1 的 右边	什么 3 英寸 的 砖头 在 砖头 1 的 右边	什么 3 英寸 的 砖 是 在 砖 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 下面 有 两个 街区	哪 块砖 下面 有 两个 街区	哪 块砖 下面 有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左边 两个 街区 的 所有 街区	找 我 1 号 街区 左边 两个 街区 的 所有 街区	帮 我 找到 第一座 剩下 的 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 我 右边 最多 2 个 街区 的 所有 街区	找到 所有 街区 ， 右边 最多 2 个 街区	找到 所有 在 它 右边 最多 2 个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 的 所有 块 是 正确 的 和 下面 的	找 我 所有 街区 1 号 街区 的 右边 和 下面	找到 所有 的 街区 ， 第一个 街区 在 右边 和 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
在 任何 金字塔 块 上方 都 有 一个 块	在 任何 一个 金字塔 块 上面 找 一个 块	比 任何 金字塔 块 都 高 一个 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
块 最 多 剩下 两个 块	最 多只 剩下 两个 街区 的 街区	最多 还 剩下 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 更 短 然后 块 1 很长	哪个 街区 比 1 街区 短	什么 街区 比 第一个 街区 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
低于 最 多块 数 的 块	低于 最大 块数 的 块	块数 小于 最大 块数 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 块 在 块 1 的 上方 和 右侧	哪个 街区 在 街区 1 的 正上方	哪个 街区 在 第一 街区 的 右上方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 小于 两个 块	低于 两个 街区 的 街区	小于 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 左边 最少 块 的 块	找到 左边 街区 最少 的 街区	找到 在 它 左边 最少 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 阻止 一个 不是	封锁 那个 街区 一号 不 在 左边	’ 那个 街区 没有 剩下 一个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string ! = ) en.block.block1 ) )
找到 块 1 位于 上方 和 左侧 的 块	找到 块 1 在 上面 和 左边 的 块	找到 第 1 块 在 它 的 左上方 的 一个 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
在 块 1 上方 的 块 左侧 的 块	块 1 上 方块 左侧 的 块	块 ， 即 在 块 1 上面 的 块 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
上面 和 下面 有块 1 的 块	上面 和 下面 有块 1 的 块	上面 和 下面 都 有 块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
选择 块 1 右侧 块 下方 的 块	选择 块 1 右侧 块 下方 的 块	选择 块 1 右边 的 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
阻挡 金字塔 块 的 右侧	金字塔 块 右侧 块	金字塔 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
块 是 特殊 的 ， 并且 是 块 1 的 左侧	一号 街区 左边 的 特别 街区	这是 特殊 的 块 ， 它 在 第 1 块 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 长度 最大 为 6 英寸 的 所有 块	选择 长度 最大 为 6 英寸 的 所有 块	选择 所有 长度 不 超过 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
第 1 块 的 右下方	1 号 地块 下方 和 右侧	在 第一座 的 右下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 高度 不 超过 3 或 6 英寸 的 块	找到 高度 不 超过 3 或 6 英寸 的 块	找 一个 不 超过 3 或 6 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 是 最小 块 的 左边	最少 的 街区 左边 是 哪个 街区	哪个 街区 在 最小 街区 的 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 砖 的 形状 少于 两个	哪 块砖 不到 两种 形状	哪 块砖 的 形状 小于 两个	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
找到 我 右边 至少 有 2 个 街区 的 所有 街区	找 我 所有 街区 ， 右边 至少 有 两个 街区	找到 所有 在 它 右边 至少 2 个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 高度 等于 块 1s 长度 的 块	找到 一个 高度 等于 块 1s 长度 的 块	找到 一个 高度 等于 1s 长度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
形状 为 金字塔 的 块	形状 为 金字塔 的 块	金字塔 形状 的 石块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 右侧 的 金字塔 块	帮 我 找到 1 号 街区 右边 的 金字塔 街区	帮 我 找到 在 第一个 街区 右边 的 金字塔 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 该块 上方 两个 块 的 块	选择 位于 该块 上方 两个 块 的 块	选择 位于 该块 上方 两个 块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 是 特殊 砖 的 右边	哪 块砖 在 这块 特殊 砖 的 右边	特殊 砖 的 右边 是 哪 块砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
两个 形状 块	二形块	两个 形状 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
有 多少 块	有 几个 街区	有 多少 个 街区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 上面 不 超过 两块 砖	哪 块砖 上面 不 超过 两块	哪一块 砖 上面 最 多 只有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 2 下方 的 块	选择 块 2 下 的 块	选择 街区 2 下 的 一个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 颜色 是 什么	第一块 的 颜色 是 什么	1 号楼 是 什么 颜色 的	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
找到 块 1 下方 2 个 街区 的 所有 街区	找到 1 号 街区 下 2 号 街区 的 所有 街区	找到 1 号楼 下面 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 第 1 块 右侧 的 所有 金字塔 块	找到 1 号 街区 右边 的 所有 金字塔 街区	找到 在 第一个 街区 右边 的 所有 金字塔 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
块 1 左侧 3 英寸 长 的 块	1 号 街区 左侧 3 英寸 长 的 街区	在 第一座 左边 有 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 高于 3 英寸 高 的 砖块	哪 块砖 高出 3 英寸	哪 块砖 在 3 英寸 高 的 砖 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一个 至少 有 两个 街区 的 街区	找 一个 至少 在 两个 街区 右边 的 街区	找到 至少 两个 正确 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 的 宽度 为 3 英寸 ， 位于 块 1 的 左侧	哪个 街区 的 宽度 是 3 英寸 ， 在 街区 1 的 左边	什么 东西 的 宽度 是 3 英寸 ， 在 第一座 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选砖 2 砖 左边 砖 1	选择 砖块 1 左边 的 砖块 2	选择 砖块 1 左边 的 两个 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 我 在 块 1 右侧 的 块 左侧 的 块	给 我 找 一个 街区 的 左边 一个 街区 的 右边	找到 在 第一个 方块 右边 的 方块 左边 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻止 块 1 的 下方 和 左侧	区块 1 下方 和 左侧 的 区块	块 的 左下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻止 少于 两个 块 的 块	剩下 不到 两个 街区 的 街区	剩下 的 小于 两个 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 长度 是 多少	这个 街区 的 长度 是 多少	积木 的 长度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
找到 块 1 右侧 的 所有 块	找到 1 号 街区 右边 的 所有 街区	在 第一个 街区 的 右边 找到 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 在 块 1 的 左下方	什么 街区 在 街区 1 的 左边 和 下面	在 第一个 街区 的 左边 和 下面 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 宽和长 的 块	找 我 所有 3 英寸 宽和长 的 街区	找到 所有 3 英寸 宽和长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 3 英寸 宽 的 块 的 右边	3 英寸 宽 的 街区 右边 是 哪个 街区	3 英寸 宽 的 方块 的 右边 是 什么 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 长度 为 3 英寸 的 块 左侧 的 块	选择 位于 块 左侧 、 长度 为 3 英寸 的 块	选择 块 是 在 左边 的 块 是 3 英寸 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 长度 比块 1 短 的 块	查找 长度 小于 块 1 的 块	找到 比 第 1 块 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻挡 不到 两个 街区	两个 街区 以内 的 街区	块 以上 小于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 形状 像 金字塔 或 立方体 的 砖	选择 金字塔 或 立方体 形状 的 砖	选择 形状 像 金字塔 或 立方体 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
找到 两个 或 更少 形状 的 块	找出 两个 或 两个 以下 形状 的 块	找出 有 两个 或 两个 以下 形状 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
块 1 下方 和 左侧 的 块 是 什么	1 号 街区 的 左边 和 下面 是 什么 街区	第一 街区 左下方 的 街区 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
阻挡 3 英寸 宽 的 块	低于 3 英寸 宽 的 块	块 宽 小于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下方 的 块 ， 其 宽度 也 为 3 英寸	将块 定位 在 块 1 下方 ， 块 1 的 宽度 也 为 3 英寸	在 同样 宽度 为 3 英寸 的 第 1 块 下面 找到 这个 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
第 1 块 下方 3 英寸 高 的 博克	1 号 街区 下方 3 英寸 高 的 木块	1 街区 以下 3 英寸 高 的 沼泽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 以上 的 块 ， 高度 为 3 英寸	给 我 选 一个 高于 一号 街区 ， 高 3 英寸 的 街区	请 为 我 选择 高于 第一座 ， 高度 为 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 特殊 区块 剩下 的 所有 区块	给 我 找到 所有 特殊 街区 剩下 的 街区	找到 所有 剩下 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
在 特殊 区块 下面 阻止	特殊 街区 下 的 街区	一个 特殊 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
什么 块 的 宽度 为 3 英寸 ， 块 1 的 宽度 为 3 英寸	哪个 街区 有 三 英寸 宽 ， 而 那个 街区 1 在 下面	什么 积木 的 宽度 是 三 英寸 ， 而 第一座 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 的 高度 测量 值 至少 等于 块 1 的 长度	用 等于 块 1 最小 长度 的 高度 测量 值 定位 块	使用 高度 测量 值来 定位 块 ， 该 测量 值 至少 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 与 块 1 高度 相同 的 块	选择 与 块 1 高度 相同 的 块	选择 一个 与 第一个 块 高度 相同 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 下面 的 所有 特殊 块	找到 1 号 区块 下 的 所有 特殊 区块	找到 1 号 街区 以下 的 所有 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string below ) ( string = ) en.block.block1 ) )
选择 3 英寸 高 的 下部 块	选择 3 英寸 高 的 下部 块	选择 较 低 的 一块 是 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 金字塔 形块 位于 块 1 的 右侧	哪个 金字塔 形 的 块 在 块 1 的 右边	哪座 金字塔 形 的 大厦 在 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
阻止 最少 数量 的 块 在 上面	块 的 最小 数目 在 上面 的 块	块 的 最小 数目 在 上面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 上方 的 块 到 右侧 块 1	选择 块 1 右侧 块 1 上方 的 块	选择 块 上面 的 块 到 右边 的 块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
收集 所有 不长 3 英寸 的 积木	收集 所有 不到 3 英寸 长 的 积木	收集 所有 不 超过 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 在 街区 1 的 所有 街区	在 1 号 街区 找 我	在 第一个 街区 找到 我	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 块 1 上方 的 所有 特殊 块	找到 1 号 街区 以上 的 所有 特殊 街区	找到 1 号 楼上 所有 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 下面 至少 两个 街区 的 街区	在 至少 两个 街区 的 下面 给 我 找个 街区	给 我 找 一个 至少 两个 街区 以下 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 上面 的 块 1 的 所有 块 都 在 下面	找 我 上面 的 所有 街区 1 在 下面	找到 上面 所有 的 街区 ， 第一个 街区 在 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 超过 2 个块 右侧 的 块	选择 位于 两个 以上 块 右侧 的 块	选择 在 多于 2 个 方块 的 右边 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 的 宽度 是 块 1 的 宽度	宽度 为块 1 宽度 的 块	块 的 宽度 为块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找到 第 1 块 右边 的 所有 块	找到 1 号 街区 右边 的 所有 街区	找到 第一个 街区 正上方 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
阻挡 3 英寸 以上 的 块	高于 3 英寸 高 的 砌块	3 英寸 以上 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
它 是 金字塔 还是 立方体	是 金字塔 还是 立方体	它 是 金字塔 还是 立方体	( call SW.listValue ( call SW.concat en.shape.pyramid en.shape.cube ) )
找到 与 块 1 至少 相同 高度 的 块	找到 至少 与 块 1 相同 高度 的 块	找到 至少 与 第一块 相同 高度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 在 块 1 下面 的 所有 3 英寸 长 的 块	找到 1 号 街区 下 3 英寸 长 的 街区	找到 1 号楼 下面 所有 3 英寸 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 比块 1 更 高 的 块 很长	找 一个 比 一号 街 区长 的 街区	找 一个 比 第一个 街 区长 一些 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 块 1 上方 的 块	找到 1 号 街区 上方 的 街区	找到 第一块 上面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 所有 长度 超过 3 英寸 的 积木	找 我 所有 长度 超过 3 英寸 的 街区	找到 所有 长度 超过 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 一个 位于 另外 两个 块 之上 的 块	找 一个 在 另外 两个 街区 上 的 街区	在 另外 两个 块 的 上面 找到 一个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 一个 块 下面 有 两个 块	选择 下面 有 两个 块 的 块	选择 一个 下面 有 两个 块 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 左侧 的 金字塔 形块	位于 块 1 左侧 的 金字塔 形块	在 第一座 左边 的 金字塔 形状 的 大厦	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 砖 1 左侧 砖块 上方 的 砖块	选择 砖块 1 左侧 砖块 上方 的 砖块	选择 砖块 1 左边 的 砖块 上面 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
在 块 1 下 选择 块 下面 的 块	在 块 1 下面 的 块 下面 选择 块	选择 方块 1 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 我 至少 3 英寸 宽 的 所有 街区	找 我 所有 街区 至少 3 英寸 宽	找到 所有 至少 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 是 最 左边 的 块	最 左边 的 街区 是 什么	最 左边 的 街区 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 长 的 块	找 我 所有 3 英寸 长 的 街区	找到 所有 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
选择 不 超过 2 个块 的 块	选择 不 超过 2 个块 的 块	选择 不 超过 2 个 方块 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 在 最 顶层	哪 块砖 在 最 上面	哪 块砖 在 最 上面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 或 2	选择 块 1 或块 2	选择 块 1 或 2	( call SW.listValue ( call SW.concat en.block.block1 en.block.block2 ) )
阻止 一个 形状	一个 形状 的 块	单形 滑车	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string < ) ( number 2 ) ) )
找到 宽度 超过 3 或 6 英寸 的 块	定位 宽度 大于 3 或 6 英寸 的 块	找到 一个 宽度 大于 3 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 宽度 为 3 英寸 的 块 ， 位于 块 1 的 右侧	找到 宽度 为 3 英寸 且 位于 块 1 右侧 的 块	找到 一块 宽为 3 英寸 ， 在 第一块 右边 的 木块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 左右 的 所有 块	找到 1 号 街区 左右 的 所有 街区	给 我 找到 所有 的 街区 ， 第一个 街区 在 左边 和 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 3 英寸 宽 的 特殊 块	选择 3 英寸 宽 的 特殊 块	选择 3 英寸 宽 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 比块 1 宽 的 块	找 一个 比 第一块 宽 的 块	找到 一个 比 第一个 街区 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
第 1 块 左侧 的 特殊 区块	1 号 区块 左侧 的 特殊 区块	1 号 街区 左边 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪个 砖比 砖 1 短	哪 块砖 短于 砖 1 高	哪一块 砖比 一块 砖 矮	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 的 宽度 与 块 1 的 宽度 相同	与 块 1 宽度 相同 的 块	与 第一块 相同 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
阻挡 至少 2 个 街区 的 右侧	至少 2 个 街区 右侧 的 街区	至少 在 两个 街区 的 右边	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 直径 不 超过 块 1 高度 的 块	找到 一个 直径 不 超过 块 1 高度 的 块	找到 一个 直径 不 超过 第一座 高度 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
在 块 1 下方 阻止	1 号 街区 下 的 街区	低于 第一座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
块 1 上方 的 金字塔 块 是 什么	什么 金字塔 块 在 块 1 上面	1 号楼 上面 是 什么 金字塔 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
第 1 块 左边	1 区 左侧	第一座 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
哪 块砖 在 特殊 砖 下面	哪 块砖 在 特殊 砖 下面	特殊 砖 下面 是 哪 块砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 块 1 上方 的 所有 块	找到 1 号 街区 以上 的 所有 街区	找到 1 号 楼上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
砖 的 总 宽度 是 多少 ？	砖 的 总 宽度 是 多少	砖 的 总 宽度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ) ) )
位于 块 1 右侧 的 块 上方 的 块	位于 1 号 街区 右侧 街区 上方 的 街区	在 第一块 右上 的 那块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 金字塔 形状 的 块 和 块 1 的 右侧	选择 块 1 右侧 棱锥 体 形状 的 块	选择 一个 金字塔 形状 的 方块 ， 在 第一个 方块 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 高度 等于 3 英寸 的 金字塔 块	找 我 所有 高度 等于 3 英寸 的 金字塔 块	找到 我 所有 的 金字塔 块 ， 高度 等于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
长度 为 3 英寸 的 块	长度 为 3 英寸 的 块	块 的 长度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找 一个 特殊 的 街区	找 一个 特别 的 街区	找 一个 特别 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string is_special ) ) )
上面 有块 1 和 左边 的 块	左上方 有 第一个 街区 的 街区	上面 和 左边 都 有 block   1 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 所有 特殊 块	帮 我 找到 下面 第一个 街区 的 所有 特殊 街区	给 我 找到 下面 第一个 街区 的 所有 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 形状 最多 的 块	找到 形状 最多 的 块	找出 形状 最多 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
找到 位于 至少 一个 其他 块 顶部 且 长度 为 3 英寸 的 块	定位 至少 位于 另 一个 块 顶部 且 长度 为 3 英寸 的 块	找到 至少 在 另 一个 块 上面 的 块 ， 并且 长度 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
选择 所有 金字塔 块	选择 所有 棱锥 图块	选择 所有 金字塔 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 至少 3 英寸 长 的 所有 街区	找 我 所有 的 街区 至少 3 英寸 长	找到 所有 至少 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 我 所有 的 块 最 多 高达 3 英寸	给 我 找个 最高 达 3 英寸 的 街区	给 我 找 所有 最多 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
哪 块砖 上面 有 不到 两块 砖	哪 块砖 上面 的 砖 不到 两块	哪一块 砖 的 上面 少于 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 是 金字塔 形块 的 右边	什么 块 在 金字塔 形块 的 右边	金字塔 形状 的 方块 的 右边 是 什么 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 我 在 块 1 左边 和 上面 的 所有 块	找到 1 号 街区 左上方 的 所有 街区	找到 1 号楼 以上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 右侧 的 块 ， 宽度 为 3 英寸	找到 块 1 右侧 宽度 为 3 英寸 的 块	找到 第一块 右边 宽为 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 左边 和 上面 的 所有 块	找到 1 号 街区 左边 和 上面 的 所有 街区	找到 第一个 街区 及 以上 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
在 块 1 的 上方 和 右侧	1 号 街区 上方 和 右侧	在 第一座 的 右上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
位于 块 1 左侧 的 块 下方 的 块	块 1 左边 的 块 下面 的 块	在 第 1 块 左边 的 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 一个 具有 相同 高度 和 宽度 测量 值 的 块 ， 特别 是 3 英寸	找 一个 高度 和 宽度 相等 的 块 ， 具体 是 3 英寸	找 一块 高度 和 宽度 相等 的 木块 ， 具体 为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 块 1 下面 找到 金字塔 形状 的 块	找到 第一块 下面 的 金字塔 形块	找到 第一个 街区 下面 的 金字塔 形状 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 块 1 左侧 3 英寸 长 的 块	选择 块 1 左侧 3 英寸 长 的 块	选择 第一块 左边 的 一块 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
特殊 的 块 ， 这是 特殊 的	特别 的 街区	那 块 特殊 的 ， 那 块 特殊 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string is_special ) ) )
选择 块 1 下面 的 块	选择 块 1 下 的 块	选择 第 1 块 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) )
块 位于 块 1 的 第二个 左侧	街区 在 街区 1 的 左二	block 在 block   1 的 第二个 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 宽 3 英寸 ， 砖 1 右边	哪 块砖 3 英寸 宽 ， 在 砖 1 的 右边	哪一块 砖 3 英寸 宽 ， 在 砖 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 宽度 为 3 英寸 的 块 ， 位于 块 1 的 左侧	找到 宽度 为 3 英寸 且 位于 块 1 左侧 的 块	找到 宽度 为 3 英寸 且 在 第一块 左边 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
选择 3 英寸 高 的 块	选择 3 英寸 高 的 块	选择 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 最小 块 的 右边	哪 一个 街区 在 最小 街区 的 右边	哪个 街区 在 最小 街区 的 右边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string left ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 比块 1 更 瘦 的 块	给 我 找 一个 比 一号 街区 还 瘦 的 街区	给 我 找 一个 比 1 号 街区 更窄 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 长度 和 高度 为 3 英寸 的 街区	找到 长度 和 高度 为 3 英寸 的 块	找出 长度 和 高度 都 是 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 宽度 为 3 英寸 的 块	选择 宽度 为 3 英寸 的 块	选择 宽度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 上面 有块 1 的 特殊 块	找到 上面 有块 1 的 特殊 块	找到 上面 有 1 号 街区 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 的 块 高达块 1 的 宽度	给 我 找 一个 和 一号 街区 一样 高 的 街区	帮 我 找到 所有 和 第一个 街区 一样 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 3 或 6 英寸 之间 的 块	选择 3 或 6 英寸 之间 的 块	在 3 英寸 或 6 英寸 之间 选择 一块	( call SW.listValue ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) )
找到 块 1 左边 的 块	帮 我 找到 1 号 街区 左边 的 街区	帮 我 找到 在 第一座 左边 的 那座	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 一个 3 英寸 长 的 金字塔 形块	给 我 找 一个 3 英寸 长 的 金字塔 形块	给 我 找 一个 三 英寸 长 的 金字塔 形状 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 少于 两个 块	不到 两个 街区 右边 的 街区	块 的 右边 小于 两个 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 的 高度 是 多少	1 号楼 的 高度 是 多少	第一座 的 高度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
找到 块 1 上方 和 右侧 的 所有 块	找到 1 号 街区 上下 所有 街区	在 第一个 街区 的 右上方 找到 我	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 块 1 左边 的 所有 金字塔 块	找到 1 号 街区 左边 的 所有 金字塔 街区	找到 1 号 街区 剩下 的 所有 金字塔 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
块 等于 块 1 的 长度	等于 块 1 长度 的 块	块 的 长度 等于 块 1 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
平均 块 的 高度 是 多少 ？	一般 街区 的 高度 是 多少	一个 街区 的 平均 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
选择 块 1 左侧 的 块	选择 块 1 左侧 的 块	选择 block   1 左边 的 一个 block	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
只要 块 1 ， 找到 我 所有 的 块	找到 我 所有 的 街区 只要 1 号 街区	找到 所有 的 街区 ， 只要 第一个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
找到 一个 短于 3 英寸 或 6 英寸 的 块	定位 小于 3 英寸 或 6 英寸 的 块	找到 一个 小于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 长于 块 1 的 宽度	大于 块 1 宽度 的 块	块 长度 大于 块 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 大多数 块 右侧 的 块	在 大多数 块 的 右边 选择 一个 块	在 大多数 街区 的 右边 选择 一个 街区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左侧 的 块	找到 街区 1 左边 的 街区	找到 block   1 左边 的 block	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
3 英寸 长 的 块 在 块 1 之上	1 号 街区 上方 有 3 英寸 长 的 街区	什么 3 英寸 长 的 街区 在 街区 1 的 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
阻止 块 1 的 左侧	街区 1 左边 的 街区	在 第一座 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
什么 块 是 3 英寸 或 更 小 英寸 高	哪个 街区 3 英寸 或 以下 高	什么 东西 不 超过 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻止 两个 块 是 对 的	两个 街区 右边 的 街区	那 两个 街区 是 对 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 至少 2 个 街区 以下 的 所有 街区	找 我 所有 街区 至少 在 下面 两个 街区	给 我 找到 下面 至少 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪些 块 留下 单个 或 更 少 的 块	哪 一个 区块 只 剩下 一个 或 更 少 的 区块	哪些 块 只 剩下 一个 或 更 少 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 的 所有 块	找到 1 号 街区 左边 的 所有 街区	找到 第一个 街区 剩下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
块 1 的 左侧 和 下方 是 什么 块	什么 街区 在 街区 1 的 左边 和 下面	什么 街区 在 第一 街区 的 左边 和 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 和 下方 的 块	选择 块 1 位于 左侧 和 下方 的 块	选择 块 1 在 左边 和 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 至少 与 块 1 一样 高 的 块 是 宽 的	找到 至少 和 街区 1 一样 高 的 街区	找到 至少 和 第一个 街区 一样 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
两种 以上 颜色 的 块	两种 以上 颜色 的 块	超过 两种 颜色 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string > ) ( number 2 ) ) )
哪 块砖 的 宽度 小于 砖 1 的 长度	哪 块砖 的 宽度 小于 砖 1 的 长度	哪一块 砖 的 宽度 小于 砖 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪个 块 位于 块 1 的 左侧	哪个 街区 在 街区 1 的 左边	哪个 街区 在 第一座 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string ! = ) en.block.block1 ) )
什么 块 在 块 1 的 右下方	哪个 街区 在 1 号 街区 的 右边 和 下面	哪个 街区 在 第一 街区 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
块 1 下面 的 金字塔 块	区块 1 下方 的 金字塔 区块	金字塔 大厦 在 第一座 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 高度 小于 6 英寸 的 所有 积木	查找 所有 高度 小于 6 英寸 的 块	找出 所有 高度 小于 6 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 右边 的 所有 块	找到 1 号 街区 右边 的 所有 街区	帮 我 找到 第一个 街区 右边 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) )
选择 3 英寸 长 的 块	选择 3 英寸 长 的 块	选择 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
阻挡 不到 两个 街区	低于 两个 街区	低于 两个 街区 以下	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 最小 数量 的 其他 块 下面 的 块	找到 在 其他 块 的 最小 数量 下 的 块	找到 位于 其他 块 的 最小 数目 下面 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string below ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 长度 超过 3 英寸 的 块	选择 大于 3 英寸 的 块	选择 一个 大于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
3 英寸 长 的 块 位于 块 1 之上	哪个 3 英寸 长 的 街区 在 1 号 街区 之上	哪个 3 英寸 长 的 街区 在 街区 1 的 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 高于 3 英寸 的 块	找到 比 3 英寸 高 的 街区	找到 比 3 英寸 高 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 具有 两个 形状 的 块	选择 具有 两个 形状 的 块	选择 具有 两个 形状 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( number 2 ) ) )
块 1 上方 3 英寸 块	1 号 区块 上方 3 英寸 区块	比 第一块 高 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 所有 2 种颜色 的 块	给 我 找 两种 颜色 的 方块	找到 所有 有 两种 颜色 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( number 2 ) ) )
选择 块 1 左侧 的 块	选择 块 1 左侧 的 块	选择 块 1 左侧 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 高度 为 1 个块 宽度 的 块	选择 高度 为 1 块 宽度 的 块	选择 一个 高度 为 1 块 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
块 1 左侧 的 特殊 块 是 什么	第一 区 左边 的 特别区 是 什么	第一 街区 左边 的 特殊 街区 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 长度 为 1 的 所有 块	选择 长度 为 1 的 所有 块	选择 长度 为 1 的 所有 块	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
块 1 的 颜色 是 什么	第一块 的 颜色 是 什么	1 号楼 是 什么 颜色 的	( call SW.listValue ( call SW.getProperty en.block.block1 ( string color ) ) )
找到 我 所有 不长 3 英寸 的 积木	把 所有 不到 3 英寸 长 的 街区 找 给 我	找到 所有 不 超过 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
阻止 在 最少 数量 的 块 的 左侧	最少 块数 左边 的 块	块 的 最 左边 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string left ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 第 1 块 右侧 的 所有 特殊 块	找到 1 号 街区 右边 的 所有 特殊 街区	给 我 找到 所有 在 第一个 街区 右边 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 块 1 右侧 的 块	在 街区 1 的 右边 找 一个 街区	在 街区 1 的 右边 找 一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
只要 块 1 宽 ， 就 阻塞	只要 街区 1 宽	只要 块 1 是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
什么 块 在 3 英寸 长 的 块 上方	哪个 街区 在 3 英寸 长 的 街区 上面	什么 方块 在 3 英寸 长 的 方块 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 左边 3 英寸 的 块	找到 1 号 街区 左边 3 英寸 的 街区	把 1 号 街区 剩下 的 3 英寸 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
什么 金字塔 形砖 是 3 英寸 长	什么 金字塔 形 的 砖 是 3 英寸 长	什么 金字塔 形状 的 砖 是 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
哪 块砖 下面 有 两块 砖	哪 块砖 下面 有 两块 砖	哪 块砖 下面 有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 比块 1 长	哪个 街区 比 街区 1 长	什么 块 比块 1 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
选择 金字塔 形状 的 块	选择 金字塔 形块	选择 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 至少 3 英寸 高 的 砖块	选择 至少 3 英寸 高 的 砖	选择 至少 3 英寸 高 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 一个 位于 左侧 最远 块 的 右侧 的 块	选择 一个 位于 左侧 最远 街区 右侧 的 街区	选择 最 左边 最 右边 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 块 1 前后 的 所有 块	找到 1 号 街区 的 左前方 所有 街区	给 我 找到 1 号 街区 左前方 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 宽度 小于 3 英寸 的 积木	找到 宽度 小于 3 英寸 的 所有 街区	找到 所有 宽度 小于 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 我 所有 比块 1 宽度 更 宽 的 砖块	把 比 1 号楼 宽 的 砖块 都 找 给 我	给 我 找 所有 比 第一座 还 宽 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
独特 的 3 英寸 宽 的 街区	独特 的 3 英寸 宽块	独特 的 3 英寸 宽 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
阻止 块 1 上方 的 两个 空格	第一 区 上方 两个 空间	在 第一座 上面 的 两个 空间 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 高于 三 英寸	高于 三 英寸 的 木块	高于 三 英寸 的 石块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 下方 有 一个 块 ， 上面 有 一个 块 找到 它	1 号 街区 下 有 一个 街区 ， 1 号 街区 上 有 一个 街区	在 街区 1 下面 有 一个 街区 ， 在 街区 1 上面 有 一个 街区 ， 找到 它	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 块 右侧 的 块	选择 块 1 左侧 块 右侧 的 块	选择 位于 块 1 左侧 的 块 的 右侧 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
找到 高度 不 超过 块 1 高度 的 块	找到 高度 不 超过 1 号 区块 高度 的 区块	找到 高度 不 超过 第 1 块 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
阻挡 在 3 英寸 宽 的 块 右侧	3 英寸 宽块 右侧 的 块	块 在 3 英寸 宽 的 右边 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 一个 位于 两个 或 更 少块 左边 的 块	给 我 找 一个 在 两个 或 更少 街区 左边 的 街区	给 我 找 一个 在 两个 或 两个 以下 街区 左边 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 比块 1 短 的 所有 块	找到 比 街区 1 短 的 所有 街区	找到 比 第一个 街区 还 短 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 最短 的 块	找到 最短 的 块	找到 最短 的 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
只要 块 1 的 宽度 ， 最 多 找到 我 所有 的 块	把 所有 的 街区 都 找 出来	给 我 找到 所有 的 积木 ， 最 多 只要 1 个 积木 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 1 的 右侧 是否 有块	1 号 街区 的 右边 有 街区 吗	在 第一座 的 右边 有 一个 街区 吗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 长度 的 块	查找 块 1 长度 的 块	查找 长度 为块 1 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
从 1 区块 开始 的 3 英寸 高 的 街区	离 1 号 街区 3 英寸 高 的 街区	离 第一座 正好 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
第 1 区 下方 2 个 街区	1 号 街区 下 2 个 街区	在 第一座 下面 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 的 长度 短于 3 英寸	哪 块砖 的 长度 小于 3 英寸	哪一块 砖 的 长度 小于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 3 英寸 的 特殊 块	找到 3 英寸 的 特殊 块	找到 3 英寸 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
选择 块 1 右侧 的 3 英寸 长块	选择 块 1 右侧 的 3 英寸 长 的 块	选择 1 号 地块 右侧 3 英寸 长 的 地块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 下面 和 右边 的 所有 块	在 1 号 街区 的 下面 和 右边 找到 我	在 第一个 街区 的 右下方 找到 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
在 块 1 下 选择 一个 3 英寸 的 块	在 块 1 下 选择 一个 3 英寸 的 块	在 第一块 下面 选 一块 3 英寸 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 特殊 的 金字塔 块	给 我 找 所有 特别 的 金字塔 块	给 我 找到 所有 特殊 的 金字塔 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 在 块 1 右侧 和 上方 的 所有 块	在 1 号 街区 的 右边 和 上面 找 我	在 第一个 街区 的 右边 和 上面 找到 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
选择 宽度 小于 3 英寸 的 块	选择 宽度 小于 3 英寸 的 块	选择 宽度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻止 在 块 1 的 右侧 及其 上方	1 号 街区 右侧 及其 上方 的 街区	在 第一座 的 右边 和 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 左边 的 块 ， 高度 为 3 英寸	找到 1 号 街区 左边 3 英寸 高 的 街区	帮 我 找 一下 第一个 街区 左边 高 3 英寸 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 不 低于 砖 1	哪 块砖 不 低于 砖 1	哪个 砖块 不 在 砖块 1 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string ! = ) en.block.block1 ) )
得到 第 1 块 下方 的 街区	把 街区 1 下面 的 街区	得到 1 号 街区 以下 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 3 英寸 长 的 块 以上 的 所有 块	找 我 3 英寸 以上 的 街区	找到 所有 3 英寸 以上 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
在 金字塔 形块 下方 阻挡	金字塔 形块 下 的 块	金字塔 形 石块 下面 的 石块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 块 1 右边 的 块 ， 块 1 在 上面	给 我 找 一个 街区 ， 在 街区 的 右边 ， 街区 1 在 上面	找到 在 第一个 街区 的 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
挡 在 底部	底部 挡块	块 在 底部	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 宽 的 金字塔 块	找 我 所有 3 英寸 宽 的 金字塔 块	找到 所有 3 英寸 宽 的 金字塔 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 1 下方 和 左边 的 块	1 号 区块 下方 和 左侧 的 区块	在 第一座 的 左下方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
阻挡 两个 以上 的 街区	两个 以上 街区 右侧	右转 两个 街区 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
一块 3 到 6 英寸 的 砖	3 到 6 英寸 的 砖	一块 3 到 6 英寸 的 砖头	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 右边 的 块 是 块 1 的 右边	一号 街区 右边 的 街区	这 是 块 的 右边 这 是 块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
3 英寸 长 的 块 ， 左边 有块 1	3 英寸 长 的 块 ， 左边 有块 1	3 英寸 长 ， 左边 是 第一块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
找到 我 所有 特别 的 3 英寸 长块	找 我 所有 特别 的 3 英寸 长 的 积木	给 我 找 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 下面 的 块 少于 两块	低于 两块 的 块	块 下面 的 块 小于 2	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
从块 1 上方 和 右侧 阻止	1 号 街区 上方 和 右侧 的 街区	在 第一个 街区 的 正上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
选择 一个 特殊 的 金字塔 块	选择 特殊 的 棱锥 图块	选择 一个 特殊 的 金字塔 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
选择 块 1 位于 左侧 并且 高度 为 3 英寸 的 块	选择 块 1 位于 其 左侧 且 高度 为 3 英寸 的 块	选择 方块 1 在 它 的 左边 ， 它 的 高度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 长度 大于 3 的 所有 块	选择 长度 大于 3 的 所有 块	选择 长度 大于 3 的 所有 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 上方 和 左侧 的 块	找到 1 号 街区 上方 和 左侧 的 街区	找到 在 第一个 块 的 上面 和 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 块 1 上方 的 所有 块 2	找到 1 号 街区 上方 的 2 号 街区	找到 1 号 楼上 的 2 号 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 高度 为 3 英寸 的 街区	找到 3 英寸 高 的 那块	找出 高度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
从 3 英寸 的 街区 挡住 了	从 3 英寸 块 左起 的 块	块 左 从 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 的 右边 和 右边 的 所有 块	找到 1 号 街区 的 所有 街区	在 第一个 街区 的 右边 找 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 宽 的 积木 块	找 我 3 英寸 宽 的 街区 左边 的 所有 街区	找到 所有 剩下 的 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1	选择 块 1	选择 block   1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
阻止 最多 的 块 在 下面	最 多块 数在 下面 的 块	块 的 最大 数目 在 块 的 下面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
高度 大于 3 英寸 的 块	高度 大于 3 英寸 的 块	高度 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 在 块 1 左侧 的 块 上方	哪个 街区 在 街区 1 左边 的 街区 上方	在 第一个 街区 左边 的 街区 的 上面 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 高 的 块 ， 块 1 是 正确 的	找到 1 号 街区 右边 所有 3 英寸 高 的 街区	找到 我 所有 的 3 英寸 高 的 街区 ， 街区 1 是 对 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 在 金字塔 形块 上方	哪 块砖 在 金字塔 形 的 块 上面	金字塔 形 的 石块 上面 是 哪一块 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
哪个 砖块 在 金字塔 形状 的 砖 下面	哪 块砖 在 金字塔 形状 的 砖 下面	哪一块 砖 在 金字塔 形状 的 砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
什么 块 在 特殊 块 下面	特殊 街区 下面 是 哪个 街区	什么 街区 在 特别 街区 的 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 一个 6 英寸 或 更长 的 块	找 一个 6 英寸 或 更 短 的 街区	找 一块 6 英寸 或 更 短 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 1 下面 的 金字塔 块	区块 1 下方 的 金字塔 区块	金字塔 大厦 在 第一座 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 不 超过 3 英寸 的 积木	找 我 所有 不 超过 3 英寸 的 街区	找到 所有 不 超过 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 在 块 1 之上	1 号 街区 上方 是 哪个 街区	什么 街区 在 第一 街区 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 右边 最多 2 个 街区 的 所有 街区	找到 右边 最多 有 两个 街区 的 街区	找到 它 右边 最多 2 个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 是 块 数	街区 的 数目 是 多少	积木 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 宽度 为 3 英寸 且 低于 块 1 的 块	选择 宽度 为 3 英寸 且 低于 块 1 的 块	选择 宽度 为 3 英寸 且 低于 第 1 块 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
在 块 1 的 右下方 找到 一个 块	在 1 号 街区 的 下面 和 右边 找到 一个 街区	在 第一个 街区 的 右下方 找 一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
哪 块砖 不 高于 砖 1 宽	哪 块砖 不 高于 砖 1 宽	哪一块 砖 不 高于 砖 1 的 宽度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
选择 3 英寸 高 的 砖	选择 3 英寸 高 的 砖	选择 一块 3 英寸 高 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
阻挡 3 英寸 宽 的 块	3 英寸 宽块 右侧 块	右挡 3 英寸 宽 的 挡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 下方 的 特殊 块	选择 块 1 下 的 特殊 块	选择 一个 在 第 1 块 下面 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 我 在 块 1 左侧 和 上方 的 所有 块	找到 1 号 街区 左上方 的 所有 街区	给 我 找到 所有 剩下 的 街区 和 第一个 街区 以上 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
哪个 块 位于 块 1 右侧 的 块 下方	哪个 街区 在 街区 1 右边 的 街区 下面	哪个 区块 在 区块 1 右边 的 区块 之下	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
是否 有 一个 块 ， 其 直径 和 长度 在 这 两个 方向 上 等于 3 英寸	在 这 两个 方向 上 有 直径 和 长度 相等 的 块 吗	是否 有 一个 块 的 直径 和 长度 在 两个 方向 上 都 等于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
选择 少于 两种 颜色 的 块	选择 少于 两种 颜色 的 块	选择 一个 少于 两种 颜色 的 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
哪个 街区 最 左边	哪个 街区 最 左边	哪个 街区 最 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
在 它 下方 找到 一块 3 英寸 长 的 块	找 一个 3 英寸 长 的 街区	找 一个 下面 有 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 两个 以上 形状 的 块	找到 两个 以上 形状 的 块	给 我 找 两个 以上 形状 的 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string > ) ( number 2 ) ) )
选择 金字塔 形状 的 块 和 块 1 的 右侧	选择 块 1 右侧 棱锥 体 形状 的 块	选择 一个 金字塔 形状 的 方块 ， 在 第一个 方块 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string right ) ( string = ) en.block.block1 ) )
选择 长度 为 1 的 所有 砖块	选择 长度 为 1 的 所有 砖	选择 所有 长度 为 1 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.block.block1 ( string length ) ) ) )
什么 块 是 块 1 右侧 和 下方 的 块	什么 街区 在 1 号 街区 的 右边 和 下面	什么 街区 是 在 街区 1 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
找到 块 1 左边 和 下面 的 所有 块	找到 1 号 街区 左边 和 下面 的 所有 街区	找到 第一个 街区 剩下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
哪 块砖 是 3 英寸 砖 的 左边	哪 块砖 在 3 英寸 砖 的 左边	哪 块砖 在 3 英寸 砖 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
在 块 1 的 右边 和 块 1 的 左边 是否 有 一个 块	1 号 街区 的 右边 和 左边 有 街区 吗	第一 街区 的 右边 和 左边 各有 一个 街区 吗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
是否 有 一个 块 在 块 1 的 左侧 ， 也 是 3 英寸 长	有没有 一个 同样 长 3 英寸 的 块 在 块 1 的 左边	在 第一块 的 左边 有 一块 也 是 3 英寸 长 吗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
什么 块 都 在 块 1 的 上方 和 下方	什么 街区 在 街区 1 的 上面 和 下面	什么 街区 在 第一 街区 的 上面 和 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 3 下面 3 英寸 长 的 块	找到 1 号 街区 下 3 英寸 长 的 街区	在 1 号 积木 下面 找 一个 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
与 块 1 具有 相同 颜色 的 块	与 块 1 颜色 相同 的 块	与 第一块 相同 颜色 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
在 块 1 下面 找到 金字塔 形状 的 块	找到 第一块 下面 的 金字塔 形块	找到 第一个 街区 下面 的 金字塔 形状 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 块 1 或 2 下方 的 所有 砖块	把 1 号 或 2 号楼 下面 的 砖块 都 找 出来	帮 我 找到 1 号 或 2 号楼 下面 所有 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
得到 块 1 或块 2 左侧 的 块	在 街区 1 或 街区 2 的 左边 找 一个 街区	在 街区 1 或 街区 2 的 左边 找到 一个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
多 色块	多色 色块	多 色块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string > ) ( number 2 ) ) )
选择 块 1 右侧 高 的 块 3	选择 块 1 右侧 的 块 3 点高	选择 第 3 块 在 第 1 块 的 右侧 高 1 英寸 处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 在 块 1 下面	第一 区 下面 是 什么 街区	1 号楼 下面 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
选择 一块 位于 人口 最多 的 砖块 之下 的 块	选择 一个 位于 人口 最多 的 砖块 下面 的 块	选择 一个 位于 最 密集 砖块 下面 的 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 块 1 的 右边 ， 并且 是 金字塔 形状	哪个 街区 在 街区 1 的 右边 ， 呈 金字塔 形	什么 街区 在 第一座 的 右边 ， 呈 金字塔 形状	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 与 块 1 一样 长 或 更长 的 所有 块	查找 与 块 1 相同 或 更长 的 所有 块	找到 所有 与 第 1 块 一样 长 或 比 第 1 块 更长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪个 块 最 接近 底部	哪个 街区 离 底部 最近	哪个 街区 最 接近 底部	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
双 色块	双 色块	双 彩色 块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string > ) ( number 2 ) ) )
找到 块 1 右边 的 所有 块	找到 1 号 街区 右边 的 所有 街区	找到 1 号 街区 右边 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
哪个 块 只有 一种 颜色	哪个 块 只有 一种 颜色	哪个 方块 只有 一种 颜色	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string < ) ( number 2 ) ) )
找到 3 英寸 高 的 块	找到 3 英寸 高 的 木块	找出 3 英寸 高 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
哪 块砖 在 3 英寸 宽 的 砖 下面	哪 块砖 在 3 英寸 宽 的 砖 下面	3 英寸 宽 的 砖 下面 是 哪一块 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
在 第 1 区 下方 获得 3 英寸 长 的 区块	在 1 号 街区 下面 找 一个 3 英寸 长 的 街区	在 1 号楼 下面 建 一个 3 英寸 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 不是 金字塔 的 街区	找到 所有 不是 金字塔 的 街区	找到 所有 不是 金字塔 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
什么 块 在 块 1 的 右边 ， 宽度 为 3 英寸	哪个 街区 在 街区 1 的 右边 ， 宽度 是 3 英寸	什么 街区 在 第一 街区 的 右边 ， 宽度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 至少 3 英寸 长 的 块	找到 至少 3 英寸 长 的 块	找出 至少 3 英寸 长 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 1 下方 的 块 和 块 1 的 右侧	一号 街区 下方 一号 街区 右侧 的 街区	在 第一座 的 下面 ， 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
选择 块 1 的 左侧	选择 块 1 的 左侧	选择 块 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 块 2 右侧 的 块	选择 块 2 右侧 的 块	选择 一个 在 街区 2 右边 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪 块砖 高于 3 英寸	哪 块砖 比 3 英寸 高	哪 块砖 高于 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
只要 块 1 宽 ， 什么 块	什么 街区 只要 街区 1 宽	什么 街区 和 第一个 街区 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
找到 我 最 多 和 块 1 一样 高 的 块	把 所有 的 街区 都 找 出来	帮 我 找到 最多 和 第一座 一样 高 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
选择 块 1 左侧 3 英寸 宽 的 块	选择 块 1 左侧 3 英寸 宽 的 块	选择 1 号 积木 左边 3 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string left ) ( string = ) en.block.block1 ) )
选择 3 英寸 块 左侧 的 块	选择 3 英寸 块 左侧 的 块	选择 一个 块 的 左边 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 最 丰富多彩 的 街区	选择 最 鲜艳 的 方块	选择 色彩 最 丰富 的 积木	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string color ) ) )
长度 不是 3 英寸 的 块	长度 不 超过 3 英寸 的 块	块 长度 不是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 至少 有 2 种颜色 的 所有 积木	找到 所有 至少 有 两种 颜色 的 方块	找到 所有 至少 有 两种 颜色 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string >= ) ( number 2 ) ) )
找到 与 块 1 颜色 相同 的 块	找到 与 块 1 颜色 相同 的 块	找 一个 和 第一个 方块 颜色 相同 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( call SW.getProperty en.block.block1 ( string color ) ) ) )
什么 块 是 两个 以上 块 的 左边	两个 以上 街区 的 左边 是 哪个 街区	哪个 街区 比 两个 街区 还 左	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 一个 不 超过 2 个 形状 的 块	选择 不 超过 2 个 形状 的 块	选择 一个 不 超过 2 个 形状 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string <= ) ( number 2 ) ) )
砖块 位于 砖块 1 右侧 的 砖块 之上	哪 块砖 在 砖 1 右边 的 砖 上面	哪个 砖块 在 砖块 1 右边 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
块 长度 为 3 英寸 的 块 下面	在 长度 为 3 英寸 的 块 下面 的 块	在 长度 为 3 英寸 的 方块 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 我 所有 3 英寸 高 的 块 ， 块 1 在 上面	找到 1 号 街区 上面 所有 3 英寸 高 的 街区	把 第一个 街区 上面 所有 3 英寸 高 的 街区 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 长度 超过 3 英寸 的 块	选择 长度 超过 3 英寸 的 块	选择 一个 长度 超过 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 3 英寸 高 的 块 ， 位于 块 1 的 右侧	找到 高度 为 3 英寸 且 位于 块 1 右侧 的 块	找到 一块 3 英寸 高 的 木块 ， 它 在 木块 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 块 1 左边 和 下面 的 块	帮 我 找到 1 号 街区 左边 和 下面 的 街区	帮 我 找到 在 第一个 街区 左边 和 下面 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 长 的 块 ， 块 1 是 正确 的	找到 1 号 街区 右边 所有 3 英寸 长 的 街区	找到 我 所有 3 英寸 长 的 街区 ， 街区 1 是 对 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
两种 颜色 的 块	双 色块	双色 积木	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( number 2 ) ) )
选择 块 1 左侧 和 上方 的 块	选择 块 1 左侧 和 上方 的 块	选择 块 1 的 左边 和 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
块长 3 英寸 ， 低于 块 1	一号 街区 3 英寸 长及 以下	街区 3 英寸 长 ， 在 街区 1 以下	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 下面 3 英寸 高 的 块	找到 1 号 街区 下 3 英寸 高 的 街区	找到 1 号 街区 下面 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 特殊 的 ， 右边 有块 1	哪个 街区 很 特别 ， 右边 有 1 号 街区	什么 街区 很 特别 ， 在 它 的 右边 有 一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 两个 块 左边 的 块 或 一个 但 不 多 的 块	在 两个 街区 或 一个 街区 的 左边 找 一个 街区	找到 两个 或 一个 街区 左边 的 街区 ， 但 不要 再 多 了	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪些 块 位于 块 1 右侧 的 块 上方	什么 街区 在 街区 1 右边 的 街区 上方	什么 街区 在 街区 1 右边 的 街区 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 所有 3 英寸 长 的 块	选择 3 英寸 长 的 所有 块	选择 所有 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
在 块 1 的 右侧 选择 块	选择 块 右侧 的 块 而 不是 块 1	选择 方块 右边 的 方块 而 不是 方块 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
选择 两种 颜色 的 块	选择 两种 颜色 的 块	选择 两个 颜色 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string = ) ( number 2 ) ) )
阻挡 2 个 街区 左侧	两个 街区 的 左边 街区	往 左 走 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
阻止 块 1 和 2 的 左侧	块 1 和 块 2 的 左块	在 第 1 和 第 2 街区 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 我 在 块 1 右侧 的 所有 3 英寸 高 的 块	找到 1 号 街区 右边 所有 3 英寸 高 的 街区	帮 我 找到 1 号 街区 右边 所有 3 英寸 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
什么 街区 高于 3 英寸 高 的 街区	3 英寸 高 的 积木 上面 是 什么 积木	3 英寸 高 的 积木 上面 是 什么 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 左侧 的 块	选择 左侧 的 块	选择 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
哪个 块 是 最 短 的	哪个 街区 最短	哪条 街 最 短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
阻止 块 1 的 右下方	街区 1 的 下方 和 右侧 街区	在 第一座 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
将块 放置 在 宽度 为 3 英寸 的 块 的 右侧	将块 放置 在 宽度 为 3 英寸 的 块 的 右侧	把 积木 放在 3 英寸 宽 的 积木 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
找到 金字塔 块 上方 的 所有 街区	找到 金字塔 上面 的 所有 街区	找到 金字塔 上面 的 所有 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 长度 至少 为块 1 宽度 的 砖块	选择 长度 至少 为块 1 宽度 的 砖	选择 长度 至少 为 第 1 块 的 宽度 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 我 最 多 剩下 两个 街区 的 所有 街区	给 我 找 一个 最 多只 剩 两个 街区 的 街区	给 我 找到 最 多 剩下 两个 街区 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 下面 有块 1 的 特殊 块	找到 下面 有块 1 的 特殊 块	找到 下面 有 第 1 块 的 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪个 块长 至少 3 或 6 英寸	哪个 街区 至少 有 3 或 6 英寸 长	哪一块 至少 3 或 6 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
选择 每块 3 或 6 英寸 的 块	选择 每 一块 3 或 6 英寸	选择 每 一块 3 或 6 英寸 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
一个 3 英寸 的 区块 顶部 有 一个 块 找到 那个 区块	一个 3 英寸 的 积木 上面 有 一个 积木 找到 那个 积木	一个 3 英寸 的 方块 上面 有 一个 方块 找到 那个 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
选择 块 1 上方 和 下方 的 块	选择 块 1 上方 和 下方 的 块	选择 块 1 上面 和 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 下面 两个 街区 的 所有 街区	找到 两个 街区 下 的 所有 街区	找到 两个 街区 以下 的 所有 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 最少 颜色 的 块	给 我 找个 颜色 最少 的 街区	给 我 找 颜色 最少 的 积木	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string color ) ) )
选择 块 1 左侧 的 块 ， 总 高度 为 3 英寸	选择 位于 块 1 左侧 且 总 高度 为 3 英寸 的 块	选择 在 第 1 块 的 左边 并且 总 高度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 有 多长	这个 街区 有 多长	这个 街区 有 多长	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
哪种 砖 的 形状 最 多	哪 块砖 的 形状 最好	哪 块砖 的 形状 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
块 1 上方 3 英寸 高 的 块	1 号 街区 上方 3 英寸 高 的 街区	比 第一座 高 3 英寸 的 大楼	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 块 下面 的 块	帮 我 找到 1 号 街区 下 的 街区	找到 在 第一个 方块 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 的 块	选择 块 1 左侧 的 块	选择 块 1 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
在 块 1 的 下方 和 右侧	1 号 街区 下方 和 右侧	在 第一座 的 右下方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
在 块 1 下方 阻挡 3 英寸 长	1 号 区块 下方 3 英寸 长 的 区块	在 1 号 街区 下面 的 街区 有 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
高度 最多为 3 英寸 或 6 英寸 的 块	高度 不 超过 3 英寸 或 6 英寸 的 块	高 不 超过 3 英寸 或 6 英寸 的 石块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 左侧 的 特殊 块	给 我 找 1 号 街区 左边 的 那个 特殊 街区	帮 我 找到 在 第一座 左边 的 那个 特殊 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 在 第 1 区 左侧 的 特殊 区块	在 1 号 街区 的 左边 给 我 找个 特别 的 街区	给 我 找 一个 在 第一座 左边 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string left ) ( string = ) en.block.block1 ) )
是否 有 一个 宽度 等于 最大 3 或 6 英寸 的 块	有 宽度 最大 等于 3 或 6 英寸 的 块 吗	是否 有 一个 块 的 宽度 等于 3 或 6 英寸 最大	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 下面 的 所有 块	找到 1 号 街区 下 的 所有 街区	找到 1 号楼 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
具有 最 多 形状 的 块	形状 数最多 的 块	形状 数目 最多 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
什么 块 至少 和 块 1 一样 宽	哪个 街区 至少 和 第一 街区 一样 高是 宽 的	什么 街区 至少 和 第一座 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 一个 6 英寸 长 或 更 短 的 块	找 一个 6 英寸 或 更 小 的 街区	找 一块 6 英寸 或 更 短 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
阻止 在 块 1 下方 的 块 上方	一号 街区 下 的 街区 上 的 街区	块 上 的 块 就是 块 1 下 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
阻挡 金字塔 块 的 左侧	金字塔 块 左侧 的 块	在 金字塔 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
选择 块 1 上方 的 所有 特殊 块	选择 块 1 上 的 所有 特殊 块	选择 第 1 块 以上 的 所有 特殊 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string is_special ) ) )
选择 人口 最少 的 砖块 上方 的 块	在 人口 最少 的 砖块 上 选择 一个 块	在 人口 最少 的 砖块 上 选择 一个 方块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string above ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 上面 有 金字塔 形块 的 块	找到 上面 有 金字塔 形块 的 块	找到 上面 有 金字塔 形状 方块 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
阻挡 高度 不是 3 英寸	什么 块 的 高度 不是 3 英寸	什么 块 的 高度 不是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 比块 1 长 的 所有 块	给 我 找 一个 比 一号 街 区长 的 街区	找到 比 第一个 街区 还长 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
收集 所有 3 英寸 或 更 大 的 块	收集 所有 3 英寸 或 以上 的 积木	收集 所有 3 英寸 或 3 英寸 以上 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
第 1 块 的 权利	1 区 右侧	第一座 权利	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 右侧 的 所有 金字塔 块	找到 1 号 街区 右边 的 所有 金字塔 街区	在 第一个 街区 右边 找到 所有 的 金字塔 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 块 在 块 1 右侧 的 块 的 左侧	哪个 块 在 块 的 左边 ， 哪个 块 在 块 1 的 右边	哪个 街区 在 街区 的 左边 ， 哪个 街区 在 街区 1 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
阻止 1 块 以上 ， 1 块 阻止	一个 街区 以上 一个 街区 左边	一个 街区 以上 ， 一个 街区 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
什么 砖 左边 至少 有 两块 砖	哪 块砖 的 左边 至少 有 两块 砖	什么 砖 的 左边 至少 有 两块 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
第 1 块 和 第 2 块 的 右边	1 区 和 2 区 右侧	在 第一座 和 第二座 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
块 1 上方 3 英寸 块	1 号 区块 上方 3 英寸 区块	比 第一块 高 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string above ) ( string = ) en.block.block1 ) )
哪 块砖 长 3 或 6 英寸	哪 块砖 有 3 或 6 英寸 长	哪一块 砖 是 3 英寸 还是 6 英寸 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
选择 宽度 为 3 英寸 的 块	选择 宽度 为 3 英寸 的 块	选择 宽度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
特别 区块 的 权利	特殊 街区 权	专用 滑车 权	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 我 所有 的 金字塔 形块	找 我 所有 金字塔 形状 的 块	找到 所有 金字塔 形状 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 厚度 小于 块 1 的 块	选择 厚度 小于 块 1 的 块	选择 一个 比 第一个 块 更 小 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
找到 块 1 或 2 下面 的 所有 块	找到 1 或 2 街区 下 的 所有 街区	找到 1 号 或 2 号 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
哪个 金字塔 形块 是 3 英寸 宽	哪个 金字塔 形 的 块 3 英寸 宽	哪个 金字塔 形状 的 方块 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 的 总长度	块体 总长度	滑车 总长度	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ) ) )
金字塔 上方 的 块	金字塔 上 的 块	块 以上 金字塔	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
从块 1 的 右边 获取 特殊 块	从 1 号 街区 的 右边 拿到 特殊 街区	从 第一个 街区 的 右边 得到 一个 特殊 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 我 那个 街区 左边 的 所有 街区 都 在 下方	找 我 那个 街区 左边 的 所有 街区 都 在 下面	找到 我 ， 第一个 街区 的 所有 街区 都 在 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
选择 比块 1 短 的 块	选择 比块 1 短 的 块	选择 一个 比 第一个 块 短 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 块 1 右边 的 所有 块 ， 块 1 的 左边 是 块	找到 1 区 右边 和 1 区 左边 的 所有 街区	为 我 找到 所有 的 块 ， 块 1 是 右 的 和 左 的 块 1	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 与 块 1 相同 形状 的 块	找到 与 块 1 形状 相同 的 块	找 一个 形状 和 第一个 方块 相同 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
找到 块 1 上方 和 左侧 的 所有 块	找到 1 号 街区 左上方 的 所有 街区	帮 我 找到 第一个 街区 左边 和 上面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 两块 以上 的 块	找到 两个 街区 以上 的 街区	找到 两个 街区 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 右边 3 英寸 宽 的 块	找到 1 号 街区 右边 所有 3 英寸 宽 的 街区	找到 1 号 街区 右边 3 英寸 宽 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string right ) ( string = ) en.block.block1 ) )
找到 一个 长度 小于 3 英寸 的 块	找 一个 长度 小于 3 英寸 的 块	找 一个 小于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
在 块 1 和 块 1 上方 的 块 之间 找到 块	在 块 1 和 块 1 上 的 块 之间 查找 块	在 街区 1 和 街区 1 上面 的 街区 之间 找到 一个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
什么 块 在 块 1 下面 并且 高度 为 3 英寸	哪个 街区 在 1 号 街区 之下 ， 高度 是 3 英寸	什么 街区 低于 第一座 ， 高度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 1 留下 了 什么 块 ， 长度 为 3 英寸	1 号 和 3 号 街区 的 左边 是 什么 街区	还 剩下 多少 块 1 和 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
长度 大于 3 英寸 或 6 英寸 的 块	长度 大于 3 英寸 或 6 英寸 的 块	长度 大于 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
左边 第三个 街区	左边 第三个 街区	左边 第三个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
金字塔 形块 顶部 是否 有 一个 块	在 金字塔 形 的 块 上面 有块 吗	金字塔 形状 的 积木 上 有 积木 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 长度 超过 块 1 宽度 的 块	找到 长度 超过 块 1 宽度 的 块	查找 长度 超过 块 1 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
块 位于 大多数 块 的 右侧	在 大多数 块 的 右边 的 块	块 ， 在 大多数 块 的 右边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 一个 右边 有 第 1 个块 的 块	找 一个 右边 有块 1 的 块	找 一个 右边 有 1 个 方块 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
阻止 剩下 两个 以上 的 块	两个 街区 以上 的 街区	剩下 两个 多 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 宽度 和 高度 各为 3 英寸 的 块	选择 宽度 和 高度 各为 3 英寸 的 块	选择 一个 块 ， 宽度 和 高度 各为 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 不是 金字塔 的 街区	给 我 找个 不是 金字塔 的 街区	给 我 找 一个 不是 金字塔 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
选择 大于 这 两个 块 右侧 的 块	选择 两个 以上 块 右侧 的 块	选择 比 这 两个 方块 大 的 右边 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 块 1 上方 的 3 英寸 高 区块	选择 块 1 上方 3 英寸 高 的 块	选择 1 号 积木 上面 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
块 的 数量 是 多少	这个 街区 的 号码 是 多少	积木 的 数量 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
最 多 两种 颜色 的 块	最 多 两种 颜色 的 块	最 多 两种 颜色 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string color ) ( string <= ) ( number 2 ) ) )
什么 块 在 两个 街区 之下	两个 街区 下面 是 哪个 街区	哪个 街区 在 两个 街区 下面	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 位于 大多数 块 的 右侧	在 大多数 块 的 右边 的 块	在 大多数 块 的 右边 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string right ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
哪个 区块 位于 3 英寸 高 区块 的 左侧	哪个 街区 在 3 英寸 高 街区 的 左边	哪一块 在 3 英寸 高 的 那块 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
块 1 上方 3 英寸 块	1 号 区块 上方 3 英寸 区块	比 第一块 高 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪些 金字塔 块 位于 块 1 的 右侧	哪个 金字塔 块 在 块 1 的 右边	哪些 金字塔 街区 在 第一座 的 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
块 1 从块 1 开始	从 1 号 街区 右转 2 号 街区	第一座 右边 的 第二座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
找到 3 英寸 宽 的 块 以上 的 所有 块	找 我 3 英寸 宽 以上 的 所有 街区	找到 所有 3 英寸 宽 以上 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 在 它 左边 少于 两个 块	哪个 街区 左边 不到 两个 街区	哪个 街区 的 左边 还 不到 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 3 英寸 高 的 块 并 放在 左边	找到 3 英寸 高 的 块 ， 放在 左边	找 一块 3 英寸 高 的 木块 放在 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
什么 块 有 上面 的 块 1 和 左边	哪个 街区 左上方 有 街区 1	什么 街区 有 街区 1 在 上面 和 左边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
哪个 块 的 宽度 小于 或 等于 块 1 的 长度	哪个 块 的 宽度 小于 或 等于 块 1s 的 长度	什么 块 的 宽度 小于 或 等于 块 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻止 块 1 的 上方 和 左侧	街区 1 左上方 的 街区	块 的 上方 和 左侧	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 所有 块	找到 1 号 街区 右边 的 所有 街区	找到 第一个 街区 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
找到 高度 小于 3 英寸 的 块	找到 高度 小于 3 英寸 的 块	找到 高度 小于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
选择 块 1 下方 的 3 英寸 块	选择 块 1 下方 的 3 英寸 块	选择 1 块 下面 的 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
长度 为 3 英寸 ， 长度 为 3 英寸 的 块	长度 为 3 英寸 ， 长度 为 3 英寸 的 块	块 的 长度 是 3 英寸 ， 长度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
什么 块 是 右边 的 块 1	什么 街区 在 1 号 街区 的 右边	右边 的 第一个 街区 是 什么 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
什么 块 是 块 1 右边 的 两个 块	哪个 街区 是 1 号 街区 右边 的 两个 街区	哪个 街区 在 第一座 的 右边 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
选择 块 1 左侧 的 块	选择 块 1 左侧 的 块	选择 块 1 左边 的 一个 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) )
一个 特殊 的 块 ， 其 形状 是 金字塔 形	形状 为 金字塔 的 特殊 块	金字塔 形 的 特殊 块体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
什么 块 在 块 1 或块 2 的 左侧	哪个 街区 在 街区 1 或 街区 2 的 左边	哪个 街区 在 街区 1 或 街区 2 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 下面 的 块	找到 1 号 街区 下面 的 街区	找到 第一个 方块 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
高度 不是 3 英寸 的 块	高度 不 超过 3 英寸 的 砌块	高度 不 超过 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 3 en.inch ) ) )
找到 我 高于 3 英寸 的 所有 块	找 我 所有 高出 3 英寸 的 街区	找到 所有 高于 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
块 的 高度 是 多少	这个 街区 的 高度 是 多少	这个 街区 有 多 高	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
哪 块砖 不比 砖 1 宽	哪 块砖 不比 砖 1 宽	哪一块 砖 没有 一块 砖 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 块砖 高 3 或 6 英寸	哪 块砖 有 3 或 6 英寸 高	哪一块 砖 是 3 英寸 高 还是 6 英寸 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) )
选择 最 不 多彩的 砖块	选择 颜色 最少 的 砖	选择 颜色 最少 的 砖	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string color ) ) )
找到 一个 金字塔 或 立方体 形状 的 块	给 我 找个 金字塔 或 立方体	给 我 找 一个 金字塔 或 立方体 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.concat en.shape.pyramid en.shape.cube ) ) )
什么 块 有 右边 的 块 1	哪个 街区 右边 有 1 号 街区	什么 街区 右边 有 第一个 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string below ) ( string = ) en.block.block1 ) )
块 超过 两个 块	超过 两个 街区 的 街区	高于 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 位于 块 上方 的 块	帮 我 找到 1 号 街区 下面 的 街区	帮 我 找到 在 第一个 街区 上面 的 街区 下面 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
什么 块 在 block1 的 块 上方	什么 块 在 块 1 上面	哪块 在 第一块 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 我 在 块 1 上方 的 所有 块	找 我 上面 那个 街区 的 所有 街区	找到 上面 第一个 街区 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
块 的 长度 大于 块 1 的 宽度	长度 大于 块 1 宽度 的 块	长度 大于 块 1 宽度 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
什么 块 是 3 英寸 长块 的 左边	3 英寸 长 的 积木 左边 是 什么 积木	3 英寸 长 的 积木 左边 是 什么 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
将块 1 命名 为 下方 和 右侧 的 块 1	在 块 1 的 下方 和 右侧 命名 块	命名 一个 块 ， 块 1 在 下面 和 右边	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string right ) ( string = ) en.block.block1 ) )
找到 我 距离 右边 2 个 街区 的 所有 街区	在 离 右边 两个 街区 的 地方 找到 我	从 右边 过 两个 街区 再 找 我	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
挡住 金字塔 的 左边	金字塔 左侧 块	金字塔 左座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ) )
找到 最长 的 街区	找到 最长 的 街区	找到 最长 的 方块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
阻挡 3 英寸 以上 的 块	超过 3 英寸 长 的 块	3 英寸 以上 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
长度 至少 为 3 英寸 或 6 英寸 的 块	长度 至少 为 3 英寸 或 6 英寸 的 块	长度 至少 为 3 英寸 或 6 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
什么 块 在 3 英寸 长 的 块 右边	哪个 街区 在 3 英寸 长 街区 的 右边	什么 东西 挡 在 3 英寸 长 的 右边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
哪个 砖 不 在 砖 1 的 左边	哪 块砖 不 在 砖 1 的 左边	哪个 砖块 不 在 砖块 1 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string ! = ) en.block.block1 ) )
选择 最小 块 组 上方 的 块	选择 位于 最小 块 组 之上 的 块	选择 位于 最小 块 组 之上 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 块 1 左下方 的 块	在 第一个 街区 的 左边 和 下面 找 一个 街区	找到 第一个 街区 左边 和 下面 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
是否 有 一个 不 超过 3 或 6 英寸 的 块	有 宽度 不 超过 3 或 6 英寸 的 街区 吗	有没有 不 超过 3 或 6 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
长度 为 3 英寸 ， 形状 为 金字塔 的 块	长度 为 3 英寸 ， 形状 为 金字塔 的 块	长 3 英寸 ， 形状 为 金字塔 的 石块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
最低 宽度 的 块	最小 宽度 的 块	最低 宽度 块	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string width ) ) ) )
块 1 的 长度 是 多少	第一 区 的 长度 是 多少	第一座 的 长度 是 多少	( call SW.listValue ( call SW.getProperty en.block.block1 ( string length ) ) )
什么 块 在 其 右侧 有块 1 并且 是 金字塔 形 的	哪个 街区 右边 有 1 号 街区 呈 金字塔 形	什么 街区 右边 有 第一个 街区 ， 是 金字塔 形状 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
选择 一个 非 金字塔 形 的 块	选择 不是 金字塔 形状 的 块	选择 一个 不是 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string ! = ) en.shape.pyramid ) )
将块 放在 宽度 为 3 英寸 的 块 下方	在 宽度 为 3 英寸 的 块 下面 定位 块	将 木块 放在 宽为 3 英寸 的 木块 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ) )
阻止 不 在 块 1 的 左侧	块 不 在 块 1 的 左侧	不 在 第一块 的 左边	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string ! = ) en.block.block1 ) )
哪 块砖 最 左边	哪 块砖 最 左边	哪 块砖 最 左边	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 3 英寸 宽 的 块 ， 块 1 在 上面	给 我 找 块 1 上面 3 英寸 宽 的 积木	找到 所有 3 英寸 宽 的 方块 ， 第一个 方块 在 上面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
找到 一个 形状 像 金字塔 的 块	找 一个 金字塔 形状 的 块	找 一个 金字塔 形状 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 位于 块 1 下方 的 块 上方 的 块	帮 我 找到 1 号 街区 下 的 街区	找到 比 第一个 方块 高 的 方块 ， 比 第一个 方块 低 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
找到 我 所有 宽度 小于 块 1 的 砖块	把 1 号楼 宽 的 砖 都 给 我 找 出来	给 我 找 所有 比 第一座 宽 一点 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
左边 和 上面 的 块 1	1 区 左上方	1 号楼 左上方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
什么 块 是 3 英寸 高 和 金字塔 形	哪个 街区 高 3 英寸 ， 呈 金字塔 形	什么 东西 是 3 英寸 高 ， 金字塔 形状 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string shape ) ( string = ) en.shape.pyramid ) )
找到 我 所有 3 英寸 长 的 块 ， 块 1 在 下面	找到 我 下面 的 3 英寸 长 的 街区 1	找到 所有 3 英寸 长 的 街区 ， 街区 1 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
在 块 1 上方 阻止 两个	1 区 以上 2 区	在 第一座 上面 的 第二座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 块 1 下面 的 所有 块 2	找到 1 号 街区 下 的 2 号 街区	找到 1 号楼 下面 的 2 号楼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 我 所有 3 英寸 宽 和 长块	找 我 所有 3 英寸 宽和长 的 街区	找到 3 英寸 宽和长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 超过 3 英寸 宽	哪个 街区 超过 3 英寸 宽	哪些 积木 超过 3 英寸 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
什么 块 低于 大多数 块	哪个 街区 在 最 下面	哪个 方块 在 最 下面	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string above ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
选择 3 到 6 英寸 宽 的 块	选择 3 到 6 英寸 宽 的 块	选择 3   -   6 英寸 宽 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 块 1 左边 的 所有 特殊 块	找到 1 号 街区 左边 的 所有 特殊 街区	给 我 找 一下 第一个 街区 剩下 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string is_special ) ) )
找到 一个 直径 大于 3 英寸 的 块	找到 直径 大于 3 英寸 的 块	找 一个 直径 大于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找到 块 1 左边 和 下面 的 所有 块	找到 1 号 街区 左边 和 下面 的 所有 街区	找到 第一个 街区 左边 和 下面 的 所有 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( string above ) ( string = ) en.block.block1 ) )
哪个 块 下面 有 最 多 的 块	哪个 块 下面 的 块 数最多	下面 哪个 块 的 块 数 最高	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string below ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 比块 1 更 高 的 块 很长	找到 比 1 号 街 区长 的 街区	找到 比 第一个 街 区长 一些 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
阻挡 3 英寸 以上 的 块	3 英寸 块 以上 的 块	块 以上 3 英寸 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ) )
选择 右侧 下方 的 块	选择 右边 块 下面 的 块	选择 右边 方块 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
哪 块砖 的 宽度 小于 砖 1 的 高度	哪 块砖 的 宽度 小于 砖 1 的 高度	哪一块 砖 的 宽度 小于 砖 1 的 高度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
哪个 块 的 形状 最少	哪个 街区 的 形状 最少	什么 街区 的 形状 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( string shape ) ) )
选择 块 1 左侧 的 块 ， 长度 为 3 英寸	选择 块 1 左侧 长度 为 3 英寸 的 块	选择 块 1 的 左边 ， 长度 为 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 左侧 上方 的 块	选择 左上方 的 块	选择 左边 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string left ) ( string = ) en.block.block1 ) )
找到 我 所有 3 英寸 高 的 块	找 我 所有 3 英寸 高 的 街区	找到 所有 3 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 下面 的 所有 块 ， 块 1 也 在 下面	找到 1 区 下面 的 所有 街区 ， 1 区 也 在 下面	找到 1 号楼 下面 的 所有 街区 ， 1 号楼 也 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
选择 块 1 上方 的 块	选择 块 1 上方 的 块	选择 块 1 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
块 1 以上 的 块	1 号 街区 以上 的 街区	在 第一座 上面 的 那座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 我 下面 最多 2 个 街区 的 所有 砖块	找 我 下面 最 多 两个 街区 的 砖块	给 我 找到 下面 最多 2 个 街区 的 所有 砖块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 所有 的 块 至少 与 块 1 相同 的 高度	找 我 所有 街区 至少 和 街区 1 一样 高	给 我 找到 所有 至少 和 第一个 街区 一样 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
找到 我 最高 6 英寸 高 的 所有 街区	找 我 所有 街区 的 高度 不 超过 6 英寸	找到 所有 不 超过 6 英寸 高 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
哪个 金字塔 形砖 高 3 英寸	哪块 金字塔 形 的 砖 有 3 英寸 高	哪个 金字塔 形 的 砖 有 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 右侧 的 所有 特殊 块	找到 1 号 街区 右侧 的 所有 特殊 街区	找到 1 号 街区 右边 所有 的 特殊 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string is_special ) ) )
哪 块砖 在 砖 1 以上 的 砖 下面	哪 块砖 在 砖 1 上面 的 砖 下面	哪 块砖 在 砖 1 上面 的 那 块砖 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
选择 左侧 少于 2 个 区块 的 区块	选择 左边 少于 2 个块 的 块	选择 一个 左边 少于 2 个 方块 的 方块	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 位于 第 1 区 右侧 的 3 英寸 长 区块	找到 位于 块 1 右侧 的 3 英寸 长 的 块	找到 1 号 街区 右边 的 3 英寸 长 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 上 方块 的 左侧 块	选择 块 1 上 方块 左侧 的 块	选择 块 1 上面 块 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
找到 我 所有 的 金字塔 块 ， 块 1 在 下面	给 我 找 块 1 下面 的 所有 金字塔 块	给 我 找到 所有 金字塔 的 方块 ， 第一个 方块 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string shape ) ( string = ) en.shape.pyramid ) )
高度 为 3 英寸 且 低于 块 1 的 块	高度 为 3 英寸 且 低于 1 号 区块 的 区块	高度 为 3 英寸 且 低于 第一座 的 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string below ) ( string = ) en.block.block1 ) )
找到 块 1 下面 的 块	找到 1 号 街区 下 的 街区	找到 块 1 下面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
找到 我 上面 的 所有 特殊 区块	给 我 找 上面 所有 特别 的 街区	找到 上面 所有 的 特殊 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
选择 块 1 左侧 和 上方 的 块	选择 块 1 左侧 和 上方 的 块	选择 块 1 的 左边 和 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
选择 另 一个 块 左侧 的 块	选择 位于 另 一个 块 左侧 的 块	选择 另 一个 块 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 我 所有 比块 1 的 长度 更 高 的 块	找到 比 1 号 街 区长 的 所有 街区	找到 所有 比 第一个 街区 还 高 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 位于 块 1 左侧 的 块 另一侧 的 块	找到 位于 块 1 左侧 的 块 另一侧 的 块	找到 位于 块 1 左边 的 块 的 另一边 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
哪 块砖 不再 是 砖 1	哪 块砖 不 超过 砖 1	哪 块砖 不 长于 砖 1	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
找到 我 在 块 1 正下方 的 所有 块	找到 我 1 号 街区 的 所有 街区	给 我 找到 所有 的 街区 ， 在 第一个 街区 的 右边 和 下面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ) )
选择 块 1 上方 和 左侧 的 块	选择 块 1 上方 和 左侧 的 块	选择 第一块 上面 和 左边 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) )
选择 一个 块 ， 只要 块 1 宽	选择 一个 块 ， 只要 块 1 是 宽 的	选择 一个 块 ， 只要 块 1 是 宽 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.block.block1 ( string width ) ) ) )
选择 高度 小于 6 英寸 的 砖块 ， 然后 选择 高度 小于 3 英寸 的 砖块	选择 小于 6 英寸 高 的 砖 ， 然后 选择 小于 3 英寸 高 的 砖	选择 小于 6 英寸 的 砖 ， 然后 选择 小于 3 英寸 的 砖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
找到 我 所有 3 英寸 高 的 特殊 街区	找 我 所有 3 英寸 高 的 特别 街区	找到 所有 3 英寸 高 的 特殊 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
找到 一个 不 在 块 1 之上 的 块	找 一个 不 在 第一块 上面 的 块	找到 一个 不 在 第 1 块 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string ! = ) en.block.block1 ) )
找到 我 下面 的 所有 特殊 区块	找到 下面 所有 特别 的 街区	给 我 找到 下面 所有 的 积木	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
块 1 上面 有 什么 特殊 块	1 号 街区 上方 是 什么 特殊 街区	1 号楼 上面 有 什么 特别 的 楼	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ( string above ) ( string = ) en.block.block1 ) )
块 1 低于 块 1 ， 宽度 为 3 英寸	位于 1 号 区块 下方 ， 宽度 为 3 英寸 的 区块	在 第一块 下面 ， 宽度 为 3 英寸 的 石块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
具有 块 1 或块 2 的 块 在 右侧	右边 有 1 区 或 2 区 的 街区	右边 有块 1 或块 2 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 一个 3 英寸 高 的 金字塔 形块	给 我 找 一个 3 英寸 高 的 金字塔 形块	给 我 找 一个 3 英寸 高 的 金字塔 形状 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 下方 和 左侧 的 块	选择 块 1 下方 和 左侧 的 块	选择 块 1 下面 和 左边 的 块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 块 1 左侧 的 块	找到 1 号 街区 左边 的 街区	找到 第一块 左边 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ) )
哪 块砖 高于 砖 1 高	哪 块砖 比 第一 块砖 高	哪一块 砖比 一块 砖高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string width ) ) ) ) )
哪 种 类型 的 块 具有 最多 的 形状	哪 种 类型 的 块 形状 最 多	哪 一种 积木 形状 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( string shape ) ) )
找到 我 所有 3 英寸 高 的 块 ， 其中 1 块 是 剩下 的	把 1 号 街区 左边 3 英寸 高 的 街区 都 找 出来	把 1 号楼 剩下 的 3 英寸 高 的 楼 都 找 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) )
找到 最高 的 街区	找到 最高 的 街区	找到 最高 的 街区	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
选择 块 1 在 右侧 和 上方 的 块	选择 块 1 在 右侧 和 上方 的 块	选择 块 1 在 右边 和 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
在 块 1 的 左侧 和 上方 找到 块	在 第一个 街区 的 左边 和 上面 找 街区	在 第一个 街区 的 左边 和 上面 找到 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) )
选择 1 区 左侧 的 3 英寸 区块	选择 块 1 左侧 的 3 英寸 块	选择 1 号 街区 左边 的 3 英寸 街区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string left ) ( string = ) en.block.block1 ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
选择 块 1 下方 和 左侧 的 砖块	选择 块 1 下方 和 左侧 的 砖块	选择 块 1 的 左下方 的 砖块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) en.block.block1 ) ) )
找到 一个 至少 3 到 6 英寸 的 块	找 一个 至少 3 到 6 英寸 的 街区	找 一块 至少 3 到 6 英寸 的 木块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.inch ) ( number 6 en.inch ) ) ) ) )
长度 大于 3 英寸 的 块	长度 大于 3 英寸 的 块	长度 大于 3 英寸 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
找 我 一个 3 英寸 长 的 街区	给 我 找个 3 英寸 长 的 街区	给 我 找 一个 3 英寸 长 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) )
块 1 以上	1 号 区块 上方 的 区块	高于 第一座	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) ) )
块 的 形状 是 金字塔 ， 这是 特殊 的	形状 为 金字塔 的 块	它 的 形状 是 一个 金字塔 ， 这 很 特别	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string is_special ) ) )
第 1 块 右边 2 个 街区	1 区 右侧 2 个 街区	在 第一座 右边 的 两个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string left ) ) ( string = ) en.block.block1 ) ) )
什么 特殊 块 的 长度 为 3 英寸	什么 特别 的 积木 有 3 英寸 长	什么 特殊 的 积木 有 3 英寸 长	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string is_special ) ) )
哪 块砖 至少 和 砖 1 一样 长	哪 块砖 至少 和 砖 1 一样 高是 长 的	哪个 砖块 至少 和 砖块 1 一样 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string length ) ) ) ) )
哪 块砖 在 砖 1 之上	哪 块砖 高于 砖 1	哪 块砖 在 砖 1 的 上面	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) en.block.block1 ) )
找到 一个 块 ， 左边 最多 有 两个 街区	给 我 找 一个 左边 最 多 两个 街区 的 街区	给 我 找 一个 最 左边 两个 街区 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 金字塔 块 rght	块 1 的 棱锥 块 rght	1 号楼 的 角楼 高度	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string left ) ( string = ) en.block.block1 ) )
什么 块 在 块 1 上方 ， 高度 为 3 英寸	哪个 街区 在 1 号 街区 上方 ， 有 3 英寸 高	什么 街区 在 第一 街区 的 上面 ， 高度 是 3 英寸	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ( string height ) ( string = ) ( number 3 en.inch ) ) )
找到 块 1 位于 上方 和 下方 的 块	找到 块 1 在 上面 和 下面 的 块	找到 第一块 在 上面 和 下面 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) en.block.block1 ) ) )
哪 块砖 至少 3 英寸 高	哪 块砖 至少 有 3 英寸 高	哪 块砖 至少 3 英寸 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
块 的 总 高度 是 多少	积木 的 总 高度 是 多少	积木 的 总 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string height ) ) ) )
块 1 或块 2 右侧 是否 有块	在 1 区 或 2 区 的 右边 有 街区 吗	在 第一座 或 第二座 的 右边 有 一个 街区 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 块 1 右侧 的 块 ， 宽度 为 3 英寸	找到 块 1 右边 宽度 为 3 英寸 的 块	找到 在 第一块 右边 ， 宽度 为 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
哪个 块 至少 与 块 1 一样 宽	哪个 街区 至少 和 第一 街区 一样 宽	哪个 街区 至少 和 第一个 街区 一样 宽	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string width ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.block.block1 ( string height ) ) ) ) )
块 1 上方 3 英寸 宽 的 块	块 1 上方 3 英寸 宽 的 块	1 号楼 上面 3 英寸 宽 的 楼	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
阻挡 至少 两个 街区	至少 两个 街区 的 街区 右侧	右边 至少 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
块 1 的 宽度	块 1 宽度	第一座 的 阔度	( call SW.listValue ( call SW.getProperty en.block.block1 ( string width ) ) )
在 块 1 下方 找到 金字塔 形状 的 块	在 块 1 下方 找到 金字塔 形块	在 第一座 下面 找到 金字塔 形 的 大厦	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) en.shape.pyramid ) ( string below ) ( string = ) en.block.block1 ) )
哪个 块 位于 块 1 下方 的 块 下方	哪个 街区 在 街区 1 右边 的 街区 下面	第一个 街区 在 哪个 街区 的 右方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string below ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string right ) ) ( string = ) en.block.block1 ) ) )
块 长度 为 3 英寸 的 块	长度 为 3 英寸 的 块 上方 的 块	在 长度 为 3 英寸 的 块 的 上面 的 块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ) )
找到 块 1 下面 的 块 上面 的 块	帮 我 找到 第一个 街区 上面 的 街区	找到 在 第一个 街区 上面 的 街区 ， 在 第一个 街区 下面 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) ) )
阻止 最少 数量 的 块 是 正确 的	块数 最少 的 块	块 的 最小 数目 是 对 的 块	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string right ) ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
找到 我 下面 最多 2 个 街区 的 所有 砖块	把 下面 最 多 两个 街区 的 砖头 都 找 出来	给 我 找出 所有 下面 最多 有 2 块砖 的 砖	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string below ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ) )
什么 块 在 块 2 或块 1 之上	2 区 或 1 区 以上 是 哪个 区	2 号楼 和 1 号楼 上面 是 什么 楼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.reverse ( string above ) ) ( string = ) ( call SW.concat en.block.block1 en.block.block2 ) ) )
找到 特殊 区块 上方 的 区块	给 我 找到 特殊 街区 上面 的 街区	帮 我 找到 特殊 街区 上面 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string above ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
找到 一个 长度 和 宽度 为 3 英寸 的 块	找 一个 长宽 各 3 英寸 的 块	找 一块 边长 和 宽度 都 为 3 英寸 的 积木	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.inch ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) )
选择 小于 3 英寸 的 块	选择 小于 3 英寸 的 块	选择 小于 3 英寸 的 方块	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.inch ) ) ) )
第 1 块 有 多 高	一号 楼有 多 高	第一座 有 多 高	( call SW.listValue ( call SW.getProperty en.block.block1 ( string height ) ) )
找到 我 所有 3 英寸 宽 的 块 ， 块 1 是 在 下面	给 我 找 块 1 下面 3 英寸 宽 的 街区	找到 所有 3 英寸 宽 的 方块 ， 第一个 方块 在 下面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string width ) ( string = ) ( number 3 en.inch ) ) ( call SW.reverse ( string below ) ) ( string = ) en.block.block1 ) )
找到 特殊 区块 右侧 的 块	给 我 找 那个 特别 街区 右边 的 街区	给 我 找 一个 在 这个 特殊 街区 右边 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string right ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string is_special ) ) ) )
哪种 砖 的 形状 与 砖 1 相同	哪 块砖 和 砖 1 的 形状 一样	哪 块砖 的 形状 与 砖 1 的 形状 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.block ) ( string ! type ) ) ( string shape ) ( string = ) ( call SW.getProperty en.block.block1 ( string shape ) ) ) )
比 每周 站立 会议 晚 开始 的 会议	比 每周 站立 会议 晚 开始 的 会议	比 每周 站立 会议 晚 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 的 日期 是 什么 时候	每周 的 站立 会议 是 几号	周 例会 是 几号	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
每周 站立 时间	每周 的 站立 时间 是 什么 时候	每周 的 脱口秀 是 什么 时候	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
告诉 我 在 爱丽丝 参加 的 格林 伯格 咖啡馆 的 所有 会议	让 我 看看 爱丽丝 在 格林 伯格 咖啡馆 参加 的 所有 会议	告诉 我 爱丽丝 在 格林 伯格 咖啡馆 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 当天 开始 的 会议	让 我 看看 今天 最 晚 开始 的 会议	告诉 我 今天 最 晚 开始 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
告诉 我 所有 会议 都 没有 在 上午 10 点 结束	让 我 看看 所有 不 在 上午 10 点 结束 的 会议	给 我 看看 所有 不是 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
告诉 我 与 至少 两个 人 参加 的 所有 会议	让 我 看看 至少 有 两个 人 参加 的 所有 会议	告诉 我 所有 至少 有 两个 人 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
告诉 我 所有 会议 持续 三个 小时	让 我 看看 所有 持续 三 小时 的 会议	告诉 我 所有 持续 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
会议 从 上午 10 点 之前 或 下午 3 点 之前 开始	上午 10 点 之前 或 下午 3 点 之前 开始 的 会议	会议 在 上午 10 点 之前 或 下午 3 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
哪些 会议 不 在 上午 10 点 开始	哪些 会议 不 在 上午 10 点 开始	哪些 会议 不是 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
会议 在 每周 站立 开始 前 结束	每周 站立 开始 前 什么 会议 结束	什么 会议 在 每周 站立 开始 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
在 1 月 2 日 之后 向 我 展示 会议	1 月 2 日 以后 的 会议	让 我 看看 1 月 2 日后 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
什么 会议 有 最早 的 开始 时间	什么 会议 最早 开始	什么 会 有 最早 的 开工 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
在 格林 伯格 咖啡馆 向 我 展示 三个 小时 的 所有 会议	带我去 格林 伯格 咖啡馆 看 三个 小时 长 的 会议	在 格林 伯格 咖啡馆 开 三个 小时 的 会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 所有 会议 不迟于 上午 10 点 结束	让 我 看看 所有 不迟于 上午 10 点 结束 的 会议	给 我 看看 所有 不迟于 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
1 月 2 日 的 重要 会议	一月 二日 的 重要 会议	1 月 2 日 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 所有 会议 都 是 在 每周 例会 开始 之前 开始 的	向 我 展示 不迟于 每周 站立 会议 开始 时间 开始 的 所有 会议	告诉 我 所有 不迟于 每周 站立 会议 开始 时间 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
每周 的 站立 会议 有 多长	每周 站立 会议 多长时间	每周 的 站立 会议 多长时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
告诉 我 所有 3 小时 的 会议 ， 结束 于 上午 10 点	让 我 看看 上午 10 点 结束 的 所有 3 个 小时 的 会议	给 我 看看 上午 10 点 结束 的 3 个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 所有 会议 不是 从 上午 10 点 开始	让 我 看看 不是 上午 10 点 开始 的 所有 会议	告诉 我 所有 不是 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
当 每周 站立 计划 开始 时 哪些 会议 结束	哪 一次 会议 在 每周 的 站立 时间 开始 时 结束 ？	哪些 会议 在 每周 的 站立 会议 开始 时 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
告诉 我 所有 至少 有 两次 会议 的 地点	告诉 我 所有 至少 开 过 两次 会 的 地点	告诉 我 所有 至少 开 过 两次 会 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 需要 3 个 小时 的 会议	给 我 看 需要 3 个 小时 的 会议	告诉 我 什么 会议 需要 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 会议 有 最少 的 人 出现	什么 会议 出现 的 人 最少	什么 会议 出现 的 人 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string attendee ) ) )
每周 站立 的 时间 结束	每周 的 起立 时间 是 几点	每周 什么 时候 结束	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
什么 会议 在 上午 10 点 结束 ， 爱丽丝 正在 参加	什么 会议 上午 10 点 结束 ， 爱丽丝 要 参加	什么 会议 在 上午 10 点 结束 ， 爱丽丝 参加 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 平均 会议 长度	显示 平均 会议 时间	告诉 我 平均 会议 时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
参加 jan 第 2 次 会议 的 人	参加 1 月 2 日 会议 的 人员	参加 1 月 2 日 会议 的 人员	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 所有 与 bob 或 alice 参加 的 会议	让 我 看看 鲍勃 或 爱丽丝 参加 的 所有 会议	给 我 看看 鲍勃 或 爱丽丝 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
告诉 我 有 两位 与会者 的 会议	显示 有 两个 与会者 的 会议	告诉 我 有 两个 与会者 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
告诉 我 所有 会议 在 同一时间 结束 或 比 每周 站立 开始 更 早	向 我 展示 所有 会议 在 每周 站立 开始 之前 或 同时 结束	告诉 我 所有 的 会议 都 在 同一时间 结束 ， 或者 早 于 每周 的 站立 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 有 两位 与会者 的 会议	显示 有 两个 与会者 的 所有 会议	显示 所有 有 两个 与会者 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
告诉 我 1 月 2 日 的 所有 与会者	让 我 看看 1 月 2 日 的 所有 与会者	告诉 我 1 月 2 日 所有 会议 的 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
会议 从 上午 10 点 开始	上午 10 点 开始 的 会议	会议 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 重要 的 会议 在 格林 伯格 咖啡馆 有 一个 位置	格林 伯格 咖啡馆 有 什么 重要 的 会议 地点 ？	什么 重要 会议 在 格林 伯格 咖啡馆 举行	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 1 月 3 日 的 所有 三个 小时 的 会议	让 我 看看 1 月 2 日 三个 小时 的 会议	让 我 看看 1 月 2 日 所有 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
查找 从 1 月 2 日 或 1 月 3 日 开始 的 所有 会议	查找 1 月 2 日 或 1 月 3 日 开始 的 所有 会议	查找 1 月 2 日 或 1 月 3 日 开始 的 所有 会议	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) )
哪个 会议 最早 开始	哪个 会议 最早 开始	哪个 会议 最早 开始 ?	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
告诉 我 所有 会议 在 上午 10 点 或 下午 3 点后 结束	显示 上午 10 点 或 下午 3 点后 结束 的 所有 会议	告诉 我 所有 在 上午 10 点 或 下午 3 点 之后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 会议 最多 在 上午 10 点 结束	什么 会议 最多 在 上午 10 点 结束	什么 会议 最 多 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
location 的 会议 次数 最 多	会议 最多 的 地点	地点 是 会议 最多 的 地方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
哪些 会议 的 开始 时间 为 上午 10 点 或 下午 3 点	什么 会议 的 开始 时间 是 上午 10 点 或 下午 3 点	什么 会议 的 开始 时间 是 上午 10 点 或 下午 3 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
格林 伯格 咖啡馆 的 会议 由 爱丽丝 出席	艾丽斯 出席 格林 伯格 咖啡厅 会议	爱丽丝 参加 了 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
向 我 展示 所有 每周 站立 会议 的 日期	告诉 我 所有 每周 站立 会议 的 日期	告诉 我 所有 的 每周 站立 会议 的 日期	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
什么 会议 的 结束 时间 与 每周 站立 时间 相同	什么 会议 的 结束 时间 与 每周 站立 时间 相同	什么 会 有 一个 和 每周 一次 一样 的 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 与 每周 综合 会议 同时 结束	什么 会议 与 每周 的 总结 会议 同时 结束	什么样 的 会议 与 每周 的 总结 会议 同时 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
爱丽丝 参加 的 会议 从 上午 1000 点 开始	爱丽丝 参加 的 会议 ， 上午 1000 点 开始	上午 1000 点 开始 的 会议 ， 爱丽丝 正在 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 预定 不到 三 小时 或 不到 一 小时	显示 所有 计划 少于 三 小时 或 少于 一 小时 的 会议	告诉 我 所有 安排 在 少于 三 小时 或 少于 一 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
哪个 会议 安排 在 最早 的 日期	哪个 会议 最早 安排 在 哪一天	最早 安排 哪个 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string date ) ) ) )
会议 于 1 月 2 日晚 举行	1 月 2 日 以后 举行 的 会议	1 月 2 日 以后 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
向 我 展示 需要 3 个 小时 并 与 爱丽丝 会面 的 会议	带我去 见 爱丽丝 ， 需要 3 个 小时	让 我 看看 花 了 3 个 小时 和 爱丽丝 在 一起 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
参加 每周 创业 的 人 是 谁	参加 每周 启动 的 人员	什么 人 参加 每周 的 启动	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
会议 在 上午 10 点 或 下午 3 点 开始	会议 在 上午 10 点 或 下午 3 点 之前 开始	会议 在 上午 10 点 或 下午 3 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 会议 不迟于 每周 启动	什么 会议 不迟于 每周 的 启动 会议	什么 会议 不迟于 每周 的 启动	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
什么 会议 比 每周 站立 更长	什么 会议 比 每周 站立 时间 长	什么 会 比 每周 一次 的 站立 会议 还长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
什么 会议 有 一个 2 月 或 3 月 之后	1 月 2 日 或 3 日 以后 有 什么 会议	1 月 2 号 或 3 号 以后 会 有 什么 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
告诉 我 在 每周 站立 结束 后 开始 的 所有 会议	向 我 展示 每周 站立 结束 后 开始 的 所有 会议	给 我 看看 所有 在 每周 的 脱口秀 结束 后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 的 开始 时间 是 多少	每周 站立 会议 的 开始 时间 是 几点	周 例会 什么 时候 开始	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
会议 有 多长	会议 多长时间	会议 多长时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
在 每周 启动 会议 开始 后 结束 的 会议	每周 启动 会议 开始 后 结束 的 会议	在 每周 启动 会议 开始 后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
有 爱丽丝 参加 的 会议 ， 长 达 三个 小时	爱丽丝 参加 的 会议 ， 有 三个 小时 长	会议 由 爱丽丝 参加 ， 时 长 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
谁 是 每周 站立 或 年度 审查	参加 每周 站立 或 年度 回顾 的 人员	谁 参加 每周 的 单人 脱口秀 或 年度 回顾	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
哪些 会议 在 上午 10 点 结束	哪些 会议 在 上午 10 点 结束	哪些 会议 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 于 上午 10 点 结束 ， 上午 10 点 开始	上午 10 点 结束 上午 10 点 开始 的 会议	会议 在 上午 10 点 结束 ， 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 于 1 月 1 日 或 1 月 1 日 举行	1 月 2 日 或 1 月 3 日 的 会议	1 月 2 日 或 1 月 3 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
告诉 我 参加 大多数 会议 的 人	让 我 看看 参加 会议 最多 的 人	告诉 我 哪些 人 参加 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
上午 10 点 的 重要 会议	上午 10 点 的 重要 会议	上午 10 点有 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 最早 开始	什么 会议 最早 开始	什么 会议 最早 开始	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
没有 举办 每周 站立 会议 的 地点	不 包含 每周 站立 会议 的 地点	没有 举行 每周 站立 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
向 我 展示 从 上午 10 点 开始 的 重要 会议	让 我 看看 上午 10 点 开始 的 重要 会议	告诉 我 早上 10 点 开始 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
每周 启动 的 长度 是 多少	每周 启动 的 时间 是 多长	每周 的 启动 时间 是 多长	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
告诉 我 所有 在 1 月 3 日 举行 的 会议	让 我 看看 1 月 3 日 之前 举行 的 所有 会议	给 我 看看 1 月 3 号 之前 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
每周 站立 的 地方	每周 站 在 哪	每周 的 脱口秀 在 哪里	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) )
告诉 我 从 上午 10 点 开始 的 所有 会议 持续 三个 小时	让 我 看看 从 上午 10 点 开始 持续 三个 小时 的 所有 会议	告诉 我 所有 从 上午 10 点 开始 持续 3 个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 于 上午 10 点 结束	上午 10 点 结束 的 会议	会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 每周 站立 会议 的 日期	告诉 我 每周 的 站立 会议 日期	告诉 我 每周 站立 会议 的 日期	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) )
会议 在 每周 站立 结束 时 或 结束 后 结束	在 每周 站立 时间 结束 时 或 之后 结束 的 会议	在 每周 站立 会议 结束 时 或 之后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
不 在 格林 伯格 咖啡馆 举行 的 会议	不 在 格林 伯格 咖啡馆 举行 的 会议	不 在 格林 伯格 咖啡馆 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
什么 会议 的 结束 时间 不 超过 每周 启动 的 结束 时间	什么 会议 的 结束 时间 不 超过 每周 启动 的 结束 时间	什么 会议 的 结束 时间 不 超过 每周 启动 的 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
会议 从 上午 10 点 开始	上午 10 点 开始 的 会议	会议 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
在 每周 例会 开始 之前 结束 的 会议	每周 站立 会议 开始 前 结束 的 会议	在 每周 站立 会议 开始 前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
与 每周 站立 会议 结束 的 会议	与 每周 站立 会议 相同 结束 的 会议	与 每周 站立 会议 一样 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
告诉 我 所有 标记 为 重要 的 会议 ， 从 上午 10 点 开始	让 我 看 一下 上午 10 点 开始 的 所有 重要 会议	给 我 看看 所有 标着 上午 10 点 开始 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
告诉 我 所有 的 会议 都 比 每周 站立 时间 晚 结束	让 我 看看 所有 会议 都 比 每周 的 站立 时间 晚 结束	让 我 看看 所有 的 会议 都 比 每周 的 脱口秀 结束 得晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
会议 结束 的 时间 早 于 每周 站立 结束	比 每周 站立 时间 提前结束 的 会议	比 每周 一次 的 站立 会议 结束 得 早	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 在 1 月 2 日 或 1 月 3 日 之前 发生 的 所有 会议	显示 1 月 2 日 或 1 月 3 日 之前 发生 的 所有 会议	告诉 我 所有 在 1 月 2 日 或 1 月 3 日 之前 召开 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
是 上午 10 点 或 下午 3 点 的 会议	会议 是 上午 10 点 还是 下午 3 点	会议 是 上午 10 点 还是 下午 3 点	( call SW.listValue ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) )
至少 有 两位 与会者 参加 的 会议	至少 有 两名 与会者 的 会议	最少 有 两名 与会者 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
告诉 我 从 上午 10 点 开始 的 所有 会议 的 地点	显示 上午 10 点 开始 的 所有 会议 的 位置	告诉 我 从 上午 10 点 开始 的 所有 会议 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
参加 每周 站立 的 人	参加 每周 站立 的 人	每周 参加 单人 脱口秀 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
会议 时间 超过 一 三个 小时	开会 超过 一到 三个 小时	会议 时间 超过 一 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
让 我 在 不到 两个 地点 举行 会议	显示 少于 两个 位置 的 会议	告诉 我 少于 两个 地点 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string < ) ( number 2 ) ) )
选择 所有 重要 会议	选择 所有 重要 会议	选择 所有 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string is_important ) ) )
会议 在 上午 10 点 或 下午 3 点 之前 开始	什么 会议 在 上午 10 点 或 下午 3 点 之前 开始	什么 会议 在 上午 10 点 或 下午 3 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 在 每周 站立 会议 结束 时 开始 的 所有 会议	显示 每周 站立 会议 结束 时 开始 的 所有 会议	告诉 我 在 每周 站立 会议 结束 时 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
什么 会议 与 每周 站立 时 的 位置 相同	什么 会议 的 地点 和 每周 站立 时间 相同	什么 会议 有 与 每周 站立 会议 相同 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
哪些 会议 的 开始 时间 与 周 启动 会议 相同	哪些 会议 的 开始 时间 与 周 启动 会议 的 开始 时间 相同	哪些 会议 的 开始 时间 与 每周 的 启动 会议 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
1 月 3 日前 举行 的 会议	1 月 3 日前 举行 的 会议	会议 于 一月 三 日前 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
告诉 我 所有 参加 会议 的 与会者 从 上午 10 点 开始	显示 上午 10 点 开始 的 所有 会议 与会者	告诉 我 上午 10 点 开始 的 会议 的 所有 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
1 月 2 日 的 会议 ， 结束 于 上午 10 点	1 月 2 日 上午 10 点 结束 的 会议	1 月 2 日 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 都 是 在 同一时间 或 早于 每周 站立 结束 时 开始 的	向 我 展示 在 每周 站立 结束 之前 或 同时 开始 的 所有 会议	告诉 我 所有 的 会议 是 在 同一时间 开始 ， 还是 早 于 每周 的 站立 会议 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
会议 从 上午 10 点 开始	什么 会议 上午 10 点 开始	什么 会议 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 至少 在 上午 10 点 开始	什么 会议 至少 上午 10 点 开始	什么 会议 至少 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
每周 的 站立 会议 有 多长	每周 站立 会议 多长时间	每周 的 站立 会议 多长时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
在 每周 站立 之前 发生 的 会议 是 什么 ？	每周 站立 前 的 会议 是 什么 ？	在 每周 站立 之前 的 会议 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
两个 以上 会议 的 举办 地点 是 什么 ？	两次 以上 的 会议 将 在 什么 地方 举行	多于 两次 会议 将 在 什么 地点 举行	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 1 月 2 日 所有 会议 的 地点	告诉 我 一月 二日 所有 会议 的 地点	告诉 我 1 月 2 日 所有 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 所有 与会者 三 小时 的 会议	让 我 看看 三个 小时 长 的 所有 与会者	告诉 我 参加 会议 的 人 ， 会议 要开 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
告诉 我 上午 10 点 没有 结束 的 会议	让 我 看看 上午 10 点 还 没有 结束 的 会议	告诉 我 哪些 会议 不会 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
参加 每周 站立 会议 的 人 参加 的 会议	参加 每周 站立 会议 的 人员 参加 的 会议	参加 每周 站立 会议 的 人 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
什么 会议 在 格林 伯格 咖啡馆 的 1 月 2 日 举行	1 月 2 日 在 格林 伯格 咖啡馆 举行 的 会议	1 月 2 日 在 格林 伯格 咖啡馆 会 有 什么 聚会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
什么 会议 的 长度 与 每周 启动 的 长度 相同	什么 会议 和 每周 的 启动 会 一样 长	什么 会议 和 每周 的 启动 会议 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) )
什么 人 没有 参加 每周 的 站立 会议	什么 人 不 参加 每周 的 站立 会议	什么 人 不 参加 每周 的 站立 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
格林 伯格 咖啡馆 的 会议 从 上午 10 点 开始	上午 10 点 在 格林 伯格 咖啡厅 开会	格林 伯格 咖啡馆 的 会议 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
每周 站立 会议 当天 或 之后 举行 的 会议	每周 站立 会议 当天 或 之后 举行 的 会议	在 每周 站立 会议 当天 或 之后 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 在 同一天 或 每周 站立 之前 发生 的 所有 会议	向 我 展示 在 同一天 或 每周 站立 前 举行 的 所有 会议	告诉 我 所有 的 会议 都 在 同一天 或 在 每周 的 脱口秀 之前 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 所有 参加 过 alice 或 bob 参加 的 会议	让 我 看看 爱丽丝 或 鲍勃 参加 的 所有 会议	告诉 我 有 alice 或 bob 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
什么 会议 至少 在 上午 10 点 或 下午 3 点 开始	什么 会议 至少 在 上午 10 点 或 下午 3 点 开始	什么 会议 至少 在 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
找 我 一个 短于 三个 小时 的 会议	给 我 找 一个 不到 三 小时 的 会议	帮 我 找 一个 不到 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
什么 位置 是 大多数 会议	大多数 会议 在 哪 举行	什么 地方 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
每周 启动 参加者	每周 启动 与会者	每周 启动 出席 者	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
告诉 我 从 上午 10 点 开始 的 所有 会议	让 我 看看 上午 10 点 开始 的 所有 会议	告诉 我 所有 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 在 每周 站立 开始 之前 结束 的 会议	让 我 看看 在 每周 站立 开始 前 结束 的 会议	让 我 看看 在 每周 站立 开始 前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
与 每周 站立 的 人 分享 与会者	会议 与 与会者 共享 每周 站立 时间	会议 与 每周 的 站立 会议 分享 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
让 我 在 上午 10 点 与 爱丽丝 见面	上午 10 点 带我去 见 爱丽丝	告诉 我 早上 10 点 和 爱丽丝 开会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
会议 没有 在 上午 10 点 结束	上午 10 点 不 结束 的 会议	会议 不会 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
什么 会议 在 1 月 2 日 上午 10 点 结束	什么 会议 在 1 月 2 日 上午 10 点 结束	什么 会议 在 1 月 2 日 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
那些 没有 参加 每周 站立 会议 的 人	不 参加 每周 站立 会议 的 人	不 参加 每周 站立 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
三 小时 或 更 长时间 或 一 小时 或 更 长时间 的 会议	三 小时 或 更长 或 一 小时 或 更长 的 会议	三 小时 或 更长 、 一 小时 或 更 长时间 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
1 月 2 日 上午 10 点 开会	1 月 2 日 上午 10 点 开会	1 月 2 日 上午 10 点 开会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 1 月 3 日 之前 向 我 展示 会议	1 月 3 日前 给 我 看 会议	让 我 看看 1 月 3 日前 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
向 我 展示 最少 数量 的 不同 地点 的 会议	让 我 看看 不同 地点 最少 的 会议	用 最少 的 不同 地点 的 会议 给 我 看	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string location ) ) )
显示 所有 标记 为 重要 的 会议 的 位置	显示 所有 标记 为 重要 会议 的 位置	告诉 我 所有 被 标记 为 重要 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
向 我 展示 参加 每周 站立 会议 的 人 参加 的 所有 会议	让 我 看看 所有 参加 过 每周 站立 会议 的 人	告诉 我 所有 参加 过 每周 站立 会议 的 人 都 参加 了 哪些 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
参加 会议 的 人们 在 上午 10 点 结束	参加 上午 10 点 结束 的 会议 的 人	参加 上午 10 点 结束 的 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 谁 参加 了 三个 小时 的 会议	告诉 我 谁 要 参加 三个 小时 的 会议	告诉 我 谁 要 参加 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
什么 会议 的 参加 人数 最少	出席 人数 最少 的 会议	什么 会议 的 与会者 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string attendee ) ) )
告诉 我 所有 重要 的 会议	让 我 看看 所有 重要 的 会议	告诉 我 所有 标有 “ 重要 ” 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string is_important ) ) )
两人 或 两人 以下 参加 的 会议	两人 或 两人 以下 参加 的 会议	两个 人 或 更 少人 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
什么 会议 有人 去 每周 站立	什么 会议 上 有人 每周 都 要 站 起来	什么样 的 会议 会 有 一个 人去 参加 每周 的 单人 脱口秀	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) ) )
告诉 我 谁 不是 每周 站立	告诉 我 谁 不 在 每周 站	告诉 我 谁 不 在 每周 的 脱口秀 上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string ! = ) en.meeting.weekly_standup ) )
告诉 我 所有 会议 在 上午 10 点 开始 和 结束	显示 上午 10 点 开始 和 结束 的 所有 会议	告诉 我 所有 上午 10 点 开始 和 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
alice 参加 的 重要 会议	爱丽丝 出席 的 重要 会议	爱丽丝 出席 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
比 每周 站立 会议 更 早 开始 的 会议	比 每周 站立 会议 提前 开始 的 会议	比 每周 站立 会议 更 早 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会 在 格林 伯格 咖啡馆 举行	在 格林 伯格 咖啡馆 举行 什么 会议	格林 伯格 咖啡馆 正在 开 什么 会 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 三 小时 的 会议 有 爱丽丝 参加	爱丽丝 参加 了 三个 小时 的 会议	爱丽丝 参加 了 什么 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 最长 的 会议	给 我 看 最长 的 会议	给 我 看 最长 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string length ) ) ) )
告诉 我 所有 没有 举办 每周 站立 的 地点	向 我 展示 所有 不 举办 每周 站立 比赛 的 地点	告诉 我 所有 不 举办 每周 脱口秀 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
什么 是 重要 的 会议	什么 是 重要 会议	什么 是 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string is_important ) ) )
告诉 我 所有 会议 从 上午 10 点 开始 ， 到 上午 10 点 结束	让 我 看看 上午 10 点 开始 到 上午 10 点 结束 的 所有 会议	告诉 我 所有 从 上午 10 点 开始 到 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 预定 为 三 小时 或 一 小时	让 我 看看 所有 安排 为 三 小时 或 一 小时 长 的 会议	告诉 我 所有 的 会议 安排 是 3 小时 还是 1 小时	( call SW.listValue ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) )
格林 伯格 咖啡馆 三 小时 会议	格林 伯格 咖啡厅 三 小时 会议	在 格林 伯格 咖啡馆 开 三个 小时 的 会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
人们 参加 爱丽丝 参加 的 会议	参加 爱丽丝 参加 的 会议 的 人	参加 爱丽丝 参加 的 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 参加 1 月份 所有 会议 的 与会者	让 我 看看 1 月 2 日 所有 会议 的 与会者	给 我 看看 1 月 2 日 所有 会议 的 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 参加 会议 的 所有人 也 参加 了 alice	让 我 看看 所有 参加 会议 的 人 还有 爱丽丝	告诉 我 所有 参加 会议 的 人 ， 包括 爱丽丝	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
谁 是 参加 每周 站立 会议 的 人	参加 每周 站立 会议 的 人 是 谁	参加 每周 站立 会议 的 人 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
什么 会议 的 长度 大于 每周 启动	什么 会议 比 每周 启动 的 时间 长	什么 会议 的 长度 比 每周 的 启动 时间 还长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
什么 人 是 超过 两次 会议 的 参加者	参加 两次 以上 会议 的 人 是 谁	什么 人 是 两个 以上 会议 的 与会者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
在 1 月 1 日 之前 开会	1 月 2 日前 开会	1 月 2 日前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 alice 参加 1 月 2 日 的 任何 会议	给 我 看看 爱丽丝 一月 二日 参加 的 会议	告诉 我 爱丽斯 1 月 2 日 参加 过 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
什么 会议 的 结束 时间 早 于 每周 启动	什么 会议 的 结束 时间 早 于 每周 启动 时间	什么 会议 的 结束 时间 早 于 每周 的 启动 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
向 我 展示 将 在 每周 站立 开始 前 结束 的 会议	让 我 看看 每周 站立 开始 前 结束 的 会议	让 我 看看 那些 在 每周 的 脱口秀 开始 前 就 会 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
1 月 2 日 上午 10 点 结束 的 会议	1 月 2 日 的 会议 在 上午 10 点 结束	什么 会议 在 1 月 2 日 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
alice 参加 了 哪些 重要 会议	爱丽丝 参加 了 哪些 重要 会议	爱丽斯 参加 了 多么 重要 的 会议 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
与 每周 站立 会议 长度 相同 的 会议	与 每周 站立 会议 长度 相同 的 会议	与 每周 站立 会议 相同 长度 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) )
会议 在 上午 10 点 结束	上午 10 点后 会议 结束	会议 在 上午 10 点后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
在 每周 站立 会议 开始 后 开始 的 会议	每周 站立 会议 开始 后 开始 的 会议	每周 的 站立 会议 开始 后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 有 最 短 的 时间	什么 会议 时间 最短	什么 会议 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
会议 开始 的 时间 晚于 每周 站立 开始	比 每周 站立 时间 晚 开始 的 会议	晚于 每周 站立 会议 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 最多 有 两个 地点 的 会议	显示 最多 有 两个 位置 的 所有 会议	给 我 看看 所有 最多 有 两个 地点 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
什么 重要 会议 从 上午 10 点 开始	什么 重要 会议 上午 10 点 开始	多么 重要 的 会议 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
1 月 2 日 会议	1 月 2 日 会议	1 月 2 日 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
什么 会议 的 结束 时间 至少 是 上午 10 点	什么 会议 的 结束 时间 至少 是 上午 10 点	什么 会 有 至少 上午 10 点 的 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 会议 短于 三个 小时	什么 会议 不到 三个 小时	什么 会议 比三 小时 还 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
什么 重要 的 会议 位于 格林 伯格 咖啡馆	格林 伯格 咖啡馆 有 什么 重要 的 会议 ？	多么 重要 的 会议 啊 ， 就 在 格林 伯格 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string is_important ) ) )
什么 会议 的 结束 时间 小于 每周 站立 时间	什么 会议 的 结束 时间 小于 每周 站立 时间	什么 会 有 一个 结束 时间 比 每周 的 站立 时间 小	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 参加 过 两次 以上 会议 的 人	让 我 看看 所有 参加 过 两次 以上 会议 的 人	告诉 我 所有 参加 过 两次 以上 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
1 月 2 日 或 之前 的 会议	1 月 2 日 或 之前 的 会议	1 月 2 日 或 之前 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 位置 有 两个 以上 的 会议	哪个 地点 有 两个 以上 的 会议	什么 地方 有 两个 以上 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
在 大多数 地方 举行 的 会议	在 大多数 地方 举行 的 会议	会议 在 大多数 地点 举行	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string location ) ) )
格林 伯格 咖啡馆 的 会议 结束 了 上午 10 点	上午 10 点 在 格林 伯格 咖啡馆 开会	格林 伯格 咖啡馆 的 会议 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
与 爱丽丝 作为 与会者 三 小时 会面	三 小时 会议 ， 爱丽丝 作为 与会者	爱丽丝 作为 与会者 参加 了 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 会议 从 每周 站立 平均 开始 时间 开始	什么 会议 在 每周 站立 平均 开始 时间 开始	什么 会议 在 每周 站立 平均 开始 时间 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
显示 不早 于 每周 启动 会议 开始 的 会议	显示 不早 于 每周 启动 会议 开始 的 会议	显示 不早 于 每周 启动 会议 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 爱丽丝 参加 的 所有 会议 都 是 三个 小时	让 我 看看 爱丽丝 要 参加 的 三个 小时 长 的 会议	告诉 我 爱丽斯 参加 的 所有 会议 ， 都 是 三个 小时 长 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 会议 在 每周 站立 开始 的 同时 结束	向 我 展示 所有 在 每周 站立 开始 的 同时 结束 的 会议	告诉 我 ， 所有 的 会议 都 在 每周 站立 开始 的 时间 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
什么 会议 在 每周 站立 结束 时有 一个 开始 时间	什么 会议 在 每周 站立 的 结束 时间 开始	什么 会 在 周末 的 时候 有 一个 开始 的 时间 站 起来	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
重要 会议 的 地点	重要 会议 地点	重要 会议 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 会议 从 上午 10 点 或 下午 3 点 开始	让 我 看看 上午 10 点 或 下午 3 点 开始 的 会议	告诉 我 会议 从 上午 10 点 开始 还是 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
在 每周 站立 结束 之前 会议 开始 了 什么	每周 站立 结束 前 开始 的 会议	什么 会议 开始 之前 ， 每周 站立 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 三个 小时 的 所有 会议	给 我 看 三个 小时 长 的 所有 会议	告诉 我 所有 的 会议 都 要 开 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
至少 举行 两次 会议 的 地点	至少 有 两次 会议 的 地点	存放 至少 两个 会议 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 会议 不是 在 1 月 2 日	让 我 看看 不是 1 月 2 日 的 会议	告诉 我 会议 不是 在 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
会议 在 每周 站立 结束 后 结束	每周 站立 结束 后 会议 结束	会议 结束 后 ， 每周 站立 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 alice 参加 的 所有 会议 的 位置	告诉 我 爱丽丝 参加 的 所有 会议 的 地点	告诉 我 爱丽斯 参加 的 所有 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 1 月 2 日 上午 10 点 结束 的 所有 会议	让 我 看看 1 月 2 日 上午 10 点 结束 的 所有 会议	告诉 我 所有 在 1 月 2 日 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 在 格林 伯格 咖啡馆 结束 于 上午 10 点 的 所有 会议	让 我 看看 格林 伯格 咖啡馆 上午 10 点 结束 的 所有 会议	告诉 我 格林 伯格 咖啡馆 上午 10 点 结束 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
三个 小时 的 重要 会议	三个 小时 的 重要 会议	三个 小时 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
什么 会议 有 爱丽丝 参加 并 在 上午 10 点 开始	爱丽丝 参加 什么 会议 ， 上午 10 点 开始	爱丽丝 参加 了 什么 会议 ， 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
从 上午 10 点 开始 的 重要 会议	上午 10 点 开始 的 重要 会议	10 点 开始 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
有 多少 次 会议	有 多少 个 会议	有 多少 个 会议	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
每周 站立 结束 时间	每周 站立 结束 时间	每周 站立 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
有 爱丽丝 出席会议 的 地点	有 爱丽丝 参加 的 会议 在 什么 地方 举行	有 爱丽丝 参加 的 会议 在 什么 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 任何 爱丽丝 没有 参加 的 会议	给 我 看看 爱丽丝 没有 参加 的 会议	给 我 看看 爱丽丝 没有 参加 过 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string ! = ) en.person.alice ) )
平均 会议 持续 多久	平均 会议 持续 多长时间	一般 会议 持续 多长时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
告诉 我 1 月 2 日 的 所有 会议	让 我 看看 1 月 2 日 的 所有 会议	让 我 看看 1 月 2 日 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
人 是 每周 站立 或 年度 审查 的 参加者	个人 是 每周 站立 或 年度 回顾 的 参与者	人 参加 每周 站立 或 年度 回顾	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
三 小时 或 更 长时间 的 会议	三 小时 或 更 长时间 的 会议	3 小时 或 更 长时间 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
重要 会议 于 上午 10 点 结束	上午 10 点 结束 的 重要 会议	重要 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
告诉 我 1 月 2 日 上午 10 点 结束 的 所有 会议	1 月 2 日 上午 10 点 结束 的 所有 会议	告诉 我 所有 1 月 2 日 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 时间 短于 三 小时 或 短于 一 小时	少于 三 小时 或 少于 一 小时 的 会议	少于 三 小时 或 一 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
会议 于 上午 10 点 或 下午 3 点 结束	上午 10 点 或 下午 3 点 结束 的 会议	会议 在 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
会议 不会 在 上午 10 点 开始	上午 10 点 不 开会	会议 不是 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
会议 从 晚上 10 点 开始	上午 10 点 以后 开始 的 会议	会议 在 上午 10 点 以后 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 所有 会议 至少 三个 小时	给 我 看 所有 会议 至少 三个 小时	给 我 看 所有 的 会议 ， 至少 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
告诉 我 在 1 月 1 日 之后 发生 的 会议	1 月 2 日 以后 的 会议	让 我 看看 1 月 2 日后 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 会议 的 长度 最短	什么 会议 最短	什么 会 有 最 短 的 长度	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
告诉 我 所有 会议 结束 于 上午 10 点 ， 爱丽丝 正在 参加	让 我 看看 爱丽丝 上午 10 点 参加 的 所有 会议	告诉 我 爱丽斯 参加 的 所有 会议 都 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
格林 伯格 咖啡馆 的 重要 会议	格林 伯格 咖啡厅 重要 会议	格林 伯格 咖啡馆 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 在 格林 伯格 咖啡馆 的 所有 餐点 ， 结束 于 上午 10 点	让 我 看看 上午 10 点 在 格林 伯格 咖啡馆 的 所有 会议	给 我 看看 格林 伯格 咖啡馆 上午 10 点 结束 的 所有 聚会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
会议 时间 短于 三 小时	少于 三 小时 的 会议	会议 时间 少于 三 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
告诉 我 所有 标记 为 重要 的 会议	显示 所有 标记 为 重要 的 会议	告诉 我 所有 标记 为 重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) )
告诉 我 1 月 2 日 上午 10 点 开始 的 所有 会议	1 月 2 日 上午 10 点 开始 的 所有 会议	让 我 看看 1 月 2 日 上午 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 参加 会议 的 人数 不 超过 两人	向 我 显示 不 超过 两个 与会者 的 所有 会议	告诉 我 所有 不 超过 两名 与会者 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
谁 将 参加 重要 会议	谁 将 出席 重要 会议	谁 将 出席 重要 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
在 每周 站立 会议 结束 时 或 之前 结束 的 会议	在 每周 站立 会议 结束 的 同时 或 之前 结束 的 会议	在 每周 站立 会议 结束 的 时间 或 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 会议 的 与会者 都 很 重要	显示 所有 标记 为 重要 的 会议 的 与会者	告诉 我 哪些 会议 是 重要 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 所有 的 会议 不会 超过 每周 的 站立 时间	向 我 展示 所有 会议 不 超过 每周 站立 时间	给 我 看 所有 的 会议 ， 不要 超过 每周 一次	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
每周 站立 结束 时 会议 开始	当 每周 站立 结束 时 什么 会议 开始	什么 会议 开始 时 ， 每周 站立 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
告诉 我 上午 10 点到 下午 3 点 之间 的 所有 会议	让 我 看看 上午 10 点到 下午 3 点 之间 的 所有 会议	告诉 我 从 上午 10 点到 下午 3 点 的 所有 会议	( call SW.listValue ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) )
告诉 我 会议 爱丽丝 将 参加 哪个 会议 结束 于 上午 10 点	让 我 看看 艾丽斯 将 参加 的 会议 ， 上午 10 点 结束	告诉 我 爱丽斯 要 参加 的 会议 ， 会议 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 最迟在 下午 3 点 开始 的 所有 会议	让 我 看看 最迟 下午 3 点 开始 的 所有 会议	告诉 我 最迟 下午 3 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
哪个 会议 有 最早 的 结束 时间	哪个 会议 的 结束 时间 最早	哪个 会议 最早 结束 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
什么 重要 的 会议 在 上午 10 点 开始	什么 重要 的 会议 上午 10 点 开始	什么 重要 会议 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 于 上午 10 点 或 之后 结束	上午 10 点 或 之后 结束 的 会议	会议 在 上午 10 点 或 之后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪个 地点 举办 的 会议 最 多	哪个 地点 主持 的 会议 最 多	哪个 地方 的 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 所有 会议 都 是 在 每周 站立 会议 结束 之前 开始 的	向 我 展示 所有 不早 于 每周 站立 会议 结束 时 开始 的 会议	告诉 我 所有 在 每周 站立 会议 结束 前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 在 每周 站立 日期 或 之后 发生 的 所有 会议	向 我 展示 每周 站立 日期 当天 或 之后 发生 的 所有 会议	告诉 我 所有 的 会议 都 是 在 每周 的 脱口秀 之后 举行 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 所有 会议 从 晚上 10 点 开始	让 我 看看 上午 10 点 以后 开始 的 所有 会议	告诉 我 所有 上午 10 点 以后 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 会议 从 1 月 2 日 上午 10 点 开始	让 我 看看 1 月 2 日 上午 10 点 开始 的 会议	告诉 我 1 月 2 日 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
这次 会议 是 三 小时 或 一 小时	这次 会议 是 三 小时 长 还是 一 小时 长	这次 会议 是 三个 小时 还是 一个 小时	( call SW.listValue ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) )
告诉 我 alice 参加 的 所有 会议 ， 从 上午 10 点 开始	让 我 看看 爱丽丝 参加 的 所有 上午 10 点 开始 的 会议	告诉 我 爱丽斯 参加 过 的 所有 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
每周 站立 会议 前 举行 的 会议	每周 站立 会议 前 举行 的 会议	在 每周 站立 会议 之前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
会议 于 上午 10 点 结束 ， 为期 三 小时	上午 10 点 结束 的 三 小时 长 的 会议	会议 在 上午 10 点 结束 ， 持续 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 每周 站立 后 发生 的 所有 会议	让 我 看看 每周 站立 后 的 所有 会议	给 我 看看 每周 脱口秀 之后 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
会议 结束 不迟于 每周 站立 的 开始 时间	会议 不迟于 每周 站立 开始 时间 结束	会议 不迟于 每周 站立 开始 时间 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 位于 格林 伯格 咖啡馆 或 中央 办公室 的 任何 会议	给 我 看看 格林 伯格 咖啡厅 或 中央 办公室 的 会议	给 我 看看 格林 伯格 咖啡馆 或 中央 办公室 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
什么 会议 是 一 小时 或 更 长时间	什么 会议 一 小时 或 更长	什么 会议 是 一个 小时 或 更长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
三 小时 的 会议 在 上午 10 点 结束	上午 10 点 结束 的 三 小时 会议	三个 小时 的 会议 ， 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
会议 时间 不 超过 每周 站立 时间	会议 时间 不 超过 每周 站立 时间	会议 时间 不 超过 每周 站立 会议 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
告诉 我 所有 会议 的 长度 要 少于 或 超过 三个 小时	向 我 展示 所有 长度 小于 或 大于 3 小时 的 会议	向 我 展示 所有 少于 或 多于 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
告诉 我 不 迟于 每周 站立 结束 的 会议	让 我 看看 那些 不迟于 每周 站立 结束 的 会议	告诉 我 哪些 会议 不晚 于 每周 的 单人 脱口秀 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 何时 开始	每周 站立 会议 什么 时候 开始	每周 的 站立 会议 什么 时候 开始	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
什么 会议 的 日期 早于 1 月 2 日	什么 会议 的 日期 比 1 月 2 日早	什么 会 比 1 月 2 日 更 早 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 会议 都 是 在 每周 站立 之前 开始 的	向 我 展示 所有 比 每周 站立 时间 早 开始 的 会议	告诉 我 所有 的 会议 都 比 每周 的 单人 脱口秀 开始 得 早	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 爱丽丝 没有 参加 的 所有 会议	让 我 看看 爱丽丝 没有 参加 的 所有 会议	告诉 我 爱丽丝 没有 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string ! = ) en.person.alice ) )
参加 会议 的 人 在 上午 10 点 结束	参加 上午 10 点 结束 的 会议 的 人	参加 上午 10 点 结束 的 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
两人 参加 的 会议	两人 参加 的 会议	两个 人 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
什么 人 是 至少 两次 会议 的 参加者	参加 至少 两次 会议 的 人 是 谁	什么 人 至少 参加 两次 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
alice 参加 会议 的 地点 是 什么	爱丽丝 要 参加 的 会议 地点 是 什么	爱丽斯 参加 会议 的 地点 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
告诉 我 在 格林 伯格 咖啡馆 或 中央 办公室 的 所有 会议	带我去 格林 伯格 咖啡厅 或 中央 办公室 看 所有 会议	带我去 格林 伯格 咖啡馆 或 中央 办公室 开会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
会议 的 开始 时间 是 每周 站立 结束 时间	开始 时间 在 每周 站立 结束 时间 之后 的 会议	会议 的 开始 时间 是 在 每周 站立 时间 结束 后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
在 格林 伯格 咖啡馆 展示 上午 10 点 开始 的 会议	在 格林 伯格 咖啡厅 举行 上午 10 点 开始 的 会议	早上 10 点 在 格林 伯格 咖啡馆 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 会议 有 最新 的 开始 时间	什么 会议 最 晚 开始 时间	什么 会议 有 最晚 的 开始 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
什么 会议 在 格林 伯格 咖啡馆 和 爱丽丝 将 参加	格林 伯格 咖啡厅 和 爱丽丝 将 参加 什么 会议	格林 伯格 咖啡馆 和 爱丽丝 将 参加 什么 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 是 最 短 的 会议	最短 的 会议 是 什么	最短 的 会议 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
告诉 我 任何 会议 在 上午 10 点 结束	让 我 看看 上午 10 点 结束 的 会议	告诉 我 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
与 每周 站立 会议 相同 或 更 短 的 会议	与 每周 站立 会议 长度 相同 或 更 短 的 会议	长度 与 每周 站立 会议 相同 或 较 短 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
向 我 展示 与 每周 启动 时 位置 相同 的 会议	显示 与 每周 启动 位置 相同 的 会议	让 我 看看 与 每周 启动 地点 相同 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
告诉 我 三个 小时 的 所有 会议 都 被 标记 为 重要	给 我 看 三个 小时 长 的 会议	给 我 看 所有 标记 为 重要 的 三个 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
会议 次数 最多 的 地点 是 什么 ？	开会 次数 最多 的 地点 是 什么	会议 最多 的 地点 在 哪里	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
什么 会议 有 两个 地点	什么 会议 有 两个 地点	什么 会议 有 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
让 我 在 下午 3 点 之前 开始 会议	下午 3 点前 开始 开会	告诉 我 下午 3 点 之前 开始 开会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 所有 会议 晚于 上午 10 点 结束	让 我 看看 上午 10 点 以后 结束 的 所有 会议	给 我 看看 所有 晚于 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
谁 参加 了 最少 数量 的 会议	参加 过 最少 会议 的 人	谁 出席 的 会议 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
向 我 展示 参加 每周 站立 的 人 参加 的 所有 会议	向 我 展示 所有 参加 过 每周 站立 会议 的 人	告诉 我 所有 参加 过 每周 单人 脱口秀 的 人 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
参加 格林 伯格 咖啡馆 会议 的 人	参加 格林 伯格 咖啡馆 会议 的 人	在 格林 伯格 咖啡馆 参加 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
1 月 2 日 或 1 月 3 日 之前 举行 的 会议	1 月 2 日 或 1 月 3 日前 举行 的 会议	会议 于 一月 二 日前 或 一月 三日 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
两位 与会者 参加 了 会议	两位 与会者 出席 了 会议	两个 与会者 正在 开会	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( number 2 ) ) )
告诉 我 任何 会议 ， 每周 一次 或 每年 一次 的 审查	给 我 看看 每周 的 会议 或 年度 回顾	告诉 我 任何 会议 ， 无论是 每周 的 站立 或 年度 回顾	( call SW.listValue ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) )
最少 参加 人数 的 会议 地点 是 什么	参加 人数 最少 的 会议 地点 是 什么 ？	参加 人数 最少 的 会议 地点 在 哪里	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 发生 在 比 每周 站立 更晚 的 日期	开会时间 比 每周 站立 时间 晚	会议 比 每周 的 站立 会议 要 晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
显示 比 上午 10 点 开始 的 所有 会议	显示 早 于 上午 10 点 开始 的 所有 会议	显示 所有 早 于 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
三个 小时 的 重要 会议	三 小时 长 的 重要 会议	3 个 小时 长 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
什么 位置 是 在 上午 10 点 结束 的 会议	上午 10 点 结束 的 会议 在 什么 地点 举行	上午 10 点 结束 的 会议 在 什么 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
在 格林 伯格 咖啡馆 或 中央 办公室 举行 会议	在 格林 伯格 咖啡厅 或 中心 办公室 举行 的 会议	会议 在 格林 伯格 咖啡馆 或 中央 办公室 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.concat en.location.greenberg_cafe en.location.central_office ) ) )
哪些 会议 与 每周 站立 会议 同一天 举行	什么 会议 和 每周 的 站立 会议 是 同一天 ？	什么 会议 和 每周 的 站立 会议 是 同一天	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
告诉 我 1 月 2 日 的 重要 会议	让 我 看看 1 月 2 日 的 重要 会议	告诉 我 1 月 2 日 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string is_important ) ) )
重要 会议 的 位置 是 什么 ？	重要 会议 的 地点 是 什么	重要 会议 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
在 每周 站立 会议 之前 或 之前 开始 的 会议	每周 站立 会议 开始 时 或 之前 的 会议	在 每周 站立 会议 开始 时 或 之前 召开 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
三个 或 一个 小时	三 或 一 小时	三 或 一 小时	( call SW.listValue ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) )
什么 会议 的 日期 晚于 每周 站立	什么 会议 比 每周 的 站立 时间 晚	什么 会议 的 日期 比 每周 一次 的 站立 表演 还要 晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
每周 站立 时间	每周 站立 时间	每周 站立 会议 持续时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
什么 会议 不 超过 一到 三个 小时	什么 会议 不 超过 一到 三个 小时	什么 会议 不 超过 一到 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
告诉 我 1 月 2 日 或 之后 发生 的 所有 会议	让 我 看看 1 月 2 日 或 之后 的 所有 会议	告诉 我 所有 在 1 月 2 日 或 之后 召开 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
至少 两个 会议 的 位置 是 位置	至少 两次 会议 的 地点 是	至少 有 两个 会议 的 地点 是 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 爱丽丝 正在 参加 的 所有 上午 10 点 的 会议	让 我 看看 爱丽丝 上午 10 点 参加 的 所有 会议	告诉 我 爱丽斯 参加 的 所有 上午 10 点 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 参加 greenberg 咖啡馆 会议 的 与会者	让 我 看看 格林 伯格 咖啡馆 的 所有 与会者	带我去 格林 伯格 咖啡馆 参加 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
哪些 会议 的 开始 时间 与 每周 的 站立 会议 相同	哪些 会议 的 开始 时间 与 每周 站立 会议 的 开始 时间 相同	哪些 会议 的 开始 时间 与 每周 的 站立 会议 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
哪个 会议 由 大多数 人 参加	参加 会议 的 人 最 多	哪个 会议 出席人 数最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string attendee ) ) )
会议 在 上午 10 点 之前 结束	上午 10 点前 结束 的 会议	会议 在 上午 10 点前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 所有 比 每周 站立 会议 更 早 开始 的 会议	让 我 看看 每周 站立 会议 之前 开始 的 所有 会议	告诉 我 所有 比 每周 站立 会议 早 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 有 更 晚 的 日期	什么 会议 的 日期 晚些	什么 会 有 较晚 的 日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
在 每周 例会 上 或 之前 举行 的 会议	每周 站立 会议 当天 或 之前 举行 的 会议	在 每周 站立 会议 上 或 之前 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
在 每周 站立 之前 向 我 展示 会议	每周 站立 前 给 我 看 会议	让 我 看看 每周 站立 之前 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
会议 结束 时间 最长	结束 时间 最长 的 会议	会议 结束 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
告诉 我 所有 会议 都 在 同一时间 或 早于 每周 站立 会议 结束	向 我 展示 在 每周 站立 会议 之前 或 同一时间 结束 的 所有 会议	告诉 我 所有 的 会议 都 在 同一时间 或 早于 每周 的 站立 会议 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 alice 在 上午 10 点 参加 的 所有 会议	让 我 看看 爱丽丝 上午 10 点 参加 的 所有 会议	给 我 看看 爱丽丝 上午 10 点 参加 过 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
安排 了 多少 次 会议	安排 了 多少 次 会议	会议 安排 了 多少 次	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
告诉 我 所有 会议 持续时间 超过 三 小时	让 我 看看 所有 超过 三 小时 的 会议	告诉 我 所有 持续时间 超过 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
什么 会议 的 结束 时间 大于 每周 站立 时间	什么 会议 的 结束 时间 大于 每周 站立 时间	什么 会议 有 一个 结束 时间 大于 每周 的 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 在 上午 10 点 结束 ， 爱丽丝 正在 参加	艾丽斯 参加 的 会议 上午 10 点 结束	爱丽丝 参加 的 会议 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 会议 不迟于 上午 10 点 开始	让 我 看看 不迟于 上午 10 点 开始 的 所有 会议	告诉 我 所有 不迟于 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 重要 的 会议 有 三个 小时 的 长度	什么 重要 会议 有 三个 小时	什么 重要 会议 都 开 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string is_important ) ) )
什么 会议 比 上午 10 点 开始	什么 会议 早 于 上午 10 点 开始	什么 会议 在 上午 10 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 会议 日期 早于 1 月 2 日 或 3 日	什么 会议 日期 早于 1 月 2 日 或 3 日	什么 会议 日期 早于 1 月 2 日 或 3 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
告诉 我 所有 会议 都 是 在 每周 的 立场 会议 之前 开始 的	向 我 展示 不早 于 每周 站立 会议 开始 的 所有 会议	告诉 我 所有 不早 于 每周 站立 会议 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 在 每周 站立 会议 开始 后 结束 的 所有 会议	向 我 展示 每周 站立 会议 开始 后 结束 的 所有 会议	给 我 看看 所有 在 每周 站立 会议 开始 后 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
会议 的 次数 是 多少 ？	会议 的 次数 是 多少	会议 的 次数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
与 最新 结束 时间 的 会议	最 晚 结束 时间 的 会议	最 晚 结束 时间 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
alice 参加 的 会议 地点	爱丽丝 出席会议 的 地点	爱丽斯 出席会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
在 格林 伯格 举行 了 三个 小时 的 会议	在 格林 伯格 的 三 小时 会议	在 格林 伯格 开 了 三个 小时 的 会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
与 爱丽丝 作为 与会者 的 重要 会议	与 爱丽丝 作为 与会者 的 重要 会议	以 爱丽丝 为 与会者 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
持续时间 最短 的 会议	最小 持续时间 会议	持续时间 最短 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
让 我 在 1 月 1 日 与 爱丽丝 见面	1 月 2 日 带我去 见 爱丽丝	让 我 看看 1 月 2 日 和 爱丽丝 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
参加 最少 会议 的 人	参加 会议 最少 的 人	参加 会议 最少 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
1 月 2 日 或 3 日	1 月 2 日 或 3 日	1 月 2 日 或 3 日	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) )
告诉 我 每周 站立 的 长度	告诉 我 每周 站立 的 时间	告诉 我 每周 脱口秀 的 长度	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) )
告诉 我 在 1 月 2 日 或 之前 发生 的 所有 会议	显示 1 月 2 日 或 之前 发生 的 所有 会议	告诉 我 所有 在 1 月 2 日 或 之前 召开 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 在 格林 伯格 咖啡馆 发生 重要 事件 的 会议	让 我 看看 格林 伯格 咖啡馆 所有 重要 的 会议	告诉 我 格林 伯格 咖啡馆 里 所有 重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
上午 10 点 在 格林 伯格 咖啡馆 开始 的 会议	上午 10 点 在 格林 伯格 咖啡厅 开始 的 会议	会议 上午 10 点 在 格林 伯格 咖啡馆 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
会议 从 上午 10 点 或 更 早 开始	上午 10 点 或 更 早 开始 的 会议	上午 10 点 或 更 早 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
三 小时 或 一 小时 的 会议	三 小时 或 一 小时 长 的 会议	三 小时 或 一 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) )
举行 两次 以上 会议 的 地点	举行 两次 以上 会议 的 地点	召开 两次 以上 会议 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
满足 最多 的 地点	会议 地点 最 多	与 最 多 的 地点 开会	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string location ) ) )
会议 将 在 不 迟于 1 月 2 日 举行	什么 会议 不迟于 1 月 2 日 举行	什么 会议 不迟于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
将 于 上午 10 点 结束 的 会议 将 在 何处 召开	上午 10 点 结束 的 会议 在 哪里 举行	上午 10 点 结束 的 会议 将 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
什么 会议 在 格林 伯格 咖啡馆 上午 10 点 开始	什么 会议 上午 10 点 在 格林 伯格 咖啡厅 开始 ？	什么 会议 上午 10 点 在 格林 伯格 咖啡馆 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
向 我 展示 与 每周 站立 会议 共享 位置 的 会议	显示 与 每周 站立 会议 共享 位置 的 会议	告诉 我 与 每周 站立 会议 共享 位置 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
什么 是 会议 的 平均 长度	会议 的 平均 时间 是 多少	会议 的 平均 长度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
每周 站立 会议 的 结束 时间	每周 站立 会议 什么 时候 结束	周 例会 什么 时候 结束	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) )
在 每周 站立 之前 会议 是 什么	每周 站立 前有 什么 会议	每周 站立 之前 会 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
告诉 我 在 格林 伯 咖啡馆 的 所有 会议 ， 这些 会议 将 持续 三个 小时	让 我 看看 格林 伯 咖啡馆 的 所有 会议 ， 会 持续 三个 小时	告诉 我 在 格林 伯 咖啡馆 的 所有 会议 ， 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
会议 在 1 月 2 日 或 3 日 之前 或 之前 举行	1 月 2 日 或 3 日前 有 什么 会议	1 月 2 日 或 1 月 3 日 之前 开 什么 会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) ) )
哪个 会议 的 预定 地点 最少	哪个 会议 安排 的 地点 最少	哪个 会议 的 预定 地点 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string location ) ) )
每周 站立 起始 时间	每周 站立 开始 时间	每周 站立 开始 时间	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
三 小时 或 更 短 的 会议	三 小时 或 更 短时间 的 会议	会议 时间 不 超过 3 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
会议 不是 三个 小时	不到 三 小时 的 会议	不 超过 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
什么 会议 有 大多数 每周 启动 会议 的 长度	什么 会议 的 时间 最长	什么样 的 会议 有 每周 启动 会议 的 长度	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
向 我 展示 在 每周 站立 会议 结束 前 开始 的 会议	让 我 看看 每周 站立 会议 结束 前 开始 的 会议	告诉 我 在 每周 站立 会议 结束 前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
每周 站立 会议 在 哪里	每周 的 站立 会议 在 哪里	每周 站立 会议 在 哪里 举行	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) )
安排 会议 上午 10 点 或 下午 3 点	安排 上午 10 点 或 下午 3 点 的 会议	把 会议 安排 在 上午 10 点 或 下午 3 点	( call SW.listValue ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) )
告诉 我 所有 会议 ， 每周 一次 或 每年 一次 的 审查	向 我 展示 所有 每周 站立 或 年度 回顾 的 会议	给 我 看看 所有 的 会议 ， 要么 是 每周 的 站立 会议 ， 要么 是 年度 回顾 会议	( call SW.listValue ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) )
什么 会议 不 在 1 月 2 日	什么 会议 不是 1 月 2 日	什么 会 不是 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
会议 从 上午 10 点 开始	上午 10 点 以后 开始 的 会议	会议 在 上午 10 点后 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
两人 或 两人 以上 参加 的 会议	两人 或 两人 以上 参加 的 会议	有 两人 或 两人 以上 参加 的 会议	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string >= ) ( number 2 ) ) )
这是 1 月 2 日 或 1 月 3 日 的 会议	这次 会议 是 1 月 2 日 还是 1 月 3 日	这次 会议 是 1 月 2 日 还是 1 月 3 日	( call SW.listValue ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) )
会议 从 上午 10 点 或 下午 3 点 开始	上午 10 点 或 下午 3 点 开始 的 会议	会议 在 上午 10 点 或 下午 3 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) )
参加 三 小时 会议 的 人	参加 三 小时 长 会议 的 人	参加 三 小时 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
哪个 人 参加 重要 会议	哪个 人 在 参加 一个 重要 的 会议	哪个 人 正在 参加 一个 重要 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 本月 最新 的 会议	给 我 看看 这个 月 最新 的 会议	给 我 看看 这个 月 最近 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
找到 一个 三 小时 的 会议	给 我 找 一个 三 小时 长 的 会议	帮 我 找 一个 三 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
参加 每周 站立 的 人 是 谁	参加 每周 站立 的 人	什么 人 在 参加 每周 的 单人 脱口秀	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
最早 的 开始 时间 会议	最早 开始 时间 的 会议	会议 最早 开始 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
每周 启动 的 位置 是 什么	每周 启动 的 地点 是 什么	每周 的 启动 地点 在 哪里	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) )
这次 会议 有 多长	这次 会议 多长时间	这次 会议 多长时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
告诉 我 所有 会议 不迟于 上午 10 点 或 下午 3 点 开始	向 我 展示 所有 不迟于 上午 10 点 或 下午 3 点 开始 的 会议	告诉 我 所有 不晚 于 上午 10 点 或 下午 3 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 重要 的 会议 是 爱丽丝 参加	爱丽丝 参加 什么 重要 的 会议	爱丽丝 正在 参加 一个 多么 重要 的 会议 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
告诉 我 所有 会议 都 没有 发生 在 格林 伯格 咖啡馆	让 我 看看 不是 在 格林 伯格 咖啡馆 举行 的 所有 会议	告诉 我 所有 不 在 格林 伯格 咖啡馆 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
谁 参加 了 最 多 的 会议	参加 会议 最多 的 人	谁 参加 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
什么 会议 短于 或 长于 三个 小时	什么 会议 短于 或 长于 三 小时	什么 会议 比三 小时 还 短 或 还 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
告诉 我 所有 三 小时 的 会议 ， 结束 于 上午 10 点	让 我 看看 上午 10 点 结束 的 三个 小时 的 会议	给 我 看看 上午 10 点 结束 的 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 所有 会议 从 上午 10 点 开始 ， 所有 会议 在 上午 10 点 结束	显示 上午 10 点 开始 的 所有 会议 和 上午 10 点 结束 的 所有 会议	给 我 看看 所有 上午 10 点 开始 的 会议 和 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
什么 重要 的 会议 安排 在 1 月 2 日	1 月 2 日有 哪些 重要 会议	1 月 2 日 安排 了 多么 重要 的 会议 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 格林 伯格 咖啡馆 向 我 展示 1 月 1 日 的 会议	1 月 2 日 在 格林 伯格 咖啡馆 给 我 看 会议	告诉 我 1 月 2 日 在 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
上午 10 点 开始 的 会议	上午 10 点 不 开始 的 会议	会议 不会 在 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string ! = ) ( time 10 0 ) ) )
谁 参加 每周 站立	参加 每周 站立	谁 参加 每周 的 单人 脱口秀	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
会议 的 持续时间	会议 期限	会议 持续时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
告诉 我 从 上午 10 点 开始 的 所有 会议	显示 上午 10 点 开始 的 所有 会议	告诉 我 上午 10 点 开始 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 与 爱丽丝 的 重要 会议	带我去 见 爱丽丝	告诉 我 和 爱丽丝 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
向 我 展示 比 每周 站立 会议 晚 开始 的 会议	向 我 展示 每周 站立 会议 之后 开始 的 会议	告诉 我 哪些 会议 比 每周 的 站立 会议 开始 得晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 所有 会议 计划 运行 3 个 小时	显示 计划 运行 3 小时 的 所有 会议	给 我 看看 所有 安排 了 3 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
哪些 会议 与 每周 站立 会议 的 日期 相同	哪些 会议 的 日期 与 每周 站立 会议 的 日期 相同	哪些 会议 与 每周 站立 会议 的 日期 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
什么 是 会议 的 长度	会议 多长时间	会议 的 时间 是 多长	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
什么 人 参加 格林 伯格 咖啡馆 的 会议	什么 人 在 格林 伯格 咖啡厅 参加 会议	谁 在 格林 伯格 咖啡馆 参加 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
告诉 我 在 每周 站立 前 几天 发生 的 所有 会议	让 我 看看 每周 站立 前 几天 的 所有 会议	告诉 我 所有 的 会议 都 是 在 每周 站立 之前 几天 举行 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
谁 参加 每周 站立	谁 参加 每周 的 站立 比赛	谁 参加 每周 的 单人 脱口秀	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string attendee ) ) )
告诉 我 1 月 2 日 的 所有 会议 ， 也 是 3 个 小时	让 我 看看 1 月 2 日 的 所有 会议 ， 也 就是 3 小时 长 的 会议	给 我 看看 1 月 2 号 所有 的 会议 ， 也 都 是 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 所有 会议 安排 三个 小时	给 我 看 三 小时 内 的 所有 会议	告诉 我 所有 安排 在 三 小时 内 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
参加 两次 以上 会议 的 人	参加 两次 以上 会议 的 人	参加 两次 以上 会议 的 人员	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
什么 会议 的 开始 时间 早 于 每周 站立 时间	什么 会议 的 开始 时间 比 每周 站立 时间 早	什么 会议 的 开始 时间 早 于 每周 一次 的 站立 大会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 结束 于 上午 10 点 是 爱丽丝 参加	上午 10 点 结束 的 会议 爱丽丝 参加 吗	上午 10 点 结束 的 会议 是 什么 ? 爱丽丝 参加 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 的 开始 时间 是 在 每周 站立 的 开始 时间 之后	会议 开始 时间 在 每周 站立 开始 时间 之后	会议 开始 时间 为 每周 站立 开始 时间 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
1 月 1 日 与 爱丽丝 出席会议	1 月 2 日 与 爱丽丝 会面	1 月 2 日 会议 ， 爱丽丝 出席	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 在 上午 10 点 或 之前 开始 的 所有 会议	显示 上午 10 点 或 之前 开始 的 所有 会议	告诉 我 所有 上午 10 点 或 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 所有 重要 的 会议 在 上午 10 点 结束	让 我 看看 所有 重要 的 会议 ， 在 上午 10 点 结束	告诉 我 所有 在 上午 10 点 结束 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
1 月 2 日 的 会议 是 三个 小时	一月 二日 三 小时 长 的 会议	1 月 2 日 的 会议 长达 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
什么 是 位置 的 数量	地点 的 号码 是 多少	这个 地方 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ) )
什么 会议 与 每周 启动 的 长度 相同	什么 会议 和 每周 启动 时间 一样 长	什么 会议 和 每周 的 启动 会议 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
告诉 我 不 在 格林 伯格 咖啡馆 的 会议	给 我 看 不 在 格林 伯格 咖啡馆 的 会议	告诉 我 不要 在 格林 伯格 咖啡馆 开会	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string ! = ) en.location.greenberg_cafe ) )
爱丽丝 正在 参加 的 重要 会议	爱丽丝 要 参加 的 重要 会议	艾丽丝 正在 参加 一个 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
三个 小时 的 会议	三 小时 会议	三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 在 上午 10 点 之前 开始 的 会议	让 我 看看 上午 10 点前 开始 的 会议	告诉 我 会议 在 上午 10 点 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
格林 伯格 咖啡馆 的 重要 会议	格林 伯格 咖啡厅 重要 会议	格林 伯格 咖啡馆 的 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 1 月 2 日 上午 10 点 开始 的 任何 会议	1 月 2 日 上午 10 点 开始 的 任何 会议	告诉 我 1 月 2 日 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
谁 将 参加 1 月 2 日 的 会议	谁 将 出席 1 月 2 日 的 会议	谁 参加 1 月 2 日 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
每周 站立 会议 的 开始 时间 是 什么 时间	每周 站立 会议 什么 时候 开始	周 例会 什么 时候 开始	( call SW.listValue ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) )
1 月 2 日 或 之后 举行 的 会议	1 月 2 日 或 之后 举行 的 会议	于 一月 二日 或 之后 举行 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 与 每周 站立 时 在 同一 地点 举行 的 会议	向 我 展示 每周 在 同一 地点 举行 的 所有 会议	告诉 我 所有 的 会议 都 在 每周 脱口秀 的 同一 地点 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) en.meeting.weekly_standup ) ) )
告诉 我 所有 会议 早 于 上午 10 点 或 下午 3 点 开始	让 我 看看 上午 10 点 或 下午 3 点 之前 开始 的 所有 会议	告诉 我 所有 早 于 上午 10 点 或 下午 3 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
会议 在 上午 10 点 或 下午 3 点 结束	什么 会议 在 上午 10 点 或 下午 3 点 结束	什么 会议 在 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 参加 会议 最多 的 人	让 我 看看 参加 会议 最多 的 人	告诉 我 谁 参加 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 是 在 第一周 每周 站立 的 日期	在 第一周 站立 之 日 举行 的 会议	会议 在 第一个 星期 的 日期 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) ) )
这个 人 的 人数 是 多少	这个 人 的 号码 是 多少	这个 人 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 正在 参加 格林 伯格 咖啡馆 参加 会议	参加 格林 伯格 咖啡馆 会议 的 人	谁 参加 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ) )
会议 从 早上 700 点 开始 ， 到 上午 000 点 结束	会议 于 上午 700 点 开始 ， 上午 000 点 结束	会议 于 上午 七 时 开始 ， 上午 七 时 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 的 开始 时间 不晚 于 上午 10 点 或 下午 3 点	什么 会议 的 开始 时间 不迟于 上午 10 点 或 下午 3 点	什么 会议 的 开始 时间 不迟于 上午 10 点 或 下午 3 点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
谁 参加 了 上午 10 点 的 会议	谁 在 参加 上午 10 点 的 会议	谁 在 参加 上午 10 点 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
在 1 月 2 日 之前 向 我 展示 会议	1 月 2 日前 给 我 看 会议	在 1 月 2 号 之前 给 我 看 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 发生 在 1 月 1 日 或 1 月 3 日 的 事情	让 我 看看 1 月 2 日 或 3 日 的 所有 会面	告诉 我 1 月 2 日 或 1 月 3 日 发生 的 所有 事件	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 1 3 ) ) ) )
向 我 展示 与 每周 站立 会议 分享 与会者 的 所有 会议	显示 与 每周 站立 会议 共享 与会者 的 所有 会议	告诉 我 所有 与 每周 站立 会议 共享 一个 与会者 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
告诉 我 所有 会议 从 1 月 1 日 上午 10 点 开始	让 我 看看 1 月 2 日 上午 10 点 开始 的 所有 会议	告诉 我 所有 1 月 2 日 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 所有 比 每周 站立 开始 更 早 结束 的 会议	向 我 展示 在 每周 站立 开始 之前 结束 的 所有 会议	给 我 看看 所有 的 会议 ， 哪些 会议 比 每周 的 站立 开始 的 时间 早 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 会议 是 爱丽丝 上午 10 点 参加 的	艾丽斯 上午 10 点 参加 什么 会议	爱丽丝 上午 10 点要 参加 什么 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
与 最新 开始 时间 的 会议	最新 开始 时间 的 会议	会议 最 晚 开始 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string start_time ) ) ) )
告诉 我 alice 参加 并 在 格林 伯格 咖啡馆 举办 的 任何 会议	给 我 看看 爱丽丝 参加 过 的 在 格林 伯格 咖啡馆 举行 的 会议	告诉 我 爱丽丝 参加 过 哪些 会议 ， 哪些 是 在 格林 伯格 咖啡馆 举行 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
告诉 我 所有 会议 在 上午 10 点 结束 ， 从 上午 10 点 开始	让 我 看看 上午 10 点 结束 和 上午 10 点 开始 的 所有 会议	给 我 看看 所有 上午 10 点 结束 、 上午 10 点 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
什么 会议 有 一个 日期 jan   2 和 alice 参加	什么 会议 的 日期 是 1 月 2 日 ， 爱丽丝 参加 了	什么 会议 的 日期 是 1 月 2 日 ， 有 爱丽丝 参加	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
让 我 参加 格林 伯格 咖啡馆 的 会议	带我去 格林 伯格 咖啡馆 开会	带我去 格林 伯格 咖啡馆 开会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 会议 拥有 最多 的 地点	哪个 会议 的 地点 最 多	什么 会议 有 最 多 的 地点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( string location ) ) )
在 每周 站立 的 地点 开会	每周 站立 地点 会议	每周 一次 的 站立 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string location ) ) ) )
上午 10 点 开始 和 结束 的 会议	上午 10 点 开始 和 结束 的 会议	会议 在 上午 10 点 开始 和 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
向 我 展示 最新 结束 时间 的 会议	告诉 我 最近 结束 时间 的 会议	给 我 看看 最近 结束 时间 的 会议	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
什么 会议 早 于 上午 10 点 或 下午 3 点 结束	什么 会议 在 上午 10 点 或 下午 3 点 之前 结束	什么 会议 在 上午 10 点 或 下午 3 点 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 在 每周 站立 之前 结束 的 会议	让 我 看看 每周 站立 前 结束 的 会议	让 我 看看 在 每周 站立 之前 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
什么 会议 时间 最长	什么 会议 时间 最长	什么 会议 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
参加 每周 站立 会议 的 人 参加 的 会议	参加 每周 站立 会议 的 人员 参加 的 会议	参加 会议 的 人 也 参加 每周 的 站立 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ) )
有 什么 重要 的 会议 有 爱丽丝 参加	爱丽丝 参加 了 什么 重要 的 会议	爱丽丝 参加 了 什么 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ( string attendee ) ( string = ) en.person.alice ) )
哪些 会议 在 格林 伯格 咖啡馆 举行	哪些 会议 在 格林 伯格 咖啡馆 举行	哪些 会议 在 格林 伯格 咖啡馆 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
告诉 我 在 会议 次数 最少 的 所有 会议	显示 与 最少 会议 次数 在 同一 位置 发生 的 所有 会议	告诉 我 所有 在 同一 地点 召开 的 会议 的 最少 次数	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 至少 在 每周 综述 的 开始 时间 结束	会议 至少 在 每周 汇总 的 开始 时间 结束	会议 至少 在 每周 总结 的 开始 时间 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
在 每周 站立 会议 的 同一天 向 我 展示 所有 会议	在 每周 站立 会议 的 同一天 向 我 展示 所有 会议	告诉 我 所有 的 会议 都 在 每周 站立 会议 的 同一天	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string date ) ) ) )
什么 会议 在 上午 10 点 结束	上午 10 点 以后 什么 会议 结束 了	会议 在 上午 10 点后 结束 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪些 会议 很 重要	哪些 会议 很 重要	哪些 会议 是 重要 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) )
告诉 我 所有 会议 发生 在 晚上 10 点 或 下午 3 点	让 我 看看 上午 10 点 或 下午 3 点 以后 的 所有 会议	告诉 我 所有 在 上午 10 点 或 下午 3 点 之后 召开 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 参加 每周 站立 会议 或 年度 审查 的 所有人	让 我 看看 参加 每周 站立 会议 或 年度 回顾 的 所有人	告诉 我 所有 参加 每周 站立 会议 或 年度 回顾 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
让 我 在 1 月 2 日 在 格林 伯格 咖啡馆 见面	1 月 2 日 带我去 格林 伯格 咖啡馆 开会	让 我 看看 1 月 2 日 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
告诉 我 会议 次数 最多 的 地点	告诉 我 开会 次数 最多 的 地点	告诉 我 开会 最多 的 地点	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 晚于 上午 10 点 开始	会议 上午 10 点 以后 开始	会议 在 上午 10 点 以后 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
哪个 会议 安排 在 最近 的 日期	哪 一次 会议 安排 在 最近 的 日期	哪 一个 会议 安排 在 最晚 的 日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
三个 小时 的 会议	三 小时 长 的 会议	会议 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
告诉 我 所有 会议 在 格林 伯格 咖啡馆 发生 了 三个 小时	让 我 看看 在 格林 伯格 咖啡馆 三个 小时 的 所有 会议	给 我 看看 格林 伯格 咖啡馆 里 三 小时 长 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 位置 与 每周 站立 不 一样	什么 位置 和 每周 站立 不 一样	什么 地方 不 一样 的 每周 站立	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
会议 于 1 月 10 日 上午 10 点 开始	1 月 2 日 上午 10 点 开始 的 会议	会议 于 1 月 2 日 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
爱丽丝 出席 1 月 2 日 的 会议	1 月 2 日 爱丽丝 参加 的 会议	1 月 2 日 alice 参加 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string attendee ) ( string = ) en.person.alice ) )
什么 会议 在 格林 伯格 咖啡馆 有 一个 位置 ， 从 上午 10 点 开始	什么 会议 地点 在 格林 伯格 咖啡厅 ， 上午 10 点 开始	什么 会议 在 格林 伯格 咖啡馆 有 一个 位置 ， 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
哪些 会议 定于 上午 10 点 结束	哪些 会议 定于 上午 10 点 结束	哪些 会议 安排 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
告诉 我 上午 10 点 开始 和 结束 的 会议	让 我 看看 上午 10 点 开始 和 结束 的 会议	给 我 看看 上午 10 点 开始 和 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
1 月 1 日 会议 的 位置 是 什么	1 月 2 日 的 会议 地点 是 什么	1 月 2 日 会议 在 哪里 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
会议 从 1 月 1 日 上午 10 点 开始	什么 会议 1 月 2 日 上午 10 点 开始	什么 会议 1 月 2 日 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
重要 会议	重要 会议	重要 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) )
会议 从 上午 10 点 或 下午 3 点 开始	上午 10 点 以后 或 下午 3 点 以后 开始 的 会议	会议 在 上午 10 点 以后 或 下午 3 点 以后 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
比 每周 站立 会议 晚 的 会议	比 每周 站立 会议 晚 结束 的 会议	晚于 每周 站立 会议 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
参加 会议 的 人员 从 上午 10 点 开始	参加 上午 10 点 开始 的 会议 的 人	参加 上午 10 点 开始 的 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ) )
会议 从 上午 1000 点 开始	上午 1000 点 开始 的 会议	会议 在 上午 1000 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
所有 会议 的 平均 长度 是 多少	所有 会议 的 平均 时间 是 多少	所有 会议 的 平均 长度 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ) ) )
什么 会议 有 两个 或 更 少 的 与会者	什么 会议 有 两个 或 更 少 的 与会者	什么 会议 只有 两个 或 更 少 的 与会者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string <= ) ( number 2 ) ) )
告诉 我 所有 会议 时间 不 超过 三 小时	给 我 看 少于 三 小时 的 所有 会议	告诉 我 所有 少于 三 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
什么 会议 在 每周 站立 开始 时 或 开始 后 结束	什么 会议 在 每周 站立 开始 时 或 之后 结束	什么样 的 会议 在 每周 站立 开始 时 结束 ， 或者 在 每周 站立 开始 后 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
什么 人 参加 每周 站立	参加 每周 站立 的 人	什么 人 参加 了 每周 的 单人 脱口秀	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) ( call SW.reverse ( string attendee ) ) ( string = ) en.meeting.weekly_standup ) )
什么 会议 的 结束 时间 是 1 月 1 日 上午 1 点	什么 会议 的 结束 时间 是 1 月 2 日 上午 10 点	什么 会 在 1 月 2 日 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
不 在 1 月 2 日 的 会议	不 在 1 月 2 日 的 会议	1 月 2 日 以外 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string ! = ) ( date 2015 1 2 ) ) )
会议 是 三个 小时 ， 结束 于 上午 10 点	会期 三 小时 ， 上午 十点 结束	会议 持续 三个 小时 ， 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
什么 会议 不迟于 上午 10 点 或 下午 3 点 结束	什么 会议 不迟于 上午 10 点 或 下午 3 点 结束	什么 会议 不迟于 上午 10 点 或 下午 3 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
从 上午 10 点 开始 的 三 小时 会议	上午 10 点 开始 的 三 小时 会议	会议 持续 三个 小时 ， 上午 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
格林 伯格 咖啡馆 会议 于 上午 10 点 结束	在 格林 伯格 咖啡馆 开会 ， 上午 10 点 结束	在 格林 伯格 咖啡馆 见面 ， 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
什么 会议 至少 三个 小时	什么 会议 至少 三 小时	什么 会议 最少 要开 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
正在 举行 的 重要 会议 在 哪里 举行	重要 会议 在 哪里 举行	重要 会议 在 哪里 召开	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
会议 开始 时间 是 在 每周 站立 结束 时	每周 站立 结束 时 的 会议 开始 时间	什么 会议 开始 的 时间 是 在 周末 站 起来	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
哪些 会议 将 花费 与 每周 站立 时间 相同 的 时间	哪些 会议 将 花费 与 每周 站立 时间 相同 的 时间	哪些 会议 会 占用 每周 站立 会议 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string length ) ) ) ) )
在 每周 站立 开始 时间 之前 开始 的 会议	每周 站立 时间 开始 前 开始 的 会议	在 每周 站立 开始 时间 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
告诉 我 爱丽丝 正在 参加 的 所有 会议	让 我 看看 爱丽丝 参加 的 所有 会议	告诉 我 爱丽斯 参加 的 所有 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string attendee ) ( string = ) en.person.alice ) )
会议 至少 3 个 小时	会议 至少 3 小时	会议 至少 要 3 个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.hour ) ) ) )
会议 开始 不迟于 每周 站立 的 开始 时间	会议 开始 时间 不迟于 每周 站立 开始 时间	会议 不迟于 每周 站立 开始 时间 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
最 少数 人 参加 的 会议	参加 人数 最少 的 会议	参加 会议 的 人数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( string attendee ) ) )
位置 与 三 小时 会议 的 地点 相同	地点 与 三 小时 会议 地点 相同	地点 与 三个 小时 长 的 会议 地点 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
1 月 2 日前 举行 的 会议	1 月 2 日前 举行 的 会议	会议 于 一月 二 日前 举行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
告诉 我 所有 与会者 的 会议 结束 于 上午 10 点	显示 上午 10 点 结束 的 所有 会议 的 与会者	告诉 我 上午 10 点 结束 的 会议 的 所有 与会者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 在 每周 站立 结束 之前 开始 的 会议	让 我 看看 每周 站立 结束 前 开始 的 会议	告诉 我 在 每周 的 单人 脱口秀 结束 前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
什么 会议 是 在 1 月 2 日 上午 10 点	1 月 2 日 上午 10 点有 什么 会议	1 月 2 日 上午 10 点开 什么 会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) )
参加 重要 会议 的 人	参加 重要 会议 的 人	出席 重要 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string is_important ) ) ) )
告诉 我 所有 会议 都 是 在 每周 站立 结束 的 同时 开始 的	让 我 看看 所有 的 会议 在 每周 站立 结束 的 同时 开始	告诉 我 所有 的 会议 都 在 同一时间 开始 ， 每周 的 脱口秀 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
什么 会议 不是 三个 小时	什么 会议 不到 三 小时	什么 会议 不是 三个 小时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string ! = ) ( number 3 en.hour ) ) )
参加 大多数 会议 的 人	参加 会议 最多 的 人	参加 会议 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 结束 于 每周 站立 结束 时间	每周 站立 结束 时 结束 的 会议	在 周末 的 站立 会议 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) )
每周 站立 和 年度 审查 将 在 哪里 举行	每周 站立 和 年度 回顾 将 在 哪里 举行	每周 站立 和 年度 回顾 将 在 哪里 进行	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
告诉 我 1 月 3 日 的 会议	1 月 2 日 给 我 看 三个 小时 的 会议	给 我 看看 1 月 2 日 三个 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) )
在 上午 10 点 或 之前 开始 的 会议	上午 10 点 或 之前 开始 的 会议	会议 在 上午 10 点 或 之前 开始	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
什么 在 格林 伯格 咖啡馆 举行 会议 ， 爱丽丝 正在 参加	格林 伯格 咖啡馆 有 什么 会议 ， 爱丽丝 要 参加	格林 伯格 咖啡馆 和 爱丽丝 正在 参加 什么 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string attendee ) ( string = ) en.person.alice ) )
什么 会议 在 当天 最快 结束	一天 中 什么 会议 结束 得 最早	什么 会 在 一天 中 结束 得 最早	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string end_time ) ) ) )
位置 不同于 每周 站立 的 位置	位置 不同于 每周 站立 的 位置	地点 不同于 每周 站立 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string ! = ) en.meeting.weekly_standup ) )
告诉 我 所有 会议 在 上午 10 点 之前 结束	让 我 看看 上午 10 点前 结束 的 所有 会议	告诉 我 所有 的 会议 在 上午 10 点 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
在 两个 或 更少 地点 举行 的 会议	在 两个 或 更少 地点 举行 的 会议	会议 在 两个 或 更 少 的 地点 举行	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string <= ) ( number 2 ) ) )
什么 会议 是 有 意义 的 ， 并 在 上午 10 点 开始	什么 会议 很 重要 ， 上午 10 点 开始	什么 会议 是 重要 的 ， 10 点 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string is_important ) ) )
三 小时 或 更 短时间 或 一 小时 或 更 短时间 的 会议	三 小时 或 少于 一 小时 或 少于 一 小时 的 会议	三 小时 或 少于 三 小时 、 一 小时 或 少于 一 小时 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
在 1 月 2 日 举行 会议 的 地点	1 月 2 日 举行 会议 的 地点	1 月 2 日 举行 会议 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 从 早上 10 点 开始 的 所有 会议	显示 上午 10 点 之前 开始 的 所有 会议	告诉 我 所有 上午 10 点 之前 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string < ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
会议 在 每周 站立 会议 开始 时 或 之后 结束	在 每周 站立 会议 开始 时 或 之后 结束 的 会议	与 每周 站立 会议 的 开始 时间 相同 或 更 晚 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
格林 伯格 咖啡馆 的 哪些 会议 将 持续 三个 小时	格林 伯格 咖啡馆 的 会议 会 持续 三个 小时	格林 伯格 咖啡馆 的 哪些 会议 将 持续 三个 小时	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string length ) ( string = ) ( number 3 en.hour ) ) )
位置 是 格林 伯格 咖啡馆 或 中央 办公室	地点 是 格林 伯格 咖啡厅 或 中央 办公室	地点 是 格林 伯格 咖啡馆 或 中央 办公室	( call SW.listValue ( call SW.concat en.location.greenberg_cafe en.location.central_office ) )
参加 至少 两次 会议 的 人	至少 参加 两次 会议 的 人	至少 参加 两次 会议 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
至少 举行 一次 会议 的 地方	至少 安排 一次 会议	至少 安排 一次 会议	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string location ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
上午 1000 点 在 格林 伯格 咖啡馆 开始 的 会议	上午 1000 点 在 格林 伯格 咖啡厅 开始 的 会议	会议 于 上午 十时 在 格林 伯格 咖啡馆 开始	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string start_time ) ( string = ) ( time 10 0 ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
在 一个 地方 开会	在 一个 地点 开会	在 一个 地方 开会	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string < ) ( number 2 ) ) )
会议 于 上午 10 点 或 之前 结束	上午 10 点 或 之前 结束 的 会议	会议 在 上午 10 点 或 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( time 10 0 ) ) ) )
告诉 我 位于 格林 伯格 咖啡馆 的 所有 会议	让 我 看看 格林 伯格 咖啡厅 的 所有 会议	告诉 我 所有 在 格林 伯格 咖啡馆 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string location ) ( string = ) en.location.greenberg_cafe ) ( string location ) ( string = ) en.location.greenberg_cafe ) )
在 每周 例会 开始 时 结束 的 会议	每周 站立 会议 开始 时 结束 的 会议	会议 在 每周 的 站立 会议 开始 时 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) )
什么 会议 在 最 短 的 时间 内 运行	什么 会议 的 时间 最短	什么样 的 会议 时间 最短 啊	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string length ) ) ) )
她 我 所有 会议 的 持续时间 在 1 到 3 个 小时 之间	所有 会议 的 持续时间 在 1 到 3 小时 之间	所有 的 会议 时间 在 1 到 3 个 小时 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string length ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.hour ) ( number 1 en.hour ) ) ) ) )
什么 会议 有 粉丝 结束 时间 在 上午 10 点 或 下午 3 点 之后	上午 10 点 或 下午 3 点 以后 什么 会议 有 风扇 结束 时间	什么 会 在 上午 10 点 以后 或 下午 3 点 以后 有 粉丝 结束 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 所有 会议 三个 小时 ， 结束 于 上午 10 点	让 我 看看 上午 10 点 结束 的 三个 小时 的 所有 会议	告诉 我 所有 的 会议 都 是 三个 小时 ， 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
三 小时 的 会议 地点	三 小时 会议 地点	三 小时 长 的 会议 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string length ) ( string = ) ( number 3 en.hour ) ) ) )
什么 人 参加 大多数 会议	什么 人 参加 最多 的 会议	什么 人 参加 会议 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string attendee ) ) ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ) )
会议 在 上午 10 点 之前 或 下午 3 点 之前 结束	上午 10 点 之前 或 下午 3 点 之前 结束 的 会议	会议 在 上午 10 点 或 下午 3 点 之前 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
告诉 我 爱丽丝 正在 参加 的 所有 重要 会议	让 我 看看 爱丽丝 参加 的 所有 重要 会议	告诉 我 爱丽斯 参加 的 所有 重要 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ( string is_important ) ) )
什么 位置 是 每周 站立 和 年度 审查	什么 位置 是 每周 的 站立 和 年度 回顾	什么 地方 是 每周 站立 和 年度 回顾	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.location ) ( string ! type ) ) ( call SW.reverse ( string location ) ) ( string = ) ( call SW.concat en.meeting.weekly_standup en.meeting.annual_review ) ) )
和 爱丽丝 一样 出席 同 一次 会议 的 人	与 爱丽丝 参加 同一 会议 的 人	与 爱丽丝 参加 同一 会议 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string attendee ) ( string = ) en.person.alice ) ) )
谁 参加 了 上午 10 点 结束 的 会议	谁 参加 上午 10 点 结束 的 会议	谁 在 参加 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string attendee ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ) )
告诉 我 所有 会议 都 在 上午 10 点 结束	让 我 看看 上午 10 点 结束 的 所有 会议	告诉 我 所有 上午 10 点 结束 的 会议	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) ( string end_time ) ( string = ) ( time 10 0 ) ) )
会议 没有 在 上午 10 点 结束	上午 10 点 不 结束 的 会议	会议 不会 在 上午 10 点 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string end_time ) ( string ! = ) ( time 10 0 ) ) )
告诉 我 所有 会议 在 同一时间 结束 或 晚于 每周 站立 会议 结束	向 我 显示 所有 会议 在 每周 站立 会议 结束 时 或 之后 结束	告诉 我 所有 的 会议 都 在 同一时间 结束 ， 或者 比 每周 站立 会议 结束 的 时间 晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
告诉 我 所有 会议 的 结束 时间 晚于 每周 的 立场 开始	向 我 展示 所有 在 每周 站立 开始 后 结束 的 会议	给 我 看看 所有 的 会议 ， 哪些 会 比 每周 的 脱口秀 开始 的 时间 晚	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string start_time ) ) ) ) )
会议 开始 不迟于 每周 站立 结束 时间	不迟于 每周 站立 结束 时间 开始 的 会议	不晚 于 每周 站立 会议 结束 时间 开始 的 会议	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string start_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.meeting.weekly_standup ( string end_time ) ) ) ) )
什么 会议 在 上午 10 点 或 之后 结束	什么 会议 上午 10 点 或 以后 结束	什么 会议 上午 10 点 或 更 晚 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string end_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( time 10 0 ) ( time 15 0 ) ) ) ) )
什么 是 最近 的 会议	最近 的 会议 是 什么	最近 的 会议 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.meeting ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string date ) ) ) )
比 123 芝麻街 大 的 住房	芝麻街 123 号 以上 住房	比 123 芝麻街 还 大 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
告诉 我 住房 与 123 芝麻街 的 类型 相同	给 我 看看 和 芝麻街 123 号 一样 的 房子	给 我 看看 和 123 芝麻街 一样 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单位 每月 最低 租金 为 1500 美元	哪 一套 住房 每月 最低 租金 1500 美元	哪个 单位 的 最低 租金 是 每月 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
在 123 芝麻街 之前 或 当天 张贴 的 房屋	芝麻街 123 号 前 或 同一天 张贴 的 房屋	在 芝麻街 123 号 之前 或 同一天 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 单位 数量 最少 的 社区	住房 数量 最少 的 社区	住房 数量 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
找到 租金 低于 2000 美元 的 住房 单位	寻找 租金 低于 2000 美元 的 住房 单位	寻找 租金 低于 2000 美元 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
哪个 住房 单元 有 两种 以上 的 房屋	哪 一套 住房 有 两种 以上 的 住房	哪个 住房 单元 有 两种 以上 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
每月 123 芝麻街 多少 钱	芝麻街 123 号 每月 多少 钱	芝麻街 123 号 一个月 多少 钱	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
找到 最大 的 住房 单位	找到 最大 的 住房 单元	找到 最大 的 住房 单元	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
什么 住房价格 为 1500 或 2000 美元	什么样 的 房子 标价 1500 或 2000 美元	什么 房子 的 价格 是 1500 或 2000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
住房 设有 主卧室 和 私人 浴室	带 主卧室 和 私人 浴室 的 住房	住房 有 主卧室 和 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string has_private_room ) ) )
住房 单位 有 私人 浴室 和 1500 美元 的 租金	带 私人 浴室 和 1500 美元 租金 的 住房 单元	住房 单元 有 私人 浴室 和 1500 美元 的 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
哪个 住房 单位 允许 猫 ， 并 有 一个 私人 浴室	哪 一个 住房 单位 允许 猫 在 里面 洗澡	哪个 住宅 单元 允许 养猫 ， 并且 可以 单独 洗澡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
找到 1 月 2 日 张贴 的 住房 单位 ， 允许 猫	找 一个 1 月 2 日 张贴 的 允许 猫	找 一个 1 月 2 日 张贴 的 住房 单元 ， 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_cats ) ) )
租金 大于 123 芝麻街 的 单位	租金 高于 芝麻街 123 号 的 单位	租金 高于 123 芝麻街 的 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
什么 住房 单位 定价 1500 美元	哪套 房子 1500 美元	什么 房子 的 价格 是 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
在 市中心 西区 附近 找到 带 私人 房间 的 住房	在 市中心 西区 附近 找到 有 私人 房间 的 住房 单元	在 中 城西区 附近 寻找 有 私人 房间 的 住宅 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
住 在 1 月 2 日 的 私人 浴室	1 月 2 日 张贴 的 带 私人 浴室 的 房屋	1 月 2 日 张贴 的 带有 私人 浴室 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_bath ) ) )
哪个 住房 单位 类似 123 芝麻街 的 大小	哪个 住宅 单元 的 面积 与 芝麻街 123 号 相似	哪个 住宅 单元 的 面积 与 123 芝麻街 相似	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
公寓 设有 私人 客房	有 私人 房间 的 公寓	带 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
房屋 面积 为 800 平方英尺 ， 设有 私人 房间	800 平方英尺 带 私人 房间 的 住房	房子 有 800 平方英尺 ， 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
中 城东区 的 住房 单位 也 允许 狗	市中心 东区 有 哪些 住房 单位 也 允许 养狗	在 中城 东部 地区 什么样 的 住宅 单元 也 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
公寓式 住房 单元 ， 设有 私人 浴室	有 私人 浴室 的 公寓式 住房 单元	带有 私人 浴室 的 公寓式 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
什么样 的 房屋 是 800 平方英尺	什么样 的 房子 是 800 平方英尺	什么样 的 房子 才 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
哪个 住房 单位 的 月租金 低于 123 芝麻街	哪个 房屋 单位 的 月租 比 芝麻街 123 号少	哪个 单元 的 月租 比 123 芝麻街 低	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
找到 1 月 2 日 发布 的 住房 单位 ， 租金 与 123   sesame   st 相同	找到 1 月 2 日贴 出 的 与 芝麻街 123 号 租金 相同 的 住房 单位	1 月 2 日 找 一套 和 123 芝麻街 租金 一样 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string rent ) ) ( string = ) en.housing_unit.123_sesame_street ) )
公寓 设有 私人 房间 ， 每 月租金 1500	有 私人 房间 的 公寓 ， 每 月租金 1500 英镑	有 私人 房间 的 公寓 ， 每 月租金 1500 元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 的 同样 大小	住宅 面积 与 芝麻街 123 号 相同	和 芝麻街 123 号 一样 大小 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
800 平方英尺 的 住房 单元 设有 私人 浴室	800 平方英尺 带 私人 浴室 的 住房 单元	800 平方英尺 的 住房 单元 ， 带有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
住房 单位 有 一个 私人 房间 ， 发布 在 1 月 2 日	1 月 2 日 张贴 的 有 私人 房间 的 住房	1 月 2 日 张贴 的 带有 私人 房间 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
哪个 住房 单位 有 公寓 类 的 房子	哪 一套 房子 有 公寓式 的	哪个 单元 有 公寓 类型 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
至少 有 两种 类型 的 房屋	至少 有 两种 类型 的 住房	至少 有 两种 类型 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
找到 与 123 芝麻街 相同 或 更 小 的 住房 单位	找到 与 芝麻街 123 号 大小 相同 或 更 小 的 住房 单元	寻找 与 123 芝麻街 相同 或 更 小 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
哪个 住房 单位 每 月租金 最高	哪 一套 住房 每 月租金 最高	哪个 单位 每 月租金 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
在 1 月 2 日 或 2 月 3 日 发布 的 住房	1 月 2 日 或 2 月 3 日 张贴 的 房屋	1 月 2 日 或 2 月 3 日 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
什么 是 123 芝麻街 住房 类型	芝麻街 123 号 是 什么 类型 的 住宅	芝麻街 123 号 的 住房 类型 是 什么	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) )
哪个 住房 单位 提供 私人 浴室	哪个 住房 单元 提供 私人 浴室	哪个 住房 单位 提供 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string has_private_bath ) ) )
800 平方英尺 的 私人 浴室	800 平方英尺 带 私人 浴室 的 住房	房子 有 800 平方英尺 ， 带 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
住房 单位 最多 的 社区	住房 最多 的 社区	拥有 最 多 住房 单元 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
外壳 类型 超过 两个 可用 的 外壳	两个 以上 可用 外壳 的 外壳 类型	可 供选择 的 房屋 类型 超过 两个	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单元 ， 都 有 一个 私人 房间 ， 允许 狗	有 私人 房间 和 允许 狗 进入 的 住房 单元	住房 单元 ， 都 有 一个 私人 房间 ， 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_dogs ) ) )
123sesame 街 附近 的 区域	芝麻街 123 号 附近	芝麻街 123 号 附近	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
哪个 住房 单位 的 月租金 低于 1500 美元	哪 一套 住房 的 月租金 低于 1500 美元	哪个 单元 的 月租金 低于 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
告诉 我 允许 狗 的 房屋	给 我 看看 狗狗 可以 住 的 地方	告诉 我 哪里 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
住房 有 两种 类型	两种 类型 的 外壳	两种 类型 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
公寓 租金 在 1500 到 2000 之间	租金 在 1500 到 2000 之间 的 公寓	房租 在 1500 到 2000 之间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
公寓 设有 私人 浴室	带 私人 浴室 的 公寓	带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
住房 单位 有 2 个 社区	两个 社区 的 住房 单元	有 两个 社区 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
什么 公寓 花费 1500 美元	什么 公寓 要 1500 美元	什么 公寓 要 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
与 123 芝麻街 相同 的 公寓	租金 与 芝麻街 123 号 相同 的 公寓	与 芝麻街 123 号 租金 相同 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
哪些 住房 单位 允许 狗 和 猫	哪些 住房 单位 允许 养狗 和 猫	哪些 住房 单位 允许 养狗 和 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_dogs ) ) )
住房 至少 和 123 芝麻街 一样 贵	至少 和 芝麻街 123 号 一样 贵 的 房子	房价 至少 和 123 芝麻街 一样 贵	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
在 市中心 西部 的 私人 房间	市中心 西 的 私人 房间	在 中城 西部 的 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
住房 单位 超过 123 芝麻街	芝麻街 123 号 房屋	住房 单元 超过 了 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
公寓 位于 市中心 西部 或 切尔西 附近	市中心 西区 或 切尔西 区 的 公寓	在 中 城西区 或 切尔西 附近 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
住房 类型 如 123 芝麻街 或 900 任务 大道	住宅 类型 ， 如 芝麻街 123 号 或 Mission   Avenue   900 号	像 芝麻街 123 号 或 教会 大道 900 号 这样 的 住宅 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
住房面积 介于 800 至 1000 平方英尺 之间	房屋 面积 在 800 到 1000 平方英尺 之间	面积 在 800 到 1000 平方英尺 之间 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
什么 住房 单位 与 123 芝麻街 的 住房 单位 相同	什么 住房 单位 和 芝麻街 123 号 的 一样 大	什么 房子 和 123 芝麻街 的 房子 一样 大	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
找到 不是 公寓 的 住房 单位	找到 不是 公寓 的 住房 单元	找到 不是 公寓 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
哪个 区域 至少 有 两个 住房 单位	哪个 地区 至少 有 两套 住房	哪个 地区 至少 有 两个 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住 在 123 芝麻街 附近	芝麻街 123 号 附近 的 房屋	芝麻街 123 号 附近 的 房子	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
什么 住房 单元 包含 一个 私人 房间 ， 允许 猫	什么样 的 住房 单元 包含 一个 私人 房间 ， 允许 猫	什么 住房 单位 包含 一个 私人 房间 ， 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
找到 1 月 2 日前 发布 的 住房 单位	查找 1 月 2 日前 张贴 的 住房 单元	寻找 1 月 2 日前 张贴 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
找到 除了 1 月 2 日 以外 的 其他 日期 发布 的 住房 单位	查找 除 1 月 2 日 以外 的 其他 日期 张贴 的 住房 单元	除 1 月 2 日外 ， 其他 日期 张贴 宿舍 告示	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
找到 宠物 友好 的 住房 单位	找到 适合 宠物 居住 的 单元	找到 适合 宠物 居住 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
在 大多数 街区 找到 住房	大多数 社区 都 有 住房	大多数 社区 都 有 住房	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
公寓 每 月租金 1500	每 月租金 1500 英镑 的 公寓	房租 每月 1500 元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 社区 有 私人 浴室	哪些 社区 有带 私人 浴室 的 住房	哪些 社区 有带 私人 浴室 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
2 月 3 日 发布 的 住房	2 月 3 日 张贴 的 房屋	2 月 3 日 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房 单位 是 800 或 1000 平方英尺	800 或 1000 平方英尺 的 住房 单元	面积 为 800 或 1000 平方英尺 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
住房 少于 两个 单位	两套 以下 住房	少于 两个 单位 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
指定 具有 私人 浴室 的 房屋 单元 的 外壳 类型	指定 带有 私人 浴室 的 住房 单元 的 住房 类型	指定 带有 私人 浴室 的 住房 单元 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
房屋 于 1 月 2 日 发布	1 月 2 日 公布 的 房屋	1 月 2 日 公布 的 房屋 价格	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
单位 大于 800 平方英尺	单位 面积 大于 800 平方英尺	面积 超过 800 平方英尺 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
有 私人 房间 的 住房 类型 是 什么	有 私人 房间 的 房子 是 什么 类型 的	什么样 的 房子 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
住房 单位 有 两个 以上 的 街区	有 两个 以上 社区 的 住房 单元	有 两个 以上 社区 的 住宅 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
哪个 住房 单位 面积 为 800 平方英尺	哪 一套 住房面积 为 800 平方英尺	哪个 单位 的 面积 是 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
告诉 我 在 芝麻街 123 日 或 之前 发布 的 房屋	让 我 看看 芝麻街 123 号 当天 或 之前 张贴 的 房屋	请 告诉 我 在 芝麻街 123 号 那天 或 之前 发布 的 房屋信息	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
每 月租金 低于 1500 的 公寓	每 月租金 低于 1500 英镑 的 公寓	月租 低于 1500 元 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
哪个 住宅区 位于 市中心 西部 ， 有 一个 私人 浴室	市中心 西区 的 哪个 住宅 单元 有 私人 浴室	中 城 西部 的 哪个 住宅 单元 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 住房 类型 号码	房屋 型号 是 多少	房屋 类型 号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
哪个 住房 单元 有 各种各样 的 房屋	哪 一套 住房 有 各种各样 的 房子	哪个 单元 有 各种各样 的 房子	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string housing_type ) ) )
住房 与 123 芝麻街 不 一样	与 芝麻街 123 号 不同 的 房屋	那 不是 123 芝麻街 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
用 私人 浴室 命名 住房 单元 附近	说出 有 私人 浴室 的 住宅小区 的 名字	将 带有 私人 浴室 的 住房 单元 的 邻近 区域 命名	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
哪个 区域 的 住房 单位 数量 最 多	哪个 地区 的 住房 数量 最 多	哪个 地区 有 最 多 的 住房 单元	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
住 在 1 月 2 日 发布 的 123 芝麻街	1 月 2 日贴 出 的 芝麻街 123 号 的 房屋 类型	1 月 2 日 发布 的 《 芝麻街 123 号	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
公寓 设有 私人 浴室 ， 可 租用 1500	有 私人 浴室 的 公寓 ， 租金 1500 英镑	1500 元租 一间 带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_bath ) ) )
位于 市中心 西部 的 住房 于 1 月 2 日 发布	1 月 2 日贴 出 的 市中心 西区 的 房屋	这是 1 月 2 日 张贴 在 中西部 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 超过 1500 个 月 或 超过 2000 个 月	1500 个 月 以上 或 2000 个 月 以上 的 住房	超过 1500 个 月 或 2000 个 月 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
住房 单位 在 1 月 2 日 之后 发布	1 月 2 日后 公布 的 住房 单位	1 月 2 日后 公布 的 房屋 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
邻近 123 芝麻街 或 900 任务 大道	芝麻街 123 号 或 Mission   Ave   900 号 附近	附近 有 芝麻街 123 号 ， 使命 大街 900 号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
什么 带 私人 浴室 的 住房 单位 于 1 月 2 日 发布	1 月 2 日贴 出 了 什么 带有 私人 浴室 的 住房 单元	1 月 2 日贴 的 是 什么 带 私人 浴室 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_bath ) ) )
1 月 2 日 在 芝麻街 123 号 的 一个 住房 单元	1 月 2 日贴 出 的 芝麻街 123 号 的 一套 住房	1 月 2 日 在 芝麻街 123 号 张贴 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
同一天 在 123 芝麻街 发布 的 住房	当天 在 芝麻街 123 号 张贴 的 房屋	当天 在 芝麻街 123 号 张贴 的 广告	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 1500 个 月 ， 有 私人 房间	1500 个 月 的 带 私人 房间 的 住房	1500 个 月 的 带 私人 房间 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
允许 狗 的 公寓	允许 养狗 的 公寓	允许 养狗 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string allows_dogs ) ) )
公寓 设有 私人 浴室	带 私人 浴室 的 公寓	带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住房 单位 在 1 月 2 日 发布 了 哪个 社区	1 月 2 日 房屋 单位 贴 的 是 哪个 小区	1 月 2 日 住房 单位 贴 的 是 哪个 小区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
寻找 公寓 或 公寓 的 住房	寻找 公寓 或 公寓式 住房	寻找 公寓 或 公寓 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
在 安静 的 街区 寻找 房屋	在 安静 的 社区 找 房子	在 安静 的 社区 寻找 房子	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
住房 费用 1500 美元 ， 是 800 平方英尺	什么 房子 1500 美元 800 平方英尺	房价 1500 美元 ， 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
住房 单位 有 多 大	住房 有 多 大	房子 有 多 大	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
800 平方英尺 的 单位 ， 每 月租金 1500	800 平方英尺 ， 每 月租金 1500 英镑	单位 面积 800 平方英尺 ， 每 月租金 1500 元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 市中心 西部 的 住房 单位 允许 狗	中西部 允许 养狗 的 住房 单元	中 城西区 允许 养狗 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_dogs ) ) )
住房面积 为 1500 个 月 的 社区	有 1500 个 月 住房 的 社区	有 1500 个 月 住房 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
住房 有 两个 以上 的 社区	有 两个 以上 社区 的 住房	有 两个 以上 邻居 的 房子	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
找到 大于 123 芝麻街 的 住房	找到 比 芝麻街 123 号 还 大 的 房子	找到 大于 123 芝麻街 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
哪个 社区 拥有 最少 的 住房	哪个 社区 的 住房 最少	哪个 社区 的 住房 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
中 城西区 的 哪个 住房 单元 有 一个 私人 房间	市中心 西区 哪套 住房 有 私人 房间	在 中 城西区 ， 哪个 单位 有 私人 房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 住房 单位 与 1 月 发布 的 单位 租金 相同	什么 单位 的 房租 和 1 月 2 日 公布 的 一样	什么 房子 的 租金 和 1 月 2 日 公布 的 是 一样 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 带 私人 浴室 的 公寓	找到 带 私人 浴室 的 公寓	找 有 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
位于 市中心 西区 的 公寓 ， 租金 为 1500	市中心 西区 公寓 ， 租金 1500 英镑	中 城西区 的 公寓 ， 租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪 种 住房 类型 允许 宠物	哪 种 住房 类型 允许 宠物	哪 种 住房 允许 养 宠物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
最 便宜 的 住房	最 便宜 的 房子	便宜 的 住房	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
找到 1500 美元 到 2000 美元 的 住房 单位 作为 租金	找到 1500 到 2000 美元 的 房屋 作为 租金	找 一个 1500 到 2000 美元 的 房子 作为 租金	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
找到 所有 独立式 住房 单位	找到 所有 独立 的 住房 单元	找到 所有 独立 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
在 123   sesame   street 之前 找到 住房 单位	找 芝麻街 123 号 前 张贴 的 房屋 单位	寻找 芝麻街 123 号 之前 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
800 平方英尺 或 更 大 的 房屋	800 平方英尺 或 更 大 的 住房	800 平方英尺 或 更 大 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
位于 市中心 西区 的 住房 单位 ， 月租金 为 1500	中西部 的 住房 单位 ， 月租金 为 1500 英镑	中 城西区 的 一套 住房 ， 月租 1500 元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 住房 单元 的 价格 低于 1500 美元	哪 一套 住房价格 低于 1500 美元	哪 一套 住房 的 价格 低于 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
公寓 租金 在 1500 至 2000 美元 之间	租金 在 1500 到 2000 美元 之间 的 公寓	房租 在 1500 到 2000 美元 之间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
住房 单位 ， 发布 日期 最长	张贴 日期 最长 的 住房 单元	投寄 日期 最多 的 房屋 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 住房 单元 有 一个 私人 房间	哪个 住房 单元 有 私人 房间	哪个 单元 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 或 900 任务 大街 附近	芝麻街 123 号 或 Mission   Ave   900 号 附近 的 住房	住 在 芝麻街 123 号 或者 米团 街 900 号 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
位于 市中心 西部 的 住房 于 1 月 2 日 发布	1 月 2 日贴 出 的 市中心 西区 房屋	1 月 2 日 张贴 在 中西部 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
所 发布 的 住房 单位 发布 于 1 月 2 日	1 月 2 日 张贴 了 什么 住房 单元	什么 住房 单位 贴 的 是 1 月 2 日贴 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string posting_date ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么样 的 房屋 有 私人 浴室	什么样 的 房子 有 私人 浴室	什么样 的 房子 有 私人 浴室 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
哪个 街区 是 123 芝麻街	芝麻街 123 号 在 哪个 街区	芝麻街 123 号 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找到 允许 猫 的 住房	找到 能 让 猫 住 的 房子	找 一个 可以 养猫 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
哪个 住房 单位 有 最 多 的 房屋	哪 一套 房子 的 种类 最 多	哪个 单元 的 住房 种类 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
允许 猫咪 的 住房 ， 包括 一个 私人 房间	允许 猫 居住 的 房屋 ， 包括 一个 私人 房间	允许 猫 居住 的 房子 ， 包括 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
寻找 公寓	寻找 公寓	寻找 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
命名 有 两个 或 更 多 住房 的 社区	命名 有 两个 或 更 多 住房 单元 的 社区	说出 拥有 两个 或 更 多 住房 单元 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
面积 为 800 平方英尺 的 住房 单元 设有 私人 房间	哪 一套 800 平方英尺 的 住房 有 一个 私人 房间	哪个 面积 800 平方英尺 的 单位 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 住房 单位 类似 于 123 芝麻街	哪个 住宅 单元 与 芝麻街 123 号 相似	哪个 住宅 单元 与 123 芝麻街 相似	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) ) )
找到 大小 超过 800 平方英尺 的 住房 单位	找到 面积 大于 800 平方英尺 的 住房 单元	寻找 面积 大于 800 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
哪个 住房 在 1 月 2 日 以外 的 日期 发布	在 1 月 2 日 以外 的 日期 张贴 的 房屋	除了 1 月 2 日 ， 哪间 房子 的 张贴 日期 是 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
什么 街区 有 800 平方英尺 的 单位	什么 社区 有 800 平方英尺 的 单位	什么 社区 有 800 平方英尺 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
什么 住房 单位 有 两个 或 更 多 的 社区	哪个 住房 单元 有 两个 或 两个 以上 的 社区	什么 住房 单位 有 两个 或 两个 以上 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
什么样 的 房屋 类型 是 唯一 的 类型	什么样 的 住房 是 唯一 的	什么样 的 住宅 类型 是 唯一 的 这种 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么样 的 住房 提供 800 平方英尺 ， 允许 猫	什么样 的 房子 能 提供 800 平方英尺 的 面积	什么样 的 房子 能 提供 800 平方英尺 的 面积 ， 还 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_cats ) ) )
位于 市中心 西部 的 公寓	市中心 西 公寓	在 中西部 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
房屋 面积 为 800 平方米 ， 于 1 月 2 日 发布	房屋 面积 800 平方米 1 月 2 日 公布	房屋 面积 800 平方英尺 ， 张贴 于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
住宅 类型 位于 市中心 西部	中西部 地区 的 住房 类型	中西部 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
哪里 有 800 平方米 的 住房 单位 允许 狗	哪里 有 800 平方 收费 的 住房 单位 允许 养狗	哪里 有 允许 养狗 的 800 平方 收费 房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
什么 住房 单位 发布 在 1 月 2 日	1 月 2 日 张贴 的 是 什么 住房 单元	1 月 2 日贴 的 是 什么 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
公寓 出租 在 1500	1500 英镑 出租 公寓	1500 元 的 公寓 出租	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
什么样 的 房屋 可用 1500 个 月	1500 个 月 有 什么样 的 房子	什么样 的 房子 可以 住 1500 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
住房 单元 ， 允许 猫 与 市中心 西部 作为 邻居	允许 猫 在 市中心 西区 居住	允许 猫 以 中城 西部 为 邻居 的 住宅 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
房屋 贴 在 123 芝麻街 后	芝麻街 123 号 后 张贴 房屋	芝麻街 123 号 之后 的 房屋 广告	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 设有 私人 房间 和 浴室	带 私人 房间 和 浴室 的 住房	有 私人 房间 和 浴室 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
什么 是 最 多 的 住房 类型	最 常见 的 住房 类型 是 什么	最多 的 住房 类型 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string housing_type ) ) )
找到 所有 800 平方英尺 的 单位 与 私人 浴室	找到 所有 800 平方英尺 的 带 私人 浴室 的 单元	找到 所有 800 平方英尺 的 单位 与 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 两个 或 更 少 的 街区 找到 住房	在 两个 或 两个 以下 社区 发现 的 住房	两个 或 两个 以下 社区 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
住宿 公寓 设有 私人 浴室	带 私人 浴室 的 住房 公寓	带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
什么样 的 房屋 是 123 芝麻街	芝麻街 123 号 是 什么样 的 房子	芝麻街 123 号 是 什么样 的 房子 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找到 公寓 类型 的 住房 单位	找到 公寓式 的 住房 单元	找到 该 类型 公寓 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
住房 单位 便宜 1500 美元	低于 1500 美元 的 住房 单元	房价 低于 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 至少 1500 个 月 或 至少 2000 个 月	至少 1500 个 月 或 至少 2000 个 月 的 住房	至少 为 1500 个 月 或 2000 个 月 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
排除 与 123 芝麻街 在 同一 街区 的 公寓	不 包括 与 芝麻街 123 号 同一 街区 的 公寓	不 包括 与 芝麻街 123 号 在 同一 街区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
住房 单元 有 一个 私人 房间 ， 允许 猫咪	带 私人 房间 的 住房 单元 ， 允许 猫	住房 单元 有 一个 私人 房间 ， 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
租金 不到 15002000 美元	租金 低于 15002000 美元	租金 低于 15002000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
允许 狗 的 公寓	允许 养狗 的 公寓	允许 养狗 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) )
猫 友好 的 住房	适合 猫 居住	猫 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) )
公寓 租金 比 123 芝麻街 贵	租金 比 芝麻街 123 号 贵 的 公寓	房租 比 123 芝麻街 还贵 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
123 芝麻街 成为 什么 日子	芝麻街 123 号 什么 时候 开始 营业	《 芝麻街 123 号 》 哪 天 开播	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
什么 是 不 属于 西部 市中心 区域 的 单位	哪些 单位 不 属于 市中心 西区	哪些 单位 不 属于 中 城西区 附近	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
在 2 月 2 日 发布 的 住房 单位 位于 市中心 西部	1 月 2 日 张贴 的 是 什么样 的 住房 单元 在 市中心 西区	1 月 2 日 发布 的 房屋信息 是 在 中 城西区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
外壳 类型 少于 2 个 单位	2 套 以下 房型	少于 2 个 单位 的 房屋 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
与 1 月 2 日 公布 的 123 芝麻街 同 类型 的 住宅	与 1 月 2 日贴 出 的 芝麻街 123 号 相同 类型 的 房屋	这 和 1 月 2 日 发布 的 123 芝麻街 是 同一 类型 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
住房 单位 ， 允许 猫	允许 猫	允许 猫 居住 的 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_cats ) ) )
在 市中心 西部 附近 的 宠物 友好 住房	靠近 市中心 西 的 宠物 友好 型 住宅	宠物 友好 型 住房 靠近 中 城 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
住 在 市中心 西区 的 公寓	市中心 西区 的 住房 公寓	在 中 城西区 的 住宅区 里建 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住房 在 1 月 2 日 或 2 月 3 日 之前 发布	1 月 2 日 或 2 月 3 日前 张贴 的 房屋	1 月 2 日 或 2 月 3 日前 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
找到 猫 友好 的 住房 单位 与 私人 浴室	找到 有 私人 浴室 的 适合 猫 居住 的 单元	找到 适合 猫咪 居住 的 带 私人 浴室 的 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_bath ) ) )
附近 有 一个 私人 房间 的 住房	哪个 街区 有带 私人 房间 的 房子	什么 社区 有带 私人 房间 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
安静 的 公寓	安静 的 公寓	安静 的 公寓	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
位于 市中心 西部 的 住房 单位 于 1 月 2 日 发布	1 月 2 日贴 出 的 中西部 的 一套 住房	1 月 2 日 ， 中 城西区 的 一个 住房 单元 被 张贴 出来	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
允许 狗 和 猫 的 住房 单位	允许 狗 和 猫 居住 的 单元	允许 猫 狗 进入 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_cats ) ) )
住房 与 123 芝麻街 一样 的 租金 或 便宜	租金 与 芝麻街 123 号 相同 或 便宜 的 房屋	房租 和 123 芝麻街 一样 或者 更 便宜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
在 jan   2 发布 的 住房 单位 和 123 芝麻街 是 同 一种	1 月 2 日贴 出 的 是 和 芝麻街 123 号 一样 的 房子	1 月 2 日 发布 的 房屋 单位 与 123 芝麻街 同属 一类	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
公寓 或 公寓 单位	公寓 或 公寓 单元	公寓 或 公寓 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
住宅区 位于 市中心 西区 ， 设有 私人 浴室	市中心 西区 配有 私人 浴室 的 住房 单元	住宅 单元 有 一个 私人 浴室 在 中城 西部 地区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_bath ) ) )
住房 有 一个 私人 房间 ， 发布 于 1 月 2 日	1 月 2 日 张贴 的 带有 私人 房间 的 住房	1 月 2 日 张贴 的 带有 私人 房间 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
800 平方英尺 的 公寓 在 哪个 街区	800 平方英尺 的 公寓 在 哪个 街区	800 平方英尺 的 公寓 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
800 平方英尺 的 公寓	800 平方英尺 公寓	800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
住房 不是 800 平方英尺	非 800 平方英尺 的 住房	不是 800 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string ! = ) ( number 800 en.square_feet ) ) )
公寓 于 1 月 2 日 发布	1 月 2 日 张贴 的 公寓	1 月 2 日 张贴 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
两个 社区 附近 的 住房 单位	两个 社区 附近 的 住房 单元	两个 社区 附近 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
1 月 2 日 发布 的 住房 单元	1 月 2 日 公布 的 一套 住房	1 月 2 日 张贴 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
什么 是 公寓 的 门牌号码	公寓 的 门牌号 是 多少	公寓 的 门牌号 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么 住房 单位 发布 在 1 月 2 日	1 月 2 日 张贴 的 是 什么 住房 单元	1 月 2 日贴 的 是 什么 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
什么 是 允许 狗 的 住房 单位 的 住房 类型	什么 是 住房 单元 的 住房 类型 ， 允许 狗	允许 养狗 的 住房 单元 是 什么 类型 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
单位 小于 123 芝麻街	芝麻街 123 号 以下	小于 123 芝麻街 的 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
住房 不是 1500 个 月	不是 1500 个 月 的 住房	不是 1500 个 月 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
1 月 2 日 发布 的 123 芝麻街 住宅 的 典型 住房	1 月 2 日贴 出 芝麻街 123 号 房屋 典型 图	1 月 2 日 发布 的 《 芝麻街 123 号 房屋 》	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么 住房 单位 与 1 月 发布 的 单位 在 同一 街区	1 月 2 日 公布 的 同一 小区 有 哪些 住房 单位	1 月 2 日贴 出 的 是 同一 小区 的 哪个 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
哪个 住房 单元 允许 狗 ， 并 有 私人 浴室 设施	哪 一个 住房 单位 允许 狗 和 有 私人 浴室 设施	哪个 单位 允许 养狗 ， 并 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string has_private_bath ) ) )
哪个 住房 提供 不到 两种 单位	哪 种 住房 提供 的 住房 少于 两种	哪 种 住房 提供 两种 以下 的 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
住房 单位 少于 两个 街区	少于 两个 社区 的 住房 单元	少于 两个 社区 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
附近 至少 有 2 间 公寓	至少 有 两套 公寓 的 社区	至少 有 两套 公寓 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
向 我 展示 800 平方英尺 的 空间 ， 猫 可以 接受	给 我 看看 有 800 平方英尺 空间 的 房子 ， 那里 可以 养猫	请 给 我 一个 800 平方英尺 的 房子 ， 里面 可以 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
这个 公寓 大楼 的 电话号码 是 多少 ？	这个 公寓楼 的 电话号码 是 多少	这个 公寓 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
800 平方英尺 的 住房 单元 与 私人 房间	800 平方英尺 的 住房 单元 ， 带 一个 私人 房间	800 平方英尺 的 住房 单元 ， 带有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
找到 最大 面积 800 平方英尺 的 住房 单位	找到 最大 面积 为 800 平方英尺 的 住房 单元	寻找 最大 面积 为 800 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
在 1 月 2 日 发布 的 123 芝麻街 的 住房	1 月 2 日贴 出 的 芝麻街 123 号 这样 的 房子	比如 1 月 2 日 发布 的 《 芝麻街 123 号 》	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
租金 在 1500 到 2000 美元 之间	租金 在 1500 到 2000 美元 之间	租金 在 1500 到 2000 美元 之间	( call SW.listValue ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) )
找到 住房 是 公寓	找到 公寓式 的 房子	找 一间 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住房 于 1 月 2 日 或 之前 张贴	1 月 2 日 或 之前 张贴 的 房屋	1 月 2 日 或 之前 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 住房 单位 和 123   sesame   st 在 同一个 街区 ， 并于 1 月 2 日 发布	什么 住房 单位 与 芝麻街 123 号 在 同一 小区 ， 1 月 2 日 张贴	1 月 2 日贴 出 的 “ 芝麻街 123 号 ” 所在 小区 的 住房 单元 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
位于 西部 市中心 的 住房 单位 于 1 月 2 日 发布	1 月 2 日 公布 的 中西部 住宅 单元	1 月 2 日 ， 中 城西区 的 房屋 单位 张贴 告示	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 单位 于 1 月 2 日 或 2 月 3 日 发布	1 月 2 日 或 2 月 3 日 公布 的 一套 住房	1 月 2 日 或 2 月 3 日 张贴 的 房屋 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) )
住房面积 为 800 平方英尺 ， 1500 个 月	800 平方英尺 1500 个 月 的 住房	800 平方英尺 ， 1500 个 月 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
什么 类型 的 住房 是 123 芝麻街	芝麻街 123 号 是 什么样 的 房子	芝麻街 123 号 是 什么 类型 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么 住房 有 最 便宜 的 租金	什么 房子 的 租金 最 便宜	什么 房子 的 房租 最 便宜	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
123 芝麻街 的 住房 类型	芝麻街 123 号 住宅 类型	芝麻街 123 号 的 住房 类型	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) )
公寓 设有 私人 客房	有 私人 房间 的 公寓	带 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
800 平方英尺 的 公寓 设有 私人 浴室	800 平方英尺 公寓 ， 带 私人 浴室	800 平方英尺 的 公寓 ， 带 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
公寓 设有 私人 浴室	带 私人 浴室 的 公寓	带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
公寓 设有 主 浴室	带主 浴室 的 公寓	带主 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) )
允许 狗 的 住房 ， 并于 1 月 2 日 张贴	1 月 2 日 张贴 的 允许 养狗 的 房屋	允许 养狗 的 房屋 ， 并于 1 月 2 日 张贴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
哪些 社区 有 狗 友好 的 住房	哪些 社区 有 爱 狗 的 住房	哪些 社区 有 狗狗 友好 型 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
找到 带 私人 房间 的 住房	找到 有 私人 房间 的 住房 单元	寻找 有 私人 房间 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
什么 房屋 是 两个 单元 类型	什么 住房 是 两个 单元 的 类型	什么 房子 是 两 单元式 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
找到 类似 于 123 芝麻街 的 房子	找到 与 芝麻街 123 号 房子 相似 的 房子	找到 和 芝麻街 123 号 的 房子 相似 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ) )
住房 类型 最多 的 单位	大多数 单元 的 住房 类型	住房 类型 最多 的 单位	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么 住房 单位 与 1 月 发布 的 单位 大小 相同	什么 住房 单位 与 1 月 2 日 公布 的 单位 面积 相同	什么 住房 单位 和 1 月 2 日贴 的 一样 大	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
位于 市中心 西区 的 住宅 有 私人 浴室	市中心 西区 哪栋 房子 有 私人 浴室	在 中城 西部 哪个 房子 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 区域 有 两个 以上 的 住房 单位	哪个 地区 有 两套 以上 的 住房	哪个 地区 有 两个 以上 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
1 月 2 日 或 之后 发布 的 住房	1 月 2 日 或 以后 公布 的 住房	1 月 2 日 或 以后 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
1 月 2 日 发布 的 住房 单元 是 哪个 社区	1 月 2 日贴 的 那套 房子 是 哪个 小区 的	1 月 2 日贴 的 是 哪个 小区 的 住房 单位 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
住宅小区 靠近 市中心 西区	市中心 西 附近 的 住房 单元	靠近 中 城 西部 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
猫咪 友好 的 公寓 ， 私人 房间	带 私人 房间 的 爱 猫 公寓	带 私人 房间 的 猫咪 友好 型 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
住房 单元 ， 面积 为 800 或 1000 平方英尺	面积 为 800 或 1000 平方英尺 的 住房 单元	面积 为 800 或 1000 平方英尺 的 住宅 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
列出 所有 小于 800 平方英尺 的 房屋	列出 所有 小于 800 平方英尺 的 住房	列出 所有 小于 800 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
在 1 月 2 日 或 2 月 3 日 之后 发布 的 住房	1 月 2 日 或 2 月 3 日后 张贴 的 房屋	1 月 2 日 或 2 月 3 日 之后 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
两个 住房 单元 是 什么样 的 住房	这 两套 房子 是 什么样 的	这 两个 住房 单元 是 什么样 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
123 芝麻街 的 租金 是 多少 个 月	芝麻街 123 号 的 房租 是 多少 钱 一个月	芝麻街 123 号 一个月 的 租金 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
哪个 住房 不 超过 123 芝麻街	哪个 房子 不 大于 芝麻街 123 号	哪个 房子 不 大于 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
公寓 设有 私人 浴室	带 私人 浴室 的 公寓	带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
寻找 不是 公寓 的 住房	寻找 不是 公寓 的 房子	寻找 不是 公寓 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
最 稀有 的 房屋 类型	最 稀有 的 住房 类型	稀有 的 房屋 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 少于 两个 街区	在 不到 两个 街区 发现 的 房屋	不到 两个 社区 有 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
公寓 设有 主卧室 和 私人 浴室	带 主卧室 和 私人 浴室 的 公寓	带有 主卧室 和 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
哪个 住房 单位 的 租金 为 每月 1500 美元 或 2000 美元	哪个 住房 单位 每 月租金 1500 美元 或 2000 美元	哪个 单元 的 房租 是 每月 1500 美元 还是 2000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
什么 中 城西区 住房 允许 猫	市中心 西区 的 房子 允许 猫	什么 是 midtown   west 住房 允许 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
在 1 月 2 日 发布 的 住房 单位 与 123 芝麻街 的 面积 相同	1 月 2 日贴 出 的 房屋 单位 面积 与 芝麻街 123 号 相同	1 月 2 日 发布 的 住房 单元 大小 和 123 芝麻街 一样	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
有 800 平方英尺 住房 的 社区	拥有 800 平方英尺 住房 的 社区	拥有 800 平方英尺 住房 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
寻找 一个 安静 的 社区	寻找 一个 安静 的 社区	寻找 一个 安静 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单位 800 平方英尺 或 1000 平方英尺	800 平方英尺 或 1000 平方英尺 的 住房 单元	800 平方英尺 或 1000 平方英尺 的 住房 单位	( call SW.listValue ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) )
住房 有 2 个 周边 社区	有 两个 周边 社区 的 住房	周边 有 两个 社区 的 房子	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
找到 1 月 2 日 发布 的 公寓	查找 1 月 2 日 发布 的 公寓	寻找 1 月 2 日 张贴 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪些 社区 有 允许 狗 的 住房	哪些 社区 有 允许 狗 居住 的 地方	哪些 社区 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
123 芝麻街 发布 之前 发布 的 公寓	芝麻街 123 号 前 张贴 的 公寓	芝麻街 123 号 之前 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
宠物 友好 800 平方英尺 的 住房 单位	宠物 友好 型 800 平方英尺 住房 单元	宠物 友好 型 800 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
住房面积 不 超过 800 平方英尺	800 平方英尺 及 以下 的 房屋	800 平方英尺 或 以下 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
在 市中心 西部 的 住房 单位 ， 允许 狗	市中心 西区 的 住房 单元 ， 允许 养狗	住宅 单元 在 中城 西部 ， 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_dogs ) ) )
面积 为 800 平方英尺 的 住房 单位 每 月租金 为 1500 美元	哪 一套 800 平方英尺 的 住房 每 月租金 1500 美元	哪 一套 面积 800 平方英尺 的 房子 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
猫 友好 的 公寓 ， 租金 在 1500	爱猫 公寓 ， 租金 1500 英镑	适合 养猫 的 公寓 ， 租金 1500 英镑	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
住 在 1 月 2 日 的 房屋 允许 狗	1 月 2 日 张贴 的 允许 狗 进入 的 房屋	1 月 2 日 张贴 的 允许 养狗 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
寻找 公寓	寻找 公寓	寻找 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
2 月 2 日 发布 的 住房 单位 是 多少	1 月 2 日 公布 的 住房面积 是 多少	1 月 2 日 公布 的 住房面积 是 多少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
带 私人 浴室 的 公寓	带 私人 浴室 的 住房 公寓	带有 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
哪个 住房 的 月租金 为 1500 美元	哪个 房子 每 月租金 1500 美元	哪个 房子 的 月租 是 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 相同 大小 的 123 芝麻街 的 住房 单位	在 芝麻街 123 号 找到 同样 大小 的 住房	找到 和 123 芝麻街 一样 大小 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
允许 狗 的 住房 ， 并于 1 月 2 日 张贴	1 月 2 日 张贴 的 允许 养狗 的 房屋	允许 养狗 的 房屋 ， 并于 1 月 2 日 张贴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_dogs ) ) )
住房 单位 于 1 月 2 日 发布	1 月 2 日 公布 的 出租 住房 单位	房屋出租 单位 于 一月 二日 公布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 123 芝麻街 之前 或 同一天 发布 的 住房 单位	查找 在 芝麻街 123 号 之前 或 同一 日期 张贴 的 住房 单元	在 “ 芝麻街 123 号 ” 之前 或 当天 发布 的 房屋信息	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
什么 是 平均 找到 800 平方英尺 的 住房 单位 ， 允许 猫	平均 能 找到 800 平方英尺 的 住房 单位	800 平方英尺 的 房子 平均 能 容纳 多少 只 猫	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
住房 每 月租金 至少 1500	每 月租金 至少 1500 英镑 的 住房	每月 至少 租 1500 元 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
公寓 于 1 月 2 日 发布	1 月 2 日 公布 的 公寓	公寓 张贴 于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
找 我 一个 房子 单位 ， 收取 1500 出租 和 私人 浴室	给 我 找 一套 租金 1500 英镑 ， 有 私人 浴室 的 房子	给 我 找 一套 1500 元 的 房子 ， 里面 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_room ) ) )
1500 个 月租金 是 800 平方英尺	其中 1500 个 月 的 租金 是 800 平方英尺	哪 1500 个 月租金 是 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 住房 单元 允许 猫 在 里面	哪个 住房 单元 允许 猫 进入	哪个 房屋 单位 允许 猫 进入	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_cats ) ) )
一个 少于 两个 房屋 的 社区	只有 不到 两套 房子 的 街区	一个 少于 两套 住房 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 不 超过 两个 住房 单位	不 超过 两套 住房 的 住房	不 超过 两个 住房 单元 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
有 多少 街区	有 多少 个 社区	有 多少 社区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
这个 单位 在 123 芝麻街 有 多 大	芝麻街 123 号 的 单位 有 多 大	芝麻街 123 号 有 多 大	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
公寓 出租 低于 1500	租金 低于 1500 英镑 的 公寓	出租 的 公寓 低于 1500 套	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
狗 友好 的 住房	爱犬 住宅	狗 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
哪个 住房 单位 比 123 芝麻街 更贵	哪个 房子 比 芝麻街 123 号 贵	哪个 单元 的 房价 比 123 芝麻街 还贵	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
住房 单位 至少 与 123 芝麻街 的 住房 单位 面积 相同	面积 至少 与 芝麻街 123 号 房屋 相同 的 房屋 单位	至少 与 芝麻街 123 号 的 住房面积 相同 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
123 芝麻街 有 哪些 住房 可 供选择	芝麻街 123 号 有 什么样 的 房子	芝麻街 123 号 提供 什么样 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
什么 住房 单位 允许 猫 张贴 在 1 月 2 日	1 月 2 日 公布 了 哪些 住房 单位 允许 养猫	1 月 2 日 发布 了 什么 住房 单位 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_cats ) ) )
住房 单位 有 2 种 类型 的 住房	两种 住房 类型 的 住房 单元	住房 单元 有 两种 类型 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
找到 带 私人 浴室 的 住房 单位	提供 带 私人 浴室 的 住房 单元	找到 带有 私人 浴室 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
最小 可用 单位	最小 可用 单位	可用 最小 的 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string size ) ) ) )
住房 允许 猫咪 的 公寓	允许 猫 居住 的 公寓	允许 养猫 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
单位 在 1 月 2 日 之前 发布	1 月 2 日前 公布 的 单位	单位 在 1 月 2 日 之前 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
什么 房子 有 私人 房间 张贴 2 日	1 月 2 日贴 出 了 什么 有 私人 房间 的 房子	1 月 2 日贴 出 了 什么样 的 带 私人 房间 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
一个 最多 有 两个 房屋 的 社区	最多 有 两套 房子 的 街区	一个 最多 有 两个 住宅 单元 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪 种 房屋 每 月租金 为 1500 美元	哪 种 房子 每 月租金 1500 美元	哪 种 房子 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
住房 单位 的 发布 日期 少于 123 芝麻街	张贴 日期 小于 芝麻街 123 号 的 房屋 单位	投寄 日期 少于 芝麻街 123 号 的 房屋 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 单位 每月 的 平均 租金 是 多少 ？	一套 住房 每月 的 平均 租金 是 多少	每个 月 的 平均 租金 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ) ) )
住房 比 1500 个 月 便宜	低于 1500 个 月 的 住房	比 1500 个 月 还 便宜 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
公寓 大楼 最多 的 单位	公寓楼 最 多	拥有 最 多 单元 的 公寓 综合体	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( string housing_type ) ) )
在 1 月 2 日 之后 或 2 月 3 日 之后 发布 的 住房	1 月 2 日后 或 2 月 3 日后 张贴 的 房屋	1 月 2 日后 或 2 月 3 日后 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房面积 比 123 芝麻街 更 多	面积 超过 芝麻街 123 号 的 房屋	比 123 芝麻街 还 大 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
住房面积 不到 800 平方英尺	小于 800 平方英尺 的 住房	面积 不足 800 平方英尺 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
带 一种 外壳 类型 的 住房 单元	一种 住房 类型 的 住房 单元	一种 住房 类型 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
两个 住房 单元	两个 住房 单元	两室 一 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( number 2 ) ) )
住房面积 为 800 平方英尺 ， 包括 私人 浴室	800 平方英尺 的 住房 ， 包括 一个 私人 巴哈	800 平方英尺 的 房子 ， 包括 一个 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
什么 住房 使用 发布 在 1 月 2 日有 一个 私人 浴室	1 月 2 日 张贴 的 房屋 用途 有 私人 浴室	1 月 2 日贴 的 是 什么 房子 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 1 月 2 日 发布 的 所有 住房 单位	查找 1 月 2 日 张贴 的 所有 住房 单元	查找 所有 张贴 于 一月 二日 的 房屋 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 远离 市中心 西部 的 住房 单位	找到 远离 市中心 西部 的 住房 单元	寻找 远离 中 城 西部 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
800 英尺 的 公寓 设有 私人 房间	带 私人 房间 的 800 英尺 公寓	800 英尺 的 公寓 ， 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
住房 至少 800 平方英尺 或 至少 1000 平方英尺	至少 800 平方英尺 或 至少 1000 平方英尺 的 住房	至少 800 平方英尺 或 至少 1000 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
住房 单位 是 一个 公寓	公寓式 住房 单元	指 公寓 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string housing_type ) ( string = ) en.housing.apartment ) )
找到 123 芝麻街 同一 住房 类型 的 住房 单位	找到 芝麻街 123 号 同一 户型 的 住房	在 同一 住宅 类型 的 123 芝麻街 找到 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) ) )
找到 有 私人 房间 的 住房 单位 ， 每 月租金 1500 美元	找 有 私人 房间 的 住房 ， 每 月租金 1500 美元	找 一间 有 私人 房间 的 房子 ， 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 尺寸 小于 800 平方英尺 的 住房 单位	找到 面积 小于 800 平方英尺 的 住房 单元	寻找 面积 少于 800 平方英尺 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
公寓 的 租金 比 123 芝麻街 便宜	租金 比 芝麻街 123 号 便宜 的 公寓	租金 比 123 芝麻街 便宜 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
哪个 住房 单元 的 面积 大 800 平方英尺 或 1000 平方英尺	哪 一套 住房面积 大 800 平方英尺 或 1000 平方英尺	哪个 单位 面积 大 800 平方英尺 或 1000 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
找到 不到 1500 美元 的 住房	找 不到 1500 美元 的 房子	找 不到 1500 美元 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
800 平方英尺 的 公寓 设有 私人 房间	800 平方英尺 公寓 ， 带 私人 房间	800 平方英尺 ， 带 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
小于 123 芝麻街 的 公寓	小于 芝麻街 123 号 的 公寓	比 芝麻街 123 号 还 小 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
这是 大多数 住房 单位 共享 的 社区	这是 大多数 住房 单位 所 共有 的 小区	哪个 社区 的 住房 单元 数最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 与 123 芝麻街 一样 的 租金	租金 与 芝麻街 123 号 相同 的 房屋	与 芝麻街 123 号 的 租金 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
公寓 于 1 月 2 日 发布	1 月 2 日 张贴 的 公寓	1 月 2 日 张贴 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 允许 猫 进去	哪个 住房 单元 允许 猫 进入	哪个 房屋 单位 允许 猫 进入	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) )
住房 有 私人 浴室 的 社区	有 私人 浴室 的 住宅区	有 私人 浴室 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
住房 单元 与 123 芝麻街 的 住房 类型 相同	与 芝麻街 123 号 房屋 类型 相同 的 房屋 单元	与 123 芝麻街 相同 户型 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string housing_type ) ) ) )
哪个 住房 单元 的 尺寸 最小	哪 一套 住房面积 最小	哪个 单元 的 面积 最小	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string size ) ) ) )
123 芝麻街 是 什么样 的 住房	芝麻街 123 号 是 什么样 的 房子	芝麻街 123 号 是 什么样 的 房子 啊	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
住房 单位 于 1 月 2 日 发布 ， 与 123   sesame   st 相同	1 月 2 日 公布 的 房屋 单位 ， 与 芝麻街 123 号 相同	住房 单位 张贴 在 1 月 2 日 ， 这是 一样 大小 的 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string size ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单元 属于 公寓 类型 ， 设有 私人 房间	哪 种 住房 属于 有 私人 房间 设施 的 公寓 类型	哪 一种 住房 单元 属于 带有 私人 房间 设施 的 公寓 类型	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
住 在 一个 大于 两个 房子 的 社区	两栋 以上 的 邻居 的 住房	比 两栋 房子 还 大 的 住宅区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
房屋 面积 超过 800 平方英尺 或 超过 1000 平方英尺	超过 800 平方英尺 或 超过 1000 平方英尺 的 住房	超过 800 平方英尺 或 1000 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
住房 不是 公寓	不是 公寓 的 住房	房子 不是 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
什么 是 罕见 的 住房 类型	什么 是 罕见 的 住房 类型	什么 是 罕见 的 住房 类型	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
命名 具有 多个 此类 住房 单元 的 住房 类型	列出 有 多个 该 类型 住房 单元 的 住房 类型	命名 具有 该 类型 的 多个 住房 单元 的 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单位 与 私人 房间	带 私人 房间 的 住房 单元	带有 私人 房间 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) )
找到 1 月 2 日 发布 的 住房 单位 ， 有 一个 私人 房间	找到 1 月 2 日贴 出 的 有 私人 房间 的 住房 单元	找 一个 1 月 2 日 张贴 的 有 私人 房间 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
寻求 公寓 或 公寓	寻找 公寓 或 公寓	寻找 公寓 或 公寓	( call SW.listValue ( call SW.concat en.housing.apartment en.housing.condo ) )
1500 个 月租金 是 狗 友好 的	有 1500 个 月 的 租房 是 爱 狗 的	哪 1500 个 月租金 是 狗 友好 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
住房 不 在 市中心 西部	住宅 不 在 市中心 西	住房 不是 在 中西部	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
该 地区 的 哪个 住房 单位 允许 猫咪	该 地区 哪 一个 住房 单位 允许 猫	这个 地区 的 哪个 单位 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
住房 有 私人 房间 ， 发布 于 1 月 2 日	1 月 2 日 张贴 的 带 私人 房间 的 住房	1 月 2 日 张贴 的 带有 私人 房间 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
什么 是 最 常用 的 住房 类型	最 常用 的 住房 类型 是 什么	最 常用 的 住房 类型 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 住房 单位 面积 较大	哪 一套 住房面积 更大	按 面积 计算 ， 哪个 住房 单元 比较 大	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
什么 住房 单位 允许 狗 被 发布 在 1 月 2 日	1 月 2 日 什么 住房 单位 允许 养狗	1 月 2 日 发布 了 允许 养狗 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_dogs ) ) )
什么 是 123 芝麻街 的 住房 类型	芝麻街 123 号 的 房屋 类型 是 什么	123 芝麻街 的 住房 类型 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
狗 友好 的 住房 ， 800 平方英尺	800 平方英尺 的 爱 狗 房屋	800 平方英尺 的 狗 屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
找到 800 平方英尺 的 住房 单位 ， 对 猫 友好	找到 800 平方英尺 适合 猫 居住 的 单元	找到 800 平方英尺 的 适合 猫咪 居住 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
什么 是 公寓 的 住房 单位	公寓 的 住房 单元 附近 是 什么 地方	公寓 的 住房 单元 的 邻域 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
哪个 住房 最多 由 两个 单元 组成	哪 种 住房 最多 由 两个 单元 组成	哪 种 房屋 最 多 包含 两个 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
什么 是 住房 单位 大小	那套 住房 的 面积 是 多少	房子 的 面积 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
找到 800 平方英尺 的 住房 单位	找到 800 平方英尺 大小 的 住房 单元	找到 800 平方英尺 大小 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 房屋 在 芝麻街 123 号 张贴 了 2 号	哪个 房子 1 月 2 日 在 芝麻街 123 号	1 月 2 日 在 芝麻街 123 号 的 哪个 频道	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string posting_date ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找 一个 800 平方英尺 的 公寓	找 一间 800 平方英尺 的 公寓	找 一个 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
123 芝麻街 的 租金 是 多少 ？	芝麻街 123 号 的 租金 是 多少	123 芝麻街 的 租金 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
市中心 西部 单位 ， 每 月租金 1500	市中心 西 公寓 ， 每 月租金 1500 英镑	西区 单位 ， 每 月租金 1500 元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
猫 友好 的 公寓 设有 私人 浴室	带 私人 浴室 的 爱 猫 公寓	带 私人 浴室 的 猫咪 友好 型 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_cats ) ) )
列出 所有 住房 至少 800 或 1000 平方英尺	列出 我们 居住 的 所有 面积 至少 为 800 或 1000 平方英尺 的 房屋	列出 所有 至少 800 或 1000 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
仅 显示 800 平方英尺 的 社区 单位	仅 显示 800 平方英尺 的 邻里单位	只 显示 800 平方英尺 的 社区 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
在 哪里 找到 最多 的 住房 单位	在 哪里 找到 的 住房 数量 最 多	哪里 有 最 多 的 住房 单元	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
在 市中心 西区 找到 住房 单位 ， 每 月租金 1500 美元	在 市中心 西区 找 房子 ， 每 月租金 1500 美元	在 中 城西区 的 社区 找 一套 月租 1500 美元 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
哪个 社区 拥有 最多 的 公寓 大楼	哪个 街区 的 公寓楼 最 多	哪个 街区 有 最 多 的 公寓 大楼	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
猫 友好 的 住房 与 私人 房间	带 私人 房间 的 适合 猫 居住 的 房屋	猫 友好 的 住房 与 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
住房 与 私人 房间 的 社区	有 私人 房间 的 住宅区	有 私人 房间 的 住宅区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
住房 单位 最多 2 个 街区	最多 2 个 社区 内 的 住房 单元	最多 2 个 社区 内 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
哪个 住房 单元 位于 市中心 西部 附近	市中心 西区 有 哪些 住房 单元	在 中 城西区 附近 有 哪些 单位 可 供 出租	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 时候 被 123 芝麻街 贴 了	芝麻街 123 号 是 什么 时候 贴 的	芝麻街 123 是 什么 时候 发布 的	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
什么 住房 单位 有 两种 或 更 多 的 住房 类型	什么 住房 单元 有 两种 或 两种 以上 的 住房 类型	什么 住房 单位 有 两种 或 两种 以上 的 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string > ) ( number 2 ) ) )
告诉 我 在 市中心 西部 或 切尔西 的 住房	带我去 市中心 西区 或 切尔西 看看 房子	告诉 我 在 中 城西区 或 切尔西 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
什么样 的 住房 是 123 芝麻街 或 900 任务 大道	芝麻街 123 号 或 Mission   Ave   900 号 是 什么样 的 房子	芝麻街 123 号 和 使命 大街 900 号 是 什么样 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
找到 800 平方英尺 的 住房 ， 位于 市中心 西区	在 市中心 西区 找到 800 平方英尺 大小 的 住房	在 中 城西区 找到 800 平方英尺 大小 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 住房 单元 有 公寓 类型 的 房子 ， 面积 为 800 平方英尺	哪 一套 房子 有 800 平方英尺 的 公寓式 房子	哪个 单元 有 面积 为 800 平方英尺 的 公寓式 住宅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 在 1 月 2 日 或 之前 张贴	1 月 2 日 或 之前 张贴 哪 一套 住房	1 月 2 日 或 之前 张贴 的 房屋 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
公寓 或 公寓 住房	公寓 或 公寓	公寓 或 公寓	( call SW.listValue ( call SW.concat en.housing.apartment en.housing.condo ) )
告诉 我 有 私人 房间 的 地方 ， 欢迎 猫咪	给 我 看看 有 私人 房间 的 地方 ， 那里 欢迎 猫	带我去 一些 有 私人 房间 的 地方 ， 那里 欢迎 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 附近	芝麻街 123 号 附近 的 住房	芝麻街 123 号 附近 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) ) )
有 多少 住房 单位	有 多少 套 住房	有 多少 个 住房 单元	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 住房 单位 在 123 芝麻街 的 发布 日期 之前 发布	芝麻街 123 号 张贴 日期 前 张贴 的 是 哪 一套 住房	在 芝麻街 123 号 的 投寄 日期 前 投寄 的 单位 是 哪 一个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 单位 1 月 2 日 和 123 芝麻街 同样 的 租金	房屋 单位 1 月 2 日 公布 ， 租金 与 芝麻街 123 号 相同	住房 单位 1 月 2 日 公布 的 租金 与 《 芝麻街 123 号 》 相同	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string rent ) ) ( string = ) en.housing_unit.123_sesame_street ) )
用 两种 或 更少 种类 的 单位 建造	两种 或 两种 以下 单位 的 建筑物	用 两种 或 更少 种类 的 部件 建造	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string <= ) ( number 2 ) ) )
平均 大小 的 单位	平均 尺寸 单位	平均 尺寸 单位	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
什么 街区 是 123 芝麻街	芝麻街 123 号 在 哪个 街区	芝麻街 123 号 在 哪个 街区	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) )
对 狗 友好 的 公寓	爱狗 公寓	对 狗 友好 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
哪个 住房 单元 的 房屋 种类 最少	哪 一套 房子 的 种类 最少	哪个 单元 的 房屋 种类 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
住房 单位 允许 猫 和 每月 1500 租金	允许 猫 和 每月 收取 1500 租金 的 住房 单位	允许 养猫 并 每月 收取 1500 英镑 租金 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
公寓 出租 在 1500	1500 英镑 出租 公寓	1500 元 的 公寓 出租	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪 种 类型 的 房屋 有 私人 浴室	哪 种 类型 的 房子 有 私人 浴室	什么样 的 房子 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
狗 友好 800 平方英尺 的 公寓	爱狗 800 平方英尺 公寓	狗 友好 型 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
住宅 位于 市中心 西部 ， 设有 私人 房间	市中心 西区 有 一间 私人 房间 的 住房	在 中城 西部 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
名称 123 芝麻 街道 类型 以外 的 住房 类型	除了 芝麻街 123 号 以外 的 其他 住宅 类型	除 123 芝麻街 类型 外 ， 其他 房屋 类型 的 名称	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
住房 单位 最多 800 平方英尺	住房 单元 最多 800 平方英尺	住宅 单元 最多 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
住房 单位 于 1 月 2 日 在 任何 街区 张贴	1 月 2 日 在 任何 一个 社区 张贴 的 住房 单元	1 月 2 日 在 任何 社区 张贴 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
哪个 市中心 西部 住房 有 800 平方英尺	哪个 中西部 的 房子 有 800 平方英尺	哪个 中 城西区 的 房子 有 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 住房 的 发布 时间 不早 于 1 月 2 日 或 3 月 3 日	哪栋 房子 不早 于 1 月 2 日 或 2 月 3 日	哪些 房屋 发布 的 时间 不早 于 1 月 2 日 或 2 月 3 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房 单位 小于 800 平方英尺	小于 800 平方英尺 的 住房 单元	小于 800 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
哪个 房屋 贴 1 月 2 日 允许 狗	1 月 2 日 公布 的 哪个 房屋 允许 养狗	1 月 2 日 哪些 房屋 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
位于 市中心 西区 的 800 平方英尺 的 公寓	市中心 西 800 平方英尺 公寓	800 平方英尺 的 公寓 在 中城 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
狗 友好 的 公寓	爱狗 公寓	狗 友好 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
告诉 我 住房 有 私人 浴室 ， 允许 猫咪	给 我 看看 有 私人 浴室 和 允许 猫 住 的 房子	请 告诉 我 哪些 房子 有 私人 浴室 ， 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_cats ) ) )
住房面积 小于 800 平方英尺 或 小于 1000 平方英尺	小于 800 平方英尺 或 小于 1000 平方英尺 的 住房	小于 800 平方英尺 或 小于 1000 平方英尺 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
住房面积 超过 800 平方英尺	超过 800 平方英尺 的 住房	超过 800 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string ! = ) ( number 800 en.square_feet ) ) )
带 私人 浴室 的 公寓	带 私人 浴室 的 公寓	带 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_bath ) ) )
哪个 住房 单位 类似 于 123 芝麻街 或 900 个 任务 大道	哪个 住宅 单元 类似 于 芝麻街 123 号 或 Mission   Ave   900 号	哪个 住宅 单元 像 芝麻街 123 号 ， 哪个 像 使命 大街 900 号	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) ) )
什么 是 带 私人 房间 的 住房 单元 的 房屋 类型	有 私人 房间 的 住房 单元 的 住房 类型 是 什么	带有 私人 房间 的 住房 单元 的 住房 类型 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
面积 为 800 平方英尺 的 住房 单元 设有 私人 房间	哪 一套 面积 为 800 平方英尺 的 住房 有 一个 私人 房间	面积 为 800 平方英尺 的 住房 单位 中 ， 哪 一个 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_room ) ) )
西郊 或 切尔西 的 社区	市中心 西区 或 切尔西 区	社区 中 城西 或 切尔西	( call SW.listValue ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) )
住房 于 1 月 2 日 或 2 月 3 日 发布	1 月 2 日 或 2 月 3 日 公布 的 房屋	1 月 2 日 或 2 月 3 日 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) )
住房 单位 的 发布 日期 大于 123 芝麻街 的 日期	张贴 日期 大于 芝麻街 123 号 的 房屋 单位	居住 单位 的 投寄 日期 大于 芝麻街 123 号 的 投寄 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
800 平方英尺 的 公寓 ， 允许 猫	800 平方英尺 的 公寓 允许 猫	800 平方英尺 的 公寓 ， 可以 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_cats ) ) )
什么 住房 单位 有 一个 私人 房间 发布 在 1 月 2 日	1 月 2 日贴 出 了 什么 有 私人 房间 的 住房 单元	1 月 2 日贴 出 的 是 什么 样板房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
什么 住房 单位 有 两种 住房 类型	什么 住房 单元 有 两种 住房 类型	什么 住房 单位 有 两种 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( number 2 ) ) )
什么 住房 单位 在 市中心 东区	在 市中心 东区 有 什么 住房 ？	什么 住房 单位 是 发现 在 中 城东 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
找到 123 芝麻街 后 发布 的 住房 单位	找 芝麻街 123 号 后 张贴 的 房屋 单位	寻找 芝麻街 123 号 之后 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
告诉 我 公寓 和 公寓	给 我 看看 公寓 和 公寓	带 我 看看 公寓 和 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.concat en.housing.apartment en.housing.condo ) ) )
一个 带 私人 浴室 的 住房 单元 ， 于 1 月 2 日 发布	1 月 2 日 张贴 的 带有 私人 浴室 的 住房 单元	1 月 2 日 张贴 的 带有 私人 浴室 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
宠物 友好 住房 ， 租金 1500 美元	宠物 友好 型 住房 ， 租金 1500 美元	宠物 友好 型 住房 ， 1500 美元 的 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
什么 住房 与 1 月 2 日 发布 的 住房 类型 相同	什么样 的 房子 和 1 月 2 日 公布 的 房子 是 同一 类型 的	什么 房子 和 1 月 2 日贴 的 房子 是 同一 类型 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
想要 一个 类似 123 芝麻街 的 住房 类型	想要 像 芝麻街 123 号 这样 的 房子	想要 芝麻街 123 号 那样 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
每月 123 芝麻街 的 租金 是 多少 ？	芝麻街 123 号 每 月租金 多少	芝麻街 123 号 每个 月 的 租金 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
哪个 房屋 贴 1 月 2 日 允许 猫	1 月 2 日 公布 的 哪些 房屋 允许 猫	1 月 2 日 哪些 房屋 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
位于 市中心 西部 的 公寓 设有 私人 房间	市中心 西区 有 一间 私人 房间 的 公寓	在 中城 西部 的 公寓 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
带 私人 房间 的 住房 单元 的 附近 区域 是 什么 ？	有 私人 房间 的 住房 单元 附近 是 什么 地方	有 私人 房间 的 住房 单元 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
找到 租金 1500 至 2000 美元 的 住房	找到 租金 在 1500 到 2000 美元 之间 的 房子	找到 租金 在 1500 到 2000 美元 之间 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) )
有 私人 房间 的 单位	有 私人 房间 的 单位	有 私人 房间 的 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_room ) ) )
住 在 123 芝麻街 前 的 房屋	芝麻街 123 号 前 张贴 房屋	芝麻街 123 号 之前 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
住房 允许 在 1 月 2 日 张贴 的 猫	1 月 2 日 公布 的 允许 猫 居住 的 房屋	1 月 2 日 张贴 的 允许 养猫 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string allows_cats ) ) )
住房 1 月 2 日 发布 ， 包括 一个 私人 房间	1 月 2 日 公布 的 住房 ， 包括 一个 私人 房间	住房 张贴 1 月 2 日 ， 其中 包括 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string has_private_room ) ) )
单位 大于 800 平方英尺	单位 面积 大于 800 平方英尺	面积 超过 800 平方英尺 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string > ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
告诉 我 住房 每月 1500 美元 或 更少	给 我 看看 每月 1500 美元 以下 的 住房	给 我 看 一下 月租 1500 美元 或 更 少 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 单位 ， 发布 日期 最短	最小 张贴 日期 的 住房 单元	最少 投寄 日期 的 房屋 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
查找 发布 日期 为 1 月 2 日至 2 月 3 日 的 住房 单位	查找 张贴 日期 在 1 月 2 日至 2 月 3 日 之间 的 住房 单元	寻找 投寄 日期 在 一月 二日 至 二月 三日 之间 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
哪个 住房 单位 张贴 2 日	哪个 住房 单元 1 月 2 日 公布	1 月 2 日 是 哪个 单位 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
单元 有 一种 外壳 类型	一种 外壳 类型 的 单元	一种 住房 类型 的 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string < ) ( number 2 ) ) )
找到 与 123   sesame   street 或 更 晚 的 日期 相同 的 住房 单位	查找 与 芝麻街 123 号 或 更 晚 日期 相同 的 住房 单元	找到 与 芝麻街 123 号 或 更 晚 的 日期 相同 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
在 123 芝麻街 种类 的 1 月 2 日 刊登 的 住房	芝麻街 123 号 1 月 2 日 张贴 的 房屋	1 月 2 日 发布 的 《 芝麻街 123 号 》	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string posting_date ) ) ( string = ) en.housing_unit.123_sesame_street ) )
123 芝麻街 的 月租金 是 多少 ？	芝麻街 123 号 的 月租 是 多少	芝麻街 123 号 的 月租 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) )
什么 是 123 芝麻街 的 面积	芝麻街 123 号 的 面积 是 多少	123 芝麻街 的 面积 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
租金 1500 以上 的 公寓	租金 在 1500 英镑 以上 的 公寓	房租 在 1500 元 以上 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 1500 个 月 或 2000 个 月	1500 个 月 或 2000 个 月 的 住房	是 1500 个 月 还是 2000 个 月	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) )
什么 是 在 西部 市中心 的 社区 发现 的 住房 类型	市中心 西区 有 哪些 住宅 类型	中 城西区 的 社区 有 哪些 类型 的 住宅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
公寓 介于 800 至 1000 平方英尺 之间	800 到 1000 平方英尺 的 公寓	面积 在 800 到 1000 平方英尺 之间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
找到 一个 不 超过 800 平方英尺 的 房屋	找 一个 不 超过 800 平方英尺 的 房子	找 一个 不 超过 800 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
一个 住房 单元 ， 包括 两种 以上 的 住房 类型	包含 两种 以上 住房 类型 的 住房 单元	包括 两种 以上 住房 类型 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string > ) ( number 2 ) ) )
住房 单位 有 少量 住房	少量 住房 的 住房 单元	带有 少量 住房 单元 的 住房	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
哪个 住房 单元 最多 有 两种 住房 类型	哪 种 住房 单元 最多 有 两种 住房 类型	哪个 住房 单元 最多 有 两种 住房 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string <= ) ( number 2 ) ) )
什么 住房 单位 在 1 月 2 日 发布 的 月租金 为 1500 美元	1 月 2 日贴 出 的 哪套 房子 月租 1500 美元	1 月 2 日贴 出 的 房屋 单位 月租 1500 元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
住房 单位 ， 发布 日期 为 1 月 2 日	最迟 1 月 2 日 公布 日期 的 住房 单元	房屋 单位 ， 截邮 日期 最迟 为 一月 二日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
寻找 一个 私人 浴室 和 狗 友好 的 单位	寻找 一个 有 私人 浴室 和 爱 狗 设施 的 单位	寻找 一个 单位 与 私人 浴室 和 狗 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_dogs ) ) )
公寓 设有 私人 房间 出租 1500	有 私人 房间 的 公寓 ， 租金 1500 英镑	1500 元 一间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
这是 允许 狗 在 里面 的 住房 单位	哪 一个 是 允许 狗 进入 的 住房 单元	哪个 住房 单元 允许 狗 进入	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_dogs ) ) )
找到 最新 发布 日期 的 住房 单位	查找 具有 最新 发布 日期 的 住房 单元	寻找 最迟 投寄 日期 的 房屋 单位	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
住房 单位 大于 800 平方英尺	住房面积 大于 800 平方英尺	超过 800 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
住房 至少 有 两个 社区	至少 有 两个 街区 的 住房	至少 有 两个 邻居 的 房子	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
住宅 单位 在 市中心 西部 有 一个 私人 房间	市中心 西区 有 一个 私人 房间 的 住房 单元	在 中城 西部 有 一个 私人 房间 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_room ) ) )
住宿 单元 ， 允许 狗 和 私人 浴室	允许 狗 和 私人 浴室 的 住房 单元	允许 养狗 并 有 私人 浴室 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string has_private_bath ) ) )
西部 中城 的 私人 住宅	中西部 的 私人 住宅	中 城 西部 的 私人 住宅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
位于 市中心 西部 的 公寓 设有 私人 浴室	市中心 西有 私人 浴室 的 公寓	带有 私人 浴室 的 公寓 在 中城 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
1 月 2 日 发布 的 800 平方英尺 的 住房	1 月 2 日 张贴 的 800 平方英尺 的 房屋	1 月 2 日 张贴 的 800 平方英尺 的 房屋	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
什么 房屋 单位 张贴 在 1 月租金 是 1500 美元	1 月 2 日 公布 的 房屋 租金 是 1500 美元	1 月 2 日 公布 的 房租 是 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 带 私人 房间 和 浴室 的 住房	找 有 私人 房间 和 浴室 的 房子	找 一间 有 私人 房间 和 浴室 的 房子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
找到 每月 不 等于 1500 美元 的 住房 单位	找到 每月 不 等于 1500 美元 的 住房	找到 每月 不 等于 1500 美元 的 住房 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string ! = ) ( number 1500 en.dollar ) ) )
什么样 的 住房 在 市中心 西部	中西部 有 什么样 的 房子	中 城西区 是 什么样 的 房子 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
房屋 当天 发布 123 芝麻街	芝麻街 123 号 当天 张贴 房屋	住房 频道 与 《 芝麻街 》 同一天 上线	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
哪个 社区 有 两个 以上 的 地方	哪个 社区 有 两个 以上 的 地方	哪些 社区 有 两个 以上 的 名额	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
房屋 贴 在 当天 或 123 芝麻街 后	同日 或 芝麻街 123 号 后 张贴 房屋	《 芝麻街 123 号 》 当天 或 之后 就 发布 了 住房 消息	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) ) )
找 房子 租金 1500 美元 ， 靠近 市中心 西部	找到 租金 1500 美元 的 住房 单元 ， 靠近 市中心 西	找 一套 1500 美元 的 房子 ， 并且 靠近 中 城西区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 房屋 有 私人 房间	什么 房子 有 私人 房间	什么 房子 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) )
什么样 的 住房 允许 猫	什么样 的 房子 允许 猫	什么样 的 房子 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
什么 住房 单位 在 两个 街区	两个 街区 有 什么 住房 单位	两个 社区 的 住房 单元 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
带 私人 浴室 的 住房	带 私人 浴室 的 住房 单元	住房 单元 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) )
找到 1 月 2 日 或 2 月 3 日 之间 发布 日期 的 住房 单位	查找 1 月 2 日 或 2 月 3 日 之间 的 住房 单元	寻找 投寄 日期 在 一月 二日 或 二月 三日 之间 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
哪个 房屋 与 123 芝麻街 同日 发布	在 芝麻街 123 号 的 同一天 张贴 的 是 哪栋 房子	哪栋 房子 和 芝麻街 123 号 是 同一天 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
什么 是 住房 单位 的 附近 ， 每 月租金 1500 美元	这个 月租金 1500 美元 的 住房 单元 附近 是 什么 地方	每 月租金 1500 美元 的 住房 单元 附近 是 什么 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ) )
哪个 住房 单位 于 1 月 2 日 发布 ， 与 123   sesame   st 相同 的 住房 类型	1 月 2 日贴 出 的 哪套 住房 与 芝麻街 123 号 相同	1 月 2 日贴 的 是 和 123 芝麻街 同一 户型 的 哪个 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单元 最少 有 两种 类型	哪 种 住房 单元 至少 有 两种 类型	哪个 住房 单元 有 两种 最小 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
两个 住房 单元 的 住房 类型 是 什么	两套 住房 的 住房 类型 是 什么	这 两个 住房 单元 的 住房 类型 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
同样 大小 的 公寓 是 123 芝麻街	同样 大小 的 公寓 是 芝麻街 123 号	同样 大小 的 公寓 是 123 芝麻街	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
狗 友好 的 公寓 设有 私人 浴室	带 私人 浴室 的 爱 狗 公寓	狗狗 友好 公寓 ， 带 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string allows_dogs ) ) )
位于 市中心 西区 的 公寓	市中心 西区 的 公寓	中 城西区 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
找到 只有 一个 社区 的 住房 单位	找到 只有 一个 街区 的 住房 单元	找到 只有 一个 社区 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
住 在 1 月 2 日 的 住房	1 月 2 日 张贴 的 房屋	1 月 2 日 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
告诉 我 住 在 市中心 西部 ， 欢迎 狗	带我去 市中心 西区 欢迎 狗 的 房子	告诉 我 在 中 城西区 哪里 狗 是 受欢迎 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_dogs ) ) )
有 多少 种 不同 的 住房 类型	有 多少 种 不同 的 住房 类型	有 多少 种 不同 的 住房 类型	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
没有 更高 租金 的 房屋 然后 是 123 芝麻街	租金 不 高于 芝麻街 123 号 的 房屋	没有 芝麻街 123 那么 高 租金 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
住房 最近 发布 了	最近 公布 的	住房 市场 是 最近 公布 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪个 住房 单位 有 一套 公寓	哪套 房子 有 公寓式 的 房子	哪个 单元 有 公寓 类 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ) )
123 芝麻街 发布 的 日期 是 什么	芝麻街 123 号 的 公告 是 几号	芝麻街 123 号 的 发布 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
寻求 1500 至 2000 之间 的 公寓	寻找 1500 到 2000 间 的 公寓	寻找 1500 年 到 2000 年 之间 的 公寓	( call SW.listValue ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) )
找到 800 到 1000 平方英尺 的 住房	找到 800 到 1000 平方英尺 的 住房	找 一个 800 到 1000 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) )
哪个 住房 单元 位于 市中心 西部 或 切尔西 地区	哪个 住房 单元 在 市中心 西区 或 切尔西 区	哪个 住宅 单元 位于 中 城西区 或 切尔西 区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
住房 单位 与 私人 房间 和 浴室	带 私人 房间 和 浴室 的 住房 单元	带有 私人 房间 和 浴室 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string has_private_bath ) ) )
单位 800 平方英尺	单位 ： 800 平方英尺	单位 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ) )
在 1 月 2 日 发布 的 住房 单位 是 哪个 社区	1 月 2 日贴 的 那套 房子 是 哪个 小区 的	1 月 2 日贴 的 是 哪个 小区 的 住房 单位 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
在 市中心 西部 的 猫 友好 公寓	市中心 西区 的 爱 猫 公寓	猫 友好 型 公寓 在 中城 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
找到 租金 超过 123 芝麻街 的 住房 单位	寻找 租金 高于 芝麻街 123 号 的 房屋 单位	寻找 租金 超过 123 芝麻街 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) ) )
哪个 住房 单位 在 123 芝麻街 的 过 帐 日期 上 发布	芝麻街 123 号 张贴 的 是 哪 一套 住房	芝麻街 123 号 的 投寄 日期 是 哪 一个 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) ) )
哪个 住房 单元 有 公寓 类型 的 房子 ， 面积 为 800 平方英尺	哪 一套 房子 有 800 平方英尺 的 公寓式 房子	哪个 单元 有 面积 为 800 平方英尺 的 公寓式 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
什么样 的 住房 在 1 月 2 日 发布	1 月 2 日贴 了 什么样 的 房子	1 月 2 日贴 的 是 什么样 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
800 平方英尺 的 公寓 1500 租金	800 平方英尺 公寓 ， 租金 1500 英镑	800 平方英尺 的 公寓 ， 1500 元 的 租金	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
哪个 住房 有 私人 房间 ， 每 月租金 1500 美元	哪个 有 私人 房间 的 房子 每 月租金 1500 美元	哪个 有 私人 房间 的 房子 每 月租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
告诉 我 住房 单位 不是 公寓	给 我 看看 不是 公寓 的 房子	给 我 看看 那些 不是 公寓 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string ! = ) en.housing.apartment ) )
住房 单位 是 一个 狗 友好 的 公寓	住房 单元 ， 是 一个 对 狗 友好 的 公寓	住房 单元 ， 这是 一个 公寓 是 狗 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
公寓 设有 私人 浴室	有 私人 浴室 的 公寓	带有 私人 浴室 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string has_private_bath ) ) )
在 1 月 2 日 发布 的 123 芝麻街 附近 的 住房	1 月 2 日贴 出 的 芝麻街 123 号 小区 房屋	1 月 2 日 发布 的 《 芝麻街 123 号 》	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
找到 具有 独特 住房 类型 的 住房 单元	寻找 具有 独特 住房 类型 的 住房 单元	寻找 具有 独特 住房 类型 的 住房 单元	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string housing_type ) ) )
寻找 宠物 友好 的 住房 单位 ， 租金 为 1500 美元	寻找 宠物 友好 型 住房 单位 ， 租金 为 1500 美元	找 一个 1500 美元 租金 的 宠物 友好 型 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_dogs ) ) )
公寓 住房 于 1 月 2 日 发布	1 月 2 日 张贴 的 公寓	1 月 2 日 张贴 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 的 月租金 超过 1000 美元	哪 一套 住房 每 月租金 超过 1000 美元	哪个 单元 的 月租 超过 1000 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
什么 是 最 常见 的 住房 类型	最 常见 的 住房 类型 是 什么	最 常见 的 住房 类型 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string housing_type ) ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
住房 单位 是 公寓	公寓式 住房	指 公寓 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
猫 在 西部 中 城 允许	允许 猫 进入 市中心 西部	中 城西区 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
邻近 123 芝麻街 的 街区	芝麻街 123 号 附近 的 社区	芝麻街 123 号 附近 没有 邻居	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单位 有 一个 jan   2nd 帖子	哪个 住房 单元 在 1 月 2 日 发布	哪个 单位 1 月 2 日有 职位 空缺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 尺寸 小于 123 芝麻街 的 住房 单位	寻找 面积 小于 芝麻街 123 号 的 住宅 单位	寻找 面积 小于 123 芝麻街 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
什么 是 西部 市中心 区域 的 住房 单位	市中心 西区 有 哪些 住房 ？	中 城西区 附近 的 住房 单元 有 哪些	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
租金 低于 1500 的 公寓	租金 低于 1500 英镑 的 公寓	租金 低于 1500 元 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string < ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
哪个 住房 单位 在 芝麻街 123 号	芝麻街 123 号 哪 一套 住房	请问 芝麻街 123 号 区域 是 哪个 户型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) ) )
公寓 类似 于 市中心 西区 的 公寓	类似 于 市中心 西区 的 公寓	公寓 类似 于 中城 西部 的 公寓	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
住房 1500 个 月 或 更 少 或 2000 个 月 或 更少	1500 个 月 以下 或 2000 个 月 以下 的 住房	1500 个 月 或 2000 个 月 以下 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 1500 en.dollar ) ( number 2000 en.dollar ) ) ) ) )
西部 市中心 的 其他 地区 有 哪些 住房 单位	市中心 西区 还有 什么 地方 有 住房 ？	中西部 还有 哪些 地区 有 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 800 平方 的 房屋 允许 狗	什么样 的 800 平方 住房 允许 狗	什么 800 平方 的 房子 允许 狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 市中心 西区 找到 800 平方英尺 的 住房	在 市中心 西区 找到 800 平方英尺 的 住房 单元	在 中 城西区 找到 800 平方英尺 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
在 1 月 2 日 和 2 月 3 日 之前 发布 日期 的 住房	张贴 日期 在 1 月 2 日 和 2 月 3 日 之前 的 住房	在 1 月 2 日 和 2 月 3 日前 寄出 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
哪个 住房 单位 有 123 芝麻街 的 月租	芝麻街 123 号 的 月租 是 哪 一套	芝麻街 123 的 月租 是 在 哪个 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
什么 是 最大 的 住房 单位	最大 的 住房 单元 是 什么	最大 的 住房 单元 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
什么 住房 单位 允许 狗	什么 住房 单位 允许 狗	什么样 的 住房 允许 养狗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) )
邻居 ， 我 可以 找到 一个 私人 房间 的 住房	我能 找到 有 私人 房间 的 房子	我 可以 在 附近 找到 带 私人 房间 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ) )
与 123 芝麻街 相同 或 更 大 的 住房	芝麻街 123 号 及 以上 房屋	和 芝麻街 123 号 一样 大 或者 更大 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) ) )
位于 市中心 西区 的 800 平方英尺 的 公寓	市中心 西 800 平方英尺 公寓	市中心 西区 800 平方英尺 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
房屋 未 在 1 月 2 日 发布	1 月 2 日未 张贴 房屋	1 月 2 日 房屋 未 张贴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2015 1 2 ) ) )
住房 单位 800 平方英尺 ， 有 私人 浴室	800 平方英尺 有 私人 浴室 的 住房 单元	面积 800 平方英尺 ( 约 428 平方米 ) 、 带有 私人 浴室 的 住宅 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string has_private_bath ) ) )
住 在 1 月 2 日 的 住房	1 月 2 日 张贴 的 房屋	1 月 2 日 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
有 两个 以上 单位 的 社区	有 两个 以上 单位 的 社区	有 两个 以上 单元 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 住房 单元 不 属于 公寓 类型 ， 月租金 为 1500 美元	哪套 住房 不 属于 月租 1500 元 的 公寓 类型	哪个 单元 不 属于 月租 1500 美元 的 公寓 类型	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
哪个 住房 单位 每 月租金 1500 美元 ， 还有 私人 浴室 设施	哪套 房子 每 月租金 1500 美元 ， 还有 私人 浴室	哪个 单元 的 月租 是 1500 美元 ， 还有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string has_private_bath ) ) )
哪个 住房 单位 每 月租金 1500 美元 ， 有 一个 私人 房间	哪个 月租金 1500 美元 的 住房 单位 有 私人 房间	哪个 房租 每月 1500 美元 的 单位 有 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 800 平方英尺 的 住房 单位 与 私人 房间	找到 800 平方英尺 大小 的 带有 私人 房间 的 住房 单元	找到 800 平方英尺 大小 的 带有 私人 房间 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
公寓 的 平均 大小 是 多少 ？	公寓 的 平均 面积 是 多少	公寓 的 平均 面积 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ) ) )
附近 的 哪些 住房 单位 允许 在 里面 的 狗	附近 哪些 住房 单位 允许 狗 进入	附近 哪些 住宅 单位 允许 狗 进入	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
什么 住房 单位 与 1 月 发布 的 单位 类型 相同	1 月 2 日 公布 的 房型 与 哪 一套 房型 相同	什么 房型 和 1 月 2 日贴 的 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
123 芝麻街 的 面积 是 多少	芝麻街 123 号 的 面积 是 多少	芝麻街 123 号 的 面积 是 多少	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
比较 123 芝麻街 和 900 任务 大道	比较 芝麻街 123 号 和 使命 大道 900 号	比较 一下 芝麻街 123 号 和 教会 大道 900 号	( call SW.listValue ( call SW.concat en.housing_unit.123_sesame_street en.housing_unit.900_mission_ave ) )
猫 允许 在 单位	单位 允许 猫入 内	获准 进入 单位 的 猫 只	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) )
找到 所有 单位 在 市中心 东部	找到 所有 可用 的 单位 中东部	在 中 城东区 找到 所有 可用 的 单位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
告诉 我 住房 ， 租金 1500 美元 ， 并 提供 私人 浴室	给 我 看看 租金 1500 美元 的 房子 ， 里面 有 私人 浴室	给 我 看 一间 房子 ， 房租 是 1500 美元 ， 有 一间 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
找到 月租 最多 的 住房 单位	找到 月租金 最高 的 住房 单位	找到 月租 最高 的 住房 单元	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
住房 单位 与 123 芝麻街 月租 相同	月租金 与 芝麻街 123 号 相同 的 住房 单元	与 芝麻街 123 号 月租 相同 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
住房 每月 花费 超过 1500 美元	每月 花费 超过 1500 美元 的 住房	房租 每月 超过 1500 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string > ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
住房 列 在 最少 的 社区	列入 最少 社区 的 房屋	列出 的 住房 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
位于 市中心 西区 的 公寓 ， 每 月租金 1500	中西部 公寓 ， 每 月租金 1500 英镑	中 城西区 的 公寓 ， 每 月租金 1500 英镑	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
这 间 公寓 的 月租金 是 多少 ？	这个 公寓 的 月租金 是 多少	这 间 公寓 的 月租金 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ) ) )
住 在 两个 以上 的 街区	两个 以上 社区 的 住房	超过 两个 社区 的 住房	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
告诉 我 800 平方英尺 的 空间	给 我 看看 800 平方英尺 的 房子	给 我 看看 800 平方英尺 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) )
房屋 于 1 月 2 日 在 123 芝麻街 附近 发布	1 月 2 日 芝麻街 123 号 左右 张贴 房屋	1 月 2 日 ， 《 芝麻街 123 号 》 播出	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
住房 单位 的 发布 日期 早于 1 月 2 日	邮寄 日期 早于 1 月 2 日 的 住房	房屋 单位 的 张贴 日期 早于 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
哪个 住房 单元 面积 为 800 平方米 ， 允许 携带 狗	哪 一个 800 平方米 的 住房 单元 允许 养狗	哪个 面积 800 平方 的 单位 可以 养狗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string allows_dogs ) ) )
允许 狗 的 房屋	允许 狗 的 外壳	允许 养狗 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ) )
西区 中城 800 平方英尺	市中心 西 800 平方英尺	中 城西区 800 平方英尺	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( number 800 en.square_feet ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 单位 的 邻居 ， 允许 猫	允许 猫 进入 的 住宅区	允许 养猫 的 住宅区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ) )
最 便宜 的 地方 出租	最 便宜 的 出租 场所	租 最 便宜 的 房子	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string rent ) ) ) )
哪个 住房 单位 在 1 月 2 日前 发布	1 月 2 日前 张贴 哪 一套 住房	1 月 2 日前 张贴 的 是 哪个 住房 单元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
允许 住 在 西部 市中心 的 猫 的 住房 单位	允许 猫 进入 中西部 的 住房 单元	允许 猫 居住 在 中城 西部 的 住宅 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string allows_cats ) ) )
这个 社区 的 哪个 住房 单元 有 私人 浴室	这 附近 哪 一个 住宅 单位 有 私人 浴室	这 附近 哪个 住宅 单位 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ) )
123 芝麻街 的 住房 类型 是 什么 ？	芝麻街 123 号 的 住房 类型 是 什么	芝麻街 123 号 的 住房 类型 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) en.housing_unit.123_sesame_street ) )
告诉 我 有 最 多 空间 的 房屋	给 我 看看 最 宽敞 的 房子	带我去 看看 有 多 大 空间 的 房子	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string size ) ) ) )
找到 猫 友好 的 住房 单位 与 私人 房间	找 一个 有 私人 房间 的 适合 猫 住 的 房子	找 一个 适合 猫咪 居住 的 房间 ， 里面 有 一个 私人 房间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string allows_cats ) ) )
什么 中 城 西部 住房 单位 有 私人 浴室	什么 市中心 西区 的 住房 单位 有 私人 浴室	什么 中 城西区 的 房子 都 有 私人 浴室	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string has_private_bath ) ) )
找到 123 芝麻街 附近 的 住房 单位	在 芝麻街 123 号 附近 找 房子	在 “ 芝麻街 123 号 ” 附近 找 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string neighborhood ) ) ) )
有 多少 个 社区	有 多少 个 社区	有 多少 个 社区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
在 1 月 2 日 发布 的 住房 单位 与 123 芝麻街 的 租金 相同	1 月 2 日贴 出 的 房屋 单位 租金 与 芝麻街 123 号 相同	1 月 2 日 发布 的 房屋 单位 租金 和 123 芝麻街 一样	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ( call SW.reverse ( string rent ) ) ( string = ) en.housing_unit.123_sesame_street ) )
哪个 住房 单元 位于 市中心 西部 ， 并于 1 月 2 日 发布	哪个 住房 单元 在 市中心 西区 ， 1 月 2 日 张贴	1 月 2 日 在 中 城西区 张贴 的 住宅 单位 是 哪 一个	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
找到 123 芝麻街 附近 的 住房 单位	在 芝麻街 123 号 附近 找到 住房	在 芝麻街 123 号 附近 找 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
在 1 月 2 日 或 之前 或 2 月 3 日 或 之前 张贴 的 房屋	1 月 2 日 或 之前 或 2 月 3 日 或 之前 张贴 的 房屋	1 月 2 日 或 之前 、 2 月 3 日 或 之前 张贴 的 房屋	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
住房 单元 ， 是 一个 公寓 住房 类型 ， 有 一个 私人 房间	住房 单元 是 一种 带有 私人 房间 的 公寓式 住房	住房 单元 ， 是 一种 带有 私人 房间 的 公寓 住房 类型	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
宠物 友好 住房 单位	宠物 友好 型 住房 单元	宠物 友善 房屋 小组	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_cats ) ) )
什么样 的 房屋 有 两种 房屋 类型	什么样 的 房子 有 两种 类型	什么样 的 房子 有 两种 类型	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string >= ) ( number 2 ) ) )
所有 住房 单位 于 1 月 2 日 公布	1 月 2 日 公布 的 所有 住房 单位	所有 住房 单位 于 1 月 2 日 公布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
住房 单位 有 私人 浴室 ， 租金 1500 美元	带 私人 浴室 的 住房 单元 ， 租金 1500 美元	住房 单元 有 私人 浴室 ， 租金 1500 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) )
房屋 类型 1 月 2 日 发布	1 月 2 日 公布 的 房屋 类型	住房 类型 张贴 1 月 2 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) ) )
找到 123 芝麻街 以外 的 住房 类型	查找 除 芝麻街 123 号 以外 的 住房 类型	寻找 不同于 123 芝麻街 的 住房 类型	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string ! = ) en.housing_unit.123_sesame_street ) )
什么 住房 单位 发布 在 1 月 2 日有 一个 私人 房间	1 月 2 日贴 出 的 哪套 房子 有 私人 房间	1 月 2 日贴 出 的 住房 单位 有 单间	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_room ) ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
公寓 设有 私人 客房	有 私人 房间 的 公寓	带 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
哪 种 公寓 住宿 单位 允许 猫咪 进入	哪 种 公寓 类型 的 住房 允许 猫 进入	什么样 的 公寓 单位 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
在 找到 位于 市中心 西区 的 私人 浴室	在 市中心 西区 找到 带 私人 浴室 的 住房 单元	在 中城 西部 的 社区 找到 带有 私人 浴室 的 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string has_private_bath ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
住房 1500 个 月 或 更少	1500 个 月 或 以下 的 住房	1500 个 月 以下 的 住房	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string rent ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 1500 en.dollar ) ) ) )
位于 市中心 西区 的 住房 于 1 月 2 日 发布	1 月 2 日 公布 的 市中心 西区 住宅	1 月 2 日 ， 曼哈顿 中 城西区 的 房屋 张贴 告示	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
至少 有 2 个 单位 的 公寓	至少 有 2 个 单元 的 公寓	至少 有 两个 单元 的 公寓	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ( call SW.reverse ( string housing_type ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
哪个 房屋 在 1 月 2 日后 发布	1 月 2 日后 张贴 的 房屋	1 月 2 日 之后 是 哪个 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2015 1 2 ) ) ) )
住房面积 在 800 到 1000 平方英尺 之间	住宅 面积 在 800 到 1000 平方英尺 之间	面积 在 800 到 1000 平方英尺 之间 的 房子	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 800 en.square_feet ) ( number 1000 en.square_feet ) ) ) ) )
公寓 设有 私人 客房	有 私人 房间 的 公寓	带 私人 房间 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string has_private_room ) ) )
公寓 面积 与 123 芝麻街 相似	大小 与 芝麻街 123 号 相似 的 公寓	公寓 面积 与 《 芝麻街 123 号 》 相似	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string size ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) ) )
住房 单位 ， 租金 1500 美元 ， 允许 猫咪	租金 1500 美元 ， 允许 养猫	1500 美元 的 房租 ， 允许 养猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( number 1500 en.dollar ) ) ( string allows_cats ) ) )
狗 和 猫 友好 的 住房	狗 和 猫 友好 型 住房	狗 和 猫 友好 的 住房	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_cats ) ) ( string allows_dogs ) ) )
在 市中心 西区 找到 住房 单位	在 市中心 西区 找 房子	在 中 城西区 的 社区 寻找 住房 单元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
公寓 800 平方英尺 及 以上	800 平方英尺 及 以上 的 公寓	公寓 面积 800 平方英尺 以上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string size ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 800 en.square_feet ) ) ) )
123 芝麻街 附近	芝麻街 123 号 附近	芝麻街 123 号 附近	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.housing_unit.123_sesame_street ) )
不同 单位 的 数量	不同 单位 的 计数	不同 单位 计数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.housing ) ( string ! type ) ) ) )
住房 公寓 ， 允许 狗	允许 狗 居住 的 公寓	允许 养狗 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string housing_type ) ( string = ) en.housing.apartment ) )
与 123 芝麻街 相同 的 住房	价格 与 芝麻街 123 号 相同 的 住房	房价 和 123 芝麻街 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string rent ) ( string = ) ( call SW.getProperty en.housing_unit.123_sesame_street ( string rent ) ) ) )
哪个 社区 有 两个 住房 单位	哪个 小区 有 两套 以下 的 住房	哪个 社区 有 两个 以下 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ) )
123 芝麻街 有 多 大	芝麻街 123 号 有 多 大	123 芝麻街 有 多 大	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string size ) ) )
住房 单位 在 1 月 2 日 或 2 月 3 日 之后 发布	1 月 2 日 或 2 月 3 日后 公布 的 住房 单位	房屋 单位 张贴 后 1 月 2 日 或 2 月 3 日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2015 1 2 ) ( date 2015 2 3 ) ) ) ) )
找到 两个 社区 的 住房 单位	找到 两个 街区 的 住房 单元	找 一个 位于 两个 社区 的 住房 单元	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
什么 是 123 芝麻街 发布 的 日期	芝麻街 123 号 的 日期 是 什么 时候	芝麻街 123 号 的 发布 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty en.housing_unit.123_sesame_street ( string posting_date ) ) )
公寓 于 1 月 2 日 发布	1 月 2 日 张贴 的 公寓	1 月 2 日 张贴 的 公寓	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string housing_type ) ( string = ) en.housing.apartment ) ( string posting_date ) ( string = ) ( date 2015 1 2 ) ) )
哪个 住房 单元 允许 狗 和 猫	哪 一个 住房 单元 允许 狗 和 猫	哪个 单元 允许 养狗 和 猫	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.housing_unit ) ( string ! type ) ) ( string allows_dogs ) ) ( string allows_cats ) ) )
作者 数量 最多 的 文章	作者 最多 的 文章	作者 最多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string author ) ) )
文章 引用 文章 发表 于 统计 年鉴	引用 《 统计 年鉴 》 上 的 文章	文章 引用 发表 在 《 统计 年鉴 》 上 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
2004 年 的 哪 篇文章 引用 了 多 变量 数据分析	2004 年 的 哪 篇文章 引用 了 多元 数据分析	哪篇 2004 年 的 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
找 一篇 2004 年 发表 的 文章	找 一篇 2004 年 发表 的 文章	找 一篇 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
发布 日期 接近 多 变量 数据分析 日期 的 文章	发表 日期 接近 多元 数据分析 日期 的 文章	发表 日期 接近 多元 数据分析 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
哪 篇文章 是 由 efron 撰写 的 ， 并 以 统计 年鉴 为 其 场地	哪 篇文章 是 埃夫隆 写 的 ， 以 《 统计 年鉴 》 为 中心	哪 篇文章 是 由 efron 撰写 的 ， 并 以 《 统计 年鉴 》 作为 其 发表 地点	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string author ) ( string = ) en.person.efron ) )
只有 一篇 文章 的 场地	只有 一篇 文章 的 地点	地点 只有 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 一 两位 作者 的 文章	有 一两个 作者 的 文章	有 一两个 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
文章 的 作者 是 efron 或 lakoff	作者 是 埃夫隆 或 莱 考夫 的 文章	作者 为 efron 或 lakoff 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
获奖 的 文章 引用 了 另 一篇 文章	一篇 获奖 的 文章 引用 了 另 一篇 文章	一篇 获奖 的 文章 引用 了 另 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
多元 数据分析 的 作者	多元 数据分析 作者	《 多元 数据分析 》 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 引用 了 多 变量 数据分析	2004 年 发表 的 引用 多元 数据分析 的 文章	2004 年 发表 的 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪位 作者 写 的 文章 最 多	哪个 作者 写 的 文章 最 多	哪个 作者 写 的 文章 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 在 两个 以上 的 场地	在 两个 以上 地点 发表 的 文章	在 两个 以上 场所 发表 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
提及 两个 或 更 多 城市 的 文章	提到 两个 或 更 多 城市 的 文章	提到 两个 或 两个 以上 城市 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
发表 日期 小于 多 变量 数据分析 发布 日期 的 文章	发表 日期 小于 多元 数据分析 发表 日期 的 文章	发表 日期 小于 多元 数据分析 发表 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
多 变量 数据分析 引用 的 统计 年鉴 中 发表 的 文章	发表 在 《 统计 年鉴 》 上 的 多 变量 数据分析 引文	发表 在 统计 年鉴 上 的 文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 是 关于 多 变量 数据分析	什么 是 关于 多元 数据分析 的 文章	什么 文章 是 关于 多元 数据分析 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
在 不到 两个 出版物 中 找到 的 文章	少于 两种 出版物 中 的 文章	在 少于 两个 出版物 中 发现 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
由 作者 efron 命名 一篇 关于 多 变量 数据分析 的 文章	命名 一篇 关于 多元 数据分析 的 文章	请 列举 一篇 作者 efron 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 未 发表 的 文章	2004 年 未 发表 的 文章	2004 年 未 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
统计 年鉴 中 引用 的 文章	《 统计 年鉴 》 引文	《 统计 年鉴 》 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
找到 我 在 两个 场地 的 文章	给 我 找 一篇 有 两个 地方 的 文章	给 我 找 一篇 在 两个 地方 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
引用 最少 文章 数 的 文章	引用 最少 文章 数 的 文章	引用 文章 数量 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 一个 包含 两篇 以上 文章 的 场地	找 一个 有 两篇 以上 文章 的 场地	找 一个 有 两篇 以上 文章 的 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章	引用 多元 数据分析 的 文章	引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 引用 了 多 变量 数据分析	什么 文章 引用 了 多元 数据分析	什么 文章 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 在 不到 两个 场地	哪 篇文章 在 不到 两个 地点	什么 文章 在 不到 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
谁 不止一次 写过 多 变量 数据分析	他 不止一次 写过 多元 数据分析	谁 写 了 多 变量 数据分析 不止一次	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
哪些 文章 引用 不到 两篇 文章	哪些 文章 引用 的 文章 少于 两篇	哪些 文章 引用 少于 两篇	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
与 多 变量 数据分析 同时 或 之后 发表 的 文章	多 变量 数据分析 同时 或 之后 发表 的 文章	与 多元 数据分析 同时 或 之后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
什么 文章 引用 了 另外 两篇 文章	哪 篇文章 引用 了 另外 两篇 文章	什么 文章 还 引用 了 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年 或 2010 年	2004 年 或 2010 年 发表 的 文章	发表 于 2004 年 或 2010 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
少于 两个 参考 文章 的 文章	少于 两篇 参考文献 的 文章	少于 两个 参考文献 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 多 变量 数据分析 ， 也 是 它 的 场所	这 篇文章 引用 了 多元 数据分析 ， 同时 也 是 它 的 研究 地点	什么 文章 引用 多元 数据分析 ， 也 是 它 的 用武之地	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
有 两位 以上 作者 的 文章	有 两个 以上 作者 的 文章	有 两个 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
谁 是 多 变量 数据分析 的 作者	谁 是 多元 数据分析 的 作者	谁 是 多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
出版物 文章 最少	发表文章 最少	发表文章 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
场地 少于 两篇	少于 两件 物品 的 场馆	少于 两件 物品 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 引用 了 两次 或 更 少次	引用 次数 不 超过 两次 的 文章	文章 被 引用 两次 或 更少	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 多 变量 数据分析 日期 之前 发表 的 文章	多元 数据分析 日期 前 发表 的 文章	多 变量 数据分析 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
由 统计 年鉴 出版 的 获奖 文章	《 统计 年鉴 》 发表 获奖 文章	发表 于 《 统计 年报 》 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string won_award ) ) )
在 关于 多 变量 数据分析 的 文章 发表 日期 之前 写 了 什么 文章	关于 多元 数据分析 的 文章 发表 前写 了 什么	关于 多元 数据分析 的 文章 发表 日期 之前 写 的 是 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
谁 是 引用 多 变量 数据分析 的 文章 的 作者	谁 是 引用 多元 数据分析 的 文章 的 作者	引用 多元 数据分析 的 文章 的 作者 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
什么 时候 发表 了 多 变量 数据分析	多元 数据分析 什么 时候 发表 的	多 变量 数据分析 是 什么 时候 发表 的	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
2004 年 之前 发表 的 文章	2004 年 以前 发表 的 文章	2004 年 以前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
文章 引用 次数 最少	引用 次数 最少 的 文章	文章 引用 次数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 写 了 两篇 文章	作者 写 了 两篇 文章	哪位 作者 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章 作者	引用 多元 数据分析 的 文章 作者	作者 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
作者 最多 有 两篇 文章	最 多 两篇 文章 的 作者	作者 最 多 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 关于 统计 年鉴 的 其他 文章	哪 篇文章 引用 了 其他 有关 统计 年鉴 的 文章	什么 文章 引用 其他 关于 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
什么 地方 有 两篇 文章	什么 地方 有 两篇 文章	什么 地方 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多篇 文章 的 作者	多篇 文章 的 作者	多篇 文章 的 作者	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 后 发表 的 文章	多元 数据分析 后 发表文章	多 变量 数据分析 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
多 变量 数据分析 中 引用 的 统计 年鉴 中 的 文章	多元 数据分析 引文	统计学 年鉴 中 引用 的 多 变量 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
文章 引用 多 变量 数据分析 引用 的 文章	多 变量 数据分析 引文	文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 没有 在 2004 年 发表	2004 年 没有 发表 什么 文章	什么 文章 2004 年 没有 发表	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
多 变量 数据分析 引用 的 文章 的 地点	多元 数据分析 引用 的 文章 地点	多元 数据分析 引用 的 文章 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
没有 写 多 变量 数据分析 的 作家	不写 多元 数据分析 的 作者	没有 写 多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
什么 文章 讨论 了 另 一篇 获奖 的 文章	哪 篇文章 讨论 了 另 一篇 获奖 的 文章	什么 文章 讨论 另 一篇 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
由 efron 撰写 并 由 多元 数据分析 引用 的 文章	由 efron 撰写 并 被 多元 数据分析 引用 的 文章	efron 撰写 并 被 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 发表 于 2004 年 或 更 晚	2004 年 或 以后 发表 的 文章	2004 年 或 之后 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
获奖 的 文章	获奖 的 文章	获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) )
谁 是 不到 两篇 文章 的 作者	谁 是 少于 两篇 文章 的 作者	谁 是 少于 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 2004 年 发表 的 文章 的 文章	引用 2004 年 发表文章 的 文章	引用 2004 年 发表文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
将 一个 人 命名 为 关于 多 变量 数据分析 的 文章 的 作者	说出 一个 人 的 名字 ， 他 是 一篇 关于 多元 数据分析 的 文章 的 作者	请说出 一篇 关于 多元 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
命名 少于 两篇 文章 的 出版物	命名 少于 两篇 文章 的 出版物	列出 少于 两篇 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 撰写 的 文章 数量 最少	作者 写 的 文章 最少	哪个 作者 写 的 文章 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获奖 文章 出版 地点	获奖 文章 发表 地点	获奖 文章 发表 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
文章 的 出版日期 是 2004 年	2004 年 出版 的 文章	发表 日期 为 2004 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
说出 一篇 赢得 奖项 的 文章	说出 一篇 获奖 的 文章	说出 一篇 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
有 两个 以上 场地 的 文章	两个 以上 场地 的 文章	文章 与 两个 以上 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
谁 创作 了 最少 的 文章	他 写 的 文章 最少	谁 写 的 文章 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 的 作者 最 多	哪 篇文章 的 作者 最 多	哪 篇文章 作者 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string author ) ) )
在 哪个 出版物 中 发表 了 多 变量 数据分析	多元 数据分析 是 在 什么 出版物 上 发表 的	发表 的 是 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
发表 日期 最多为 多 变量 数据分析 发布 日期 的 文章	多 变量 数据分析 中 发表 日期 最多为 发表 日期 的 文章	发表 日期 最多为 多元 数据分析 发表 日期 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
两篇 或 更少 文章 的 作者	两篇 或 更少 文章 的 作者	两篇 或 少于 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
将 某人 撰写 关于 多 变量 数据分析 的 文章 命名	有人 写过 一篇 关于 多元 数据分析 的 文章	请说出 一个 曾 写 过 一篇 关于 多元 数据分析 的 文章 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
与 多 变量 数据分析 同日 发表 的 文章	发表 于 多元 数据分析 同一 日期 的 文章	文章 发表 日期 与 多元 数据分析 同一天	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
哪位 作者 写 了 两篇 或 更 多 文章	哪些 作者 写过 两篇 或 更 多 的 文章	哪些 作者 写过 两篇 或 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 获奖 文章 的 场地	找到 获奖 文章 的 地点	寻找 获奖 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
任何 引用 统计 年鉴 中 发表 的 另 一篇 文章 的 文章	引用 《 统计 年鉴 》 上 另 一篇 文章 的 文章	引用 另 一篇 发表 在 《 统计 年鉴 》 上 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
获奖 文章 引用 的 文章	获奖 文章 引文	获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
统计 年鉴 中 的 哪 篇文章 引用 了 多元 数据分析	《 统计 年鉴 》 上 哪 篇文章 引用 多元 数据分析	《 统计 年鉴 》 上 哪 篇文章 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
多元 数据分析 引用 的 文章	多元 数据分析 引用 的 文章	多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
只有 一篇 文章 的 出版商	只有 一篇 文章 的 出版商	只有 一篇 文章 的 出版商	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 了 哪篇 获奖 文章	多 变量 数据分析 引用 了 哪篇 获奖 文章	多 变量 数据分析 引用 了 哪篇 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
场地 两篇 或 更少	两件 或 两件 以下 的 场地	二篇 及 以下 文章 之 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
一篇 文章 ， 他 也 撰写 了 多元 数据分析	同时 撰写 多元 数据分析 的 文章	这是 一篇 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
引用 多 变量 数据分析 的 文章 命名	举出 一篇 引用 多元 数据分析 的 文章	举出 一篇 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 获奖	2004 年 发表 的 获奖 文章	2004 年 发表 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string won_award ) ) )
少于 两篇 文章 的 作家	少于 两篇 文章 的 作者	少于 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一位 撰写 少于 两篇 文章 的 人	写出 少于 两篇 文章 的 人 的 名字	说出 一个 作者 少于 两篇 文章 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
从 有关 多 变量 数据分析 的 统计 年鉴 中 命名 一篇 文章	从 统计学 年鉴 中选 一篇 关于 多元 数据分析 的 文章	请说出 《 统计学 年鉴 》 上 一篇 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
多元 数据分析 引用 的 获奖 文章	多 变量 数据分析 引文 获奖	获奖 文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
可以 找到 efron 文章 的 出版物	可 找到 Efron 文章 的 出版物	可以 找到 efron 文章 的 出版物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
文章 引用 多 变量 数据分析 引用 的 文章	多 变量 数据分析 引文	文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
从 统计 年鉴 中 命名 一篇 文章	从 统计 年鉴 中 举出 一篇 文章	请说出 《 统计 年鉴 》 上 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
发表 日期 为 2004 年 并 由 多元 数据分析 引用 的 文章	多 变量 数据分析 法 引用 2004 年 发表 的 文章	发表 日期 为 2004 年 的 文章 ， 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 的 出版日期 大于 多 变量 数据分析 的 出版日期	哪 篇文章 的 发表 日期 大于 多元 数据分析	什么 文章 的 发表 日期 大于 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
什么 文章 引用 了 一篇 获奖 文章	哪 篇文章 引用 获奖 文章	什么 文章 引用 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪个 出版物 包含 两篇 文章	哪 种 出版物 包含 两篇 文章	哪个 出版物 包含 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 两篇 或 更少 文章 的 文章	引用 两篇 或 更少 文章 的 文章	引用 两篇 或 更少 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 讨论 了 统计 年鉴 ， 其 出版日期 是 2004 年	哪 篇文章 讨论 的 是 2004 年 的 《 统计 年鉴 》	哪 篇文章 讨论 的 是 2004 年 出版 的 《 统计 年鉴 》	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 引用 了 多 变量 数据分析 中 引用 的 文章	多 变量 数据分析 引文	多 变量 数据分析 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪篇 统计 文章 引用 了 多元 数据分析	哪篇 统计 年鉴 引用 多元 数据分析	《 统计 年鉴 》 的 哪 篇文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 关于 年鉴 和 统计 的 文章 有 一个 出版物 2004 年	什么 关于 年鉴 和 统计 的 文章 有 2004 年 的 出版物	哪篇 关于 年鉴 和 统计 的 文章 有 2004 年 的 出版	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
2004 年 发表 的 文章 引用 了 多 变量 数据分析	2004 年 发表 多 变量 数据分析 引文	论文 发表 于 2004 年 ， 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 获奖	2004 年 发表 的 获奖 文章	2004 年 发表 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
命名 少于 两位 作者 的 文章	命名 少于 两个 作者 的 文章	说出 一篇 少于 两位 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
多 变量 数据分析 中 没有 引用 什么 文章	多元 数据分析 中 没有 引用 的 文章	什么 文章 在 多元 数据分析 中 没有 被 引用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
谁 写 了 最 多 的 文章	谁 写 的 文章 最 多	谁 写 的 文章 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 两篇 或 更 多 文章 的 文章	引用 两篇 或 多篇 文章 的 文章	引用 两篇 或 两篇 以上 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年 的 引文	发表 在 2004 年 引文 中 的 文章	发表 论文 2004 年 被 引用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 文章 引用 了 最 多 的 其他 文章	哪 篇文章 引用 的 其他 文章 最 多	哪 篇文章 引用 其他 文章 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 了 2004 年 发表 的 文章	2004 年 发表 的 那 篇文章 被 多元 数据分析 引用 了	2004 年 发表 的 哪 篇文章 被 多元 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
作者 写 了 两篇 或 更 多 文章	作者 写 了 两篇 或 更 多 的 文章	哪个 作者 写 了 两篇 或 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一篇 2004 年 发表 的 文章	说出 一篇 2004 年 发表 的 文章	说出 一篇 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
说出 一篇 赢得 奖项 的 文章	说出 一篇 获奖 的 文章	说出 一篇 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪 篇文章 发表 在 两本 以上 的 杂志 上	哪 篇文章 发表 在 两本 以上 的 杂志 上	哪 篇文章 发表 在 两本 以上 的 杂志 上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
命名 一篇 与 多 变量 数据分析 无关 的 文章	说出 一篇 不是 关于 多元 数据分析 的 文章	说出 一篇 与 多元 数据分析 无关 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
没有 引用 多 变量 数据分析 的 文章	不 引用 多元 数据分析 的 文章	没有 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
引用 的 文章 不到 两次	哪 篇文章 被 引用 不到 两次	什么 文章 被 引用 不到 两次	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 与 多元 数据分析 的 作者	多 变量 数据分析 作者 文章	文章 与 作者 的 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
哪 篇文章 引用 了 多 变量 数据分析	哪 篇文章 引用 了 多元 数据分析	哪 篇文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
谁 是 撰写 有关 多 变量 数据分析 的 文章 的 人	谁 写 过 关于 多元 数据分析 的 文章	谁 写 过 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
找到 获奖 文章 的 作者	找到 一篇 获奖 文章 的 作者	找到 获奖 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
efron 文章 的 地点	埃夫隆 条款 的 地点	efron 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
efron 撰写 的 文章 获得 了 奖项	埃夫隆 的 获奖 文章	由 efron 撰写 并 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string author ) ( string = ) en.person.efron ) )
谁 是 这 两篇 文章 的 作者	谁 是 这 两篇 文章 的 作者	这 两篇 文章 的 作者 是 谁	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年 ， 引用 了 多 变量 数据分析	2004 年 发表 的 文章 引用 了 多元 数据分析	发表 于 2004 年 的 一篇 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
哪 篇文章 发表 于 2004 年 之后	哪 篇文章 是 2004 年 以后 发表 的	哪 篇文章 是 2004 年 后 发表 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪个 场地 最多 有 两篇 文章	哪个 场馆 最多 有 两篇 文章	哪个 场地 最多 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 在 多 变量 数据分析 之前 发表	多元 数据分析 之前 发表 的 文章	文章 发表 前 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
找到 efron 没写 的 任何 文章	找到 埃夫隆 没有 写 的 文章	找到 任何 一篇 不是 埃夫隆 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
什么 文章 没有 引用 多 变量 数据分析	什么 文章 没有 引用 多元 数据分析	什么 文章 不 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string ! = ) en.article.multivariate_data_analysis ) )
一位 作者 撰写 的 文章	一位 作者 写 的 文章	由 一个 作者 写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
在 两个 以上 的 出版物 中 找到 一篇 文章	命名 在 两个 以上 出版物 中 找到 的 文章	说出 在 两种 以上 出版物 中 发现 的 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
2004 年 或 之后 发表 的 文章	2004 年 或 之后 发表 的 文章	2004 年 或 以后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
命名 包含 不 超过 两篇 文章 的 出版物	命名 包含 不 超过 两篇 文章 的 出版物	列出 不 超过 两篇 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 写 了 什么 文章 ， 其中 的 地点 是 统计 年鉴	埃夫隆 写 了 什么 文章 ， 地点 是 《 统计 年鉴 》	埃夫隆 写 了 什么 文章 ， 地点 是 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string author ) ( string = ) en.person.efron ) )
什么 文章 是 多 变量 数据分析 的 作者 写 的	多元 数据分析 的 作者 写 了 哪些 文章	多 变量 数据分析 的 作者 写 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
efron 的 所有 文章	埃夫隆 的 所有 文章	所有 文章 由 efron	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
2004 年 至 2010 年 发表 的 文章	2004 - 2010 年 发表文章	2004   -   2010 年 发表文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
在 统计 年鉴 中 找到 一篇 文章 的 作者	在 《 统计 年鉴 》 上 找到 一篇 文章 的 作者	在 《 统计 年鉴 》 上 找 一篇 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
已 发表文章 最多 的 场所	发表文章 最多 的 场馆	发表文章 最多 的 场所	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 在 最少 的 地方	在 最少 的 地方 发表 的 文章	发表文章 最少 的 地方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string venue ) ) )
什么 时候 发表 了 多 变量 数据分析	多元 数据分析 什么 时候 发表 的	多 变量 数据分析 是 什么 时候 发表 的	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
作者 用户数量 最 多	文章 数量 最多 的 作者	文章 数量 最多 的 作者	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 不是 由 efron 撰写 的	非埃夫隆 撰写 的 文章	非 efron 作者 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
最 多 发表 两篇 文章 的 场地	发表 最 多 两篇 文章 的 场馆	发表 最 多 两篇 文章 的 场所	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 两位 以上 作者 的 文章	有 两个 以上 作者 的 文章	有 两个 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
包含 两个 或 更 多 发布者 的 文章	与 两个 或 多个 出版商 合作 的 文章	与 两个 或 多个 出版商 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
什么 文章 是 由 efron 撰写 并 获得 奖项	埃夫隆 写 的 什么 文章 获奖	埃夫隆 写 的 什么 文章 获奖 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
命名 一篇 关于 多 变量 数据分析 的 文章	命名 一篇 关于 多元 数据分析 的 文章	请说出 一篇 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
多元 数据分析 的 作者	多元 数据分析 作者	多元 数据分析 作者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 之前 发表 的 文章	2004 年 以前 发表 的 文章	2004 年 以前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 最 多 两篇 出版物 中 找到 的 文章	最多 可 在 两种 出版物 中 找到 文章	最多 在 两个 出版物 中 找到 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string <= ) ( number 2 ) ) )
大多数 文章 引用 的 文章	大多数 文章 引用 的 文章	文章 被 引用 最多 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 引用 多 变量 数据分析 的 efron 文章	找 一篇 引用 多元 数据分析 的 efron 文章	找 一篇 引用 多元 数据分析 的 efron 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
多 变量 数据分析 引用 了 统计学 的 文章	多元 数据分析 引用 了 哪些 统计 年鉴	多 变量 数据分析 引用 了 什么 统计 年鉴 文章 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
命名 由 两位 以上 作者 制作 的 文章	说出 一篇 由 两个 以上 作者 撰写 的 文章	说出 一篇 由 两位 以上 作者 撰写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
什么 地方 有 两篇 文章	哪个 场馆 有 两条 规定	什么 场地 下 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
两篇 文章 的 作者	两篇 文章 的 作者	两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
具有 最大 场地 数量 的 文章	场地 最多 的 物品	文章 与 场地 的 最大 数量	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
谁 写 了 多 变量 数据分析	他 写 了 多元 数据分析	谁 写 的 多元 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) )
什么 年代 的 统计 文章 引用 了 多元 数据分析	《 统计学 年鉴 》 上 引用 的 多元 数据分析	什么 统计 年鉴 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
efron 引用 的 文章	埃夫隆 引文	efron 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
至少 有 两篇 文章 的 出版物	至少 有 两篇 文章 的 出版物	至少 有 两篇 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 efron 编写 的 多 变量 数据分析 的 文章	引用 efron 多元 数据分析 的 文章	文章 引用 多元 数据分析 写 的 efron	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
两位 作者 有 哪些 文章	什么 文章 有 两个 作者	什么 文章 有 两个 以下 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
找 一篇 引用 两篇 以上 文章 的 文章	找 一篇 引用 两篇 以上 文章 的 文章	找到 一篇 引用 超过 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 是 由 efron 写 的	埃夫隆 写 了 什么 文章	埃夫隆 写 了 什么 文章 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
引用 多 变量 数据分析 的 文章	引用 多元 数据分析 的 文章	引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 引用 了 多 变量 数据分析 引用 的 文章	哪 篇文章 引用 了 多元 数据分析 的 一篇 文章	什么 文章 引用 了 一篇 被 多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
文章 的 地点 是 统计 年鉴	地点 是 《 统计 年鉴 》 的 文章	文章 的 地点 是 统计 年报	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
什么 efron 文章 赢得 了 奖项	埃夫隆 的 哪 篇文章 获奖	efron 的 哪 篇文章 获奖 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
作者 最 多 两篇 文章	最 多 两篇 文章 的 作者	作者 最 多 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
发表 两篇 文章 的 场地	发表 两篇 文章 的 地点	会场 内 发表 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 统计 年鉴 的 文章	哪 篇文章 引用 了 一篇 统计 年鉴 的 文章	什么 文章 引用 了 一篇 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
文章 引用 了 统计 年鉴 中 发表 的 多 变量 数据分析	引用 《 统计 年鉴 》 中多 变量 数据分析 的 文章	发表 在 《 统计学 年鉴 》 上 的 多 变量 数据分析 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 被 大多数 文章 引用	哪一篇 文章 被 引用 的 文章 最 多	哪 篇文章 被 引用 的 次数 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 在 两个 场地	在 两个 地点 发表 的 文章	在 两个 地点 发表 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
文章 史上 发表 的 文章 引用 的 文章	《 统计 年鉴 》 载文 引文	发表 在 《 统计学 年鉴 》 上 的 文章 所 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	埃夫隆 引用 多元 数据分析 的 文章	efron 的 一篇 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
未 在 统计 年鉴 中 发表 的 文章	未 发表 在 《 统计 年鉴 》 上 的 文章	没有 发表 在 统计 年鉴 上 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
多 变量 数据分析 未 引用 的 文章	多 变量 数据分析 未 引用 的 文章	未 被 多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
什么 是 与 统计 年鉴 无关 的 文章	有些 与 统计 年鉴 无关 的 文章 是 什么	哪些 文章 与 统计 年鉴 无关	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
efron 的 一篇 文章 引用 了 多 变量 数据分析	埃夫隆 引用 多元 数据分析 的 一篇 文章	efron 的 一篇 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
最早 发表 的 文章	最早 发表 的 文章	最早 出版 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
文章 引用 了 两篇 以上 的 文章	引用 两篇 以上 文章 的 文章	文章 引用 了 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 与 多 变量 数据分析 具有 相同 场所 的 文章	找 一篇 与 多元 数据分析 相同 的 文章	找 一篇 与 多元 数据分析 地点 相同 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
多 变量 数据分析 引用 的 文章 是 什么 ？	多元 数据分析 引用 了 哪些 文章	多元 数据分析 引用 的 文章 有 哪些	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 后 发表 的 文章	2004 年 以后 发表 的 文章	2004 年 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
作为 efron 的 文章 的 地点 的 地点	作者 为 埃夫隆 的 文章 的 地点	地点 即 作者 为 efron 的 文章 的 地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
哪些 文章 的 作者 是 efron	哪 篇文章 的 作者 是 埃夫隆	哪 篇文章 的 作者 是 efron	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
哪位 作者 写 了 两篇 文章	哪个 作者 写 了 两篇 文章	哪位 作者 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 的 文章 作者	多元 数据分析 引文 作者	作者 的 文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 的 出版日期 大于 2004 年	哪 篇文章 的 出版日期 大于 2004 年	什么 文章 的 出版日期 超过 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 关于 多 变量 数据分析 的 统计 年鉴 的 文章	《 统计学 年鉴 》 上 关于 多元 数据分析 的 一篇 文章 是 什么	《 统计学 年鉴 》 上 一篇 关于 多元 数据分析 的 文章 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
多 变量 数据分析 场所	多元 数据分析 场所	多元 数据分析 场地	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
什么 人 写文章 而 不是 获奖	写文章 的 人 比 获奖 的 人	谁 写 的 文章 比得 了 奖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
由 多元 数据分析 引用 并 由 efron 撰写 的 文章	多 变量 数据分析 引文	多元 数据分析 引用 的 文章 ， efron 撰写	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
什么 文章 有 两个 引用	哪 篇文章 有 两处 引文	什么 文章 有 两个 引用	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 的 出版物	多元 数据分析 出版物	发表 多 变量 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
什么 文章 少于 两个 场地	哪 篇文章 少于 两个 地点	什么 文章 有 不到 两个 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
不到 两个 人写 的 文章	不到 两个 人写 的 文章	少于 两个 人写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
文章 由 两位 以上 作者 撰写	两位 以上 作者 的 文章	文章 由 两个 以上 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
出版日期 为 2004 年 至 2010 年 的 文章	2004 年 至 2010 年间 发表 的 文章	发表 日期 为 2004 年 至 2010 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
本文 引用 另外 两篇 文章	这 篇文章 引用 了 另外 两篇 文章	本文 还 引用 了 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多元 数据分析 引用 的 文章 ， 其 地点 是 统计 年鉴	以 《 统计 年鉴 》 为 中心 的 多元 数据分析 引文	多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
文章 未 发表 的 文章	未 发表 在 《 统计 年鉴 》 上 的 文章	未 在 《 统计 年鉴 》 上 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
引用 两篇 以上 文章 的 文章	引用 超过 两篇 文章 的 文章	引用 超过 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 引用 了 哪篇 获奖 文章	多元 数据分析 引用 哪篇 获奖 文章	多 变量 数据分析 引用 了 什么 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 的 出版日期 至少 为 2004 年	哪 篇文章 的 出版日期 至少 是 2004 年	什么 文章 至少 有 2004 年 的 出版日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
文章 没有 引用 多 变量 数据分析	文章 未 引用 多元 数据分析	文章 未 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2004 年 或 之前 发表 的 文章	2004 年 或 之前 发表 的 文章	在 2004 年 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
少于 两位 作者 的 文章	少于 两位 作者 的 文章	少于 两个 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
从 统计 年鉴 中 命名 一篇 文章	从 统计 年鉴 中 举出 一篇 文章	请说出 《 统计 年鉴 》 上 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
从 统计 年鉴 中 命名 一篇 关于 多 变量 数据分析 的 文章	从 《 统计学 年鉴 》 看 多元 数据分析	请说出 一篇 统计 年鉴 中 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 没有 引用 多 变量 数据分析	哪 篇文章 没有 引用 多元 数据分析	哪 篇文章 没有 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
哪 篇文章 引用 了 多 变量 数据分析	哪 篇文章 引用 了 多元 数据分析	哪 篇文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 有 多元 数据分析 的 场所	哪 篇文章 有 多元 数据分析 的 场所	什么 文章 有 一个多元 数据分析 的 场所	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
在 多 变量 数据分析 中 发表 了 哪些 文章	多元 数据分析 发表 了 哪些 文章	什么 文章 发表 在 《 多元 数据分析 》 上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
文章 发表 在 最少 的 场地	在 最少 的 地点 发表 的 文章	在 最少 场地 发表 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string venue ) ) )
由 efron 撰写 并 发表 于 统计 年鉴 的 文章	埃夫隆 撰写 并 发表 在 《 统计 年鉴 》 上 的 文章	由埃夫隆 撰写 并 发表 在 《 统计学 年鉴 》 上 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
找到 2004 年 之前 发表 的 文章	找 一篇 2004 年 以前 发表 的 文章	找 一篇 2004 年 以前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
具有 最大 出版日期 的 文章	发表 日期 最长 的 文章	发表 时间 最长 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
引文 最少 的 文章	引用 次数 最少 的 文章	引用 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 在 文章 中 引用 的 文章	埃夫隆 在 文章 中 引用 的 文章	efron 文章 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
什么 地方 有 两个 或 更 少 的 文章	哪个 场地 有 两篇 或 更 少 的 文章	什么 地方 有 两篇 或 两篇 以下 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 与 多 变量 数据分析 在 同一天 发布	在 多元 数据分析 的 同一天 发表 了 什么 文章	哪 篇文章 是 在 多元 数据分析 的 同一天 发表 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
文章 不 在 统计 年鉴	统计 年鉴 上 没有 的 文章	这 篇文章 不 在 《 统计 年鉴 》 上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string ! = ) en.venue.annals_of_statistics ) )
不到 两篇 出版物 的 文章	少于 两种 出版物 的 文章	发表文章 少于 两篇	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
在 大多数 文章 中 提到 了 哪 篇文章	大多数 文章 都 提到 哪一条	哪 篇文章 被 提到 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 的 文章 引用 了 多 变量 数据分析	埃夫隆 的 文章 引用 了 多元 数据分析	什么 efron 文章 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
包含 两篇 以上 文章 的 出版物	包含 两篇 以上 文章 的 出版物	发表 过 两篇 以上 文章 的 出版物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 2004 年 或 2010 年 发表 的 文章	查找 在 2004 年 或 2010 年 发表 的 文章	找到 一篇 发表 于 2004 年 或 2010 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
你 在 哪里 可以 看到 多 变量 数据分析	在 哪里 可以 看到 多元 数据分析	在 哪里 可以 看到 多元 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
文章 引用 了 efron 的 多 变量 数据分析	文章 引用 了 efron 的 多元 数据分析	文章 引用 多元 数据分析 efron	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
最近 发表 的 文章	最近 发表 的 文章	最近 发表 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
哪位 作者 没有 写 多 变量 数据分析	哪个 作者 没有 写 多元 数据分析	哪位 作者 没有 写 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
由 多元 数据分析 作者 撰写 的 文章	多元 数据分析 作者 撰写 的 文章	多元 数据分析 作者 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string author ) ) ) )
超过 两篇 文章 的 作者	两篇 以上 文章 的 作者	作者 写过 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
哪 篇文章 发表 于 2004 年 的 统计 年鉴	哪 篇文章 发表 在 2004 年 的 《 统计 年鉴 》 上	哪 篇文章 发表 在 2004 年 的 统计 年 报上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
发表 于 引用 多 变量 数据分析 的 统计 年鉴 的 文章	发表 在 《 统计 年鉴 》 上 的 引用 多元 数据分析 的 文章	发表 在 《 统计学 年鉴 》 上 的 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
引用 多 变量 数据分析 引用 的 文章 是 什么 文章	引用 多元 数据分析 的 文章 引用 了 哪 篇文章	引用 了 多元 数据分析 的 文章 引用 了 什么 文章 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 少于 两位 作者	哪 篇文章 少于 两位 作者	什么 文章 少于 两个 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
说出 写过 两篇 文章 的 人	说出 写过 两篇 文章 的 人 的 名字	说出 写过 两篇 文章 的 人 的 名字	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
使用 多 变量 数据分析 的 研究 引用 的 文章	多 变量 数据分析 研究 引文	多 变量 数据分析 研究 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
引用 三篇 或 更 多 文章 的 文章	引用 三篇 或 更 多 文章 的 文章	引用 三篇 或 三篇 以上 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
最早 出版日期 的 文章 是 什么	最早 出版日期 的 文章 是 什么	最早 发表 日期 的 文章 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
将 一篇 关于 多 变量 数据分析 的 文章 的 作者 命名 为	一篇 关于 多元 数据分析 的 文章 的 作者	请说出 一篇 关于 多元 数据分析 的 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪些 文章 引用 了 两篇 或 更 少 的 文章	哪些 文章 引用 了 两篇 或 更 少 的 文章	哪些 文章 引用 了 两篇 或 更 少 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一篇 有 两位 以上 作者 的 文章	命名 一篇 有 两个 以上 作者 的 文章	说出 一篇 有 两位 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
多 变量 数据分析 的 公布 日期	多元 数据分析 发表 日期	多元 数据分析 的 发表 日期	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
统计 年鉴 中 的 文章 引用 的 文章	《 统计 年鉴 》 引文	《 统计学 年鉴 》 中 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
多元 数据分析 引用 的 文章 获奖	多 变量 数据分析 引文 获奖	被 多 变量 数据分析 引用 并 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
什么 地方 不到 两篇 文章	哪个 场地 的 文章 少于 两篇	什么 地方 有 不到 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 还有 其他 两篇 文章	哪 篇文章 中 还 引用 了 另外 两篇 文章	什么 文章 有 两个 其他 的 文章 被 引用	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 写 了 两篇 以上 的 文章	作者 写 了 两篇 以上 的 文章	什么 作者 写 了 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 统计 年鉴 的 多 变量 数据分析 的 文章	《 统计 年鉴 》 中 引用 多元 数据分析 的 文章	引用 统计学 年鉴 中 的 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
发表 在 统计 年鉴 和 多 变量 数据分析 引用 的 文章	发表 在 《 统计 年鉴 》 上 并 被 多元 数据分析 引用 的 文章	发表 于 《 统计学 年鉴 》 并 被 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 发表 在 统计 年鉴 和 2004 年	统计 年鉴 和 2004 年 发表 了 哪些 文章	在 《 统计 年鉴 》 和 2004 年 发表 了 什么 文章 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 发表 于 2004 年 ， 引用 了 多 变量 数据分析	2004 年 发表 的 文章 引用 了 多元 数据分析	发表 于 2004 年 的 一篇 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
获奖 文章 引用 了 什么 文章	获奖 文章 引用 了 哪 篇文章	获奖 文章 引用 了 哪 篇文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
efron 发布 的 获奖 文章	埃夫隆 发表 获奖 文章	获奖 文章 发表 efron	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string won_award ) ) )
哪些 文章 引用 至少 两篇 文章	哪些 文章 至少 引用 了 两篇 文章	哪些 文章 至少 引用 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
命名 一篇 关于 2004 年 出版 的 多 变量 数据分析 的 文章	2004 年 发表 的 一篇 关于 多元 数据分析 的 文章	请说出 一篇 2004 年 发表 的 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
由 efron 或 lakoff 撰写 的 文章	埃夫隆 或 莱 考夫 的 文章	由 efron 或 lakoff 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
谁 撰写 了 两篇 或 更 少 的 文章	写 了 两篇 或 更 少 的 文章	谁 写 了 两篇 或 更 少 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 的 出版日期 是 2004 年	哪 篇文章 的 出版日期 是 2004 年	什么 文章 的 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
在 2004 年 命名 一篇 关于 多 变量 数据分析 的 文章	2004 年 发表 的 一篇 关于 多元 数据分析 的 文章	请说出 一篇 2004 年 的 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 efron 或 lakoff 写 的 文章	埃夫隆 或 莱 考夫 写 了 些 什么 文章	efron 和 lakoff 写 了 哪些 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.concat en.person.efron en.person.lakoff ) ) )
将 两篇 文章 的 作者 命名 为	说出 两篇 文章 的 作者	说出 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
至少 有 两位 作者 撰写 的 文章	至少 两位 作者 撰写 的 文章	由 至少 两个 作者 所写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string >= ) ( number 2 ) ) )
获得 多元 数据分析 引用 奖项 的 文章	通过 多元 数据分析 获得 奖项 的 文章	多 变量 数据分析 中 获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
引用 多 变量 数据分析 的 文章	引用 多元 数据分析 的 文章	引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
本文 的 作者 是 efron ， 其 出版日期 是 2004 年	文章 作者 为 埃夫隆 ， 发表 日期 为 2004 年	作者 为 efron ， 发表 日期 为 2004 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
引用 2004 年 发表 的 多 变量 数据分析 的 文章	引用 2004 年 发表 的 多元 数据分析 的 文章	这 篇文章 引用 了 2004 年 发表 的 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 提到 了 获奖 的 多元 数据分析 文章	提到 获奖 的 多元 数据分析 文章	提到 获奖 的 多元 数据分析 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
文章 少于 两个 场地	少于 两个 地点 的 物品	文章 有 少于 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
2004 年 出版 的 场地	2004 年 公布 的 场馆	发表 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
引用 统计 年鉴 中 的 多元 数据分析 的 文章	统计 年鉴 中 引用 多元 数据分析 的 文章	在 《 统计 年鉴 》 上 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 是 efron 撰写 的 文章	埃夫隆 写 的 文章 是 什么	埃夫隆 写 的 文章 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
一两篇 文章 的 作者	一两篇 文章 的 作者	一到 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 2004 年 发表 的 统计 年鉴 中 找到 一篇 文章	在 2004 年 出版 的 《 统计 年鉴 》 上 找到 一篇 文章	在 2004 年 出版 的 《 统计 年鉴 》 上 找 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
至少 有 两篇 文章 引用 的 文章	至少 两篇 文章 引用 的 文章	至少 两篇 文章 引用 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获得 奖项 并 引用 多 变量 数据分析 的 文章	获奖 并 引用 多元 数据分析 的 文章	获奖 并 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
找 一篇 引用 两次 或 更少 引文 的 文章	找 一篇 引用 次数 不 超过 两次 的 文章	找到 一篇 被 引用 次数 不 超过 两次 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
将 至少 两篇 文章 的 作者 命名 为	指定 至少 两篇 文章 的 作者	说出 至少 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 两个 场地 的 文章	两个 场地 的 物品	有 两个 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
引用 多元 数据分析 的 文章 的 地点	引用 多元 数据分析 文章 的 地点	那 是 引用 多元 数据分析 的 文章 会场	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
哪篇 efron 文章 引用 了 多 变量 数据分析	哪个 efron 文章 引用 了 多元 数据分析	efron 的 哪 篇文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
没有 创作 多 变量 数据分析 的 人	没有 进行 多元 数据分析 的 人	没有 进行 多元 数据分析 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
什么 文章 是 由 efron 撰写 的 ， 出版日期 为 2004 年	什么 文章 是 埃夫隆 写 的 ， 出版日期 是 2004 年	什么 文章 是 efron 写 的 ， 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 不是 由 efron 撰写 的	非埃夫隆 撰写 的 文章	不是 efron 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
引用 单篇 文章 的 文章	引用 一篇 文章 的 文章	引用 一篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
其他 两篇 文章 引用 的 文章	其他 两篇 文章 引用 的 文章	其他 两篇 文章 引用 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
有 哪些 文章 引用 了 另外 两篇 文章	什么 文章 引用 了 另外 两篇 文章	什么 文章 引用 了 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
最新 出版日期 的 文章	最新 出版日期 的 文章	最新 出版日期 的 文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
与 多 变量 数据分析 在 同一 场所 发表 的 文章	多 变量 数据分析 在 同一 地点 发表 的 文章	文章 发表 地点 与 多元 数据分析 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 有 超过 两位 作者	哪 篇文章 有 两个 以上 的 作者	什么 文章 有 两个 以上 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
文章 引用 2004 年 发表 的 文章	引用 2004 年 发表文章 的 文章	引用 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
一篇 文章 撰写 的 文章	一个 人写 的 文章	作者 :	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
什么 地方 至少 有 两篇 文章	什么 地方 至少 有 两篇 文章	什么 地点 至少 有 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
那里 有 多少 期刊	有 多少 期刊	有 多少 种 期刊	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ) )
在 统计 场地 的 年鉴 中 找到 一篇 文章	在 《 统计 年鉴 》 上 找到 一篇 文章	在 《 统计 年鉴 》 上 找到 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 是 有 两个 场地 的 文章	有 两个 地点 的 文章 是 什么	什么 文章 有 两个 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
什么 文章 发表 于 2010 年 或 更 早	2010 年 或 更 早 发表 的 文章	2010 年 或 更 早 的 时候 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
只有 一篇 文章 的 作者	只有 一篇 文章 的 作者	只有 一篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
efron 撰写 的 文章	埃夫隆 的 文章	文章 作者 efron	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
场地 数量 最少 的 文章	场地 最少 的 物品	地点 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string venue ) ) )
什么 文章 引用 了 efron 撰写 的 文章	哪 篇文章 引用 了 埃夫隆 的 文章	什么 文章 引用 埃夫隆 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
有关 efron 统计 年鉴 的 文章	埃夫隆 关于 统计 年鉴 的 文章	埃夫隆 关于 统计 年鉴 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string author ) ( string = ) en.person.efron ) )
找到 没有 多 变量 数据分析 的 场所	找 一个 没有 多元 数据分析 的 场所	找 一个 没有 多元 数据分析 的 场地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
这 篇文章 的 日期 是 什么 时候	文章 的 日期 是 什么 时候	这 篇文章 是 几号 发表 的	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
2004 年 未 发表 的 文章	2004 年 未 发表 的 文章	2004 年 未 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	埃夫隆 的 一篇 文章 引用 了 多元 数据分析	efron 的 一篇 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
什么 文章 赢得 了 奖项 ， 关于 统计 年鉴	哪 篇文章 获奖 ， 是 关于 统计 年鉴 的	什么 文章 获奖 了 ， 是 关于 统计 年鉴 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
引用 两篇 以上 文章 的 文章	引用 两篇 以上 文章 的 文章	引用 超过 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
找到 多 变量 数据分析 后 发表 的 文章	多 变量 数据分析 后 发表文章	找 一篇 多元 数据分析 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
文章 在 两个 或 两个 以下 的 场地 发表	在 两个 或 更少 地点 发表 的 文章	在 两个 或 两个 以下 地点 发表 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string <= ) ( number 2 ) ) )
多 变量 数据分析 后 发表 的 文章	多元 数据分析 后 发表文章	多 变量 数据分析 后 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
什么 文章 网站 只有 一篇 文章	什么 文章 只 发布 一篇 其他 文章	什么 文章 网站 只有 一个 其他 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多元 数据分析 引用 的 获奖 文章	多 变量 数据分析 引文 获奖	获奖 文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 有 最 多 的 场地	哪 篇文章 有 最 多 的 地方	什么 文章 有 最 多 的 场地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
文章 引用 的 文章 于 2004 年 出版	2004 年 发表 的 文章 引用 的 文章	被 发表 于 2004 年 的 文章 所 引用	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
文章 作者 最少	作者 最少 的 文章	作者 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
文章 引用 了 统计 年鉴 中 发表 的 多 变量 数据分析	引用 《 统计 年鉴 》 中多 变量 数据分析 的 文章	发表 在 《 统计学 年鉴 》 上 的 多 变量 数据分析 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
将 作者 的 文章 命名 为 统计 年鉴	把 作者 的 文章 作为 统计 年鉴	请说出 以 《 统计 年鉴 》 作为 其 文章 发表 地点 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
用 efron 命名 一篇 文章	以 efron 命名 文章	说出 一篇 埃夫隆 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
efron 的 文章	埃夫隆 的 文章	本文 由埃夫隆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
哪位 作者 最多 写 了 两篇 文章	哪个 作者 最多 写 两篇 文章	哪位 作者 最多 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 一位 或 两位 作者 撰写 的 文章	一两个 作者 写 的 文章	一两个 作者 写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
多 变量 数据分析 引用 的 文章 的 位置 是 什么	多元 数据分析 引用 的 一篇 文章 是 在 什么 地方 发表 的	多元 数据分析 引用 的 文章 的 地点 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 地方 是 多 变量 数据分析	多元 数据分析 在 哪	在 什么 地方 进行 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 了 多篇 关于 多 变量 数据分析 的 文章	2004 年 发表 了 什么 关于 多元 数据分析 的 文章	2004 年 发表 了 一篇 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 文章 被 引用 了 两次	哪 篇文章 被 引用 了 两次	什么 文章 被 引用 了 两次	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 2004 年	2004 年 发表 的 文章	2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
与 多 变量 数据分析 文章 具有 相同 发布 日期 的 文章	发表 日期 与 多元 数据分析 文章 相同 的 文章	与 多元 数据分析 文章 发表 日期 相同 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
没有 引用 多 变量 数据分析 的 文章	不 引用 多元 数据分析 的 文章	不 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string ! = ) en.article.multivariate_data_analysis ) )
多 变量 数据分析 的 发布 日期 是 什么	多元 数据分析 的 出版日期 是 什么 时候	多元 数据分析 的 发表 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
什么 文章 是 由 efron 写 的	埃夫隆 写 了 什么 文章	埃夫隆 写 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
2004 年 发表 的 文章 的 地点 是 什么	2004 年 发表 这 篇文章 的 地点 是 什么	这篇 发表 于 2004 年 的 文章 的 地点 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
引用 多 变量 数据分析 的 作家	引用 多元 数据分析 的 作者	引用 多元 数据分析 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
在 多 变量 数据分析 之前 发表 的 文章	多元 数据分析 之前 发表 的 文章	多元 数据分析 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
谁 是 efron 撰写 的 文章 的 另 一位 作者	谁 是 埃夫隆 文章 的 另 一位 作者	efron 写 的 这 篇文章 的 另 一个 作者 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
什么 文章 的 作者 数量 最少	哪 篇文章 的 作者 最少	什么 文章 的 作者 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
什么 文章 引用 了 至少 另外 两篇 文章	哪 篇文章 至少 引用 了 另外 两篇 文章	什么 文章 至少 引用 了 另外 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 至少 两篇 文章 的 文章	引用 至少 两篇 文章 的 文章	引用 至少 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
作者 于 2004 年 发表 了 一篇 文章	什么 作者 在 2004 年 发表 了 一篇 文章	哪位 作者 在 2004 年 发表 了 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
文章 说 城市 最 多 两篇 文章	城市 最 多 两篇 文章	文章 最 多 两篇	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获奖 文章 是 由 efron 撰写 的	埃夫隆 写 了 什么 获奖 文章	埃夫隆 写 了 一篇 多么 获奖 的 文章 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string author ) ( string = ) en.person.efron ) )
文章 的 作者 是 efron	作者 是 埃夫隆 的 文章	这 篇文章 的 作者 是 埃夫隆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
多 变量 数据分析 文章 的 发布 日期 是 什么	多 变量 数据分析 文章 的 发表 日期 是 什么 时候	一篇 多元 数据分析 文章 的 发表 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) )
什么 文章 有 最早 的 出版日期	哪 篇文章 的 出版日期 最早	什么 文章 有 最 古老 的 出版日期	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
获奖 文章	获奖 文章	获奖 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) )
efron 于 2004 年 发表 的 文章	埃夫隆 2004 年 发表 的 文章	efron 在 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
引用 2004 年 发表 的 多 变量 数据分析 的 文章	一篇 引用 2004 年 发表 的 多元 数据分析 的 文章	一篇 引用 了 2004 年 发表 的 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
多元 数据分析 的 同一 篇文章	多 变量 数据分析 的 同一 作者 的 文章	文章 由 同一 作者 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
文章 引用 了 作者 efron 的 多 变量 数据分析	引用 了 作者 Efron 的 多元 数据分析 的 文章	这 篇文章 引用 了 作者 efron 的 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
作者 写 了 一篇 关于 城市 多元 数据分析 的 文章	作者 写 了 一篇 文章 城市 多元 数据分析	什么 作者 写 了 一篇 关于 城市 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 是 人数	人数 是 多少	这个 人 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
文章 发表 于 统计 年鉴	发表 在 《 统计 年鉴 》 上 的 文章	发表 在 《 统计学 年鉴 》 上 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 是 只有 一位 作者 撰写 的 文章	只有 一个 作者 写 的 文章 是 什么	什么 是 只有 一个 作者 写 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
在 最少 数量 的 其他 文章 中 提到 了 哪 篇文章	其他 文章 中 最少 提到 哪一条	其他 文章 中 提到 最少 的 文章 是 哪一篇	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 统计 年鉴 中 找到 一篇 文章 的 地点	在 统计 年鉴 上 找到 一篇 文章 的 地点	在 《 统计 年鉴 》 上 发表 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
有 efrons 文章 的 场地	有 埃夫隆 文章 的 场馆	有 efrons 文章 的 场所	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
什么 是 场地 数量	场馆 号 是 多少	比赛场地 编号 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ) )
2004 年 的 一篇 文章 引用 了 什么 文章	2004 年 的 一篇 文章 引用 了 哪 篇文章	2004 年 的 一篇 文章 引用 了 哪 篇文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
两篇 文章 的 场地	两篇 文章 的 地点	两篇 文章 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 efron 撰写 并于 2004 年 出版 的 文章	埃夫隆 撰写 并于 2004 年 发表 的 文章	由 efron 撰写 并于 2004 年 出版 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string author ) ( string = ) en.person.efron ) )
命名 一篇 未 在 2004 年 发表 的 文章	说出 一篇 2004 年 未 发表 的 文章	说出 一篇 没有 在 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪个 场地 是 两篇 以上 文章 发表 的 地方	哪个 地点 是 发表 两篇 以上 文章 的 地点	哪个 场地 是 发表 两篇 以上 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 efron 撰写 文章 的 文章	引用 埃夫隆 文章 的 文章	引用 埃夫隆 文章 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
2004 年 或 之前 发表 的 文章	2004 年 或 之前 发表 的 文章	在 2004 年 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
说出 写过 不 超过 两篇 文章 的 人	说出 写过 不 超过 两篇 文章 的 人 的 名字	说出 不 超过 两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 efron 撰写 的 文章 ， 并 以 统计 年鉴 为 其 场地	文章 由埃夫隆 撰写 ， 以 《 统计 年鉴 》 为 中心	文章 作者 efron 和 统计 年鉴 作为 其 会场	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
哪 篇文章 的 出版日期 与 多 变量 数据分析 相同	哪 篇文章 的 发表 日期 和 多元 数据分析 一样	哪 篇文章 的 发表 日期 与 多元 数据分析 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
场地 少于 两篇	少于 两篇 文章 的 地点	( 二 ) 比赛场地 少于 二项 规定 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 期刊 是 多 变量 数据分析 发表 在	多 变量 数据分析 发表 于	多 变量 数据分析 发表 在 什么 杂志 上	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
有 两个 出版商 的 文章	两个 出版商 的 文章	文章 与 两个 出版商	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
什么 是 少于 两篇 文章 的 场地	少于 两篇 文章 的 场所 是 什么	什么 是 少于 两篇 文章 的 场地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章	引用 多元 数据分析 的 文章	引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
efron 撰写 的 文章 ， 多元 数据分析 引用	多 变量 数据分析 引用 efron 的 文章	多元 数据分析 引用 efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
除了 多 变量 数据分析 场地 之外 的 场地	多 变量 数据分析 场地 以外 的 场地	场馆 以外 的 多元 数据分析 场馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
首发 文章	第一篇 发表 的 文章	第一次 发表文章	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
提到 至少 另外 两篇 文章 的 文章	至少 提到 另外 两篇 文章 的 文章	至少 提到 另外 两篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 两个 或 多个 场地 中 找到 一篇 文章	说出 在 两个 或 多个 地点 发现 的 物品 的 名称	说出 在 两个 或 两个 以上 场所 发现 的 一篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
发表 日期 至少 为 2004 年 的 文章	出版日期 至少 为 2004 年 的 文章	发表 日期 不少 于 2004 年 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 关于 多 变量 数据分析 的 出版物 中 引用 的 文章	在 一篇 关于 多元 数据分析 的 文章 中 引用 了 什么	关于 多元 数据分析 的 出版物 中 引用 的 文章 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 文章 引用 次数 最少	哪 篇文章 被 引用 最少	什么 文章 被 引用 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 地方 有 文章 发表 于 2004 年	2004 年 发表文章 的 地点	2004 年 什么 地方 有 文章 发表	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找到 一篇 efron 文章	找 一篇 埃夫隆 的 文章	找 一篇 efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) )
有 两个 场地 的 文章	两个 地点 的 文章	文章 有 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( number 2 ) ) )
谁 是 谁 的 地点 的 作者 是 统计 年鉴	谁 是 《 统计 年鉴 》 的 作者	谁 是 《 统计 年鉴 》 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
有 两位 以上 作者 的 文章	有 两个 以上 作者 的 文章	有 两个 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
什么 文章 的 作者 最少	哪 篇文章 作者 最少	什么 文章 的 作者 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
什么 文章 是 由 efron 撰写 并 讨论 统计 年鉴	埃夫隆 写 了 什么 文章 并 讨论 了 统计 年鉴	埃夫隆 写 了 什么 文章 讨论 统计 年鉴	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
efron 引用 多元 数据分析 的 文章	埃夫隆 引用 多元 数据分析 文章	文章 由 efron 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 文章 引用 了 多 变量 数据分析	2004 年 发表文章 引用 多元 数据分析	发表 于 2004 年 的 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
文章 没有 引用 多 变量 数据分析	不 引用 多元 数据分析 的 文章	未 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2004 年 之前 或 2010 年 之前 发表 的 文章	2004 年 以前 或 2010 年 以前 发表 的 文章	2004 年 以前 或 2010 年 以前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 多 变量 数据分析 的 场所	多元 数据分析 的 场所 是 什么	多元 数据分析 的 范围 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
文章 与 会场 作为 统计 年鉴	以 会场 为 统计 年鉴 的 文章	文章 以 会场 为 统计 年报	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
不 发布 多 变量 数据分析 的 出版物	不 发布 多元 数据分析 的 出版物	未 发表 多元 数据分析 的 出版物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2004 年 发表 的 获奖 文章	2004 年 发表 获奖 文章	2004 年 发表 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string won_award ) ) )
多 变量 数据分析 作者 撰写 的 文章	多元 数据分析 作者 的 文章	多元 数据分析 的 作者 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
命名 一篇 关于 赢得 奖项 的 多 变量 数据分析 的 文章	举出 一篇 获奖 的 关于 多元 数据分析 的 文章	请说出 一篇 获奖 的 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
多元 数据分析 引用 的 获奖 文章	多 变量 数据分析 引文 获奖	获奖 文章 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
您 可以 在 哪个 场所 找到 多 变量 数据分析	你 能 在 什么 地方 找到 多元 数据分析	在 什么 地方 可以 找到 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 引用 不到 两篇 其他 文章	哪 篇文章 引用 的 文章 少于 另外 两篇	什么 文章 引用 少于 两篇 其他 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 有 两个 以上 的 场地	两个 以上 地点 的 文章	文章 与 两个 以上 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string > ) ( number 2 ) ) )
作者 写 了 关于 统计 年鉴 的 文章	作者 写 的 关于 统计 年鉴 的 文章	这位 作家 写 的 统计 年鉴 多棒 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
文章 的 场地 是 多元 数据分析 的 场所	多 变量 数据分析 的 地点 是 地点 的 文章	以 场地 为 场地 即 为 多元 数据分析 场地 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
什么 地方 包括 多 变量 数据分析	多 变量 数据分析 的 场所	什么 场地 包含 多元 数据分析	( call SW.listValue ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) )
哪 篇文章 是 由 最少 数量 的 作者 撰写 的	哪 篇文章 的 作者 最少	哪 篇文章 的 作者 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
谁 与 efron 合着 过 文章	他 和 埃夫隆 合著 了 一些 文章	谁 与 efron 合著 过 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
使用 多 变量 数据分析 在 文章 中 引用 的 获奖 文章	多 变量 数据分析 在 文章 中 引用 的 获奖 文章	获奖 文章 引用 的 文章 使用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
获奖 文章 引用 的 文章	获奖 文章 引文	获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪 篇文章 引用 了 一篇 获奖 的 文章	哪 篇文章 引用 了 一篇 获奖 的 文章	哪 篇文章 引用 了 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
两篇 文章 的 场地	两篇 文章 的 地点	两篇 文章 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
谁 写 了 最少 的 文章	他 写 的 文章 最少	谁 写 的 文章 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string author ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
列出 2004 年 发表 的 关于 多 变量 数据分析 的 文章	2004 年 发表 的 一篇 关于 多元 数据分析 的 文章	请说出 2004 年 发表 的 一篇 关于 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
什么 地方 是 最 多 的 文章	什么 地方 的 文章 最 多	什么 地点 的 文章 数量 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
由 多元 数据分析 引用 的 efron 撰写 的 文章	埃夫隆 的 文章 被 多元 数据分析 引用	由 efron 撰写 的 被 多 变量 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
与 多 变量 数据分析 同时 或 之前 发表 的 文章	多 变量 数据分析 前后 同期 发表 的 文章	与 多元 数据分析 同时 或 之前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
发表 日期 为 2004 年 的 文章 ， 并 作为 统计 年报 的 场地	第条 公布 日期 为 2004 年 ， 地点 为 统计 年鉴	文章 发表 日期 为 2004 年 ， 地点 为 《 统计 年鉴 》	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
找到 一篇 有 两个 或 两个 以上 场地 的 文章	给 我 找 一篇 有 两个 或 更 多 地点 的 文章	为 我 找 一篇 有 两个 或 更 多 地点 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
找到 efron 的 一篇 文章	找 一篇 埃夫隆 的 文章	找到 一篇 efron 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string author ) ( string = ) en.person.efron ) )
发表 日期 为 2004 年 或 2010 年 的 文章	发表 日期 为 2004 年 或 2010 年 的 文章	发表 日期 为 2004 年 或 2010 年 的 文章	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
什么 文章 有 两位 作者 或 更少	哪 篇文章 有 两个 或 更 少 的 作者	什么 文章 有 两个 作者 或 更少	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string <= ) ( number 2 ) ) )
引用 多 变量 数据分析 的 文章 的 地点 是 什么 ？	引用 多元 数据分析 的 文章 是 在 什么 地方 发表 的	引用 多元 数据分析 的 文章 的 地点 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
文章 发表 于 2004 年 ， 并 被 多元 数据分析 引用	2004 年 发表 多 变量 数据分析 引文	论文 发表 于 2004 年 ， 被 多 变量 数据分析 引用	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 在 大多数 场地	什么 文章 在 大多数 场合	什么 文章 在 最 多 的 场所	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
哪位 作者 在 两篇 文章 中写 过	哪个 作者 写 了 两篇 文章	哪个 作者 写 了 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发现 于 大多数 出版物 中	在 大多数 出版物 中 找到 的 文章	文章 发现 在 大多数 出版物	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( string venue ) ) )
提到 三个 或 更 多 城市 的 文章	提到 三个 或 更 多 城市 的 文章	提及 三个 或 三个 以上 城市 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 的 出版日期 是 2003 年 并 获得 了 奖项	哪 篇文章 的 出版日期 是 2003 年 并 获奖	什么 文章 是 2003 年 发表 并 获奖 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string won_award ) ) )
多 变量 数据分析 引用 的 文章 作者	多元 数据分析 引文 作者	多 变量 数据分析 引用 文章 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
引用 的 文章 以及 引用 多 变量 数据分析	引文 及 引文 多元 数据分析	文章 引用 以及 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	埃夫隆 引用 多元 数据分析 的 文章	efron 的 文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
两篇 文章 的 作者	两篇 文章 的 作者	两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
谁 写 了 两篇 以上 的 文章	写 了 两篇 以上 的 文章	谁 写 过 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
在 统计 年鉴 中 命名 文章	统计 年鉴 中 的 冠名 文章	在 《 统计 年鉴 》 上 发表文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
除 2004 年 以外 发表 的 文章	除 2004 年外 发表 的 文章	发表 论文 ( 2004 年 除外 )	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
获奖 文章 引用 的 文章	获奖 文章 引用 的 文章	获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
两篇 文章 的 作者	两篇 文章 的 作者	两篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 发表 于 多 变量 数据分析 的 日期	发表 在 《 多元 数据分析 》 上 的 文章	文章 发表 日期 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) )
什么 文章 引用 了 统计 年鉴 的 一篇 文章	哪 篇文章 引用 了 《 统计 年鉴 》 中 的 一篇 文章	什么 文章 引用 《 统计 年鉴 》 上 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ) )
2004 年 之后 发表 了 什么 文章	2004 年 以后 发表 了 什么 文章	2004 年 后 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
文章 引用 2004 年 发表 的 文章	引用 2004 年 发表文章	引用 2004 年 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 文章 获奖	哪 篇文章 获奖	什么 文章 获奖 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) )
多 变量 数据分析 中 引用 的 获奖 文章	多元 数据分析 中 的 获奖 文章	多 变量 数据分析 中 引用 的 获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string won_award ) ) )
在 2004 年 或 之前 发表 了 什么 文章	2004 年 或 之前 发表 的 文章	2004 年 以前 发表 过 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
2004 年 以后 发布 了 多 变量 数据分析 城市 文章	2004 年 后 发表 的 多 变量 数据分析 城市 论文	2004 年 后 发表 的 多 变量 数据分析 城市 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 引用 了 多元 数据分析 引用 的 文章	多 变量 数据分析 引用 的 文章	引用 多元 数据分析 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
引用 最少 文章 的 文章	引用 文章 最少 的 文章	引用 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cites ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多元 数据分析 的 文章 获奖	哪篇 引用 多元 数据分析 的 文章 获奖	哪篇 引用 多元 数据分析 的 文章 获奖 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
在 至少 两篇 文章 中 提到 的 场地	至少 在 两篇 文章 中 提到 的 地点	在 至少 两篇 文章 中 提到 的 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 两篇 以上 的 其他 文章	哪 篇文章 引用 了 另外 两篇 以上 的 文章	什么 文章 引用 了 两篇 以上 的 其他 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
引用 多 变量 数据分析 的 文章 作者	引用 多元 数据分析 的 文章 作者	文章 作者 引用 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ) )
谁 写 了 一篇 引用 多 变量 数据分析 的 文章	他 写 了 一篇 引用 多元 数据分析 的 文章	谁 写 了 一篇 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
在 多 变量 数据分析 中 发表 的 文章	发表 在 《 多元 数据分析 》 上 的 文章	发表 在 《 多元 数据分析 》 杂志 上 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.getProperty en.article.multivariate_data_analysis ( string venue ) ) ) )
获奖 文章 的 作者	获奖 文章 作者	获奖 文章 的 作者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
出版物 与 efron 撰写 的 文章	发表 埃夫隆 的 文章 的 出版物	发表 由 efron 撰写 的 文章 的 出版物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
2004 年 之前 发表 的 文章	2004 年 以前 发表 的 文章	2004 年 以前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 文章 获奖 并且 出版日期 为 2004 年	哪 篇文章 获奖 ， 发表 日期 是 2004 年	什么 文章 得 了 奖 ， 出版日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) )
文章 发表 在 两个 或 两个 以上 的 场地	在 两个 或 多个 地点 发表 的 文章	在 两个 或 两个 以上 场所 发表 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
有 两位 作者 的 文章	有 两位 作者 的 文章	与 两位 作者 合著 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( number 2 ) ) )
什么 文章 是 关于 多 变量 数据分析	什么 是 关于 多元 数据分析 的 文章	什么 文章 是 关于 多元 数据分析 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
最 多 两篇 文章 的 作者	最 多 两篇 文章 的 作者	作者 最多 写 两篇 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 引用 了 统计 年鉴 中 发表 的 多 变量 数据分析	引用 《 统计 年鉴 》 上 发表 的 多元 数据分析 的 文章	文章 引用 了 发表 在 《 统计学 年鉴 》 上 的 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 文章 是 由 efron 和 城市 多元 数据分析 写 的	efron 和 cities 的 多元 数据分析	efron 和 cities 的 多元 数据分析 写 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( string author ) ( string = ) en.person.efron ) )
有 场地 的 文章	有 场地 的 物品	有 场地 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string < ) ( number 2 ) ) )
引用 多 变量 数据分析 的 文章	引用 多元 数据分析 的 文章	一篇 引用 多元 数据分析 的 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) )
什么 地方 有 最 多 的 文章	哪个 场馆 的 文章 最 多	什么 地方 的 文章 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string venue ) ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
被 授予 的 文章	被 授予 的 文章	获奖 文章	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string won_award ) ) )
什么 文章 引用 了 2004 年 的 一篇 文章	哪 篇文章 引用 了 2004 年 的 一篇 文章	什么 文章 引用 了 2004 年 的 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
发表 日期 为 2004 年 ， 作者 为 efron 的 文章	文章 发表 日期 为 2004 年 ， 作者 为 埃夫隆	发表 日期 为 2004 年 的 文章 ， 作者 为 efron	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string author ) ( string = ) en.person.efron ) )
什么 是 最新 发表 的 文章	最新 发表 的 文章 是 什么	最新 发表 的 文章 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string publication_date ) ) ) )
多元 数据分析 引用 并 在 统计 年鉴 中 发表 的 文章	多元 数据分析 引文 并 发表 在 《 统计学 年鉴 》 上	文章 被 多元 数据分析 引用 并 发表 在 《 统计学 年鉴 》 上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
统计 年鉴 或 计算 语言学	统计 年鉴 或 计算 语言学	统计 年鉴 或 计算 语言学	( call SW.listValue ( call SW.concat en.venue.annals_of_statistics en.venue.computational_linguistics ) )
只有 一篇 文章 的 作者	只有 一篇 文章 的 作者	只有 一篇 文章 的 作者	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
2004 年 之前 撰写 的 文章	2004 年 以前 的 文章	写于 2004 年 以前 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
efron 撰写 的 文章 引用 了 多 变量 数据分析	埃夫隆 的 哪 篇文章 引用 了 多元 数据分析	efron 的 哪 篇文章 引用 了 多元 数据分析	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ( string cites ) ( string = ) en.article.multivariate_data_analysis ) )
efron 的 获奖 文章	埃夫隆 获奖 文章	获奖 文章 efron	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string author ) ( string = ) en.person.efron ) )
在 多 变量 数据分析 之前 发表 了 什么 文章	多元 数据分析 之前 发表 了 什么 文章	多元 数据分析 之前 发表 了 什么 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.article.multivariate_data_analysis ( string publication_date ) ) ) ) )
说出 一些 非 efron 写 的 文章	说出 一些 不是 埃夫隆 写 的 文章	说出 一些 不是 efron 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string ! = ) en.person.efron ) )
引用 两篇 或 更少 文章 的 文章	引用 两篇 或 更少 文章 的 文章	引用 两篇 或 更少 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 文章 引用 了 多 变量 数据分析 中 引用 的 文章	哪 篇文章 引用 了 多元 数据分析 中 的 一篇 文章	什么 文章 在 多元 数据分析 中 引用 了 一篇 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
作家 于 2004 年 出版	2004 年 出版 的 作家	2004 年 出版 的 作家	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string publication_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
引用 最少 数量 文章 的 文章	引用 最少 文章 的 文章	引用 文章 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string cites ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
文章 数量 最少 的 文章	作者 最少 的 文章	作者 人数 最少 的 文章	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string min ) ( string author ) ) )
有 三个 或 更 多 作者 的 文章	有 三个 或 三个 以上 作者 的 文章	三名 以上 作者 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string > ) ( number 2 ) ) )
efron 引用 的 文章	埃夫隆 引用 的 文章	efron 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) en.person.efron ) ) )
提到 一篇 文章 的 文章	提到 一篇 文章 的 文章	提到 一篇 文章 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string cites ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
获奖 文章 引用 的 文章	获奖 文章 引文	获奖 文章 引用 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ) )
哪 篇文章 是 由 不到 两位 作者 撰写 的	哪 篇文章 的 作者 少于 两位	哪 篇文章 的 作者 少于 两位	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string < ) ( number 2 ) ) )
没有 发布 多 变量 数据分析 的 期刊	没有 发表 多元 数据分析 的 期刊	未 发表 多元 数据分析 的 期刊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
2010 年 之前 发表 的 文章	2010 年 以前 发表 的 文章	2010 年 以前 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
将 某人 不是 一篇 关于 多 变量 数据分析 的 文章 的 作者	说出 一个 不是 关于 多元 数据分析 的 文章 作者 的 名字	说出 一个 不是 多元 数据分析 文章 作者 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string ! = ) en.article.multivariate_data_analysis ) )
文章 中 至少 有 两个 场地	文章 中 至少 有 两个 地点	文章 中 至少 有 两个 地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string venue ) ( string >= ) ( number 2 ) ) )
什么 获奖 文章 有 统计 年鉴 作为 场地	哪篇 获奖 文章 有 统计 年鉴	哪篇 获奖 的 文章 有 《 统计 年鉴 》 这样 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string won_award ) ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
什么 地方 有 两篇 或 更 多 的 文章	哪个 场馆 有 两篇 或 多篇 文章	什么 地点 有 两篇 或 两篇 以上 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.venue ) ( string ! type ) ) ( call SW.reverse ( string venue ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多元 数据分析 引用 并 在 统计 年鉴 中 发表 的 文章	多元 数据分析 引文 并 发表 在 《 统计学 年鉴 》 上	文章 被 多元 数据分析 引用 并 发表 在 《 统计学 年鉴 》 上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string = ) en.article.multivariate_data_analysis ) ( string venue ) ( string = ) en.venue.annals_of_statistics ) )
不到 两篇 文章 引用 的 文章	少于 两篇 文章 引用 的 文章	被 少于 两篇 文章 引用 的 文章	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
说出 一篇 写过 不 超过 两篇 文章 的 人	写出 不 超过 两篇 文章 的 人 的 名字	写出 不 超过 两篇 文章 的 人 的 名字	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
多 变量 数据分析 作者 撰写 的 文章	多元 数据分析 作者 的 文章	多元 数据分析 的 作者 写 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( string author ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string author ) ) ( string = ) en.article.multivariate_data_analysis ) ) )
2004 年 至 2010 年 期间 发表 的 文章	2004 年 至 2010 年间 发表 的 文章	2004 年 至 2010 年间 发表 的 文章	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string publication_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
文章 引用 了 两次 以上	文章 被 引用 两次 以上	文章 被 引用 两次 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ( call SW.reverse ( string cites ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.article ) ( string ! type ) ) ) )
什么 餐有 两个 或 更 少 的 食谱 指定	哪 一餐 有 两个 或 两个 以下 的 食谱	什么 菜 有 两个 或 更 少 的 食谱 指定	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 等于 或 大于 米饭 布丁 的 烹饪 时间	给 我 看看 准备 时间 等于 或 大于 米饭 布丁 烹调 时间 的 食谱	给 我 看看 准备 时间 等于 或 大于 大米 布丁 的 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
找 一个 能 喂 两个 人 的 食谱	找 一个 能 养活 两个 人 的 食谱	找到 一个 可以 养活 两个 人 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 成分 是 两个 或 更 少 的 食谱	两个 或 更 少 的 食谱 中有 什么 成分	两份 或 更 少 的 食谱 里 有 什么 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 至少 可以 做 两餐	哪 种 食谱 至少 能 做 两顿 饭	哪些 食谱 至少 做 两顿 饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
该 配方 需要 哪 两种 成分	那个 食谱 需要 哪 两种 配料	这个 食谱 需要 哪 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
这 需要 多少 成分	那 需要 多少 原料	需要 多少 配料	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 午餐 食谱	给 我 看看 午餐 食谱	给 我 看看 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 配方 可以 在 比 米饭 布丁 更 短 的 时间 内 准备 好	什么样 的 食谱 比 米饭 布丁 能 在 更 短 的 时间 内 做好	什么 食谱 能 在 比米 布丁 更 短 的 时间 内 准备 好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
有 多少 食谱	有 多少 食谱	有 多少 种 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 发布 日期 至少 与 米饭 布丁 相同	什么 菜谱 贴 日期 至少 和 米饭 布丁 一样	什么 食谱 发布 日期 至少 和 大米 布丁 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
显示 可 用于 任何 膳食 的 食谱	显示 可 用于 任何 膳食 的 食谱	展示 可以 用于 任何 一餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 类型 的 菜 是 米饭 布丁	米饭 布丁 是 什么 菜	什么 类型 的 菜肴 是 大米 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
找到 一个 与 米饭 布丁 同时 烹饪 的 食谱	找 一个 和 米饭 布丁 用 同样 时间 烹调 的 食谱	找 一份 和 米饭 布丁 一样 耗时 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 最 多 三个	哪 种 食谱 最 多 三份	什么 食谱 最 多 供应 三份	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
午餐 食谱 的 发布 日期 是 2004 年	午餐 食谱 发布 日期 是 2004 年	午餐 食谱 发布 日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
告诉 我 需要 牛奶 的 午餐 食谱	给 我 看看 需要 牛奶 的 午餐 食谱	给 我 看看 需要 牛奶 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 是 最少 的 美食 配方	哪 种菜 谱 是 用 最少 的 菜 做 的	最 简单 的 烹饪法 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 食谱 分享 成分	什么 食谱 共享 配料	哪些 食谱 共享 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
米饭 布丁 配 的 是 什么 饭	米饭 布丁 配 什么 菜	米饭 布丁 和 什么 一起 吃	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
什么 食谱 烹饪 时间 至少 是 米饭 布丁 的 准备 时间	什么 食谱 烹饪 时间 至少 是 米饭 布丁 的 准备 时间	什么 食谱 烹调 时间 至少 是 米 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
在 多个 配方 中 使用 的 名称 成分	说出 多个 配方 中 使用 的 成分	说出 多个 食谱 中 使用 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 发布 日期 不是 在 2004 年	什么 食谱 发布 日期 不 在 2004 年	什么 食谱 发布 日期 不 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
最 多餐 的 配方	最 多餐 数 的 食谱	食谱 最多 的 一餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 有 一个 美食	什么 菜谱 只有 一道 菜	什么 食谱 有 一道 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
什么 食谱 需要 牛奶	什么 配方 需要 牛奶	什么 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
告诉 我 需要 两种 或 更 多 成分 的 食谱	给 我 看看 需要 两种 或 两种 以上 配料 的 食谱	给 我 看看 需要 两种 或 两种 以上 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 两种 食谱 所 需 的 成分	给 我 看看 两个 食谱 需要 的 配料	给 我 两种 食谱 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 少于 两餐 的 食谱	少于 两餐 的 食谱 是 什么	少于 两餐 的 食谱 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 比 米饭 布丁 需要 更长 的 时间 来 烹饪	什么 食谱 比 米饭 布丁 煮 得 长	还有 什么 食谱 能比 大米 布丁 煮 得 更 久 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
在 最少 数量 的 食谱 中 需要 哪 种 成分	在 最少 的 食谱 中 需要 哪 种 成分	在 最少 的 食谱 中 需要 哪 种 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 的 发布 日期 为 2004 年	哪个 配方 的 发布 日期 是 2004 年	哪款 食谱 的 发布 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
米饭 布丁 不 需要 哪 种 食品	米饭 布丁 不 需要 哪 种 食物	米 布丁 中 哪些 食物 是 不 需要 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 食谱 有 最 多 的 成分	什么 食谱 的 配料 最 多	什么 食谱 的 配料 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 餐 可以 找到 最大 的 食谱	最多能 找到 什么 菜 的 食谱	什么 菜 可以 找到 最多 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
煮 米饭 布丁 需要 多少 时间	做 米饭 布丁 要花 多少 时间	做米 布丁 要花 多少 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 食谱 不是 午餐 食谱	给 我 看看 不是 午餐 食谱 的 食谱	给 我 看看 不是 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
告诉 我 需要 牛奶 的 饭菜	给 我 看 需要 牛奶 的 饭菜	给 我 看看 需要 牛奶 的 食物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 是 米饭 布丁 的 成分	米饭 布丁 有 什么 成分	米 布丁 有 什么 配料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
用 准备 时间 作为 米饭 布丁 的 烹饪 时间 来 显示 食谱	以 米饭 布丁 的 烹调 时间 显示 菜谱	以米 布丁 的 烹调 时间 为 准备 时间 ， 展示 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
向 我 展示 烹饪 时间 大于 米饭 布丁 准备 时间 的 食谱	给 我 看看 烹饪 时间 比 米饭 布丁 准备 时间 长 的 食谱	给 我 看看 烹饪 时间 比 准备 米饭 布丁 的 时间 还长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
找到 2004 年 发布 的 午餐 食谱	查找 2004 年 发布 的 午餐 食谱	查找 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
食谱 中 的 成分 于 2004 年 发布	2004 年 公布 的 配方 中 的 成分	配方 中 的 成分 在 2004 年 张贴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 是 需要 最少 数量 成分 的 配方	需要 最少 配料 的 菜谱 是 什么	需要 最少 配料 的 配方 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 烹饪 时间 与 米饭 布丁 相同	什么 食谱 烹饪 时间 和 米饭 布丁 一样	什么 菜 的 烹饪 时间 和 大米 布丁 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
哪 种 食谱 需要 最多 的 成分	哪 种 配方 需要 的 配料 最 多	哪个 食谱 需要 的 配料 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
在 米饭 布丁 烹饪 时间 准备 的 食谱	米饭 布丁 烹调 时 的 食谱	食谱 在 米 布丁 烹饪 时间 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 是 适合 午餐 或 晚餐 的 食谱	什么 食谱 适合 午餐 或 晚餐	午餐 或 晚餐 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
少于 三种 食谱 所 需 的 成分	少于 三种 配方 所 需 的 配料	配料 要求 少于 三个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 午餐 食谱	午餐 食谱 是 什么	什么 是 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
展示 遵循 两种 以上 美食 的 食谱	显示 遵循 两种 以上 菜系 的 菜谱	展示 两种 以上 的 烹饪 方法	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
告诉 我 食谱 比 米饭 布丁 花费 更少 的 时间 准备	给 我 看看 比 米饭 布丁 花 更少 时间 准备 的 食谱	给 我 看看 比 大米 布丁 更省 时 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 需要 牛奶 做 午餐	午餐 吃 什么 配方 的 牛奶	什么 配方 的 午餐 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
给 我 看 的 食谱 不迟于 米饭 布丁 食谱	给 我 看看 不迟于 米饭 布丁 食谱 的 食谱	给 我 看看 不晚 于 大米 布丁 食谱 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
米饭 布丁 需要 什么 成分	米饭 布丁 需要 什么 配料	大米 布丁 需要 什么 原料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
食谱 的 总 烹饪 时间 是 多少 ？	这个 食谱 的 总 烹调 时间 是 多少	这个 食谱 的 总 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 是 2004 年 未 发布 的 食谱	2004 年 没有 公布 的 菜谱 是 什么	2004 年 没有 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
什么 是 用 过 的 牛奶 或 菠菜	用过 的 牛奶 或 菠菜 是 什么	用过 的 牛奶 或 菠菜 是 什么	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
哪个 食谱 有 最长 的 成分 列表	哪个 配方 的 配料表 最长	哪个 食谱 的 配料表 最长	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 是 米饭 布丁 的 美食	什么 是 米饭 布丁	什么 是 年糕	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
告诉 我 最 多 两餐 的 食谱	给 我 看看 最 多 两顿 饭 的 食谱	给 我 看看 最 多 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 食谱 不止 一餐	给 我 看看 能 吃 一顿 以上 的 食谱	给 我 看看 适合 不止 一餐 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 需要 少于 两种 成分	什么 食谱 需要 少于 两种 配料	什么 配方 需要 的 配料 少于 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 饭 是 米饭 布丁 或 乳蛋饼	米饭 布丁 或 蛋 奶酥 是 做 什么 的	米 布丁 或 乳蛋 饼 是 做 什么 饭 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
准备 米饭 布丁 需要 多长时间	准备 米饭 布丁 要 多长时间	做米 布丁 要 多长时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
告诉 我 食谱 中 最 需要 的 成分	给 我 看看 食谱 中 最 需要 的 配料	告诉 我 食谱 中 最 需要 的 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
配方 的 平均 准备 时间 是 多少	配方 的 平均 准备 时间 是 多少	一个 食谱 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
显示 烹饪 时间 最长 的 食谱	展示 烹饪 时间 最长 的 菜谱	展示 烹饪 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
该 配方 的 平均 准备 时间 是 多少 ？	那个 配方 的 平均 制备 时间 是 多少	那个 食谱 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
哪些 食谱 发布 到 2004 年 或 2010 年	哪些 食谱 发布 到 2004 年 或 2010 年	哪些 食谱 发布 到 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 少于 两个 食谱 中 发现 的 成分	不到 两份 食谱 中有 什么 成分	少于 两份 食谱 的 配料 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
首先 发布 的 食谱	第一次 发布 的 食谱	第一次 发布 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 食谱 需要 三种 或 更 多 成分	什么 食谱 需要 三种 或 三种 以上 的 配料	什么 食谱 需要 三种 或 更 多 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 发布 日期 是 2004 年 ， 需要 牛奶	什么 食谱 发布 日期 是 2004 年 ， 需要 牛奶	什么 食谱 发布 日期 是 2004 年 ， 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 饭有 两个 或 更 多 的 食谱	哪 一餐 有 两个 或 两个 以上 的 食谱	什么 菜 有 两个 或 更 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
最少 数量 的 食谱 所 需 的 成分	配方 最少 所 需 的 成分	配料 要求 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 或 乳蛋饼 配方 中 的 成分	米饭 布丁 或 乳蛋 饼 的 配方 中有 什么 成分	米 布丁 或 乳蛋 饼 的 配方 中 含有 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
列出 午餐 或 晚餐 的 食谱	列出 午餐 或 晚餐 的 食谱	列出 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
什么 食谱 比 米饭 布丁 需要 更 多 时间 准备	什么 食谱 比 米饭 布丁 需要 更 多 的 时间 来 准备	还有 什么 食谱 比 大米 布丁 更 费时间 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
烹饪 时间 的 配方 不 超过 米饭 布丁	烹饪 时间 不 超过 米饭 布丁 的 食谱	食谱 与 烹调 时间 不 超过 米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 属于 两种 以上 的 美食	哪些 菜谱 属于 两种 以上 的 菜系	哪些 食谱 属于 两种 以上 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
找 一顿 没有 米饭 布丁 的 饭	找 一顿 没有 米饭 布丁 的 饭	找 一顿 没有 米饭 布丁 的 饭	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
菠菜 或 牛奶	菠菜 或 牛奶	菠菜 和 牛奶	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
什么 是 米饭 布丁 的 烹饪 时间	米饭 布丁 的 烹调 时间 是 几点	米 布丁 的 烹调 时间 是 几点	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 需要 一种 成分 的 食谱	给 我 看看 需要 一种 配料 的 食谱	给 我 看看 需要 一种 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 需要 最长 的 准备 时间	什么 菜谱 的 制作 时间 最长	什么 配方 准备 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 是 两种 以上 菜肴 的 食谱	两种 以上 菜系 的 菜谱 是 什么	两种 以上 菜系 的 菜谱 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 是 米饭 布丁 的 准备 时间	米饭 布丁 的 准备 时间 是 什么 时候	米 布丁 的 准备 时间 是 什么 时候	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
查找 2004 年 后 发布 的 所有 食谱	查找 2004 年 后 发布 的 所有 食谱	查找 2004 年 以后 发布 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 2004 年 发布 的 食谱 所 需 的 成分	2004 年 公布 的 菜谱 需要 哪些 配料	2004 年 贴 出 的 配方 需要 什么 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪 一餐 不到 两个 食谱	哪 一餐 的 食谱 少于 两个	哪 一餐 少于 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 餐有 最少 的 食谱	哪 一餐 的 食谱 最少	哪 一餐 的 食谱 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 米饭 布丁 的 准备 时间	给 我 看看 米饭 布丁 的 准备 时间	告诉 我 米饭 布丁 的 准备 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
什么 成分 有 较 少 的 食谱	小 菜谱 里 有 什么 成分	少 的 食谱 里 有 什么 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 比 米饭 布丁 做 的 准备 时间 少	什么 菜谱 比 米饭 布丁 做 的 时间 少	还有 什么 食谱 比 大米 布丁 更省 时 的 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
食谱 的 平均 烹饪 时间 是 多少 ？	菜谱 的 平均 烹调 时间 是 几点	这个 食谱 的 平均 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
告诉 我 2004 年 之前 或 2010 年 之前 发布 的 食谱	展示 2004 年 之前 或 2010 年 之前 发布 的 食谱	给 我 看看 2004 年 或 2010 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 米饭 布丁 不 需要 的 成分	给 我 看看 米饭 布丁 不 需要 的 配料	给 我 看看 米 布丁 不 需要 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
哪个 配方 没有 在 2004 年 发布	哪 种 配方 在 2004 年 没有 发布	哪份 食谱 2004 年 没有 贴出来	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
哪个 食谱 是 在 米饭 布丁 的 发布 日期 发布 的	哪 种 食谱 是 在 米饭 布丁 的 发布 日期 发布 的	米 布丁 的 投寄 日期 是 哪份 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 2004 年 或 之后 发布 的 食谱	展示 2004 年 或 更 高 版本 发布 的 食谱	给 我 看看 2004 年 或 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
找到 在 米饭 布丁 配方 之前 张贴 的 食谱	找到 在 米饭 布丁 食谱 之前 贴出 的 食谱	查找 大米 布丁 食谱 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 是 最新 的 食谱	最新 的 食谱 是 什么	最新 的 配方 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
米饭 布丁 需要 多长时间 才能 准备 好	准备 米饭 布丁 要 多长时间	米 布丁 需要 多长时间 准备	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
烹饪 时间 的 食谱	食谱 烹调 时间	烹饪 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 食谱 是 最 古老 的	什么 配方 最老	什么 配方 是 最 古老 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 类型 的 菜 是 米饭 布丁	米饭 布丁 是 什么 菜	什么 类型 的 菜肴 是 大米 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 成分 只 用于 午餐	午餐 只 吃 什么 配料	什么 材料 只 用于 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
什么 是 不 使用 牛奶 作为 配料 的 配方	不 把 牛奶 当作 配料 的 食谱 是 什么	不 以 牛奶 为 原料 的 食谱 叫 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 需要 米饭 布丁 的 成分	什么 食谱 需要 米饭 布丁 的 成分	什么 食谱 需要 大米 布丁 的 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 食谱 分享 至少 两种 成分	什么 食谱 至少 有 两种 成分	什么 食谱 至少 有 两种 成分 是 相同 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
显示 发布 日期 在 2004 年 或 之前 的 食谱	显示 发布 日期 在 2004 年 或 之前 的 食谱	展示 发布 日期 在 2004 年 或 之前 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 的 总数	给 我 看看 食谱 的 总数	告诉 我 食谱 的 总数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
这 道菜 的 平均 烹饪 时间 是 多少 ？	那 道菜 的 平均 烹调 时间 是 几点	这 道菜 的 平均 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 时候 发布 米饭 布丁 的 配方	米饭 布丁 的 食谱 是 什么 时候 贴 的	米 布丁 的 食谱 是 什么 时候 贴出来 的	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 需要 牛奶 或 菠菜	什么 食谱 需要 牛奶 或 菠菜	什么 食谱 需要 牛奶 或 菠菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
告诉 我 为 一个 人 做饭 的 食谱	给 我 看 一个 人 吃饭 的 食谱	给 我 一个 食谱 ， 做 一个 人 的 一餐	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 饭有 两个 以上 的 食谱	什么 菜 有 两种 以上 的 食谱	什么 菜 有 两个 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 比 准备 米饭 布丁 花费 的 时间 更 少	哪 种 食谱 比做 米饭 布丁 花 的 时间 少	哪些 食谱 比 米饭 布丁 更省 时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
食谱 的 总 烹饪 时间 是 多少 ？	这个 食谱 的 总 烹调 时间 是 多少	这个 食谱 的 总 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
有 多少 成分	有 多少 种 配料	有 多少 成分	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
找 一份 用 牛奶 准备 的 午餐 食谱	找 一份 用 牛奶 做 的 午餐 食谱	找 一个 用 牛奶 做 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 需要 相同 或 更 少 的 时间 来 准备 米饭 布丁	做 米饭 布丁 要 多少 时间	什么 食谱 需要 相同 或 更 少 的 时间 来 准备 米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 是 2004 年 发布 的 配方 中 发现 的 成分	在 2004 年 发布 的 食谱 中 发现 了 什么 成分	在 2004 年 贴 出 的 菜谱 中 发现 了 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 2010 年 之前 发布 的 食谱	展示 2010 年前 发布 的 食谱	给 我 看看 2010 年 以前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 2004 年 发布 的 所有 食谱	给 我 看看 2004 年 发布 的 所有 食谱	给 我 看看 2004 年 发布 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
哪 一餐 是 将 牛奶 作为 其 成分 之一 的 配方	以 牛奶 为 原料 的 食谱 是 哪 一餐	哪 一餐 是 以 牛奶 为 原料 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 为 午餐 做点 什么	什么 食谱 做 午餐	什么 食谱 做 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 在 比 米饭 布丁 更 短 的 时间 内 烹饪	什么 菜谱 比 米饭 布丁 煮 得 快	什么 食谱 做 起来 比 大米 布丁 还 快	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 配方 比 米饭 布丁 花费 更少 的 时间 准备	什么 食谱 比 米饭 布丁 的 制作 时间 要 短	还有 什么 食谱 比 大米 布丁 更省 时 的 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
配方 的 平均 准备 时间 是 多长	配方 的 平均 准备 时间 是 多长	这个 食谱 的 平均 准备 时间 是 多长	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 食谱 没有 在 2004 年 发布	什么 菜谱 2004 年 没 贴	什么 配方 在 2004 年 没有 贴出来	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
什么 食谱 设计 超过 两餐	什么 食谱 是 为 两餐 以上 而 设计 的	什么 食谱 是 专为 两餐 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 饭 是 只有 一个 食谱	什么 菜 只有 一个 菜谱	什么 饭 只有 一个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 配方 有 牛奶 作为 成分	什么 配方 有 牛奶 作 配料	什么 配方 里 有 牛奶 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
给 我 看 一下 烹饪 时间 最长 的 食谱	给 我 看看 烹饪 时间 最长 的 食谱	给 我 看看 烹饪 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
告诉 我 需要 牛奶 或 菠菜 的 食谱	给 我 看看 需要 牛奶 或 菠菜 的 食谱	给 我 看看 需要 牛奶 或 菠菜 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
告诉 我 食谱 的 准备 时间 比 米饭 布丁 短	给 我 看看 比 米饭 布丁 准备 时间 短 的 食谱	给 我 看看 比 大米 布丁 准备 时间 更 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 配方 不再 需要 准备 比 米饭 布丁	什么 食谱 比 米饭 布丁 用 不了 多久	没有 什么 食谱 比 大米 布丁 更 容易 做 的 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 至少 有 2 种 美食	哪 种菜 谱 至少 有 两道菜	哪些 食谱 至少 有 两种 烹饪 方法	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
什么 食谱 需要 牛奶	什么 食谱 需要 牛奶	哪些 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
需要 少于 两种 成分 的 配方	需要 少于 两种 配料 的 食谱	需要 少于 两种 配料 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
这个 食谱 的 准备 时间 是 多少 ？	那个 食谱 的 准备 时间 是 什么 时候	那个 食谱 的 准备 时间 是 什么 时候	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 最少 吃饭 的 食谱	给 我 看 一份 最少 餐数 的 食谱	给 我 看 一份 少食 多餐 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
哪 一餐 都 是 用 过 的 米饭 布丁	米饭 布丁 用来 做 什么 菜	米饭 布丁 是 用来 做 哪 一道 菜 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
两种 食谱 可以 做 什么 饭	两种 食谱 能 做 什么 饭	这 两个 食谱 能 做 什么 饭 啊	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 食谱 的 烹饪 时间 等于 米饭 布丁 的 准备 时间	给 我 看看 烹饪 时间 等于 米饭 布丁 准备 时间 的 食谱	给 我 看看 烹饪 时间 等于 米 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 可以 少 吃 两餐	什么 食谱 能 做 不到 两顿 饭	什么 食谱 能 做 不到 两顿 饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 比 米饭 布丁 的 烹饪 时间 长	给 我 看看 准备 时间 比 米饭 布丁 烹饪 时间 长 的 食谱	给 我 看看 比做 米饭 布丁 的 时间 还长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
准备 米饭 布丁 需要 多少 时间	准备 米饭 布丁 要花 多少 时间	做米 布丁 要花 多少 时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) )
什么 食谱 使 最少 类型 的 美食	什么 菜谱 做 的 菜肴 种类 最少	什么 食谱 做 的 菜 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 食谱 使用 牛奶 或 菠菜 作为 成分	什么 食谱 用 牛奶 或 菠菜 作 配料	什么 食谱 用 牛奶 或 菠菜 作 原料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
什么 食谱 分享 米饭 布丁 的 美食	什么 菜谱 和 米饭 布丁 一样	是 什么 食谱 分享 了 米饭 布丁 的 美味	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
显示 至少 需要 完成 米饭 布丁 准备 时间 的 食谱	展示 至少 需要 准备 米饭 布丁 时间 的 食谱	展示 至少 需要 米饭 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
你 可以 在 相同 或 更 短 的 时间 内 准备 什么 食谱 来 煮 米饭 布丁	你 能 在 煮 米饭 布丁 的 同时 或 更 短 的 时间 内 准备 什么样 的 食谱 ？	你 能 在 做 米饭 布丁 的 时间 内 或者 更 短 的 时间 内 准备 好 什么 食谱 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 米饭 布丁 和 乳蛋 饼 所 需 的 成分	给 我 看看 米饭 布丁 和 乳蛋 饼 所 需 的 配料	给 我 看看 做米 布丁 和 乳蛋饼 需要 的 材料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
命名 至少 两种 食谱 所 需 的 成分	说出 至少 两种 配方 所 需 的 成分	列出 至少 两种 食谱 中 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找到 2004 年 或 2010 年 之前 发布 的 食谱	查找 2004 年 或 2010 年 之前 发布 的 食谱	查找 2004 年 或 2010 年 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
比 米饭 布丁 准备 时间 更长 的 食谱	烹调 比 米饭 布丁 的 准备 时间 长 的 食谱	这个 食谱 的 烹饪 时间 比米 布丁 的 制作 时间 要长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
食谱 是 两顿 饭	这 条 生菜 是 两顿 饭	这张 收据 是 两餐 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 烹饪 的 时间 与 米饭 布丁 相同 或 更 短	什么 食谱 烹调 的 时间 等于 或 少于 米饭 布丁	还有 什么 食谱 比 大米 布丁 更省 时 的 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
煮 这 道菜 需要 多长时间	做 这 道菜 需要 多少 时间	做 这 道菜 需要 多少 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 食谱 有 最 多 的 成分	什么 配方 的 配料 最 多	什么 配方 的 配料 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
在 米饭 布丁 配方 之前 发布 了 什么 食谱	在 米饭 布丁 食谱 之前 贴 了 什么 食谱	在 做 米饭 布丁 之前 贴 的 是 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
米饭 布丁 配方 后 贴 了 什么 食谱	什么 菜谱 贴 在 米饭 布丁 菜谱 之后	米饭 布丁 食谱 之后 贴 的 是 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 食谱 于 2004 年 发布	哪个 食谱 是 2004 年 贴出来 的	2004 年 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 午餐 食谱 需要 牛奶	什么 午餐 食谱 需要 牛奶	什么 午餐 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 是 两种 或 更 多 菜肴 中 的 配方	两种 或 两种 以上 的 菜系 有 什么 菜谱	两种 或 两种 以上 菜系 的 食谱 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
两个 美食 食谱	两道 菜谱	两个 菜 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 食谱 与 米饭 布丁 食谱 同日 发布	什么 菜谱 和 米饭 布丁 菜谱 贴 在 同一 日期	什么 食谱 和 大米 布丁 的 食谱 是 同一天 贴出来 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
午餐 或 晚餐 菜单 的 食谱	午餐 或 晚餐 菜谱	午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.concat en.meal.lunch en.meal.dinner ) )
找到 2004 年 发布 的 食谱	找到 2004 年 发布 的 菜谱	找到 一个 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
2004 年 发布 的 食谱 需要 什么	2004 年 发布 的 菜谱 需要 什么	2004 年 贴 出 的 配方 需要 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
无论是 2004 年 还是 2010 年	2004 年 或 2010 年	2004 年 或 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
向 我 展示 大多数 食谱 所 需 的 成分	给 我 看看 大多数 食谱 所 需 的 配料	告诉 我 大多数 食谱 所 需要 的 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找 两餐 的 食谱	找到 两顿 饭 的 食谱	找到 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 餐有 最少 的 食谱	哪 一餐 食谱 最少	什么 菜 的 食谱 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 有 两种 美食	哪 种菜 谱 有 两种 菜系	哪些 食谱 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
哪 种 食谱 是 午餐时间	午餐 的 食谱 是 什么	午餐 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
比 米饭 布丁 需要 相同 时间 准备 的 食谱	比 米饭 布丁 需要 同样 时间 准备 的 食谱	比米 布丁 需要 同样 时间 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
告诉 我 少于 两种 成分 的 食谱	给 我 看看 少于 两种 配料 的 食谱	给 我 看看 少于 两种 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 2004 年 发布 的 使用 牛奶 的 食谱	给 我 看看 2004 年 发布 的 使用 牛奶 的 食谱	给 我 看看 2004 年 发布 的 使用 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
米饭 布丁 不 需要 什么 成分	米饭 布丁 不 需要 什么 配料	米糕 不 需要 什么 食材	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 午餐 配方 在 2004 年 发布	2004 年 贴 出 了 什么 午餐 食谱	2004 年 发布 的 午餐 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
哪个 配方 的 烹饪 时间 比 米饭 布丁 少	哪 种 食谱 的 烹饪 时间 比 米饭 布丁 少	哪 一种 烹饪 方法 比 大米 布丁 更省 时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
最少 吃饭 的 食谱	最少 种类 饭菜 的 食谱	少食 多餐 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 比 米饭 布丁 需要 更少 的 准备 时间	什么 食谱 比 米饭 布丁 需要 更少 的 准备 时间	还有 什么 食谱 比米 布丁 更省 时 的 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 与 米饭 布丁 同时 煮熟	什么 食谱 和 米饭 布丁 同时 做 ？	什么 食谱 是 在 同一时间 做 的 大米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
哪 种 食谱 的 菜肴 数量 最少	哪 种菜 谱 的 菜肴 最少	哪个 食谱 的 菜系 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
告诉 我 最 美食 的 食谱	给 我 看看 最 好吃 的 菜谱	给 我 看看 大多数 菜系 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
这个 配方 的 平均 烹饪 时间 是 多少	那个 食谱 的 平均 烹调 时间 是 多少	这个 食谱 的 平均 烹饪 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
给 我 一个 与 米饭 布丁 相同 准备 时间 的 食谱	给 我 看 一份 和 米饭 布丁 准备 时间 一样 的 食谱	给 我 看 一个 和 大米 布丁 准备 时间 一样 长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
显示 食谱 发布 在 同一 日期 或 晚于 米饭 布丁	显示 在 同一 日期 或 晚于 米饭 布丁 上 发布 的 食谱	展示 与 大米 布丁 发布 日期 相同 或 更 晚 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪 种 食谱 适合 少量多餐	哪 种 食谱 适合 最少 的 用餐 次数	哪 一种 食谱 的 用膳 次数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 至少 有 两道菜 的 食谱	给 我 看看 至少 有 两道菜 的 菜谱	给 我 看看 至少 有 两道菜 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
这个 食谱 不早 于 2004 年 或 2010 年 发布	一份 不早 于 2004 年 或 2010 年 公布 的 食谱	一份 2004 年 或 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 要求 少于 两种 成分	什么 食谱 要求 少于 两种 配料	什么 食谱 需要 少于 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 种 食谱 比 米饭 布丁 需要 更长 的 时间 来 烹饪	哪 种 食谱 比 米饭 布丁 做得长	哪个 食谱 做 起来 比米 布丁 还慢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
最 多 两种 美食 的 食谱	最 多 两道菜 的 菜谱	最 多 两道菜 的 配方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
什么 食谱 需要 最少 的 成分	什么 食谱 需要 最少 的 配料	什么 食谱 需要 最少 的 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 时候 发布 了 米饭 布丁 食谱	米饭 布丁 食谱 是 什么 时候 贴 的	大米 布丁 的 配方 是 什么 时候 贴出来 的	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 烹饪 时间 比 米饭 布丁 大	什么 食谱 烹调 时间 比 米饭 布丁 长	还有 什么 食谱 的 烹饪 时间 比米 布丁 还长 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 至少 两种 食谱 所 需 的 成分	给 我 看看 至少 两个 食谱 所 需 的 配料	给 我 看看 至少 两个 食谱 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 的 烹饪 时间 与 米饭 布丁 相同	哪 种 食谱 的 烹调 时间 和 米饭 布丁 的 烹调 时间 一样	哪个 食谱 的 烹饪 时间 和 米饭 布丁 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 可以 做 两餐	哪 种 食谱 可以 做 两顿 饭	哪些 食谱 可以 做 两顿 饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 准备 时间 小于 米饭 布丁 的 烹饪 时间	什么 食谱 的 准备 时间 比 米饭 布丁 的 烹调 时间 短	什么 菜 的 准备 时间 比 米糕 的 烹调 时间 还 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 是 在 2004 年 发布 的	哪 种 配方 是 2004 年 发布 的	2004 年 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪 种 食谱 属于 最少 种类 的 菜肴	哪 种菜 谱 属于 最少 的 菜肴	哪 一种 食谱 属于 最 不 一类 的 烹饪	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
两种 食谱 使用 什么 成分	两个 食谱 用 的 是 什么 成分	这 两个 食谱 用 的 是 什么 原料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 要求 牛奶 在 2004 年 发布	2004 年 贴 出 了 什么 配方 的 牛奶	2004 年 贴 出 了 什么 配方 叫 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
2004 年 发布 的 食谱 是 什么 午餐	2004 年 贴 出 什么 食谱 做 午餐	2004 年 贴 出 的 食谱 做 了 一顿 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
两种 食谱 的 成分	两种 食谱 的 成分	两种 食材	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 饭有 两个 或 更 少 的 食谱	哪 一餐 有 两个 或 更 少 的 食谱	什么 菜 有 两个 或 更 少 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 饭 不 要求 米饭 布丁	什么 饭 不 需要 米饭 布丁	什么 饭 不 需要 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
少于 两种 食谱 需要 哪 种 成分	不到 两份 食谱 需要 哪 种 配料	少于 两份 食谱 需要 哪 种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 米饭 布丁 的 成分	给 我 看看 米饭 布丁 的 配料	给 我 看看 做米 布丁 的 材料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
制作 米饭 布丁 需要 什么 食品	做 米饭 布丁 需要 什么 食物	做米 布丁 需要 什么 食物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
最早 发布 的 食谱 是 什么	最早 的 食谱 是 什么	最早 贴出 的 食谱 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
准备 菜肴 所 需 的 平均 时间 是 多少	准备 这 道菜 平均 需要 多长时间	做 这 道菜 平均 需要 多长时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 配方 需要 至少 两种 成分	什么 食谱 至少 需要 两种 配料	什么样 的 食谱 至少 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 可以 比 米饭 布丁 更快 地 准备	什么 食谱 比 米饭 布丁 做 得 快	还有 什么 食谱 能比 大米 布丁 做 得 更 快 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪 一餐 有 两个 或 更 多 的 食谱	哪 一餐 有 两个 或 两个 以上 的 食谱	哪 一餐 有 两个 或 更 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 有 三种 或 更 多 的 美食	哪 种菜 谱 有 三种 或 三种 以上 的 菜肴	哪些 食谱 有 三种 或 更 多 的 烹饪 方法	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 是 米饭 布丁 的 烹饪 时间	米饭 布丁 什么 时候 煮	什么 时候 做 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
食谱 的 总数 是 多少	食谱 的 总数 是 多少	食谱 的 总数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
完成 配方 所 需 的 通常 时间 是 多少	完成 食谱 通常 需要 多长时间	完成 这个 食谱 通常 需要 多少 时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 成分 用于 最 少量 的 食谱	哪 种 成分 的 食谱 用量 最少	用 什么 原料 做 的 菜 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 是 两餐	两人 一餐 的 食谱 是 什么	什么 食谱 是 两人 一餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 不 要求 牛奶	什么 食谱 不 需要 牛奶	什么 食谱 不 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 饭 超过 两个 食谱	什么 菜 有 两种 以上 的 食谱	什么 菜 有 两个 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
不到 两餐 的 食谱	两餐 以下 的 食谱	少于 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
有没有 在 2004 年 发布 过 两次 的 食谱	有没有 2004 年 两次 张贴 的 食谱	有 什么 食谱 在 2004 年 被 贴 了 两次 吗	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
米饭 布丁 属于 哪 种 美食	米饭 布丁 属于 哪 种 料理	大米 布丁 属于 哪 一种 菜肴	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 食谱 不到 三种 美食	什么 菜谱 不到 三道 菜	什么 食谱 可以 归为 三种 以下 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
哪些 食谱 是 在 2004 年 或 2010 年 之后 发布 的	2004 年 或 2010 年 后 发布 了 哪些 食谱	哪些 食谱 是 在 2004 年 或 2010 年 之后 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
用 两种 食谱 找 一顿饭	找 一顿 有 两种 食谱 的 饭	找 一顿 有 两个 食谱 的 饭	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
食谱 发布 到 2004 年	食谱 发布 到 2004 年	食谱 张贴 至 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
查找 2004 年 后 发布 的 食谱	查找 2004 年 后 发布 的 食谱	查找 2004 年 以后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 准备 米饭 布丁 或 更 多 时间 煮熟 的 食谱	在 米饭 布丁 准备 时间 内 烹制 的 食谱 或 更 多	在 米 布丁 的 准备 时间 或 更 多 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 烹饪 时间 最短 的 食谱	给 我 看看 烹饪 时间 最短 的 食谱	告诉 我 最 短 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
什么 是 使用 牛奶 或 菠菜 作为 配料 的 食谱	用 牛奶 或 菠菜 作 配料 的 食谱 是 什么	以 牛奶 或 菠菜 为 原料 的 食谱 是 什么	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
什么 食谱 有 美食 ， 包括 米饭 布丁	有 什么 菜谱 包括 米饭 布丁	什么 菜谱 有 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
告诉 我 需要 少于 两种 成分 的 食谱	给 我 看看 不 需要 两种 配料 的 食谱	给 我 看看 需要 少于 两种 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 2004 年 后 发布 的 食谱	给 我 看看 2004 年 后 发布 的 食谱	给 我 看看 2004 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
多种 配方 需要 哪 种 成分	哪 种 成分 是 一个 以上 的 食谱 所 需要 的	哪些 成分 是 需要 在 一个 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
一种 至少 与 米饭 布丁 一样 煮 的 食谱	烹调 时间 至少 和 米饭 布丁 一样 长 的 食谱	这个 食谱 的 烹饪 时间 至少 和 大米 布丁 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 花费 大部分 时间 做饭	做 什么 菜 最 费时	什么 食谱 做 起来 最 费时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
哪 种 配方 需要 比 米饭 布丁 准备 更 多 的 时间	哪 种 配方 比 米饭 布丁 需要 更 多 的 时间	哪个 食谱 比米 布丁 更 需要 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 需要 牛奶 的 食谱	给 我 看看 需要 牛奶 的 食谱	给 我 看看 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
告诉 我 2004 年 发布 的 午餐 食谱	给 我 看看 2004 年 发布 的 午餐 食谱	给 我 看看 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 烹饪 时间 最长 的 是 米饭 布丁 的 烹饪 时间	什么 食谱 烹调 时间 最长 米糕 的 烹调 时间	什么 食谱 烹调 时间 最多 的 是 年糕 的 烹调 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 是 最 多 使用 两种 成分 的 配方	最 多用 两种 配料 的 食谱 是 什么	最 多 使用 两种 配料 的 配方 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 饭有 乳蛋 饼 和 米饭 布丁	什么 饭 有 蛋 奶酥 和 米饭 布丁	什么 饭有 乳蛋 饼 和 大米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
发布 日期 的 配方 不是 在 米饭 布丁 发布 日期 之后	不 在 米 布丁 张贴 日期 之后 张贴 日期 的 食谱	食谱 须 注明 投寄 日期 而 非 投寄 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 食谱 和 米饭 布丁 一样 多 的 时间	给 我 看看 和 米饭 布丁 一样 耗时 的 食谱	给 我 看 一份 和 米饭 布丁 一样 耗时 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
只 吃 一餐 的 食谱	一顿饭 的 食谱	只有 一餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
米饭 布丁 中 含有 什么 成分	米饭 布丁 里 有 什么 成分	大米 布丁 里 含有 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
找到 一种 需要 牛奶 的 配方	找 一个 需要 牛奶 来 准备 的 食谱	找 一个 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 食谱 需要 相同 的 时间 或 米饭 布丁	什么 食谱 需要 和 米饭 布丁 一样 的 时间	有 什么 食谱 要求 同时 或 比 大米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
午餐 食谱 要求 什么 成分	午餐 食谱 需要 什么 配料	午餐 食谱 需要 什么 食材	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
用 什么 饭 是 米饭 布丁	米饭 布丁 是 用来 做 什么 的	米饭 布丁 是 用来 做 什么 饭 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
哪些 食谱 用于 午餐 或 晚餐	午餐 或 晚餐 的 食谱 是 什么	哪些 食谱 适合 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
什么 食谱 需要 不 超过 两种 成分	什么 食谱 只 需要 两种 成分	什么 食谱 需要 的 配料 不 超过 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
有 多少 食谱	有 多少 食谱	有 多少 的 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
给 我 看 一个 只 需要 两种 成分 的 食谱	给 我 看看 只 需要 两种 配料 的 食谱	告诉 我 一个 只 需要 两种 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
向 我 展示 需要 牛奶 的 食谱 所 需 的 成分	给 我 看看 需要 牛奶 的 食谱 所 需 的 配料	给 我 看看 需要 牛奶 的 食谱 需要 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 准备 时间 不 超过 米饭 布丁 的 烹饪 时间	什么 食谱 准备 时间 不 超过 米饭 布丁 的 烹调 时间	什么 菜 的 准备 时间 不比 米糕 的 烹调 时间 多	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 使用 两种 或 更少 成分 的 食谱	给 我 看看 用 两种 或 两种 以下 配料 的 食谱	给 我 看看 只用 两种 或 更少 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 需要 牛奶 ， 并于 2004 年 发布	什么 食谱 需要 牛奶 并 在 2004 年 发布	哪些 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
给 我 看 午餐 或 晚餐 的 食谱	给 我 看看 午餐 或 晚餐 的 食谱	给 我 看看 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
在 大多数 食谱 中 命名 成分	说出 大多数 食谱 中 的 成分	说出 大多数 食谱 中 的 成分	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 需要 米饭 布丁 烹饪 时间 的 食谱	给 我 看看 需要 米饭 布丁 烹调 时间 的 食谱	给 我 看看 需要 米饭 布丁 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
告诉 我 2004 年 和 2010 年 发布 的 食谱	给 我 看看 2004 年 和 2010 年 发布 的 菜谱	给 我 看看 2004 年 和 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
配方 准备 时间 超过 米饭 布丁 的 烹饪 时间	比 米饭 布丁 烹调 时间 长 的 配方	做米 布丁 的 时间 比做 米 布丁 的 时间 还长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 的 烹饪 时间 等于 米饭 布丁 的 烹饪 时间	哪个 食谱 的 烹调 时间 等于 米饭 布丁 的 烹调 时间	哪个 食谱 的 烹饪 时间 等于 米 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 需要 牛奶 的 午餐 食谱	给 我 看看 需要 牛奶 的 午餐 食谱	给 我 看看 需要 牛奶 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 饭有 两个 食谱	什么 饭菜 有 两种 食谱	什么 饭有 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 用 牛奶 制作 的 食谱	用 牛奶 做 的 食谱 是 什么	用 牛奶 做 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪 种 配方 用于 大多数 膳食	哪 种 食谱 是 最常 吃 的	哪 一种 食谱 用得 最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
米饭 布丁 煮 多久	米饭 布丁 煮 多长时间	米 布丁 要 煮 多久	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
查找 2004 年 或 2010 年 发布 的 食谱	查找 2004 或 2010 年 发布 的 食谱	查找 2004 年 或 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
用 少于 两份 食谱 向 我 展示 餐食	给 我 看 少于 两种 食谱 的 饭菜	给 我 看看 少于 两个 食谱 的 食物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
需要 最少 成分 的 食谱	需要 最少 配料 的 食谱	需要 最少 配料 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 是 在 米饭 布丁 之前 或 同一天 发布 的	在 米饭 布丁 之前 或 同一天 张贴 了 什么 食谱	什么 食谱 是 在 大米 布丁 之前 或 同一天 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
可以 通过 2004 年 发布 的 食谱 制作 什么 餐	2004 年 贴 出 的 菜谱 能 做 什么 饭	2004 年 贴 出 的 食谱 能 做出 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 2004 年 发布 的 午餐 食谱	给 我 看看 2004 年 发布 的 午餐 食谱	给 我 看看 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
告诉 我 食谱 不早 于 2004 年	展示 不早 于 2004 年 发布 的 菜谱	给 我 看看 不早 于 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 同时 准备 米饭 布丁	给 我 看看 做 米饭 布丁 要花 同样 时间 的 食谱	给 我 看看 做 米饭 布丁 需要 同样 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 饭有 最大 的 食谱	哪 一餐 食谱 最 多	什么 菜 有 最 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
2004 年 发布 的 食谱 需要 牛奶 作为 配料	2004 年 公布 的 食谱 要求 牛奶 作为 配料	2004 年 贴 出 的 配方 中有 什么 成分 是 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪 种 食谱 需要 两种 以上 的 成分	哪个 食谱 需要 两种 以上 的 配料	哪个 食谱 需要 两种 以上 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 不到 两餐	两餐 以下 的 食谱 是 什么	什么 食谱 是 少于 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 需要 配料 牛奶 的 食谱	给 我 看看 需要 牛奶 成分 的 食谱	给 我 看看 需要 牛奶 成分 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
给 我 看 两个 成分 的 食谱	给 我 看看 有 两种 食材 的 食谱	给 我 看看 两种 食物 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
发布 日期 为 2004 年 的 食谱 所 需 的 成分	发布 日期 为 2004 年 的 配方 所 需 的 成分	配方 要求 的 配料 ， 其 贴标 日期 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 时候 发布 了 米饭 布丁 食谱	米饭 布丁 食谱 是 什么 时候 贴 的	大米 布丁 的 配方 是 什么 时候 贴出来 的	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
哪些 食谱 需要 至少 两种 成分	哪 种 食谱 至少 需要 两种 配料	哪些 食谱 至少 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 的 烹饪 时间 至少 与 米饭 布丁 准备 时间 一样 长	什么 食谱 的 烹调 时间 至少 和 米饭 布丁 的 准备 时间 一样 长	什么 食谱 有 一个 烹饪 时间 ， 至少 是 米 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪些 食谱 比 米饭 布丁 需要 更长 的 时间 来 烹饪	哪 种 食谱 比 米饭 布丁 煮 得 长	哪些 食谱 做 起来 比 米饭 布丁 还慢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 饭菜 是 午餐 的 食谱	午餐 的 食谱 是 什么	什么 是 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
哪 种 配方 使用 牛奶 作为 配料	哪 种 配方 用 牛奶 作 配料	哪个 食谱 用 牛奶 作 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
这个 午餐 需要 什么 食谱 成分	这顿 午餐 需要 什么 食谱 配料	这顿 午餐 需要 什么 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
有 多少 总 食谱	总共 有 多少 食谱	总共 有 多少 种 食谱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 配方 需要 最长 的 准备 时间	哪 种 配方 的 制备 时间 最长	哪个 配方 的 准备 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
哪 种 食谱 的 菜肴 最 多	哪 种菜 谱 的 菜肴 最 多	哪个 食谱 的 菜式 最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
告诉 我 食谱 需要 花费 相同 的 时间 准备 米饭 布丁 做饭	给 我 看看 做 米饭 布丁 和 做 米饭 布丁 所花 的 时间 相同 的 食谱	给 我 看 一下 做 米饭 布丁 需要 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 饭 是 米饭 布丁	米饭 布丁 是 什么 饭	什么 饭 是 大米 布丁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
什么 饭 是 米饭 布丁 或 乳蛋饼	米饭 布丁 或 蛋奶 饼 是 什么 饭	什么 饭 是 米饭 布丁 还是 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
给 我 看 一些 烹饪 时间 等于 米饭 布丁 的 食谱	给 我 看看 烹饪 时间 等于 米饭 布丁 的 食谱	给 我 看看 烹饪 时间 等于 大米 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
告诉 我 超过 两餐 的 食谱	给 我 看 两餐 以上 的 食谱	给 我 看 两餐 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
给 我 看 一下 与 米饭 布丁 相同 的 美食	给 我 看看 和 米饭 布丁 一样 的 菜谱	给 我 看看 大米 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
什么 成分 在 米饭 布丁	米饭 布丁 里 有 什么 配料	大米 布丁 里 有 什么 配料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
什么 配方 需要 菠菜 或 牛奶 来 制备	什么 食谱 需要 菠菜 或 牛奶 来 制作	什么样 的 食谱 需要 菠菜 或 牛奶 来 制作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
午餐 食谱 于 2004 年 发布	2004 年 发布 的 午餐 食谱	2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
显示 发布 的 第一个 食谱	显示 发布 的 第一个 配方	显示 第一个 食谱 张贴	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 食谱 发布 日期 小于 米饭 布丁	什么 菜谱 贴 日期 比 米饭 布丁 还少	什么 食谱 贴出来 的 日期 比 大米 布丁 还少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
在 米饭 布丁 之前 发布 的 食谱	在 米饭 布丁 前 展示 食谱	展示 大米 布丁 之前 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
给 我 看 两份 食谱	给 我 看看 一顿饭 的 两个 食谱	给 我 看 两份 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
准备 菜肴 所 需 的 总 时间 是 多少	准备 这 道菜 总共 需要 多少 时间	准备 这 道菜 总共 需要 多少 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 食谱 需要 的 烹饪 时间 不仅仅 是 米饭 布丁	给 我 看看 比 米饭 布丁 更 需要 烹饪 时间 的 食谱	给 我 看看 比 大米 布丁 更 需要 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
哪个 食谱 是 在 米饭 布丁 发布 之后 发布 的	哪 种 食谱 是 在 米饭 布丁 的 张贴 日期 之后 张贴 的	米糕 的 投寄 日期 后 投寄 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪个 食谱 最近 发布	最近 贴 的 是 哪种 食谱	最近 贴出 的 食谱 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
哪 种 食谱 与 米饭 布丁 的 烹饪 时间 相同	哪 种 配方 的 米饭 布丁 烹调 时间 相同	哪 一种 米 布丁 的 烹饪 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 食谱 准备 时间 至少 是 米饭 布丁	什么 食谱 的 准备 时间 至少 是 米饭 布丁 的 准备 时间	什么 菜谱 的 准备 时间 至少 是 那个 米糕	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
米饭 布丁 或 三文鱼 的 食谱	米饭 布丁 或 调味品 的 食谱	大米 布丁 或 quice 的 食谱	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
哪些 食谱 的 膳食 数量 最 多	哪 种 食谱 的 饭菜 最 多	哪些 食谱 的 食物 种类 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
名称 米饭 布丁 不 需要 的 成分	说出 米 布丁 不 需要 的 配料	说出 米 布丁 不 需要 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
命名 食谱 的 烹饪 时间 至少 与 米饭 布丁 的 烹饪 时间 相同	用 至少 米饭 布丁 的 烹调 时间 命名 食谱	用 至少 米饭 布丁 的 烹饪 时间 来 命名 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 2010 年 之后 发布 的 所有 食谱	给 我 看看 2010 年 后 发布 的 所有 食谱	给 我 看看 2010 年 后 发布 的 所有 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 食谱 涉及 两种 美食	给 我 看 两道菜 的 菜谱	给 我 看看 包含 两种 菜系 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
哪个 配方 的 准备 时间 不 超过 米饭 布丁 的 准备 时间	哪个 食谱 的 准备 时间 不 超过 米饭 布丁 的 准备 时间	哪个 食谱 的 准备 时间 不 超过 大米 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
向 我 展示 牛奶 作为 其 成分 之一 的 食谱	给 我 看看 用 牛奶 做 配料 的 食谱	给 我 看看 含有 牛奶 成分 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 是 比 米饭 布丁 没有 更 多 时间 烹饪 的 食谱	什么 食谱 比 米饭 布丁 不 需要 更 多 的 时间 来 烹调	什么 食谱 不 需要 比 大米 布丁 更 多 的 时间 来 烹饪	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 成分 最 常用	最 常用 的 成分 是 什么	最 常用 的 成分 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 以外 的 一餐	除了 米饭 布丁 ， 什么 是 饭	除了 大米 布丁 ， 还有 什么 是 正餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
这是 两种 食谱 中所 需 的 食品	这是 两个 食谱 中 需要 的 食物	两个 食谱 中 需要 的 食物 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪 种 食谱 需要 与 米饭 布丁 相同 的 成分	哪 种 配方 需要 和 米饭 布丁 相同 的 配料	哪个 食谱 需要 和 米 布丁 一样 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
在 2004 年 期间 发布 了 什么 食谱	2004 年 有 什么 菜谱	2004 年 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 米饭 布丁 中 发现 的 成分	米饭 布丁 中有 什么 成分	米 布丁 中 含有 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
这是 最后 发布 的 食谱	这是 最后 一个 公布 的 食谱	上 一个 贴出来 的 食谱 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
给 我 看 一顿饭 食谱 ， 包括 米饭 布丁	给 我 看看 包括 米饭 布丁 在内 的 食谱	给 我 看看 饭 的 食谱 ， 包括 大米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 食谱 烹饪 时间 是 米饭 布丁 的 准备 时间	米饭 布丁 的 烹调 时间 是 什么 食谱	什么 食谱 烹调 时间 是 米糕 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 食谱 制作 两种 类型 的 菜肴	什么 菜谱 做 两种 菜	什么 食谱 做 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 食谱 有 两种 或 更 多 种类 的 菜肴	什么 菜谱 有 两种 或 两种 以上 的 菜肴	什么 食谱 有 两种 或 两种 以上 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
什么 是 米饭 布丁 的 烹饪 时间	米饭 布丁 的 烹调 时间 是 几点	米 布丁 的 烹调 时间 是 几点	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
什么 配料 用于 最少 的 食谱	在 最少 的 食谱 中 使用 的 成分 是 什么	用 什么 原料 做 的 菜 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 等于 或 长于 米饭 布丁	给 我 看看 准备 时间 等于 或 长于 米饭 布丁 的 食谱	给 我 看看 准备 时间 等于 或 长于 大米 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 超过 两种 成分	什么 食谱 需要 两种 以上 的 配料	什么 食谱 需要 两种 以上 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪个 食谱 与 米饭 布丁 同日 发布	哪 一个 食谱 和 米饭 布丁 的 食谱 是 同一天 贴 的	哪个 食谱 和 大米 布丁 是 同一天 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
准备 工作 需要 多长时间	菜谱 要 多长时间 准备	准备 这个 食谱 需要 多长时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 成分 比 两个 食谱	两个 食谱 中有 什么 成分	什么 成分 比 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
名称 成分 仅 用于 一个 或 两个 食谱	只 在 一个 或 两个 食谱 中 使用 的 成分 名称	说出 只 在 一两个 食谱 中 使用 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 有 两种 类型 的 美食	什么 菜谱 有 两种 以上 的 菜肴	什么 食谱 有 两种 以上 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
找到 比 米饭 布丁 更长 的 烹饪 时间 的 食谱	找 一个 烹饪 时间 比 米饭 布丁 长 的 食谱	找 一个 比 大米 布丁 烹饪 时间 长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 需要 牛奶 ， 午餐	什么 食谱 需要 牛奶 和 午餐	什么 食谱 需要 牛奶 而且 是 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 饭 不是 米饭 布丁	米饭 布丁 不 搭配 什么 菜	什么 饭 配不上 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 食谱 的 烹饪 时间 少于 米饭 布丁 的 烹饪 时间	什么 食谱 的 烹调 时间 比 米饭 布丁 的 烹调 时间 短	什么 食谱 的 烹调 时间 比米 布丁 的 烹调 时间 还 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 具有 最大 准备 时间 的 食谱	给 我 看看 准备 时间 最长 的 食谱	给 我 看看 准备 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
哪个 食谱 最早 发布	最早 的 食谱 是 哪种	哪 一种 配方 最早 被 贴出来	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 是 超过 两种 不同 的 膳食 的 食谱	什么样 的 食谱 是 两餐 以上 的	超过 两餐 的 食谱 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
找到 2004 年 发布 的 午餐 食谱	找到 2004 年 发布 的 午餐 食谱	查看 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
以 牛奶 为 原料 的 食谱	以 牛奶 为 原料 的 食谱	以 牛奶 为 原料 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
在 2004 年 之前 发布 了 什么 食谱	2004 年 之前 贴出 了 什么 食谱	2004 年 以前 贴 的 是 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
只有 一种 配方 需要 什么 成分	只有 一个 配方 需要 什么 成分	一个 食谱 里 需要 什么 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
米饭 布丁 或 乳蛋 饼 中 需要 什么 成分	米饭 布丁 或 乳蛋饼 需要 什么 配料 ？	米 布丁 或 乳蛋饼 需要 什么 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
2004 年 发布 的 食谱 所 需 的 成分 是 什么 ？	2004 年 发布 的 菜谱 需要 什么 成分	2004 年 贴 出 的 食谱 需要 什么 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
我们 每天 吃 多少 餐	我们 每天 吃 几顿 饭	我们 每天 吃 几顿 饭	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 是 食谱 的 平均 准备 时间	配方 的 平均 准备 时间 是 多少	一个 菜谱 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 在 米饭 布丁 之前 张贴 的 食谱	给 我 看看 米饭 布丁 前贴 的 食谱	给 我 看看 米饭 布丁 之前 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 2004 年 发布 的 食谱	给 我 看看 2004 年 发布 的 食谱	给 我 看看 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 午餐 食谱	午餐 的 食谱 是 什么	午餐 有 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
食谱 发布 日期 是 2004 年	什么 食谱 发布 日期 是 2004 年	什么 食谱 发布 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 午餐 配方 用 牛奶 作为 配料	什么 午餐 食谱 用 牛奶 作 配料	什么 午餐 食谱 用 牛奶 作 原料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
这 道菜 需要 多长时间 才能 煮熟	这个 食谱 要 煮 多长时间	这个 食谱 要 煮 多久	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
找 一份 适合 午餐 或 晚餐 的 食谱	找 一份 适合 午餐 或 晚餐 的 食谱	找 一个 适合 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
2004 年 发布 的 食谱 是 什么 餐	2004 年 贴 的 菜谱 是 什么 菜	2004 年 贴 出 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪个 食谱 的 准备 时间 最少	哪 种 配方 的 准备 时间 最少	哪个 食谱 的 准备 时间 最少	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 食谱 发布 日期 是 2004 年 最大 的	2004 年 什么 食谱 发布 日期 最长	哪些 食谱 的 发布 日期 在 2004 年 是 最 多 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
大多数 食谱 都 是 为了 什么 餐	大多数 菜谱 是 做 什么 的	大多数 食谱 都 是 做 什么 用 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
至少 两道菜 的 食谱	至少 两道菜 的 菜谱	至少 两种 菜肴 的 配方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
什么 食谱 需要 最少 的 成分	什么 食谱 需要 最少 的 配料	什么 食谱 用料 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 的 美食	米饭 布丁 的 菜式 是 什么	大米 布丁 是 什么 菜	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
食谱 只有 两种 成分	只有 两种 配料 的 食谱	只有 两种 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
命名 两种 不同 食谱 所 需 的 成分	说出 两种 不同 配方 所 需 的 成分	说出 两种 不同 食谱 所 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 配方 在 比 米饭 布丁 更 短 的 时间 内 煮熟	什么 食谱 比 米饭 布丁 做 的 时间 短	什么 食谱 比 大米 布丁 做 的 时间 还 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
以 牛奶 为 原料 的 食谱 展示 于 2004 年	展示 以 牛奶 为 原料 的 食谱 ， 并于 2004 年 发布	展示 以 牛奶 为 原料 的 食谱 ， 并于 2004 年 发布	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪 种 食谱 属于 较少 的 美食	哪 种菜 谱 属于 数量 较少 的 菜系	哪个 食谱 属于 较少 的 菜系	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
少于 两个 食谱 需要 什么 成分	少于 两个 食谱 需要 什么 成分	少于 两个 食谱 需要 什么 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
配料 数量 的 配方	配料 配方	配料 的 数量	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 比较 喜欢 米饭 布丁 或 乳蛋饼	喜欢 米饭 布丁 还是 奶昔	要 米饭 布丁 还是 乳蛋饼	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
什么 食谱 的 准备 时间 最短	什么 食谱 的 准备 时间 最少	什么 配方 准备 时间 最少	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
使用 两种 或 更 多 成分 的 食谱	使用 两种 或 两种 以上 配料 的 食谱	使用 两种 或 两种 以上 配料 的 菜谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
用 两个 以上 的 食谱	有 两种 以上 食谱 的 饭菜	有 两种 以上 食谱 的 一餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找到 需要 最 多 食品 数量 的 食谱	找到 需要 最 多 食物 的 食谱	找到 需要 最 多 食物 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
找到 2004 年 发布 的 食谱	查找 2004 年 发布 的 食谱	查找 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 食谱 是 在 较 短 的 时间 内 准备 好 的 糙米 布丁	什么 菜谱 是 用 不到 多少 时间 的 糙米 布丁 做 的	什么 食谱 是 用 更 少 的 陈年 大米 布丁 做 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 时候 可以 在 米饭 布丁 的 同时 准备 好	什么 时候 可以 和 米饭 布丁 同时 准备	什么 时候 可以 和 米饭 布丁 同时 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
告诉 我 食谱 准备 时间 最长	给 我 看看 准备 时间 最长 的 食谱	给 我 看看 准备 时间 最长 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 饭菜 有 使用 牛奶 的 食谱	什么 食物 有 使用 牛奶 的 食谱	什么 餐 都 有 使用 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
你 能 找到 至少 两种 食谱 的 食物	你 能 找到 哪 一餐 至少 两个 食谱	你 能 找到 至少 两种 食谱 吗	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
告诉 我 2004 年 发布 的 午餐 食谱	给 我 看看 2004 年 发布 的 午餐 食谱	给 我 看看 2004 年 发布 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
显示 发布 日期 不是 2004 的 食谱	显示 发布 日期 不是 2004 的 食谱	展示 发布 日期 不是 2004 年 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string ! = ) ( date 2004 -1 -1 ) ) )
找到 2004 年 之前 发布 的 食谱	查找 2004 年 之前 发布 的 食谱	查找 2004 年 以前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 含量 最少 的 食谱	给 我 看看 配料 最少 的 食谱	给 我 看看 配料 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 配方 至少 与 米饭 布丁 一样 长	什么 菜谱 做 起来 至少 和 米饭 布丁 一样 长	什么 食谱 做 起来 至少 要花 大米 布丁 那么 长 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我无乳 食谱	给 我 看看 牛奶 树 食谱	给 我 看看 不 含 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
告诉 我 食谱 与 米饭 布丁 相同 或 更长 的 准备 时间	给 我 看看 准备 时间 和 米饭 布丁 相同 或 更长 的 食谱	给 我 看看 和 米饭 布丁 一样 或者 更长 的 制作 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 是 最 多 食谱 的 一餐	食谱 最多 的 一餐 是 什么	食谱 最多 的 一餐 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 是 午餐 配方	午餐 的 食谱 是 什么	什么 食谱 是 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
食谱 总 准备 时间	配方 总 制备 时间	总 准备 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 最 多餐 的 食谱	给 我 看看 最 正餐 的 食谱	给 我 看看 大多数 食物 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
需要 相同 或 更 多 时间 准备 米饭 布丁 的 食谱	需要 与 米饭 布丁 相同 或 更 多 时间 准备 的 食谱	需要 和 大米 布丁 一样 或 更 多 时间 准备 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
两种 或 更 多 配方 需要 什么 成分	两个 或 两个 以上 的 食谱 需要 什么 成分	两种 或 两种 以上 的 食谱 需要 什么 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
配方 的 平均 准备 时间 是 多少	配方 的 平均 准备 时间 是 多少	菜谱 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
在 2004 年 或 之前 发布 了 什么 食谱	2004 年 期间 或 之前 发布 的 食谱	2004 年 或 之前 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 不是 午餐	给 我 看看 不是 午餐 的 食谱	给 我 看 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
哪些 食谱 是 在 米饭 布丁 之前 张贴 的	米饭 布丁 前贴 了 哪些 食谱	米饭 布丁 之前 有 哪些 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
向 我 展示 2004 年 或 之后 发布 日期 的 食谱	给 我 看看 2004 年 或 以后 的 菜谱	显示 我 的 食谱 张贴 日期 从 2004 年 或 以后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 需要 两种 成分	什么 食谱 需要 两种 配料	什么 食谱 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 需要 两种 以上 成分 的 食谱	给 我 看看 需要 两种 以上 配料 的 食谱	给 我 看看 需要 两种 以上 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 不 超过 两餐	什么 食谱 不 超过 两餐	什么 食谱 是 不 超过 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
哪个 食谱 的 烹饪 时间 比 米饭 布丁 所 需 的 准备 时间 长	哪 种 食谱 的 烹调 时间 比 米饭 布丁 所 需 的 准备 时间 长	哪个 食谱 的 烹饪 时间 比米 布丁 的 准备 时间 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
显示 比 米饭 布丁 需要 更 少 准备 的 食谱	展示 比 米饭 布丁 需要 更 少 准备 的 食谱	展示 比 大米 布丁 更 简单 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 不 需要 牛奶	什么 配方 不 需要 牛奶	什么 食谱 不 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 需要 最少 的 成分	什么 食谱 最 不 需要 配料	什么 食谱 用料 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 是 一顿饭 的 食谱	一顿饭 的 食谱 是 什么	一顿饭 的 食谱 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 准备 时间 大于 米饭 布丁	什么 食谱 的 制作 时间 比 米饭 布丁 大	还有 什么 菜 的 准备 时间 比 米糕 还长 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 食谱 牛奶 吃 午饭	午餐 用 牛奶 告诉 食谱	告诉 你 午餐 用 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
命名 为 午餐 准备 的 食谱	说出 为 午餐 准备 的 食谱	说出 准备 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
向 我 展示 具有 最 多 要求 的 配方	给 我 看看 最 需要 的 菜谱	给 我 看看 要求 最多 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 米饭 布丁 或 乳蛋 饼 的 食谱	给 我 看看 米饭 布丁 或 蛋奶 饼 的 食谱	给 我 看看 米 布丁 或 乳蛋 饼 的 食谱	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
什么 食谱 可以 用于 至少 两餐	哪 种 食谱 至少 可以 吃 两顿 饭	什么 食谱 至少 可以 用 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 2004 年 发布 的 需要 牛奶 的 食谱	给 我 看看 2004 年 发布 的 需要 牛奶 的 食谱	给 我 看看 2004 年 发布 的 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
2004 年 发布 的 食谱 要求 什么 成分	2004 年 公布 的 食谱 要求 什么 成分	2004 年 贴 出 的 一份 食谱 里 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
那里 有 多少 顿饭	总共 有 多少 顿饭	一共 有 多少 餐	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 食谱 有 至少 两种 美食	什么 菜谱 不下 两道菜	什么 食谱 至少 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪 种 食谱 需要 最少 的 烹饪 时间	哪 种 食谱 需要 最少 的 烹调 时间	哪 种 烹饪 方法 需要 的 时间 最少	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
什么 食谱 准备 时间 与 米饭 布丁 相同	什么 食谱 的 准备 时间 和 米饭 布丁 一样	什么 食谱 的 准备 时间 和 大米 布丁 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
哪些 食谱 需要 更长 的 时间 来 烹饪 而 不是 准备 米饭 布丁	哪 种菜 谱 比 米饭 布丁 煮 的 时间 长 ？	哪些 食谱 做 起来 比做 米饭 布丁 要花 更长 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 比 米饭 布丁 花费 相同 或 更 多 的 时间 来 烹饪	什么 菜谱 比 米饭 布丁 要花 同样 或 更 多 的 时间 烹调	还有 什么 食谱 比 大米 布丁 更 需要 时间 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 需要 至少 三种 成分 的 食谱	给 我 看看 至少 需要 三种 配料 的 食谱	给 我 看看 至少 需要 三个 原料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
需要 比 准备 米饭 布丁 所 花费 的 时间 少 或 相同 的 食谱	比 准备 米饭 布丁 所 需 时间 少 或 相同 的 食谱	比做 米饭 布丁 所 需 时间 少 或 相同 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 食谱 遵循 一 两种 美食	给 我 看 一 两道菜 的 菜谱	给 我 看看 一 两种 菜系 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
告诉 我 食谱 需要 比 米饭 布丁 更少 的 烹饪 时间	给 我 看看 比 米饭 布丁 需要 更 少 烹饪 时间 的 食谱	给 我 看看 比米 布丁 更省 时 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 在 任何 张贴 米饭 布丁 之前 发布 的 食谱	在 张贴 米饭 布丁 之前 给 我 看看 张贴 的 食谱	告诉 我 大米 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 食谱 发布 日期 最多 是 2004 年 或 2010 年	什么 食谱 发布 日期 最多 是 2004 年 或 2010 年	哪些 食谱 的 发布 日期 最多 是 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 是 米饭 布丁 的 发布 日期	米饭 布丁 的 邮寄 日期 是 什么 时候	米 布丁 的 投寄 日期 为何	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 的 发布 日期 大于 米饭 布丁	什么 菜谱 贴 日期 比 米饭 布丁 大	还有 什么 食谱 的 发布 日期 比 大米 布丁 还 大	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
向 我 展示 最少 代表 的 美食	给 我 看看 最 没有 代表性 的 菜谱	给 我 看看 最 没有 代表性 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 是 米饭 布丁 的 美食	米饭 布丁 的 菜式 是 什么	大米 布丁 是 什么 菜	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 食谱 不 需要 牛奶	什么 配方 不 需要 牛奶	什么 食谱 不 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 需要 更长 的 时间 来 煮饭 比 米饭 布丁 需要 准备	什么 菜谱 比 米饭 布丁 做 的 时间 长 ？	还有 什么 食谱 比 大米 布丁 更 需要 准备 的 时间 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
从 2004 年 开始 寻找 午餐 食谱	找到 2004 年 的 午餐 食谱	找 一份 2004 年 的 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string meal ) ( string = ) en.meal.lunch ) )
所有 食谱 的 平均 准备 时间 是 多少	所有 食谱 的 平均 准备 时间 是 多少	所有 食谱 的 平均 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 饭 是 配方 米饭 布丁	米饭 布丁 的 食谱 是 什么	这 大米 布丁 是 做 什么 用 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
告诉 我 2004 年 和 2010 年 发布 的 食谱	给 我 看看 2004 年 和 2010 年 发布 的 菜谱	给 我 看看 2004 年 和 2010 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
哪 种 配方 需要 少于 两种 食品 进行 配制	哪 种 配方 的 制作 只 需要 不到 两种 食物	哪个 食谱 需要 少于 两种 食物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 一餐 有 两种 食谱	哪 一餐 有 两种 食谱	哪 一餐 有 两种 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
饭 不 比 米饭 布丁	饭 比 米饭 布丁 不吃	饭比米 布丁 还 不吃	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string ! = ) en.recipe.rice_pudding ) )
告诉 我 食谱 需要 比 米饭 布丁 更长 的 烹饪 时间	给 我 看看 烹饪 比 米饭 布丁 需要 更 长时间 的 食谱	给 我 看看 比 米饭 布丁 需要 更长 的 时间 来 烹饪 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 的 准备 时间 最短	什么 配方 的 制备 时间 最短	什么 配方 的 准备 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 是 米饭 布丁 的 烹饪 时间	米饭 布丁 的 烹调 时间 是 几点	米 布丁 的 烹调 时间 是 几点	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
命名 两种 以上 食谱 所 需 的 成分	说出 两种 以上 食谱 中所 需 的 成分	说出 两种 以上 食谱 中 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 成分 在 食谱 中 使用 最少	食谱 中 使用 最少 的 成分 是 什么 ？	在 菜谱 中 什么 成分 用 得 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
至少 有 两种 食谱 使用 了 哪些 成分	至少 有 两个 食谱 使用 了 哪些 成分	至少 有 两个 食谱 使用 什么 原料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
食谱 烹饪 时间	食谱 烹饪 时间	食谱 烹饪 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
什么 食谱 属于 两种 美食	什么 菜谱 分为 两种 菜系	什么 食谱 可 分为 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
什么 食谱 与 米饭 布丁 的 烹饪 时间 相同	什么 食谱 和 米饭 布丁 的 烹调 时间 一样	什么 食谱 和 米饭 布丁 的 烹饪 时间 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
告诉 我 午餐 不能 吃 的 食谱	给 我 看看 午餐 不能 吃 的 食谱	给 我 看看 不能 拿来 当 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
哪个 食谱 的 发布 日期 小于 2004 年 或 2010 年	哪个 配方 的 发布 日期 小于 2004 年 或 2010 年	哪个 食谱 的 发布 日期 小于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
饭 比 米饭 布丁 或 乳蛋饼	比 米饭 布丁 或 蛋奶 饼 还 好吃 的 饭	比 米饭 布丁 或 乳蛋 饼 更 美味	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
哪些 食谱 是 午餐 或 晚餐	午餐 或 晚餐 吃 什么 菜谱	午餐 和 晚餐 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
向 我 展示 烹饪 时间 大于 米饭 布丁 烹饪 时间 的 食谱	给 我 看看 烹饪 时间 比 米饭 布丁 的 烹饪 时间 长 的 食谱	给 我 看看 烹饪 时间 比做 米饭 布丁 的 时间 还长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
告诉 我 米饭 布丁 的 食谱	给 我 看看 米饭 布丁 的 食谱	给 我 看看 米饭 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) ) )
制作 米饭 布丁 不 需要 什么 成分	做 米饭 布丁 不 需要 什么 配料	做米 布丁 不 需要 什么 原料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
告诉 我 需要 两种 或 更少 成分 的 食谱	给 我 看看 需要 两种 或 更少 配料 的 食谱	给 我 看看 需要 两种 或 更少 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
在 2010 年 之前 向 我 展示 发布 日期 的 食谱	给 我 看看 2010 年 之前 的 菜谱	给 我 看看 2010 年 以前 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 所有 食谱 的 平均 烹饪 时间	给 我 看看 所有 菜谱 的 平均 烹饪 时间	告诉 我 所有 食谱 的 平均 烹饪 时间	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
显示 最 需要 作为 米饭 布丁 准备 的 食谱	展示 最 需要 的 米饭 布丁 配方	展示 需要 在 最 多 时间 制作 大米 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 最快 煮熟	什么 食谱 做 得 最快	什么 食谱 做 得 最快	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
需要 多少 成分	需要 多少 配料	需要 多少 配料	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 与 米饭 布丁 的 烹饪 时间 相同	什么 食谱 和 米饭 布丁 的 烹调 时间 一样	什么 食谱 的 烹饪 时间 和 大米 布丁 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
哪 一餐 是 米饭 布丁 了	米饭 布丁 吃 哪 一餐	哪 一餐 是 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
许多 食谱 需要 哪 种 成分	许多 食谱 都 需要 哪 种 配料	许多 食谱 需要 哪 种 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 的 烹饪 时间 低于 米饭 布丁	什么 食谱 的 烹调 时间 比 米饭 布丁 的 要 短	什么 食谱 的 烹调 时间 比米 布丁 的 时间 还 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
2004 年 发布 的 食谱 需要 牛奶	2004 年 公布 的 哪些 食谱 需要 牛奶	2004 年 贴 出 的 哪些 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 准备 时间 少于 米饭 布丁 的 烹饪 时间 的 食谱	准备 时间 少于 米饭 布丁 烹调 时间 的 食谱 是 什么	什么 配方 的 准备 时间 比米 布丁 的 烹饪 时间 短	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
显示 最多 有 两道 美食 的 食谱	展示 最多 有 两道菜 的 菜谱	展示 最多 有 两种 烹饪 方法 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
给 我 看 最少 烹饪 时间 的 食谱	给 我 看看 烹饪 时间 最少 的 食谱	用 最少 的 时间 为 我 展示 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
米饭 布丁 的 成分	米 布丁 配料	米 布丁 的 配料	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) )
什么 是 米饭 布丁 的 烹饪 时间	米饭 布丁 的 烹调 时间 是 几点	什么 时候 做 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 在 米饭 布丁 的 同一天 发布 的 食谱	给 我 看看 和 米饭 布丁 同时 发布 的 食谱	给 我 看看 与 大米 布丁 同时 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
米饭 布丁 的 配方	米饭 布丁 的 配方	大米 布丁 的 食谱	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
用 什么 饭 是 米饭 布丁	米饭 布丁 是 用来 做 什么 的	米 布丁 是 用来 做 什么 饭 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
没有 牛奶 的 食谱	不 加 牛奶 的 食谱	食谱 没有 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
命名 三种 或 更 多 食谱 所 需 的 成分	说出 三个 或 更 多 食谱 中所 需 的 成分	说出 三个 或 更 多 食谱 中 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
食谱 发布 日期 是 2004 年 还是 2010 年	2004 年 或 2010 年 的 食谱 发布 日期	什么 食谱 发布 日期 是 在 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
哪些 食谱 需要 两种 成分	哪 种 食谱 需要 两种 配料	哪些 食谱 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 2004 年 之后 或 2010 年 之后 发布 的 食谱	展示 2004 年 或 2010 年 后 发布 的 食谱	给 我 看看 2004 年 后 或 2010 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 不是 午餐	什么 食谱 不是 午餐	什么 食谱 不是 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string ! = ) en.meal.lunch ) )
制作 米饭 布丁 需要 多长时间	做 米饭 布丁 要 多长时间	做米 布丁 要 多长时间	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) )
告诉 我 食谱 需要 比 米饭 布丁 更长 的 烹饪 时间	给 我 看看 烹饪 比 米饭 布丁 需要 更 长时间 的 食谱	给 我 看看 比米 布丁 需要 更长 的 时间 来 烹饪 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 最低 的 烹饪 时间	什么 食谱 需要 最少 的 烹调 时间	什么 食谱 需要 最低 的 烹饪 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
有 超过 两种 美食 的 食谱	有 两种 以上 菜肴 的 菜谱	食谱 有 两种 以上 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
将 用于 午餐 的 配方 命名 为 牛奶	说出 用 牛奶 做 午餐 的 食谱	说出 用 牛奶 做 午餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
展示 最 多 菜肴 的 食谱	显示 菜谱 的 最大 数量	显示 食谱 与 最大 数量 的 菜系	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
什么 食谱 需要 两个 成分	什么 食谱 至少 需要 两种 配料	什么 食谱 至少 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
这是 食谱 中 最 常用 的 成分	配方 中 最 常用 的 成分 是	食谱 中 使用 最多 的 配料 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 米饭 布丁 的 发布 日期	米饭 布丁 的 邮寄 日期 是 什么 时候	米 布丁 的 投寄 日期 为何	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 食谱 的 菜肴 数量 最少	什么 菜谱 的 菜肴 最少	什么 食谱 的 菜式 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
哪 一餐 是 2004 年 发布 日期 的 食谱	2004 年 过期 的 菜谱 是 哪 一餐	哪 一餐 是 2004 年 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
哪 种 食谱 比 米饭 布丁 花费 的 时间 更 少	哪 种菜 谱 比 米饭 布丁 做 的 时间 少	哪 种 烹饪 方法 比米 布丁 更省 时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
至少 两种 食谱 所 需 的 成分	至少 两种 食谱 所 需 的 配料	至少 有 两个 食谱 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
显示 没有 牛奶 作为 其 成分 之一 的 食谱	展示 不 含 牛奶 的 食谱	展示 不 含 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
准备 食谱 需要 多少 时间	准备 菜谱 要花 多少 时间	做 这 道菜 要花 多少 时间	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
什么 食谱 需要 最长 的 准备 时间	准备 什么 食谱 最 费时	什么 菜谱 做 起来 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
配方 需要 多长时间 准备	菜谱 要 多长时间 才能 准备 好	这个 食谱 需要 多长时间 准备	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
告诉 我 最 古老 的 食谱	给 我 看看 最 古老 的 食谱	给 我 看看 最 古老 的 食谱	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
找 午餐 吃饭 食谱	找到 午餐 食谱	寻找 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
什么 食谱 烹饪 比 米饭 布丁 花费 更少 的 时间 准备	什么 食谱 比 米饭 布丁 的 烹调 时间 短 ？	什么 食谱 烹调 时间 比米 布丁 更少 的 准备	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 餐有 最 多 的 食谱	哪 一餐 食谱 最 多	什么 菜 有 最 多 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 需要 最短 的 烹饪 时间	什么 菜谱 煮 的 时间 最短	什么 食谱 烹调 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
告诉 我 食谱 的 准备 时间 大于 米饭 布丁	给 我 看看 准备 时间 比 米饭 布丁 还长 的 食谱	给 我 看看 比 大米 布丁 准备 时间 更长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 是 米饭 布丁 发布 的 日子	米饭 布丁 是 哪天 贴 的	今天 是 什么 日子	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
什么 饭有 两个 或 更 多 的 食谱	哪 一餐 有 两个 或 两个 以上 的 食谱	什么 菜 有 两个 或 更 多 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
午餐 食谱 需要 什么 成分	午餐 食谱 需要 什么 配料	午餐 食谱 需要 什么 材料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
所有 食谱 的 总 准备 时间 是 多少	所有 食谱 的 总 准备 时间 是 多少	所有 食谱 的 总 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
找 一些 午餐 食谱	找些 午餐 食谱	找到 一些 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) )
什么 食谱 在 2004 年 发布	2004 年 贴 出 了 什么 食谱	2004 年 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 食谱 不迟于 米饭 布丁 食谱	什么 菜谱 贴 得 不 迟于 米饭 布丁 菜谱	什么 食谱 发布 不晚 于 大米 布丁 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
有 多少 食谱 使用 两种 以上 的 成分	有 多少 食谱 使用 两种 以上 的 配料	有 多少 菜谱 使用 了 两种 以上 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪个 配方 的 准备 时间 最短	哪 种 配方 的 制备 时间 最短	哪个 配方 的 准备 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
有 多少 餐	有 几顿 饭	有 多少 餐	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
在 张贴 米饭 布丁 之后 发布 的 食谱	张贴 米饭 布丁 或 张贴 米饭 布丁 后 的 食谱	食谱 张贴 或 张贴 大米 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
这个 配方 需要 的 最 重要 的 成分 是 什么	这个 食谱 最 需要 的 配料 是 什么	这个 食谱 最 需要 的 配料 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 有 米饭 布丁 的 烹饪 时间	哪个 食谱 有 米饭 布丁 的 烹调 时间	哪个 食谱 有米 布丁 的 烹饪 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
给 我 看 食谱 需要 米饭 布丁 的 配料	给 我 看看 需要 米饭 布丁 配料 的 食谱	给 我 看看 需要 大米 布丁 配料 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 是 不 超过 两种 配方 中 发现 的 成分	在 不 超过 两种 食谱 中 发现 的 成分 是 什么	在 不 超过 两种 食谱 中 发现 的 成分 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
给 我 看 一些 烹饪 时间 等于 米饭 布丁 准备 时间 的 食谱	给 我 看看 烹饪 时间 等于 米饭 布丁 准备 时间 的 食谱	给 我 看看 烹饪 时间 等于 米 布丁 准备 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
食谱 的 总 预备 时间 是 多少	食谱 的 总 准备 时间 是 多少	总 准备 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ) ) )
哪些 食谱 需要 与 米饭 布丁 相同 的 成分	哪些 食谱 需要 和 米饭 布丁 一样 的 配料	哪些 食谱 需要 与 大米 布丁 相同 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) en.recipe.rice_pudding ) ) )
什么 食谱 需要 牛奶 或 菠菜	什么 食谱 需要 牛奶 或 菠菜	什么 食谱 需要 牛奶 或 菠菜	( call SW.listValue ( call SW.concat en.ingredient.milk en.ingredient.spinach ) )
什么 餐有 不到 两个 食谱 来 做 它	哪 一顿饭 的 食谱 少于 两种	什么 菜 只有 不到 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 需要 最 少量 的 成分	哪些 食谱 需要 最少 的 配料	哪些 食谱 用料 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 种 配方 比 米饭 布丁 准备 需要 更少 的 烹饪 时间	哪 种 食谱 比 米饭 布丁 的 烹调 时间 要 短	哪 种 烹饪 方法 比米 布丁 更省 时	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
食谱 发布 日期 大于 2004 年 或 2010 年	什么 食谱 发布 日期 大于 2004 年 或 2010 年	哪些 食谱 的 发布 日期 大于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪 种 食谱 需要 最长 的 准备 时间	哪 种 食谱 需要 最长 的 准备 时间	哪个 食谱 需要 最长 的 准备 时间	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 食谱 有 最大 的 烹饪 时间	什么 食谱 的 烹调 时间 最长	什么 食谱 烹调 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
哪 种 配方 属于 米饭 布丁 的 美食	哪 种菜 谱 属于 米饭 布丁	哪 一道 菜 属于 米 布丁 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
告诉 我 没有 牛奶 的 食谱	给 我 看看 没有 牛奶 的 食谱	给 我 看看 没有 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string ! = ) en.ingredient.milk ) )
什么 食谱 的 烹饪 时间 等于 米饭 布丁 的 准备 时间	什么 食谱 的 烹调 时间 等于 米饭 布丁 的 准备 时间	什么 食谱 的 烹调 时间 等于 米 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
找到 多种 美食 的 食谱	找到 多种 菜肴 的 菜谱	查找 多种 菜肴 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
向 我 展示 两种 以上 食谱 所 需 的 成分	给 我 看看 两种 以上 食谱 所 需 的 配料	给 我 看看 两种 以上 的 食谱 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 需要 三种 或 更 多 的 成分	什么 食谱 需要 三种 或 更 多 的 配料	什么 食谱 需要 三种 或 更 多 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪些 食谱 是 在 2004 年 之后 发布 的	2004 年 之后 贴出 了 哪些 食谱	哪些 食谱 是 2004 年 后 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
少于 三餐 的 食谱	三餐 以下 的 食谱	少于 三餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
显示 在 2004 年 至 2010 年 之间 发布 的 食谱	展示 2004 年 至 2010 年间 发布 的 食谱	展示 2004 年 至 2010 年间 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 午餐 食谱 所 需 的 食材	给 我 看看 午餐 食谱 所 需 的 配料	给 我 看看 午餐 食谱 需要 的 食材	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
显示 其 烹饪 时间 与 米饭 布丁 相同 的 食谱	显示 烹饪 时间 与 米饭 布丁 相同 的 食谱	展示 烹饪 时间 与 米 布丁 相同 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
什么 是 2004 年 或 2010 年 发布 的 食谱	2004 年 或 2010 年 的 菜谱 是 什么	2004 年 或 2010 年 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪 一餐 的 食谱 最少	哪 一餐 的 食谱 最少	哪 一餐 有 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 是 最近 的	最新 的 食谱 是 什么	什么 配方 是 最新 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
比 米饭 布丁 更 准备 时间 的 食谱	比 米饭 布丁 准备 时间 长 的 食谱	比米 布丁 准备 时间 更长 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 在 2004 年 发布 ， 需要 牛奶	2004 年 贴 出 了 什么 配方 需要 牛奶	2004 年 贴 出 的 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
找到 2005 年 发布 的 食谱	查找 2005 年 发布 的 食谱	查找 2005 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
告诉 我 食谱 在 米饭 布丁 或 之前 发布 的 当天	给 我 看看 和 米饭 布丁 当天 或 之前 贴出 的 食谱	给 我 看看 当天 或 之前 发布 的 大米 布丁 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
哪些 食谱 需要 牛奶	哪些 食谱 需要 牛奶	哪些 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 是 两种 以上 食谱 中 使用 的 成分	两种 以上 的 食谱 中 使用 的 成分 是 什么	什么 成分 用于 两种 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪个 食谱 是 在 2004 年 或 2010 年 发布 的	哪 种 配方 是 在 2004 年 或 2010 年 发布 的	哪个 食谱 是 在 2004 年 或 2010 年 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
哪 种 食谱 至少 需要 两种 成分	哪 种 配方 至少 需要 两种 配料	哪个 食谱 至少 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 是 米饭 布丁 中 没有 的 成分	米饭 布丁 中 没有 的 成分 是 什么	大米 布丁 中 没有 的 成分 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
配方 的 平均 烹饪 时间 是 多少	菜谱 的 平均 烹调 时间 是 多少	食谱 的 平均 烹调 时间 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ) ) )
向 我 展示 2004 年 或 之后 或 2010 年 或 之后 发布 的 食谱	展示 2004 年 或 之后 或 2010 年 或 之后 发布 的 食谱	给 我 看看 2004 年 或 之后 、 2010 年 或 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 食谱 至少 两餐	给 我 看看 至少 两顿 饭 的 食谱	给 我 看看 至少 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
2004 年 发布 的 食谱 成分 是 什么	2004 年 发布 的 食谱 需要 什么 成分	2004 年 贴 出 的 食谱 需要 什么 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
说出 米饭 布丁 中 不 需要 的 成分	说出 米 布丁 中 不 需要 的 成分	说出 米 布丁 中 不 需要 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string ! = ) en.recipe.rice_pudding ) )
什么 是 与 米饭 布丁 相同 的 美食 配方	和 米饭 布丁 一样 的 菜谱 是 什么	什么 是 米饭 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
在 发布 米饭 布丁 时 发布 了 哪些 食谱	米饭 布丁 贴 的 时候 贴 了 哪些 食谱	大米 布丁 发布 的 时候 有 哪些 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
2004 年 发布 的 食谱 需要 牛奶	2004 年 贴 出 的 食谱 要求 牛奶	2004 年 贴 出 的 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 饭 是 需要 牛奶 的 食谱	需要 牛奶 的 食谱 是 什么	什么样 的 食谱 需要 牛奶	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
告诉 我 食谱 需要 长时间 准备 米饭 布丁	给 我 看看 做 米饭 布丁 需要 多长时间 的 食谱	给 我 看看 那些 和 米饭 布丁 一样 需要 很 长时间 才能 做好 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
什么 食谱 与 米饭 布丁 同日 发布	什么 菜谱 和 米饭 布丁 是 同一天 贴出来 的	什么 食谱 和 大米 布丁 是 同一天 贴出来 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
哪些 食谱 最多 是 两餐	两餐 最多 吃 哪种 食谱	哪些 食谱 最多 是 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 2004 年 后 发布 的 食谱	给 我 看看 2004 年 后 发布 的 食谱	给 我 看看 2004 年 后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
食谱 发布 日期 大于 2004 年	什么 食谱 发布 日期 大于 2004	哪些 食谱 的 发布 日期 大于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
找到 与 米饭 布丁 相同 的 美食	找到 和 米饭 布丁 一样 的 菜谱	找到 和 米饭 布丁 一样 的 烹饪 方法	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
什么样 的 菜 是 米饭 布丁	米饭 布丁 是 什么 菜	什么样 的 美食 是 米饭 布丁	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) )
什么 成分 只用 在 一个 配方 中	什么 成分 只 在 一个 配方 中 使用	什么 成分 只用 在 一个 食谱 里	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
2004 年 之后 发布 了 什么 食谱	2004 年 后 贴 出 了 什么 食谱	2004 年 后 贴 出 了 什么 配方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
贴 上 米饭 布丁 的 食谱 贴出来	食谱 贴 到 米饭 布丁 贴上来	直到 大米 布丁 贴出来	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
告诉 我 2004 年 及 之前 发布 的 食谱	向 我 展示 2004 年 及 更 早 发布 的 食谱	给 我 看看 2004 年 及 更 早 时候 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
找到 2004 年 发布 的 膳食 食谱	找到 2004 年 发布 的 食谱	找到 一份 2004 年 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 ， 其 准备 时间 是 米饭 布丁 的 最佳 烹饪 时间	给 我 看看 准备 时间 最长 的 食谱 米饭 布丁 的 烹调 时间	给 我 看看 那些 准备 时间 最长 的 米饭 布丁 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
用 最少 的 食谱 向 我 展示 膳食	给 我 看看 食谱 最少 的 饭菜	用 最少 的 食谱 给 我 看	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
使用 了 多少 成分	使用 了 多少 种 配料	需要 多少 配料	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
告诉 我 食谱 的 准备 时间 少于 米饭 布丁 的 烹饪 时间	给 我 看看 准备 时间 比 米饭 布丁 烹饪 时间 短 的 食谱	给 我 看看 比 米饭 布丁 的 烹饪 时间 还 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
在 米饭 布丁 之前 发布 了 什么 食谱	米饭 布丁 前贴 了 什么 食谱	米饭 布丁 之前 贴 的 是 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 时候 发布 米饭 布丁	米饭 布丁 什么 时候 寄 的	大米 布丁 是 什么 时候 寄出 的	( call SW.listValue ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) )
最少 吃饭 的 食谱	最少 餐数 的 食谱	一餐 最少 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( string meal ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
告诉 我 少于 两餐 的 食谱	给 我 看 两餐 以下 的 食谱	给 我 看看 少于 两餐 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
什么 是 一种 食谱 ， 其 烹饪 时间 与 米饭 布丁 相同	什么 食谱 的 烹调 时间 和 米饭 布丁 一样	什么 食谱 的 烹饪 时间 与 大米 布丁 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cooking_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
显示 2004 年 发布 的 食谱 ， 并 将 牛奶 作为 其 成分 之一	展示 2004 年 发布 的 食谱 ， 并 将 牛奶 作为 其 配料 之一	展示 2004 年 发布 的 食谱 ， 牛奶 是 其中 一种 成分	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 食谱 有 最 短 的 烹饪 时间	什么 食谱 的 烹调 时间 最短	什么 食谱 烹调 时间 最短	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
用 牛奶 食谱	牛奶 套餐	牛奶 配方 饭	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
哪 种 配方 最早 可以 准备	哪 种 配方 最早 可以 制备	哪 一种 食谱 最早 可以 准备	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
2004 年 发布 的 午餐 食谱	2004 年 发布 的 午餐 食谱	2004 年 发布 的 一份 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 午餐 食谱 含有 牛奶	什么 午餐 食谱 含有 牛奶	什么 午餐 食谱 都 有 牛奶	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string meal ) ( string = ) en.meal.lunch ) )
给 我 看饭 ， 包括 米饭 布丁	给 我 看看 饭 ， 包括 米饭 布丁	给 我 看看 饭 ， 包括 米饭 布丁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) en.recipe.rice_pudding ) )
使用 与 米饭 布丁 相同 的 时间 制备 哪 种 配方	哪 种 配方 的 制作 时间 与 米饭 布丁 的 时间 相同	哪 一道 菜 的 制作 时间 与 大米 布丁 的 制作 时间 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
列出 需要 牛奶 的 食谱	列出 需要 牛奶 的 食谱	列出 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 不迟于 2004 年 或 2010 年 发布	什么 菜谱 最迟在 2004 年 或 2010 年 发布	什么 配方 不迟于 2004 年 或 2010 年 发布	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
三餐 或 更 多餐 的 食谱	三餐 或 三餐 以上 的 食谱	三餐 或 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
超过 两个 食谱 的 成分 是 什么	两种 以上 的 食谱 中有 什么 成分	什么 成分 在 两个 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
只要 准备 米饭 布丁 ， 哪些 食谱 需要	哪 种 食谱 只要 准备 米饭 布丁	哪些 食谱 需要 像 米 布丁 一样 长 的 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
找到 两餐 食谱	找 两份 食谱	找到 两个 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 食谱 有 两种 或 更少 类型 的 美食	什么 菜谱 有 两种 或 两种 以下 的 菜肴	什么 食谱 有 两种 或 两种 以下 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
配方 需要 少于 三种 成分	配方 要求 少于 三种 成分	食谱 需要 少于 三种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 配方 需要 比 米饭 布丁 更长 的 准备 时间	什么 菜谱 比 米饭 布丁 的 制作 时间 长 ？	还有 什么 食谱 比 大米 布丁 准备 得 更 久 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 晚于 2004 年 发布 的 食谱	给 我 看看 2004 年 以后 发布 的 菜谱	给 我 看看 2004 年 以后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
告诉 我 食谱 的 准备 时间 等于 米饭 布丁 的 烹饪 时间	给 我 看看 准备 时间 等于 米饭 布丁 烹调 时间 的 食谱	给 我 看看 准备 时间 等于 米 布丁 烹饪 时间 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
查找 2004 年 或 2010 年 之后 发布 的 食谱	查找 2004 年 或 2010 年 以后 发布 的 食谱	查找 2004 年 或 2010 年 以后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
告诉 我 食谱 与 米饭 布丁 具有 相同 的 准备 时间	给 我 看看 和 米饭 布丁 准备 时间 一样 的 食谱	给 我 看看 和 米饭 布丁 一样 的 烹饪 方法	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) )
告诉 我 2004 年 发布 的 需要 牛奶 的 食谱	给 我 看看 2004 年 发布 的 需要 牛奶 的 食谱	给 我 看看 2004 年 发布 的 需要 牛奶 的 配方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2003 年 后 发布 的 食谱	2003 年 后 发布 的 食谱	2003 年 以后 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
乳蛋 饼 或 米饭 布丁	蛋 奶酥 或 米饭 布丁	乳蛋 饼 或 大米 布丁	( call SW.listValue ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) )
告诉 我 食谱 遵循 两种 或 更 多 的 美食	给 我 看看 有 两种 或 两种 以上 菜系 的 菜谱	给 我 看看 以下 两种 或 两种 以上 菜系 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
告诉 我 食谱 的 准备 时间 比 米饭 布丁 的 烹饪 时间 短	给 我 看看 准备 时间 比 米糕 烹饪 时间 短 的 食谱	给 我 看看 比做 米饭 布丁 的 时间 还 短 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 与 米饭 布丁 具有 相同 或 更长 的 准备 时间	哪些 食谱 的 准备 时间 与 米饭 布丁 相同 或 更长	哪些 食谱 的 准备 时间 和 大米 布丁 一样 长 或者 更长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
使用 牛奶 的 食谱 需要 哪些 其他 成分	使用 牛奶 的 食谱 还 需要 什么 其他 成分	使用 牛奶 的 食谱 还 需要 什么 其他 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) ) )
什么 食谱 用于 最多 的 美食	哪 种菜 谱 用 在 最 多 的 菜肴 里	最 常用 的 烹饪 方法 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
哪个 配方 需要 最长 的 准备 时间	哪 种菜 谱 的 制作 时间 最长	哪个 食谱 做 起来 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
给 我 看 午餐 的 食谱	给 我 看看 午餐 食谱	给 我 看看 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string meal ) ( string = ) en.meal.lunch ) )
用 两种 以上 的 食谱 向 我 展示 餐食	给 我 看 两种 以上 食谱 的 饭菜	给 我 看 两种 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 最多 有 两种 美食	哪 种菜 谱 最 多 有 两道菜	哪些 食谱 最多 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
给 我 看 两种 成分 的 食谱	给 我 看 两种 配料 的 食谱	给 我 看看 有 两种 配料 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
2004 年 或 2010 年 之后 发布 的 食谱	2004 年 或 2010 年 后 发布 的 食谱	在 2004 年 或 2010 年 之后 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
向 我 展示 最 多 两个 食谱 所 需 的 成分	最多 给 我 看 两个 食谱 所 需 的 配料	给 我 看看 最 多 两个 食谱 需要 的 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 是 2004 年 张贴 的 食谱	2004 年 贴 出 菜谱 的 饭菜 是 什么	什么 是 2004 年 贴 出 的 菜谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
比 米饭 布丁 需要 更 少 时间 准备 的 食谱	比 米饭 布丁 需要 更 少 时间 准备 的 食谱	比米 布丁 更省 时 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
找到 我 需要 牛奶 的 所有 食谱	给 我 找 所有 需要 牛奶 的 食谱	给 我 找到 所有 需要 牛奶 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) en.ingredient.milk ) )
哪些 食谱 是 在 2004 年 的 午餐时间 发布 的	2004 年 午餐 贴出 了 哪些 食谱	2004 年 发布 了 哪些 午餐 食谱	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 至少 与 米饭 布丁 一样 长 的 食谱	做 一个 米饭 布丁 至少 要花 同样 长 的 时间 的 食谱 是 什么	什么 食谱 的 制作 时间 至少 和 大米 布丁 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪个 食谱 最新 发布	哪 种 食谱 是 最新 的	最新 的 食谱 是 什么	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string posting_date ) ) ) )
什么 是 不 迟于 2004 年 发布 的 食谱	不迟于 2004 年 公布 的 食谱 是 什么	什么 是 不 迟于 2004 年 贴 出 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 所有 食谱 中 使用 了 多少 总 成分	所有 食谱 中 总共 使用 了 多少 种 配料	所有 的 食谱 中 总共 使用 了 多少 种 配料	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪 种 食谱 需要 花费 最少 的 时间 来 准备	哪 种 配方 的 制作 时间 最少	哪个 食谱 的 准备 时间 最少	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ) )
什么 食谱 要么 牛奶 或 菠菜	什么 食谱 叫 牛奶 或 菠菜	什么 食谱 需要 牛奶 或 菠菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string = ) ( call SW.concat en.ingredient.milk en.ingredient.spinach ) ) )
大多数 食谱 要求 什么 成分	大多数 食谱 要求 什么 成分	大多数 食谱 都 需要 什么 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string requires ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
什么 配方 比 米饭 布丁 煮 得 更 快	什么 食谱 做 得 比 米饭 布丁 快	什么 食谱 做 得 比 大米 布丁 还 快	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
用 最 多 的 食谱 向 我 展示 餐点	给 我 看看 最有 菜谱 的 饭菜	给 我 看看 有 很多 食谱 的 食物	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
用 至少 两种 食谱 向 我 展示 餐点	给 我 看看 至少 有 两种 食谱 的 饭菜	给 我 看看 至少 有 两个 食谱 的 食物	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
找到 可 用于 两餐 以上 的 食谱	找到 可 用于 两餐 以上 的 食谱	查找 可 用于 两餐 以上 的 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
食谱 在 2004 年 之前 发布	2004 年前 发布 的 食谱	2004 年 以前 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
显示 午餐 或 晚餐 的 食谱	展示 午餐 或 晚餐 的 食谱	展示 午餐 或 晚餐 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( call SW.concat en.meal.lunch en.meal.dinner ) ) )
什么 是 午餐 食谱 中 的 成分	午餐 食谱 中有 什么 成分	午餐 食谱 中有 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
哪些 食谱 发布 到 2004 年	到 2004 年 有 哪些 食谱	哪些 食谱 被 贴 到 了 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 食谱 烹饪 时间 是 最低 的 米饭 布丁	什么 食谱 的 烹调 时间 比 米饭 布丁 的 烹调 时间 要 短 ？	什么 食谱 烹调 时间 最短 的 是 米糕	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
在 2010 年 之前 发布 了 什么 食谱	2010 年 之前 发布 了 什么 食谱	2010 年 之前 发布 的 食谱 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 食谱 需要 最多 的 成分	什么 配方 需要 最多 的 配料	什么 配方 需要 最多 的 配料	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string requires ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
这种 食谱 需要 两种 以上 的 成分	这个 容器 需要 两种 以上 的 成分	这种 发票 需要 两种 以上 的 成分	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
什么 食谱 需要 一 两种 成分	什么 食谱 需要 一 两种 配料	什么 食谱 需要 一 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
哪些 食谱 最 多 需要 两种 成分	哪 种 食谱 最 多 需要 两种 配料	哪些 食谱 最 多 需要 两种 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string requires ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ) )
发布 日期 至少 是 米饭 布丁 发布 日期 的 食谱	发布 日期 至少 为 米饭 布丁 发布 日期 的 配方	食谱 的 投寄 日期 至少 为 米 布丁 投寄 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) ) )
什么 食谱 可以 少于 两种 类型 的 美食	什么 菜谱 能 做出 少于 两种 的 菜肴	什么 菜谱 能 做出 两种 以下 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
哪些 食谱 与 米饭 布丁 同时 张贴	哪些 食谱 和 米饭 布丁 同时 张贴	哪些 食谱 是 和 米饭 布丁 同时 发布 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string posting_date ) ) ) )
两种 食谱 中 需要 哪些 成分	两种 食谱 需要 什么 成分	两个 食谱 需要 什么 配料	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
哪些 食谱 不到 两种 美食	哪 种菜 谱 少于 两道菜	哪些 食谱 的 烹饪 方法 少于 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
什么 食谱 烹饪 时间 低于 米饭 布丁 的 准备 时间	什么 食谱 烹饪 时间 比 米糕 的 准备 时间 短	什么 菜 的 烹调 时间 比 米糕 的 准备 时间 还慢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪 种 食谱 可 用于 两餐 或 更 多餐	哪 种菜 谱 可 用于 两餐 或 两餐 以上	哪个 食谱 可以 用于 两餐 或 两餐 以上	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
配方 的 准备 时间 不 超过 米饭 布丁	配方 制备 时间 不 超过 米糕 制备 时间	食谱 的 准备 时间 不 超过 米 布丁 的 准备 时间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 比 米饭 布丁 需要 更 多 时间 准备	什么 食谱 比 米饭 布丁 需要 更 多 的 时间 来 准备	还有 什么 食谱 比 大米 布丁 更 需要 时间 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
哪个 食谱 的 准备 时间 与 米饭 布丁 的 烹饪 时间 一样 长	哪 种 食谱 的 准备 时间 和 米饭 布丁 的 烹调 时间 一样 长	哪些 食谱 的 准备 时间 和 米 布丁 的 烹饪 时间 一样 长	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string preparation_time ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) )
什么 是 最 多 的 成分 配方	什么 配方 的 配料 最 多	什么 是 配料 最多 的 食谱	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
什么 成分 用于 米饭 布丁 或 乳蛋饼	米饭 布丁 或 蛋 奶酥 用 什么 配料 ？	米 布丁 或 乳蛋 饼 用 什么 原料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
向 我 展示 2004 年 发布 的 食谱 所 需 的 成分	给 我 看看 2004 年 发布 的 食谱 所 需 的 配料	给 我 看看 2004 年 发布 的 食谱 中 需要 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 食谱 需要 最长 的 烹饪 时间	什么 食谱 做 得 最久	什么 食谱 做 起来 时间 最长	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ) )
你 做 什么 食谱 的 时间 比 米饭 布丁 少	你 做 什么 菜 的 时间 比 米饭 布丁 少	什么 食谱 你 做 的 时间 比 大米 布丁 还少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 需要 等于 或 少于 烹饪 的 时间 比 米饭 布丁 需要 准备	什么 菜谱 的 烹调 时间 等于 或 少于 米饭 布丁 的 烹调 时间	做 米饭 布丁 需要 的 时间 比 准备 米饭 布丁 的 时间 少 或 多	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
显示 午餐 食谱 的 成分	展示 午餐 食谱 的 配料	展示 午餐 食谱 的 配料	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ) )
这是 多少 餐	这个 能 做 多少 顿饭	这能 做 多少 顿饭	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
给 我 看 一下 烹饪 时间 少于 米饭 布丁 准备 时间 的 食谱	给 我 看看 烹饪 时间 少于 米饭 布丁 准备 时间 的 食谱	给 我 看看 烹饪 时间 比米 布丁 准备 时间 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
给 我 看 一下 烹饪 时间 比 米饭 布丁 更 短 的 食谱	给 我 看看 烹饪 时间 比 米饭 布丁 短 的 食谱	给 我 看看 比 大米 布丁 烹饪 时间 更 短 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string cooking_time ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string cooking_time ) ) ) ) )
什么 食谱 发布 日期 是 在 2004 年 ， 它 需要 什么 成分	2004 年 的 食谱 发布 日期 是 什么 ， 需要 什么 成分	什么 食谱 张贴 日期 是 在 2004 年 ， 它 需要 什么 成分	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.ingredient ) ( string ! type ) ) ( call SW.reverse ( string requires ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string posting_date ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 食谱 需要 牛奶 ， 午餐	什么 食谱 需要 牛奶 和 午餐	什么 食谱 需要 牛奶 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) en.meal.lunch ) ( string requires ) ( string = ) en.ingredient.milk ) )
什么 配方 是 在 米饭 布丁 或 更 早 的 准备 时间 准备 的	在 米饭 布丁 或 更 早 的 时候 准备 什么 配方	在 米 布丁 的 准备 时间 或 更 早 的 时候 准备 什么 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string preparation_time ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.recipe.rice_pudding ( string preparation_time ) ) ) ) )
告诉 我 一餐	给 我 看 一顿饭	给 我 看 一份 饭	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meal ) ) ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ) )
向 我 展示 2004 年 或 之前 或 2010 年 或 之前 发布 的 食谱	展示 2004 年 或 之前 或 2010 年 或 之前 发布 的 食谱	给 我 看看 2004 年 或 之前 、 2010 年 或 之前 发布 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string posting_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 饭 是 米饭 布丁 或 乳蛋饼	米饭 布丁 或 蛋 奶酥 在 哪 一餐	什么 饭 是 大米 布丁 或 乳蛋饼	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ( call SW.reverse ( string meal ) ) ( string = ) ( call SW.concat en.recipe.rice_pudding en.recipe.quiche ) ) )
告诉 我 与 米饭 布丁 相同 的 食谱	给 我 看看 和 米饭 布丁 一样 的 菜谱	给 我 看看 和 米饭 布丁 一样 的 食谱	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.recipe.rice_pudding ( string cuisine ) ) ) )
是 午餐 或 晚餐 的 食谱	午餐 还是 晚餐 的 食谱	这是 午餐 或 晚餐 的 食谱 吗	( call SW.listValue ( call SW.concat en.meal.lunch en.meal.dinner ) )
两餐 的 食谱	两餐 食谱	两餐 食谱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.recipe ) ( string ! type ) ) ( string meal ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.meal ) ( string ! type ) ) ) )
酒店 有 3 星 评级	三星级 酒店	这是 一家 3 星级 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
最少 的 餐厅 提供 什么 菜	最少 的 餐馆 供应 什么 菜	少 的 餐馆 供应 什么 菜	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
列出 所有 泰国 或 意大利 餐厅	列出 所有 泰国 或 意大利 餐馆	列出 所有 泰国 或 意大利 餐馆	( call SW.listValue ( call SW.concat en.cuisine.thai en.cuisine.italian ) )
餐厅 的 菜肴 是 泰国菜 ， 对 孩子 们 有 好处	泰国菜 的 餐馆 ， 对 孩子 们 很 好	这家 餐馆 的 菜 是 泰国菜 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
什么 餐厅 的 价格 评级 大于 或 等于 泰国 咖啡馆	哪个 餐厅 的 价格 等级 高于 或 等于 泰国 咖啡馆	哪家 餐厅 的 价格 评级 能 超过 或 等于 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 社区 有 餐厅 在 户外 服务	哪些 社区 有 户外 餐厅	什么样 的 社区 有 户外 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
儿童 友好 餐厅 有 哪些 美食 选择	儿童 友好 型 餐厅 有 哪些 菜肴 可 供选择	在 儿童 友好 的 餐厅 里 有 什么 美食 选择	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
哪家 三星级 餐厅 有 户外 座位	哪家 三星级 餐厅 有 室外 座位	哪家 三星级 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
这家 三星级 餐厅 适合 儿童	这家 三星级 餐厅 对 孩子 们 很 好	这家 三星级 餐厅 适合 孩子 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 有 3 或 2 个 菜单项	哪家 餐馆 有 3 到 2 种 菜单	什么 餐厅 有 3 个 或 2 个 菜单 项目	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
位于 市中心 西部 的 餐厅 供应 泰国菜	市中心 西餐厅 提供 泰国菜	中 城 西部 的 餐馆 提供 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 外卖 的 泰国 餐馆	有 外卖 的 泰国 餐馆	有 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
在 市中心 西部 的 餐厅 提供	市中心 西餐厅	中 城 西部 的 一家 外卖 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
什么 餐厅 需要 预订 和 外卖	哪家 餐馆 接受 预订 并 有 外卖	什么 餐厅 接受 预订 并 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
什么 是 平均 星级 评分	平均 星级 是 多少	平均 星级 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
这家 餐厅 至少 有 两星 评级 并且 外卖	一家 至少 有 两 星级 的 餐馆 ， 还 做 外卖	一家 至少 有 两星 评级 的 餐馆 ， 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 社区 有 最 泰国 餐馆	哪个 社区 有 最 多 的 泰国 餐馆	哪个 街区 有 最 多 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
什么 3 星级 餐厅 有 服务员 服务	哪家 三星级 餐厅 有 服务员 服务	什么 三星级 餐厅 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
团体 的 好 地方 ， 并 预订	团体 和 预订 的 好去处	这是 一个 适合 团体 和 预订 的 好 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
什么 2 美元 的 标志 餐厅 采取 信用卡	哪家 2 美元 招牌 餐厅 接受 信用卡	什么 2 元签 餐厅 拿 信用卡 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
像 泰国 咖啡馆 或 比萨 店 juno 的 美食	像 泰国 咖啡馆 或 比萨 店 朱诺 那样 的 美食	类似 泰国 咖啡馆 或 披萨 店 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 泰国 餐馆 需要 预订	哪些 泰国 餐馆 接受 预订	什么样 的 泰国 餐馆 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string reserve ) ) )
哪 一餐 是 泰国 咖啡馆 不 供应 的	泰国 咖啡馆 不 供应 哪 一餐	泰国 咖啡馆 不 供应 哪 一餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
餐厅 评价 比 泰国 咖啡馆 更高	餐馆 的 评价 比 泰国 咖啡馆 高	餐馆 的 评分 比 泰国 咖啡馆 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
是 附近 是 市中心 西部 的 餐厅 的 美食	是 指 邻近 市中心 西 的 餐馆 的 菜肴	这是 一家 位于 中 城西区 的 餐馆 的 菜系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 餐厅 供应 两种 美食	哪家 餐馆 供应 两种 菜系	什么 餐厅 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
总共 有 多少 家 餐馆	总共 有 多少 家 餐馆	总共 有 多少 家 餐馆	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
列出 所有 有 外卖 和 送货 的 餐馆	列出 所有 有 外卖 和 送货 的 餐馆	列出 所有 有 外卖 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
这家 餐厅 可以 买 到 相当 便宜 的 泰国菜	这家 餐馆 可以 买 到 相当 便宜 的 泰国菜	在 这家 餐馆 可以 买 到 相当 便宜 的 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
泰国 餐厅 评为 3 星	泰国 餐厅 评为 三星级	泰国 餐馆 被 评为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪些 餐厅 有 3 星 评级 和 2 美元 的 价格 评级	哪些 餐厅 有 三星级 和 2 美元 级	哪些 餐厅 有 3 星 评级 和 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 对 团体 有益	什么 餐馆 适合 团体	什么 餐厅 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string groups ) ) )
3 星级 餐厅 提供 送货 服务	哪家 三星级 餐厅 提供 送货 服务	什么 三星级 餐厅 送货上门	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 菜单 上 有 两餐 以上	什么 餐馆 的 菜单 上 有 两顿 以上 的 饭菜	什么 餐馆 的 菜单 上 有 两顿 以上 的 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
3 星 评级 的 餐厅 接受 预订	接受 预订 的 三星级 餐厅	接受 预订 的 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
哪个 餐厅 位于 市中心 西部	中西部 有 哪些 餐馆	中 城西区 有 哪些 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
一个 友好 的 泰国 餐厅	友好 的 泰国 餐馆	一个 友好 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
这家 餐馆 的 邻居 是 市中心 西部 ， 需要 信用卡	一家 餐馆 ， 它 的 邻居 在 市中心 西区 ， 拿 信用卡	它 的 邻居 是 中 城西区 ， 可以 用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
该 地区 的 餐厅 有 2 美元 的 标志 价格 评级	有 2 美元 标志 价格 等级 的 餐厅	餐厅 在 该 地区 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
是 菜肴 是 泰国 的 餐厅 的 附近 的 邻里	附近 的 餐馆 是 泰国菜	那 是 一家 以 泰国菜 为主 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
哪些 餐馆 的 价格 高于 两三个 美元 的 标志	哪些 餐厅 的 价格 等级 高于 2 美元 或 3 美元	哪些 餐厅 的 价格 评级 高于 2 美元 或 3 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
适合 儿童 的 餐馆	适合 儿童 的 餐馆	对 孩子 有益 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string kids ) ) )
列出 所有 拥有 3 星 或 5 星 评级 的 餐厅	列出 所有 3 或 5 星级 餐厅	列出 所有 评级 为 3 星 或 5 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
哪些 餐厅 供应 午餐 ， 并 设有 户外 用餐 区	哪些 餐厅 提供 午餐 和 室外 用餐 区	哪些 餐厅 提供 午餐 ， 并 设有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
一家 提供 服务员 服务 的 餐厅	有 服务员 服务 的 餐馆	有 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string waiter ) ) )
有 服务员 的 餐厅	有 服务员 的 餐馆	有 服务员 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) )
什么 餐厅 拿 信用卡 ， 孩子 友好	哪家 餐馆 收 信用卡 而且 对 孩子 友好	什么 餐厅 接受 信用卡 ， 而且 对 孩子 很 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string kids ) ) )
泰国 咖啡馆 的 星级 评分 是 什么 ？	泰国 咖啡馆 的 星级 评定 是 多少	泰国 咖啡馆 的 星级 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
什么 餐厅 有 户外 座位 和 接受 信用卡	哪些 餐厅 提供 户外 座位 并 接受 信用卡	什么 餐馆 有 露天 座位 ， 还 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
价格 为 2 美元 标志 的 餐厅 ， 对 孩子 们 有 好处	价格 等级 为 2 美元 的 餐馆 招牌 ， 对 孩子 们 有 好处	餐厅 的 价格 评级 是 2 美元 的 标志 ， 这 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
价格 高于 3 美元 的 餐厅	价格 等级 高于 3 美元 标牌 的 餐厅	价格 等级 高于 3 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 餐厅 对 孩子 们 有 好处 ， 并 提供 户外 座位	哪家 餐厅 适合 儿童 ， 并 提供 户外 座位	哪家 餐厅 适合 孩子 们 ， 还 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
位于 市中心 的 餐厅 供应 泰国 美食	市中心 的 餐馆 供应 泰国菜	中城 的 那家 餐馆 供应 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 提供 服务员 服务	什么 餐馆 提供 服务生 服务	什么 餐馆 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) )
列出 所有 3 星级 泰国 餐厅	列出 所有 三星级 泰国 餐厅	列出 所有 3 星级 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 户外 座位 和 外卖	哪家 餐厅 提供 户外 座位 和 外卖	什么 餐厅 提供 户外 座位 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string outdoor ) ) )
餐厅 提供 午餐 并 需要 预订	提供 午餐 和 预订 的 餐厅	餐厅 提供 午餐 并 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
预订 和 服务员 的 餐厅	接受 预订 并 有 服务员 的 餐厅	接受 预订 并 有 服务员 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
一家 供应 午餐 的 三星级 餐厅	提供 午餐 的 三星级 餐厅	一家 供应 午餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
有 多种 菜肴 的 餐厅	有 多种 菜肴 的 餐馆	有 多种 菜肴 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
对 团体 有益 的 餐厅	适合 团体 的 餐厅	对 团体 有益 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) )
提供 最少 餐 点数 的 酒店	提供 最少 用餐 次数 的 酒店	提供 最低 数量 餐食 的 旅馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 餐厅 供应 两餐	哪家 餐馆 供应 两顿 饭	什么 餐厅 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 是 泰国 咖啡馆 的 星级	星级 为 泰式 咖啡 星级 的 餐厅	餐厅 星级 评定 为 泰国 咖啡 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
哪些 餐厅 的 价格 评级 至少 为 两三个 美元 符号	哪家 餐厅 的 价格 等级 至少 是 2 美元 或 3 美元	哪些 餐厅 的 价格 评级 至少 达到 两到 三 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 餐厅 供应 最 多餐	哪家 餐馆 供应 的 饭菜 最 多	哪家 餐馆 供应 最多 的 饭菜	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
酒店 适合 儿童 的 口味 ， 最 适合 团体 用餐	适合 儿童 口味 ， 最 适合 集体 用餐 的 酒店	适合 孩子 们 口味 的 酒店 ， 最 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
哪些 餐厅 有 外卖 和 送货	哪些 餐馆 有 外卖 和 送货	哪些 餐厅 有 外卖 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
什么 泰国 餐厅 需要 预订	哪家 泰国 餐馆 接受 预订	什么 泰国 餐馆 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 外卖 和 预订 的 餐厅	有 外卖 和 预订 的 餐馆	有 外卖 和 接受 预定 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
一个 有 服务员 的 餐厅	有 服务员 的 送货 餐厅	有 服务员 的 外卖 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string waiter ) ) )
所有 餐厅 的 星级 评分 是 多少 ？	所有 餐馆 的 总 星级 是 多少	所有 餐厅 的 总 星级 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
找到 一家 提供 服务员 服务 的 3 星级 餐厅	找 一家 有 服务生 的 三星级 餐厅	找 一家 有 服务员 服务 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
5 星级 和 更 低 价格 的 餐厅	五星级 和 更 低 价格 等级 的 餐厅	5 星级 及 以下 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
酒店 设有 泰国 或 意大利 餐厅	有 泰国 或 意大利 餐厅 的 酒店	酒店 设有 泰国 或 意大利 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
列出 所有 3 星级 餐厅	列出 所有 三星级 餐厅	列出 所有 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 供应 最 少量 的 饭菜	哪家 餐馆 的 饭菜 最少	哪家 餐厅 供应 的 饭菜 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 在 最少 的 社区	哪家 餐馆 在 最少 的 街区	哪个 餐馆 的 邻居 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
不到 两家 餐馆 供应 的 是 什么 餐	不到 两个 餐馆 供应 什么 饭菜	不到 两家 的 餐馆 供应 什么 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 适合 团体 入住 ， 并 设有 户外 座位	哪些 餐厅 适合 团体 用餐 ， 有 户外 座位	哪些 餐厅 适合 团体活动 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string outdoor ) ) )
有 服务员 服务 且 价格 等级 为 2 美元 标志 的 餐厅	有 服务员 服务 且 价格 为 2 美元 的 餐厅	有 服务员 服务 ， 价格 等级 为 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
所有 三星级 餐厅 的 美食 是 什么 ？	三 星级饭店 都 有 什么 菜 ？	所有 3 星级 餐厅 的 菜系 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
2 美元 标志 价格 评级 的 餐厅	标价 2 美元 的 餐厅	2 美元 标识 价格 等级 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
该 餐厅 的 星级 评分 为 3 星 ， 其 星级 评分 为 3 星	星级 为 三星 ， 星级 为 三星 的 餐厅	星级 为 3 星 ， 星级 为 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 中 城 西餐厅 提供 预订	市中心 西餐厅 提供 什么 预订	什么 中 城 西餐厅 提供 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
有 服务员 ， 对 孩子 有益 的 餐厅	有 服务员 的 餐馆 ， 适合 孩子	有 服务员 的 餐馆 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
哪些 餐厅 有 服务员 服务 有 货	有 服务员 服务 的 餐馆 有 哪些	哪些 有 服务员 服务 的 餐厅 有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string delivery ) ) )
什么 是 餐厅 的 平均价格	餐馆 的 平均价格 是 多少	一家 餐厅 的 平均价格 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
有 服务员 服务 的 餐厅 ， 对 孩子 们 有 好处	有 服务员 服务 的 餐馆 ， 对 孩子 们 很 好	有 服务员 服务 的 餐厅 ， 这 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
家庭 友好 的 餐厅 ， 你 可以 坐在 外面	家庭 友好 型 餐厅 ， 您 可以 坐在 外面	家庭 友好 的 餐厅 ， 你 可以 坐在 外面	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
什么 是 最 适合 孩子 的 餐馆	哪个 街区 的 餐馆 对 孩子 们 最 有 好处	哪个 社区 的 餐馆 对 孩子 有 好处	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
什么 市中心 西餐厅 有 3 星 评级	什么 市中心 西餐厅 有 三星级	什么 中 城 西餐厅 有 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
有 送货 的 餐厅	有 送货 服务 的 餐厅	有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) )
酒店 位于 市中心 西区 ， 供应 午餐	市中心 西区 提供 午餐 的 酒店	中 城西区 的 一家 酒店 ， 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 美食 与 泰国 咖啡馆 相匹配	哪 种菜 和 泰国 咖啡厅 的 菜 相匹配	哪些 菜系 和 泰国 咖啡馆 的 菜系 相配	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 是 三星 评级 的 餐厅 的 美食	三 星级饭店 的 菜式 是 什么	三星级 餐厅 的 菜式 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
列出 所有 至少 3 星级 的 餐厅	列出 所有 至少 是 三星级 的 餐厅	列出 所有 至少 3 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
有 多少 种 不同 的 美食	有 多少 种 不同 的 菜系	有 多少 种 不同 的 菜系	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ) )
泰国 咖啡馆 位于 哪个 社区	泰国 咖啡馆 在 哪个 街区	泰国 咖啡馆 位于 哪个 街区	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
餐厅 提供 两种 美食	双菜 餐厅	两菜 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( number 2 ) ) )
餐厅 的 价格 是 2 美元 的 标志 ， 也 接受 信用卡	价格 等级 为 2 美元 的 餐厅 招牌 并 接受 信用卡	餐厅 的 价格 等级 是 2 美元 的 标志 ， 也 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
服务员 在 餐厅 用餐	服务员 在 饭店 供应 什么 饭菜	这家 餐厅 的 服务员 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
什么 餐厅 评价 3 美元 或 更 少 的 标志	一些 3 美元 以下 的 餐馆 有 什么 招牌	哪些 餐厅 的 标价 在 3 美元 以下	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
找 一家 超过 3 星级 的 餐厅	找 一家 三星 以上 的 餐馆	找 一家 星级 以上 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐厅 在 午餐时间 开放 ， 对 孩子 们 有益	什么 餐馆 午餐 开放 ， 对 孩子 们 有 好处	什么 餐厅 中午 营业 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
餐厅 价格 为 2 美元 或 更 低 的 标志	餐厅 价格 为 2 美元 或 更 低	餐厅 标价 2 美元 或 更少	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 有 户外 座位 ， 价格 为 2 美元 的 标志	哪家 餐厅 有 户外 座位 ， 价格 等级 是 2 美元	什么 餐厅 有 户外 座位 和 2 美元 的 价格 评级 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
星级 评分 大于 3 星级 或 5 星级 的 餐厅	星级 超过 三星 或 五星级 的 餐厅	星级 在 3 星 或 5 星 以上 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐馆 接受 信用卡	哪些 餐馆 接受 信用卡	什么 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) )
邻里 餐厅 对 一群 人有 好处	哪家 附近 的 餐馆 适合 一群 人	附近 哪家 餐厅 适合 一群 人 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 供应 午餐 ， 价格 为 2 美元 的 标志	提供 午餐 的 餐厅 ， 价格 为 2 美元	餐厅 提供 午餐 ， 其 价格 等级 是 2 美元 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 评分 不到 3 星	星级 低于 三星 的 餐厅	餐厅 评级 低于 3 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 提供 外卖	哪家 餐馆 提供 外卖	什么 餐厅 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string takeout ) ) )
3 星级 餐厅 提供 午餐	哪家 三星级 餐厅 提供 午餐	什么 三星级 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪些 餐厅 需要 预订	哪些 餐厅 接受 预订	哪些 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
哪些 餐厅 对 孩子 友好	哪些 餐馆 适合 儿童	哪些 餐厅 对 孩子 比较 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string kids ) ) )
哪个 餐厅 对 儿童 友好 ， 需要 预订	哪家 餐馆 对 儿童 友好 并 接受 预订	哪家 餐厅 对 儿童 比较 友好 并 接受 预定	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string reserve ) ) )
2 美元 的 标志 提供 午餐	什么 2 美元 的 招牌 提供 午餐	什么 2 美元 标志 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
找到 有 信用卡 的 服务员 服务 的 餐厅	找 一家 提供 信用卡 服务 的 餐厅	找 一家 提供 信用卡 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string waiter ) ) )
哪些 餐厅 提供 的 餐点 数量 最少	哪家 餐馆 的 饭菜 最少	哪些 餐馆 提供 的 饭菜 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
有 送货 的 餐厅 ， 其 菜肴 是 泰国菜	有 送货 服务 和 泰国菜 的 餐馆	有 外卖 和 泰国菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 采用 信用卡 ， 儿童 友好	提供 信用卡 和 儿童 友好 型 餐厅	餐厅 接受 信用卡 和 儿童 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string kids ) ) )
哪家 酒店 提供 服务员 服务 和 户外 座位 设施	哪家 酒店 提供 服务生 服务 和 室外 座位 设施	哪家 酒店 提供 服务员 服务 和 户外 座位 设施	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string outdoor ) ) )
什么 餐厅 适合 团体 和 午餐	哪家 餐馆 适合 团体 用餐	什么 餐厅 是 好 与 团体 和 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
列出 西部 市中心 的 所有 餐厅	列出 中西部 所有 餐馆	列出 所有 中 城 西部 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 有 3 星级 ， 有 2 个 菜单	哪家 餐馆 有 三星 和 两份 菜单	什么 餐厅 有 三星级 却 有 两份 菜单	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
一个 围绕 很多 社区 的 餐馆	很多 社区 附近 的 餐馆	附近 有 很多 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
哪家 三星级 餐厅 有 户外 座位	哪些 三星级 餐厅 有 室外 座位	哪家 三星级 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 有 服务员 和 户外 用餐 区	有 服务员 和 室外 用餐 区 的 餐厅	有 服务员 和 户外 就餐 区 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string waiter ) ) )
什么 餐厅 服务 团体 和 接受 信用卡	什么 餐馆 提供 团体 服务 和 接受 信用卡	什么 餐馆 提供 团体 服务 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
拥有 最 多 社区 的 餐厅	邻居 最多 的 餐馆	拥有 最 多 邻居 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
这 是 最 少数 餐厅 的 美食	是 餐厅 数量 最少 的 菜肴	菜系 是 餐厅 中菜式 最少 的 一种	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 接受 信用卡 ， 是 孩子 们 的 好去处	哪些 餐馆 接受 信用卡 ， 是 带 孩子 去 的 好 地方	哪些 餐厅 接受 信用卡 ， 是 孩子 们 的 好去处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
泰国 咖啡馆 提供 什么 主菜	泰国 咖啡馆 有 什么 主菜	泰国 咖啡馆 提供 什么 主菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
找 一家 有 服务员 服务 的 餐厅	找 一家 有 服务员 服务 的 餐馆	找 一家 有 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) )
3 星级 餐厅 的 价格 是 2 美元 的 标志	哪家 三星级 餐厅 的 标价 是 2 美元	什么 3 星级 餐厅 有 2 美元 的 价格 等级 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 至少 2 美元 的 价格 评级	价格 至少 2 美元 的 餐厅	餐厅 至少 有 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 是 餐厅 的 星级 评定	这家 餐馆 的 星级 评定 是 多少	这家 餐厅 的 星级 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
对 团体 有益 的 餐厅 美食	适合 团体 的 餐厅 菜肴	对 团体 有益 的 餐厅 菜肴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
列出 所有 比 2 美元 标志 更贵 的 餐馆	列出 所有 比 2 美元 招牌 贵 的 餐馆	列出 所有 比 2 美元 还贵 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 对 孩子 有 好处 ， 并 采取 信用卡	哪家 餐馆 对 孩子 好 ， 还收 信用卡	哪家 餐厅 对 孩子 好 ， 还 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
餐厅 用 信用卡 和 午餐	提供 信用卡 和 午餐 的 餐馆	接受 信用卡 并 提供 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
三星级 餐厅 提供 什么	三星级 餐厅 提供 什么	多么 棒 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string delivery ) ) )
3 星级 的 餐厅 提供 服务员 服务	哪家 三星级 餐厅 提供 服务生 服务	什么 三星级 餐厅 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
餐厅 ， 这 对 团体 和 交付 有 好处	适合 团体 用餐 且 有 送货 服务 的 餐厅	对 团体 有 好处 并 有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
哪家 餐厅 提供 最 多样化 的 美食	哪家 餐厅 提供 的 菜肴 种类 最 多	哪家 餐厅 的 菜式 最 丰富	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
没有 午餐 餐厅	没有 午餐 餐厅	没有 午餐 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
提供 预订 设施 并 供应 午餐 的 餐厅	提供 预订 设施 和 午餐 的 餐厅	餐厅 ， 提供 预订 设施 ， 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
最 多 供应 两餐 的 餐厅	最 多 供应 两顿 饭 的 餐馆	最 多 供应 两餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 饭 是 很 好 的 为 团体 服务	什么 饭菜 适合 集体 用餐	什么 餐是 好 是 为 团体 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
这家 餐厅 的 评级 为 4 星级 或 以上	四星级 或 更 高等级 的 餐馆	评级 为 4 星 或 更 高 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
有 外卖 和 送货 的 餐厅	有 外卖 和 送货 的 餐馆	有 外卖 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
与 泰国 咖啡馆 提供 相同 类型 食物 的 餐厅	提供 与 泰国 咖啡厅 相同 食物 的 餐厅	提供 和 泰国 咖啡 一样 食物 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
价格 低于 2 美元 的 餐厅	价格 低于 2 美元 的 餐厅	标价 低于 2 美元 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
餐厅 供应 团体 餐	提供 集体 用餐 的 餐厅	提供 集体 用餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 适合 团体 和 儿童	适合 团体 和 儿童 的 餐厅	餐厅 适合 团体 和 孩子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
什么 餐厅 收到 3 星级 和 午餐	哪些 餐厅 提供 三星级 的 服务 和 午餐	哪些 餐厅 获得 3 星 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
这家 餐厅 的 星级 评分 为 3 星级 ， 适合 儿童	星级 为 三星 的 餐厅 ， 对 孩子 们 很 好	餐厅 的 星级 是 3 星 ， 这 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
这是 什么 餐厅 的 电话号码	餐厅 的 电话号码 是 多少	餐厅 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
该 餐厅 的 邻里 是 市中心 西区 ， 其 星级 评分 为 3 星级	附近 是 市中心 西 的 餐馆 ， 星级 是 三星	西 城中城 附近 的 餐厅 ， 星级 为 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
提供 服务 和 服务 的 餐厅	提供 服务员 服务 的 餐厅	提供 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string waiter ) ) )
评级 为 3 星且 需要 预订 的 餐厅	评级 为 三星级 并 接受 预订 的 餐厅	评级 为 3 星 并 接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
餐馆 数量 较少 的 邻里	邻里 少 的 餐馆	邻居 少 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
什么 邻居 与 最 多 的 餐馆	哪个 街区 的 餐馆 最 多	哪个 街区 有 最 多 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
位于 市中心 西部 的 一家 餐馆 ， 提供 信用卡	中西部 的 一家 餐馆 ， 收 信用卡	中 城 西部 一家 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
什么 是 3 星 或 5 星 评级 更好	有 什么 更好 的 3 或 5 星级	什么 是 更好 的 3 星 或 5 星 评级	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
位于 市中心 西部 的 家庭 友好 餐厅	市中心 西区 家庭 友好 型 餐厅	中 城 西部 的 家庭式 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
星级 评分 为 3 星级 或 5 星级 的 餐厅	星级 评定 为 三星 或 五星级 的 餐厅	星级 为 3 星 或 5 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
那个 有 泰国 咖啡馆 星级 的 酒店	泰式 咖啡 星级 酒店	酒店 那有 泰国 咖啡厅 的 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 的 星级 评分 小于 3 星级	哪些 餐厅 的 星级 低于 三星	哪些 餐厅 的 星级 低于 3 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
中 城 西餐厅 ， 供应 午餐	市中心 西餐厅 ， 午餐 开放	中 城 西餐厅 ， 午餐时间 开放	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 提供 外卖 和 预订	哪家 餐厅 提供 外卖 和 预订	什么 餐厅 提供 外卖 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
什么 是 一些 餐厅 评级 2 美元 或 更 多	一些 2 美元 以上 的 餐馆 有 什么 招牌	哪些 餐厅 2 美元 以上 的 标识	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 对 团体 有益 ， 对 孩子 有益	适合 团体 和 儿童 的 餐厅	对 团体 和 孩子 都 有 好处 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
哪些 餐厅 的 评级 与 泰国 咖啡馆 相同 或 更好	哪些 餐厅 的 评分 与 泰国 咖啡厅 相同 或 更好	哪些 餐厅 的 评级 与 泰国 咖啡 相同 或 更好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
什么 餐厅 采取 信用卡 ， 并 提供 服务员 服务	什么 餐馆 收 信用卡 并 提供 服务生 服务	什么 餐馆 接受 信用卡 并 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string credit ) ) )
不 超过 两家 餐厅 供应 什么 菜	不 超过 两个 餐馆 供应 什么 菜	什么 菜 在 不 超过 两家 餐厅 供应	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 至少 有 30 或 40 条 评论	哪些 餐厅 至少 有 30 或 40 条 评论	哪些 餐厅 至少 有 30 或 40 条 评论	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
餐厅 设有 服务员 和 户外 用餐 区	有 服务员 的 餐厅 和 室外 用餐 区	有 服务员 和 户外 就餐 区 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string outdoor ) ) )
西部 市中心 的 哪家 餐厅 有 两个 美元 符号 的 评级	市中心 西区 的 哪家 餐馆 有 两 美元 的 招牌	什么 餐厅 在 中城 西部 有 两个 美元 标志 的 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有 服务员 服务 的 餐厅 提供 什么样 的 饭菜	有 服务员 服务 的 餐馆 供应 什么样 的 饭菜	有 服务员 服务 的 餐馆 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
最贵 的 餐馆	最贵 的 餐馆	最 昂贵 的 餐馆	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
哪个 社区 有 两个 或 更 少 的 餐馆	哪个 社区 有 两个 或 更 少 的 餐馆	哪个 社区 有 两家 或 两家 以下 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 供应 午餐	提供 午餐 的 餐馆	提供 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
这家 餐厅 的 星级 评分 为 3 星级 ， 适合 团体 入住	星级 评定 为 三星 的 餐厅 ， 对 团体 有益	餐厅 的 星级 是 3 星 ， 这 对 团体 是 有 好处 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
这家 价格 为 2 美元 的 餐厅 供应 什么 餐点	这家 2 美元 价格 的 餐馆 供应 什么 菜	2 美元 价位 的 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
哪些 餐厅 的 评级 优于 3 星 或 5 星	哪家 餐馆 的 收视率 超过 3 或 5 星级	哪些 餐厅 的 评级 高于 3 星 或 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐厅 有 户外 座位 和 外卖	什么 餐馆 既有 室外 座位 又 有 外卖	什么 餐馆 既有 室外 座位 又 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string outdoor ) ) )
什么 餐厅 具有 相同 的 价格 评级 或 比 泰国 咖啡馆 更好	哪些 餐厅 的 价格 与 泰国 咖啡厅 相同 或 更好	有 哪家 餐厅 的 价格 评级 和 泰式 咖啡 一样 或者 更好 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
将 餐厅 命名 为 不 提供 泰国菜	说出 一家 不 提供 泰国菜 的 餐馆 的 名字	说出 一家 不 提供 泰国菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
3 星级 餐厅 供应 什么样 的 餐点	三 星级饭店 供应 什么 菜	3 星级 餐厅 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
有 多少 个 社区	有 多少 个 社区	有 多少 个 社区	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
列出 所有 类似 泰国 咖啡馆 的 餐厅	列出 所有 与 泰国 咖啡馆 菜系 相似 的 餐厅	列出 所有 类似 泰国 咖啡馆 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
什么 是 中西部 的 泰国 餐馆	市中心 西有 哪些 泰国 餐馆	中 城西区 有 哪些 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 外卖 ， 对 孩子 们 有 好处	哪家 餐馆 提供 外卖 ， 对 孩子 们 有 好处	什么 餐厅 提供 外卖 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
餐厅 在 2 或 3 美元 的 标志 价格 范围 内	2 美元 或 3 美元 招牌 价格 范围 内 的 餐厅	餐厅 在 2 或 3 美元 的 标志 价格 范围	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
哪些 餐厅 与 泰国 咖啡馆 的 星级 相同	哪家 餐馆 的 星级 和 泰国 咖啡馆 一样	哪些 餐厅 的 星级 和 泰国 咖啡 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
哪些 餐厅 供应 两餐	哪家 餐馆 供应 两餐	哪些 餐厅 提供 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 菜 最 多 的 餐厅	什么 菜 有 最 多 的 餐馆	什么 菜 有 最 多 的 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
有 多少 个 社区 有 餐馆	有 多少 社区 有 餐馆	有 多少 社区 有 餐厅	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ) )
找到 所有 泰国 餐馆	找到 所有 泰国 餐馆	查找 所有 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
找到 一家 价格 等于 或 低于 泰国 咖啡馆 的 餐厅	找 一家 价格 等级 等于 或 低于 泰国 咖啡馆 的 餐厅	找 一家 价格 等级 与 泰国 咖啡 相当 或 更 低 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 有 服务员 ， 价格 等级 为 2	价格 等级 为 2 的 餐厅	餐厅 服务员 的 价格 等级 为 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
什么 是 儿童 友好 的 三星级 餐厅	什么 是 适合 儿童 的 三星级 餐厅	什么 是 适合 孩子 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
比 泰国 咖啡馆 贵 的 餐馆	比 泰国 咖啡馆 贵 的 餐馆	比 泰国 咖啡馆 还贵 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
有 送货 服务 的 餐厅	提供 送货 服务 的 餐厅	有 送货 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
2 美元 签署 了 儿童 餐厅	2 美元 签约 儿童 餐厅	2 美元 签约 评级 餐厅 为 儿童	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 评分 为 3 星	三星级 餐厅	三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 供应 午餐 ， 包含 户外 座位	哪家 餐厅 开放 午餐 ， 并 设有 室外 座位	什么 餐厅 是 开放 的 午餐 和 包含 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
酒店 可以 提前 预订 ， 价格 为 2 美元 的 标志	可 提前 预订 的 酒店 ， 价格 等级 为 2 美元	可以 提前 预订 的 酒店 ， 价格 等级 为 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪家 泰国 餐厅 的 评级 为 2dollarsign	哪家 泰国 餐馆 有 2 美元 的 设计 等级	哪家 泰国 餐厅 有 2 美元 标识 等级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪家 酒店 提供 送货 服务	哪家 酒店 提供 送货 服务	哪家 酒店 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string delivery ) ) )
哪些 餐厅 有 外卖 和 接受 信用卡	哪些 餐厅 有 外卖 和 接受 信用卡	哪些 餐厅 有 外卖 ， 可以 用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
酒店 至少 有 3 星 评级	至少 三星级 的 酒店	酒店 的 最低 星级 为 3 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 有 户外 用餐 ， 儿童 友好	哪些 餐厅 有 户外 用餐 和 儿童 友好 型	什么样 的 餐厅 有 户外 用餐 和 儿童 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
什么 是 西部 中城 的 大型 团体 最好 的 餐厅	市中心 西 最好 的 大 集团 餐厅 是 什么	中 城西区 哪家 餐厅 最 适合 大型 团体 就餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
什么 好孩子 餐厅 在 市中心 西区	市中心 西区 有 什么 好 的 儿童 餐厅	中 城西区 有 多 好 的 儿童 餐厅 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
中 城 西餐厅 供应 什么 餐	市中心 西餐厅 供应 什么 菜	中 城 西餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
泰国 咖啡馆 的 美食 ， 泰国 咖啡厅 的 美食	泰式 咖啡 和 泰式 咖啡	那 是 泰国 咖啡馆 的 风格 ， 那 是 泰国 咖啡馆 的 风格	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
家庭 友好 的 餐厅 ， 有 服务员	有 服务员 的 家庭 友好 型 餐厅	有 服务员 的 家庭式 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
三星级 餐厅 提供 哪些 美食	三 星级饭店 有 哪些 菜系	3 星级 餐厅 提供 什么样 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
餐厅 的 邻居 是 市中心 西部 ， 有 户外 座位	附近 是 市中心 西 的 餐厅 ， 有 室外 座位	它 的 邻居 是 中城 西部 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
哪些 餐厅 有 户外 座位 ， 并 接受 信用卡	哪些 餐厅 提供 户外 座位 并 接受 信用卡	哪些 餐厅 有 户外 座位 ， 可以 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
5 星 或 3 星	五星 或 三星	5 星 或 3 星	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
什么样 的 餐点 做 2 美元 标志 评价 餐馆 服务	2 美元 标牌 的 餐馆 提供 什么样 的 饭菜	被 评为 2 美元 的 餐馆 提供 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
餐厅 的 总 星级	餐厅 总 星级	餐厅 总评 星级	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
哪家 泰国 餐厅 有 送货	哪家 泰国 餐馆 有 送货	哪家 泰国 餐厅 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪个 街区 不 超过 两家 餐厅	哪个 街区 只有 两个 餐馆	哪个 街区 只有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 是 泰国 咖啡馆 供应 的 餐点	泰国 咖啡馆 供应 什么 菜	这家 泰国 咖啡馆 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
餐厅 评级 高于 泰国 咖啡馆	餐厅 评级 高于 泰国 咖啡馆	餐厅 的 评级 高于 泰国 咖啡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 供应 午餐	哪家 餐馆 供应 午餐	哪些 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 对 孩子 友好 ， 并 采取 信用卡	哪家 餐馆 对 孩子 友好 ， 而且 接受 信用卡	哪家 餐厅 对 孩子 很 友好 ， 还 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
什么 餐厅 有 两种 以上 的 美食	哪家 餐馆 有 两种 以上 的 菜系	什么 餐厅 有 两种 以上 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪些 餐厅 有 服务员 和 两个 美元 符号 的 价格 评级	哪家 餐馆 有 服务员 和 两 美元 的 标价	哪些 餐馆 有 服务员 和 两个 美元 标志 的 价格 等级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
你 可以 坐在 外面 的 餐馆	你 可以 坐在 外面 的 餐馆	你 可以 坐在 外面 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) )
提供 午餐 的 餐厅	提供 和 开放 午餐 的 餐厅	提供 免费 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
餐厅 在 市中心 西部 外卖	市中心 西区 的 外卖 餐厅	在 中城 西部 有 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪个 社区 不到 两家 餐馆	哪个 街区 只有 不到 两个 餐馆	哪个 街区 的 餐馆 还 不到 两家	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 适合 团体 和 预订	哪家 餐馆 适合 团体 和 预订	什么样 的 餐厅 适合 团体 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
我 可以 在 哪个 餐厅 预订 信用卡	我 可以 在 哪家 餐厅 预订 信用卡	我 可以 在 哪家 餐厅 用 信用卡 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string reserve ) ) )
什么 是 餐厅 的 平均价格	餐馆 的 平均价格 是 多少	一家 餐厅 的 平均价格 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
附近 有 两家 餐馆	哪个 街区 有 两家 餐馆	什么 社区 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 提供 预订 和 午餐	哪家 餐厅 提供 预订 和 午餐	什么 餐厅 提供 预订 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
什么 餐厅 对 孩子 们 有 好处 ， 并 提供 午餐	什么 餐馆 适合 孩子 们 ， 供应 午餐	什么样 的 餐厅 适合 孩子 们 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 适合 孩子 ， 有 服务员	有 适合 孩子 的 餐厅 和 服务生	餐馆 适合 孩子 们 ， 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string waiter ) ) )
接受 信用卡 的 2 美元 标志 价格 类别 的 餐馆	接受 信用卡 的 2 美元 标志 价格 类别 的 餐厅	2 美元 级别 的 餐厅 接受 信用卡 支付	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
泰国 餐厅 有 3 星 评级	泰国 餐厅 ， 三星级	泰国 餐厅 ， 有 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
附近 是 市中心 西区 的 餐厅 需要 预约	附近 是 市中心 西 的 餐馆 ， 需要 预订	附近 是 中城 西部 的 餐厅 ， 可以 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string reserve ) ) )
一家 餐厅 的 午餐 价格 为 2 美元	一家 餐馆 的 午餐 标价 是 2 美元	午餐 2 美元 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
至少 有 两家 餐厅 有 什么 美食	哪 种菜 至少 有 两家 餐馆	至少 有 两家 餐厅 是 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪个 酒店 有 户外 座位 设施 ， 并 提供 送货 服务	哪家 酒店 有 室外 座位 设施 并 提供 送货 服务	哪家 酒店 有 户外 座椅 设施 并 提供 送货 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string outdoor ) ) )
餐厅 适合 团体 和 外卖	适合 团体 和 外卖 的 餐厅	适合 团体活动 和 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
什么 餐馆 外卖	什么 餐馆 有 外卖	什么 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) )
至少 2 间 餐厅 的 美食	至少 2 家 餐厅 的 菜肴	至少 两家 餐厅 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
中 城 西餐厅 适合 很多 人	许多 人 的 市中心 西餐厅	中 城 西餐厅 很多 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
星级 评分 至少 为 3 星级 或 5 星级 的 餐厅	星级 至少 为 三星 或 五星级 的 餐厅	星级 至少 3 星 或 5 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
接受 预订 的 泰国 餐馆	接受 预订 的 泰国 餐厅	接受 预订 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 服务员 服务 并 预订 的 餐厅	提供 服务员 服务 并 接受 预订 的 餐厅	提供 服务员 服务 并 接受 预订 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string reserve ) ) )
什么 是 至少 两家 餐厅 供应 的 餐点	至少 有 两家 餐馆 供应 什么 菜	至少 两家 餐厅 供应 什么 餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
西区 中城 2 美元 符号 评级 的 餐厅	市中心 西区 有 2 美元 标牌 的 餐厅	中 城 西部 2 美元 标识 等级 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
三星级 餐厅 ， 团体	三星级 餐厅 ， 带 团体	三星级 餐厅 ， 可以 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
西部 中城 的 餐馆 有 外卖	中西部 有 外卖 的 餐馆	中 城 西部 的 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
星级 评级 小于 泰国 咖啡馆 的 餐厅	星级 低于 泰国 咖啡馆 的 餐厅	星级 比 泰国 咖啡 低 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
西部 中 城 哪些 餐厅 接受 信用卡	中西部 的 哪些 餐馆 接受 信用卡	中 城西区 哪些 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
泰国 咖啡馆 所在 的 餐馆	和 泰式 咖啡馆 在 同一 街区 的 餐馆	与 泰式 咖啡馆 相邻 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
是 有 服务员 服务 的 餐厅 的 附近 的 街区	有 服务员 服务 的 餐馆 附近	有 服务员 服务 的 餐馆 所在 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
有 交货 且 价格 等级 为 2 美元 符号 的 餐厅	有 送货 服务 且 价格 等级 为 2 美元 标牌 的 餐厅	有 外卖 ， 价格 等级 为 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 市中心 西餐厅 对 团体 有益	什么样 的 市中心 西餐厅 适合 团体	什么 中 城 西餐厅 适合 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪家 餐厅 有 服务员 服务 并 需要 预订	哪家 餐厅 有 服务员 服务 并 接受 预订	哪家 餐厅 有 服务生 服务 并 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string reserve ) ) )
餐厅 需要 预订 并 提供 午餐	提供 午餐 和 预订 服务 的 餐厅	接受 预订 并 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
位于 市中心 西区 的 餐厅 ， 设有 户外 座位	位于 市中心 西区 的 餐厅 ， 有 室外 座位	中 城西区 的 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
餐馆 数量 最少 的 社区	邻居 最少 的 餐馆	邻居 最少 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
提供 外卖 的 餐厅	提供 外卖 的 餐馆	提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string takeout ) ) )
是 需要 预约 的 餐厅 的 美食	是 指 预定 餐厅 的 菜肴	指 接受 预定 的 餐厅 的 菜肴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
在 市中心 西区 或 切尔西 有 哪些 酒店	在 市中心 西区 或 切尔西 有 什么 酒店	中 城西区 和 切尔西 有 什么 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
与 泰国 咖啡馆 价格 相同 的 餐厅	与 泰国 咖啡馆 价格 相同 的 餐厅	与 泰国 咖啡 价格 相同 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
餐厅 不到 两种 美食	少于 两道菜 的 餐馆	少于 两种 菜肴 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
价格 在 3 美元 以上 的 餐厅	价格 在 3 美元 以上 的 餐厅	价格 等级 在 3 美元 以上 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
一家 评价 至少 3 星级 的 餐厅	一家 至少 被 评为 三星级 的 餐厅	一家 评级 至少 为 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string delivery ) ) )
餐厅 的 平均 星级	餐厅 平均 星级	餐厅 平均 星级	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
有 服务员 的 餐厅 的 美食 是 什么 ？	有 服务员 的 餐馆 有 什么 菜 ？	有 服务员 的 餐馆 的 菜式 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
哪家 酒店 的 星级 评分 最高	哪家 酒店 的 星级 最高	哪家 酒店 的 星级 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
什么 是 泰国 咖啡馆 的 价格 评级	泰国 咖啡馆 的 价格 等级 是 多少	泰国 咖啡 的 价格 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
哪家 餐厅 的 美食 有 3 星 评级	哪家 餐厅 的 菜 评为 三星级	哪家 餐厅 的 菜 有 3 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
什么 餐厅 提供 午餐	什么 餐馆 提供 午餐	哪些 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string meals ) ( string = ) en.food.lunch ) )
与 泰国 咖啡馆 价格 相同 或 更 低 的 餐厅	与 泰国 咖啡馆 价格 相同 或 更 低 的 餐厅	与 泰国 咖啡 价格 相同 或 较 低 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 有 服务员 服务	提供 服务员 服务 的 餐厅	有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
餐厅 有 户外 座位 ， 供应 午餐	提供 户外 座位 和 午餐 的 餐厅	有 户外 座位 和 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
中 城西区 餐厅 ， 3 星 评级	中 城西区 餐厅 ， 三星级	中 城西区 附近 的 餐馆 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 ， 这 对 孩子 们 有 好处 ， 需要 预订	为 孩子 们 准备 的 餐厅	对 孩子 们 有 好处 并 接受 预定 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string reserve ) ) )
泰国 餐厅 ， 提供 户外 座位 设施	提供 户外 座位 设施 的 泰国 餐厅	提供 户外 座位 设施 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪些 餐厅 接受 预订	哪些 餐厅 接受 预订	哪些 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
哪个 社区 有 3 星级 餐厅	哪些 社区 有 三星级 餐厅	哪个 社区 有 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
找个 供应 午餐 的 好孩子 餐厅	找 一家 供应 午餐 的 好 的 儿童 餐厅	找 一家 提供 午餐 的 儿童 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
2 美元 的 标志 餐厅 有 户外 座位	什么 2 美元 的 招牌 餐厅 有 室外 座位	什么 2 元 招牌 餐厅 有 露天 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
什么 餐厅 有 两个 美元 符号 的 价格 评级 ， 也 接受 信用卡	哪些 餐厅 的 价格 等级 为 两 美元 ， 还 接受 信用卡	什么 餐馆 有 两个 美元 标志 的 价格 等级 ， 还 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
哪个 社区 包含 提供 送货 的 餐馆	哪个 街区 有 提供 送货 服务 的 餐馆	什么 社区 有 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
餐厅 有 服务员 服务 和 外卖	提供 服务 和 外卖 的 餐厅	有 服务员 服务 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
什么 餐厅 提供 午餐 和 送货	什么 餐馆 提供 午餐 和 送货	什么 餐厅 提供 午餐 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
价格 为 2 美元 标志 并且 需要 信用卡 的 餐厅	价格 等级 为 2 美元 的 餐厅 招牌 ， 需要 信用卡	餐厅 的 价格 等级 是 2 美元 标志 ， 这是 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
最 便宜 的 餐馆	最 便宜 的 餐馆	便宜 的 餐馆	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
餐厅 采用 信用卡 ， 其 价格 评级 为 2 美元 的 标志	带 信用卡 且 价格 等级 为 2 美元 标牌 的 餐厅	餐厅 接受 信用卡 ， 其 价格 等级 是 2 美元 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 有 户外 座位 ， 适合 举办 大型 聚会	有 户外 座位 ， 适合 大型 聚会 的 餐厅	有 户外 座位 ， 适合 大型 聚会 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string groups ) ) )
哪个 位于 市中心 西部 的 餐厅 有 3 星 评级	市中心 西区 哪家 餐馆 的 星级 是 3	中 城西区 哪家 餐厅 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
这是 一家 餐厅 ， 供应 团体 用餐	一家 接待 团体 的 餐馆 供应 的 饭菜 是 什么	团体 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 采用 信用卡 和 预订	接受 信用卡 和 预订 的 餐厅	接受 信用卡 和 预订 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string reserve ) ) )
团体 友好 的 餐厅 有 哪些 美食 选择	团体 友好 型 餐厅 有 哪些 菜肴 可 供选择	团体 友好 型 餐厅 有 哪些 美食 选择	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
提供 外卖 和 接受 预订 的 餐厅	提供 外卖 并 接受 预订 的 餐厅	提供 外卖 和 接受 预订 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
哪家 餐厅 需要 预订 ， 适合 团体 入住	哪家 餐厅 接受 预订 ， 适合 团体 用餐	哪家 餐厅 接受 预订 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
泰国 餐厅 与 户外 座位	有 户外 座位 的 泰国 餐厅	有 户外 座位 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 服务员 服务 ， 适合 团体	哪家 餐厅 提供 服务生 服务 ， 适合 团体 用餐	什么 餐厅 提供 服务员 服务 ， 对 团体 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
什么 餐厅 有 最大 的 菜单	哪家 餐馆 的 菜单 最大	什么 餐馆 的 菜单 最大	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
有 服务员 服务 ， 附近 是 市中心 西部 的 餐厅	有 侍者 服务 的 餐馆 ， 附近 是 市中心 西	有 服务员 服务 的 餐馆 ， 它 的 邻居 是 中城 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 泰国 餐厅 吃 午饭	什么 泰国 餐馆 有 午餐	什么 泰国 餐馆 有 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
一家 餐厅 ， 为 大型 团体 提供 送货 服务	为 一大群 人 送货 的 餐馆	为 一大群 人 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string groups ) ) )
什么 菜 类型 最 常见	什么 菜式 最 常见	什么 菜系 最 常见	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
找到 一家 带 户外 座位 的 餐厅 ， 可以 使用 信用卡	找 一家 带 信用卡 的 户外 餐厅	找 一家 有 户外 座位 的 餐厅 ， 可以 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
什么 饭 对 团体 有益	什么 饭 对 团体 有益	什么 饭局 是 好 集体	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
开 两餐	两餐 开放	开放 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
哪些 餐馆 使用 信用卡	哪些 餐馆 接受 信用卡	哪些 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string credit ) ) )
餐厅 有 两个 邻里 位置	有 两个 附近 位置 的 餐厅	附近 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
需要 预订 的 餐厅	接受 预订 的 餐厅	接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
什么 餐厅 提供 服务员 服务	什么 餐馆 提供 服务生 服务	什么 餐馆 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
酒店 拥有 最低 星级	星级 最低 的 酒店	星级 最低 的 酒店	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
什么 是 不 超过 两家 餐厅 供应 的 餐点	不 超过 两家 餐馆 供应 的 饭菜 是 什么	不 超过 两家 餐厅 供应 的 一餐 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 评分 最高 为 泰国 咖啡馆 的 星级	星级 最高 的 餐厅	餐厅 的 星级 评级 最多 是 泰国 咖啡 的 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
什么 是 一些 餐厅 评价 最多 3 美元 的 标志	有些 餐馆 的 招牌 最多 3 美元 是 多少	哪些 餐厅 最 多只 卖 3 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
哪些 餐厅 供应 午餐 ， 适合 团体 用餐	哪些 餐厅 提供 午餐 ， 适合 团体 用餐	哪些 餐厅 供应 午餐 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
3 星 评级 的 泰国 餐馆	泰国 餐厅 3 星级	3 星级 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么样 的 餐厅 提供 与 泰国 咖啡馆 相同 的 食物	什么样 的 餐馆 提供 和 泰国 咖啡馆 一样 的 食物	什么样 的 餐厅 能 提供 和 泰国 咖啡 一样 的 食物	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
餐厅 提供 服务员 服务 和 户外 座位	提供 服务员 服务 和 室外 座位 的 餐厅	有 服务员 服务 和 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string outdoor ) ) )
在 带 户外 座位 的 餐厅 用餐	有 户外 座位 的 餐馆 供应 什么 饭菜	有 户外 座位 的 餐馆 供应 什么 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
30 条 点评 或 40 条 评论	30 条 评论 或 40 条 评论	30 篇 评论 或 40 篇 评论	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
两个 以上 餐厅 供应 的 餐点	两个 以上 餐馆 供应 的 饭菜	两家 以上 餐厅 供应 的 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
与 泰国 咖啡馆 有 类似 食物 的 餐馆	与 泰国 咖啡馆 食物 相似 的 餐厅	餐厅 的 食物 类似 于 泰国 咖啡馆	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) )
哪些 餐厅 有 2 美元 的 标志 价格 和 户外 座位	哪些 餐厅 有 2 美元 的 标价 和 户外 座位	哪些 餐厅 有 2 美元 的 标志 价格 等级 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
西部 中心 的 餐馆 提供 外卖	中西部 提供 外卖 的 餐馆	中 城 西部 的 餐馆 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
在 市中心 西区 的 泰国 餐馆	市中心 西区 的 泰国 餐馆	中 城西区 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
列出 西部 市中心 的 所有 泰国 餐馆	列出 市中心 西 的 所有 泰国 餐馆	列出 所有 中 城 西部 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
信用卡 的 餐厅 ， 其 星级 评分 为 3 星	信用卡 星级 为 三星 的 餐厅	餐厅 接受 信用卡 ， 星级 为 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
两家 以上 的 餐厅 供应 什么 餐点	两个 以上 的 餐馆 供应 什么 饭菜	有 两家 以上 的 餐馆 供应 什么 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
泰国 餐厅 供应 午餐	哪家 泰国 餐馆 供应 午餐	哪些 泰国 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
泰国 咖啡馆 没有 什么 美食	泰国 咖啡馆 没有 什么 菜	泰国 咖啡馆 没有 什么 菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
在 至少 2 间 餐厅 供应 什么 餐点	至少 有 两家 餐馆 供应 什么 饭菜	至少 有 两家 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 中 城 西餐厅 提供 户外 座位	市中心 西餐厅 提供 户外 座位	什么 中 城 西餐厅 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
哪个 社区 不到 两家 餐馆	哪个 街区 只有 不到 两个 餐馆	哪个 街区 的 餐馆 还 不到 两家	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 街区 有 供应 午餐 的 餐厅	哪些 社区 有 提供 午餐 的 餐厅	哪些 社区 有 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 有 户外 座位 ， 可以 使用 信用卡	哪些 餐厅 有带 信用卡 的 户外 座位	什么 餐馆 有 可以 刷卡 的 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
什么 泰国 餐厅 有 一个 很 好 的 星级 评级	哪家 泰国 餐馆 的 星级 很 高	哪家 泰国 餐馆 的 星级 评定 很 好	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
3 星级 餐厅 提供 外卖	提供 外卖 的 三星级 餐厅	提供 外卖 的 三星 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 需要 预订	什么 餐馆 接受 预订	什么 餐厅 接受 预订 ?	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
找 一家 泰国 餐馆	找 一家 泰国 餐馆	找 一家 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
带 户外 座位 的 餐厅 需要 预订	提供 可 预订 的 室外 座位 的 餐厅	带有 可 接受 预约 的 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string outdoor ) ) )
什么 是 接受 预订 的 餐厅 提供 的 餐点	接受 预订 的 餐馆 供应 什么 菜	接受 预订 的 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
价格比 泰国 咖啡馆 更 高 的 餐厅	比 泰国 咖啡馆 价格 更 高 的 餐厅	比 泰国 咖啡 价格 等级 高 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
位于 市中心 西区 的 餐厅 提供 送餐 服务	提供 送货 服务 的 市中心 西区 餐厅	中 城西区 附近 的 一家 提供 送货 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
命名 泰国 餐馆 或 咖啡馆	说出 一家 泰国 餐馆 或 咖啡馆 的 名字	说出 一家 泰国 餐馆 或 咖啡馆 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
提供 三星 评级 的 餐厅	提供	三星级 餐厅 ， 送货上门	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 包含 最多 有 餐厅 服务 的 餐馆	哪 一个 街区 有 最 多 的 有 服务员 服务 的 餐馆	哪个 社区 有 最 多 的 餐厅 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ) )
餐厅 不 在 市中心 西区	餐馆 不 在 市中心 西区	餐厅 不 在 中 城西区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
餐厅 对 孩子 们 有 好处 ， 需要 信用卡	有利于 孩子 的 餐馆 ， 而且 需要 信用卡	对 孩子 们 有 好处 的 餐厅 ， 可以 用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
什么 餐厅 有 3 星级 ， 供应 午餐	哪家 餐馆 有 三星级 的 午餐	什么 餐厅 有 三星级 而且 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
列出 所有 提供 外卖 的 餐厅	列出 所有 提供 外卖 的 餐厅	列出 所有 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) )
什么 餐厅 有 户外 座位 和 2 美元 的 价格 评级	哪家 餐厅 有 户外 座位 和 2 美元 的 价格	什么 餐厅 有 户外 座位 和 2 美元 的 价格 等级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
什么 2 美元 的 标志 餐厅 包含 外卖	哪家 2 美元 招牌 餐厅 有 外卖	什么 2 美元 牌子 的 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
有同 一餐 的 餐馆	一餐 相同 的 餐馆	有 同样 的 饭菜 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪家 餐厅 有 三星 评级 ， 也 需要 预订	哪家 餐厅 有 三星级 的 评价 ， 而且 还 接受 预订	哪家 餐厅 有 三星 评级 ， 还 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 有 泰国 餐馆	哪个 社区 有 泰国 餐馆	哪些 社区 有 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
这 顿饭 的 数量 是 多少 ？	这 顿饭 多少 钱	这 顿饭 多少 钱	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
酒店 的 价格 为 2 美元 的 标志 或 3 美元 的 标志	价格 等级 为 2 美元 或 3 美元 的 酒店	酒店 有 2 美元 标志 或 3 美元 标志 的 价格 等级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
餐厅 有 2 和 更 低 的 价格 评级	价格 等级 为 2 及 更 低 的 餐厅	2 级 及 以下 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 对 孩子 有 好处 ， 有 服务员	适合 儿童 和 有 服务员 的 餐馆	对 孩子 有 好处 并且 有 服务员 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
餐厅 数量	餐厅 数量	数量 的 餐馆	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
泰国菜 餐厅	泰国 料理 餐厅	泰国菜 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
餐厅 有 外卖 设施 ， 有 户外 座位	有 外卖 设施 和 户外 座位 的 餐厅	有 外卖 设施 和 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
列出 所有 提供 外卖 的 泰国 餐馆	列出 所有 提供 外卖 的 泰国 餐馆	列出 所有 提供 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 是 餐厅 提供 外卖 服务	有 外卖 服务 的 餐馆 供应 的 饭菜 是 什么	有 外卖 服务 的 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 餐厅 外卖 ， 孩子 友好	什么 餐馆 有 外卖 和 儿童 友好 型	哪些 餐馆 有 外卖 ， 而且 对 孩子 很 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
儿童 友好 的 餐厅 ， 价格 等于 2 美元 的 标志	儿童 友好 餐厅 ， 价格 等于 2 美元	儿童 友好 的 餐厅 ， 价格 等于 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
至少 有 3 家 星级 餐厅	至少 三星级 餐厅	至少 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 位于 市中心 西部	位于 市中心 西 的 餐厅	位于 中 城 西部 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 带 户外 座位 的 餐厅 用餐	有 户外 座位 的 餐馆 的 饭菜 是 什么	什么 是 有 户外 座位 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
提供 的 泰国 餐厅	泰国 餐厅 提供	提供 外卖 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
两家 以上 餐厅 提供 的 美食 是 什么 ？	两个 以上 的 餐馆 提供 什么 菜	两家 以上 的 餐厅 有 哪些 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
外卖 和 送货 的 餐馆	有 外卖 和 送货 的 餐馆	有 外卖 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string takeout ) ) )
这家 餐厅 送 的 是 什么 餐	这家 餐馆 供应 什么 饭菜	这家 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
列出 所有 不到 两餐 的 餐厅	列出 所有 提供 两餐 以下 服务 的 餐厅	列出 所有 供应 两餐 以下 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
西部 中城 的 三星级 餐厅	市中心 西 三星级 餐厅	中 城西区 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 泰国 咖啡馆 的 价格 评级	泰国 咖啡馆 的 价格 是 多少	这家 泰国 咖啡馆 的 价格 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
在 市中心 命名 一家 接受 信用卡 的 餐馆	说出 市中心 一家 接受 信用卡 的 餐馆 的 名字	说出 中 城 一家 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
提供 和 接受 信用卡 的 餐馆	提供 和 接受 信用卡 的 餐馆	提供 和 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string delivery ) ) )
餐馆 叫 泰国 咖啡馆 或 比萨 店 juno	泰国 咖啡馆 或 比萨 店	叫做 “ 泰国 咖啡 ” 或 “ 披萨 朱诺 ” 的 餐厅	( call SW.listValue ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) )
位于 市中心 西部 的 餐厅 设有 户外 座位	市中心 西餐厅 ， 有 室外 座位	中 城 西部 有 露天 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
餐厅 至少 有 两种 美食	至少 有 两种 菜系 的 餐馆	至少 有 两种 菜系 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 餐厅 是 儿童 友好 和 外卖	哪家 餐馆 对 孩子 友好 ， 有 外卖	哪家 餐馆 对 孩子 很 友好 ， 而且 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
什么 好 的 团体 餐厅 需要 预订	什么 好 的 团体 餐厅 接受 预订	多好 的 团体 餐厅 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
2 美元 的 标志 餐厅 需要 预订	什么 2 美元 的 招牌 餐厅 接受 预订	什么 2 元签 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
你 在 外面 吃 什么 餐馆 吃 午饭	你 在 外面 什么 餐馆 吃 午饭	你 可以 在 哪家 餐馆 外面 吃 午饭	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪些 泰国 餐馆 外卖	哪家 泰国 餐馆 有 外卖	哪些 泰国 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
家庭 友好 的 泰国 餐馆	家庭 友好 型 泰国 餐厅	家庭式 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
什么 餐厅 提供 午餐 ， 对 团体 有益	哪些 餐厅 提供 午餐 ， 适合 团体 用餐	什么 餐厅 提供 午餐 ， 是 很 好 的 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
一家 泰国 餐馆 ， 拿 着 信用卡	拿 信用卡 的 泰国 餐馆	接受 信用卡 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string credit ) ) )
什么样 的 餐厅 对 团体 有益	什么样 的 餐馆 适合 团体	什么样 的 餐厅 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 适合 团体 ， 价格 为 2 美元 的 标志	适合 团体 的 餐厅 ， 价格 等级 为 2 美元	对 团体 有 好处 的 餐厅 ， 价格 等级 是 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
酒店 设有 户外 座位 设施 ， 并 接受 信用卡	有 户外 座位 设施 并 接受 信用卡 的 酒店	有 户外 座位 设施 并 接受 信用卡 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
什么 餐厅 提供 预订 ， 也 有 结转	哪些 餐厅 提供 预订 ， 也 有 酒店	哪些 餐厅 提供 预订 ， 也 有 carryout	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
泰国 咖啡馆 没有 提供 什么样 的 餐点	泰国 咖啡馆 不 供应 什么 菜	泰式 餐厅 不 提供 什 麽 样 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
一个 集体 友好 的 餐厅 ， 有 户外 座位	有 户外 座位 的 团体 友好 餐馆	一个 有 户外 座位 的 团体 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string groups ) ) )
两家 餐厅 供应 什么 菜	两家 餐馆 供应 什么 菜	两家 餐馆 供应 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪些 餐厅 的 价格 为 2 至 3 美元	哪家 餐馆 的 标价 是 2 到 3 美元	哪些 餐厅 的 价格 等级 是 2 到 3 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 泰国 餐厅 有 送货	哪家 泰国 餐馆 有 送货	什么 泰国 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
找 3 星级 或 5 星级 餐厅	找 三星 或 五星级 餐厅	找 一家 三星级 或 五星级 的 餐厅	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
泰国菜 餐厅 与 3 星 评级	三星级 泰国 料理 餐厅	泰国 美食 餐厅 ， 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 的 菜肴 数量 最少	哪家 餐馆 的 菜肴 最少	什么 餐厅 的 菜式 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
供应 午餐 的 泰国 美食 餐厅	提供 午餐 的 泰国 料理 餐厅	提供 午餐 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 共 用餐 点	普通 餐厅	有 普通 饭菜 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 提供 美食 和 信用卡	哪家 餐馆 提供 美食 和 信用卡	什么 餐厅 提供 美食 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
什么 是 泰国 咖啡馆 的 星级 评分	泰国 咖啡馆 的 星级 是 多少	这家 泰国 咖啡馆 的 星级 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
哪些 社区 有 餐厅 提供	哪些 社区 有 餐厅 提供	哪个 社区 有 送餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
找 一家 价格 为 2 美元 的 泰国 餐厅	找 一家 2 美元 的 泰国 餐馆	找 一家 2 美元 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 提供 送货 服务 和 服务员 服务	哪家 餐馆 提供 送货 和 服务生 服务	什么 餐厅 提供 外卖 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string delivery ) ) )
什么 餐厅 有 送货 ， 对 孩子 们 有 好处	哪家 餐馆 有 送货 服务 ， 对 孩子 有 好处	什么 餐厅 有 外卖 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
像 泰国 咖啡馆 比萨 店 juno 的 美食	泰国 咖啡馆 比萨 店 朱诺 等 美食	比如 泰国 披萨 餐厅 juno	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
有 户外 座位 的 餐厅 有 哪些 类型 的 美食	有 户外 座位 的 餐馆 有 什么 菜式	有 户外 座位 的 餐馆 有 什么 菜式	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
在 至少 两个 街区 找到 一家 餐馆	说出 至少 在 两个 街区 发现 的 餐馆 的 名字	说出 一家 至少 在 两个 社区 都 有 餐馆 的 名字	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
哪家 餐厅 提供 午餐 ， 对 儿童 有益	哪家 餐馆 供应 午餐 对 孩子 们 有 好处	哪家 餐厅 供应 午餐 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string kids ) ) )
哪家 三星级 餐厅 有 服务员	哪家 三 星级饭店 有 服务员	哪家 三星级 餐厅 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
这家 餐馆 的 邻居 是 市中心 西部 ， 供应 午餐	一家 餐馆 ， 附近 是 市中心 西 ， 提供 午餐	附近 是 中城 西部 的 一家 餐馆 ， 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string meals ) ( string = ) en.food.lunch ) )
位于 市中心 西部 的 酒店 可以 提前 预订	可 提前 预订 的 市中心 西区 酒店	在 中城 西部 的 酒店 ， 可以 提前 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
是 泰国 咖啡厅 的 附近 的 邻里 ， 那 是 泰国 咖啡厅 的 附近	泰国 咖啡馆 和 泰国 咖啡馆 的 邻居	这是 泰国 咖啡馆 的 街坊 ， 这是 泰国 咖啡馆 的 街坊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
附近 有 哪些 餐厅 供应 午餐	哪个 街区 有 提供 午餐 的 餐馆	哪个 社区 有 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 需要 预订 ， 孩子 友好	哪家 餐馆 接受 预订 而且 对 孩子 友好	什么 餐厅 接受 预订 ， 而且 对 孩子 很 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string kids ) ) )
哪个 街区 的 餐馆 数量 最少	哪个 街区 的 餐馆 最少	哪个 社区 的 餐馆 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 是 泰国 咖啡馆 的 价格 评级	泰国 咖啡馆 的 价格 等级 是 多少	泰国 咖啡 的 价格 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
在 西部 市中心 供应 午餐 的 餐厅	在 市中心 西区 提供 午餐 的 餐馆	中 城 西部 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
交货 可用	提供 送货 服务	交付 是 可用 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) )
接受 信用卡 并 在 户外 服务 的 餐厅	接受 信用卡 和 户外 服务 的 餐馆	接受 信用卡 并 在 户外 提供 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
泰国 餐馆 评级 2 美元 的 迹象	泰国 餐馆 贴 上 2 美元 的 招牌	泰国 餐馆 2 美元 标识	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
像 泰国 咖啡馆 的 美食	泰国 咖啡馆 的 菜式	像 泰国 咖啡馆 那样 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) )
有 户外 座位 的 餐厅	有 户外 座位 的 餐厅	有 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
有 餐厅 和 信用卡 的 餐馆	有 送货 和 信用卡 的 餐馆	有 送货上门 和 刷卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string credit ) ) )
什么 是 泰国 咖啡馆 的 星级 评分	泰国 咖啡馆 的 星级 是 多少	这家 泰国 咖啡馆 的 星级 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
信用卡 价格 为 2 的 餐厅	信用卡 价格 等级 为 2 的 餐馆	接受 2 级 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
在 中城 西部 的 泰国 餐馆	市中心 西 的 泰国 餐厅	中 城 西部 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 提供 午餐	午餐 送餐 餐厅	午餐 有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 只 提供 一种 美食	哪家 餐馆 只有 一道 菜	什么 餐厅 只 提供 一种 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string < ) ( number 2 ) ) )
餐厅 外卖 团体	团体 外卖 餐厅	为 团体 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
价格 为 2 美元 标志 且 外卖 的 餐厅	价格 为 2 美元 的 餐厅 ， 有 外卖	价格 等级 为 2 美元 的 餐厅 ， 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
什么 餐厅 有 户外 座位 ， 对 孩子 们 有 好处	哪家 餐馆 有 户外 座位 ， 适合 孩子 们	什么 餐厅 有 户外 座位 ， 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
餐厅 评分 为 3 至 5 星	3 到 5 星级 餐厅	餐厅 评级 为 3 至 5 星	( call SW.listValue ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) )
什么 是 在 泰国 咖啡馆 供应 的 一餐	泰国 咖啡馆 供应 什么 菜	泰国 咖啡馆 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
在 市中心 的 西餐厅 为 孩子 们	市中心 西区 儿童 餐厅	中 城 西部 的 一家 儿童 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 供应 午餐 ， 其 菜肴 是 泰国菜	提供 午餐 和 泰国菜 的 餐馆	提供 午餐 和 泰国菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 不 超过 两种 美食	不 超过 两道菜 的 餐馆	只有 两种 菜系 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
有 户外 用餐 区 的 泰国 餐馆	有 户外 用餐 区 的 泰国 餐厅	有 户外 就餐 区 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
位于 社区 之间 的 餐馆	邻里 之间 的 餐馆	位于 社区 之间 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
位于 市中心 西区 的 餐厅 ， 适合 团体 入住	市中心 西餐厅 ， 适合 团体 用餐	中 城 西部 的 一家 餐馆 ， 很 适合 团体活动	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
两餐 以上 的 餐厅	两餐 以上 餐厅	超过 两餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
泰国 餐馆 采取 信用卡	哪家 泰国 餐馆 收 信用卡	哪些 泰国 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string credit ) ) )
找到 一家 我 可以 预订 的 餐厅 ， 价格 为 2 美元	找 一家 我能 订到 2 美元 价格 的 餐馆	找 一家 我 可以 预定 的 餐厅 ， 价格 是 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 提供 午餐 和 外卖	什么 餐馆 提供 午餐 和 外卖	什么 餐厅 提供 午餐 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 有 2 个 价格 等级 ， 适合 团体 友好	有 两个 价格 等级 的 餐厅 ， 对 团体 友好	有 2 个 价格 等级 的 餐馆 是 团体 友好 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
2 美元 符号 评级 的 餐厅	2 美元 标牌 等级 的 餐厅	2 美元 符号 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 街区 不是 咖啡馆 所在 的 地方	那 家 咖啡馆 不 在 哪个 街区	那 家 咖啡馆 不 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 是 三星级 餐厅 ， 供应 午餐	什么 是 提供 午餐 的 三星级 餐厅	什么 是 提供 午餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 评级 为 3 星级 ， 设有 户外 座位	有 户外 座位 的 三星级 餐厅	拥有 户外 座位 的 餐厅 被 评为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string outdoor ) ) )
附近 有 泰国 咖啡馆 的 餐馆	附近 有 泰国 咖啡馆 的 餐馆	附近 有 泰国 咖啡馆 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
什么 好孩子 餐厅 送货	什么 好孩子 餐厅 有 送货	多好 的 儿童 餐厅 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string kids ) ) )
附近 有 一家 餐厅 ， 里面 有 户外 座位	哪 一个 街区 有 一家 包含 户外 座位 的 餐厅	哪个 社区 有 提供 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
哪些 餐厅 有 服务员 并 接受 预订	哪些 餐厅 有 服务员 并 接受 预订	哪些 餐厅 有 服务员 并 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string reserve ) ) )
哪家 餐厅 提供 这种 美食	哪家 餐馆 供应 这种 料理	哪家 餐厅 供应 这 道菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 有 户外 座位 和 价格 评级	有 室外 座位 和 价格 等级 的 餐厅	有 户外 座位 和 价格 等级 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 有 2 个 或 更 多美元 符号 作为 其 价格 评级	哪家 餐厅 有 两个 或 两个 以上 的 美元 标志 作为 其 价格 等级	哪家 餐厅 有 两个 或 更 多 的 美元 标志 作为 其 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 提供 接受 信用卡 的 外卖 服务	餐厅 提供 外卖 服务 ， 接受 信用卡	有 接受 信用卡 的 外卖 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
列出 所有 评级 均 高于 2 的 餐厅	列出 所有 收视率 超过 2 的 餐厅	列出 所有 评级 在 2 以上 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
邻居 有 哪些 餐馆 接受 信用卡	哪个 街区 有 接受 信用卡 的 餐馆	哪个 社区 有 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
提供 送货 和 预订 的 餐厅	提供 送货 和 预订 服务 的 餐厅	提供 送货 和 预订 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string reserve ) ) )
在 泰国 咖啡馆 附近 找到 一家 餐馆	在 泰国 咖啡馆 附近 找 一家 餐馆	在 泰国 咖啡馆 附近 找 一家 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
什么 餐厅 为 团体 提供 午餐	哪家 餐馆 为 团体 提供 午餐	什么 餐厅 提供 团体 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string groups ) ) )
哪些 餐厅 有 服务员 拿 信用卡	哪些 餐厅 有 服务员 用 信用卡	哪些 餐厅 有 服务员 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string credit ) ) )
位于 市中心 西部 的 团体 友好 餐厅	市中心 西区 的 团体 友好 餐厅	中 城 西部 的 团体 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
价格 等于 2 美元 符号 或 3 美元 符号 的 餐厅	价格 等级 大于 2 元 或 3 元 的 餐厅	餐厅 的 价格 等级 大于 2 美元 标志 或 3 美元 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
2 美元 的 标志 餐厅 提供 午餐	什么 2 美元 招牌 餐厅 提供 午餐	什么 2 美元 标志 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 社区 餐厅 有 3 星 评级	哪家 附近 的 餐馆 有 三星级	附近 哪家 餐馆 有 3 星 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
哪些 餐厅 供应 午餐 并 提供 服务员 服务	哪些 餐厅 提供 午餐 和 服务生 服务	哪些 餐厅 提供 午餐 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string waiter ) ) )
适合 团体 和 外卖 的 餐厅	有 外卖 的 团体 餐厅	对 团体 有 好处 的 餐厅 ， 还有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
哪些 餐厅 供应 不到 两餐	哪家 餐馆 的 饭菜 少于 两顿	哪些 餐厅 供应 的 饭菜 少于 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 泰国 餐厅 采取 信用卡	哪家 泰国 餐馆 收 信用卡	什么 泰国 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 对 团体 有益 ， 需要 预订	适合 团体 用餐 并 接受 预订 的 餐厅	对 团体 有 好处 并 接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
餐厅 供应 两餐	提供 两顿 饭 的 餐馆	提供 两餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 评为 3 至 5 星	3 到 5 星级 的 餐厅	被 评为 3 到 5 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
位于 市中心 西部 的 餐厅 ， 提供 服务员 服务	市中心 西餐厅 提供 服务生 服务	中 城 西部 的 餐馆 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string waiter ) ) )
列出 所有 泰国 或 意大利 餐馆	列出 所有 泰国 或 意大利 餐厅	列出 所有 的 泰国 或 意大利 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
一个 儿童 友好 的 餐厅 吃 午饭	一家 儿童 友好 的 午餐 餐厅	孩子 们 友好 的 午餐 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 3 星级 餐厅 对 孩子 们 有 好处	哪家 三星级 餐厅 适合 孩子 们	哪家 三星级 餐厅 适合 孩子 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
什么 餐厅 提供 送货 和 信用卡	哪家 餐馆 提供 送货 和 信用卡	什么 餐厅 提供 送货 和 刷卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string delivery ) ) )
餐厅 的 邻居 是 市中心 西部 ， 有 户外 座位	附近 是 市中心 西 的 餐厅 ， 有 室外 座位	它 的 邻居 是 中城 西部 ， 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
餐厅 的 邻居 是 市中心 西部 ， 其 菜肴 是 泰国菜	附近 是 市中心 西区 的 餐厅 ， 其 菜肴 是 泰国菜	这家 餐馆 的 邻居 是 中城 西部 ， 它 的 菜 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 有 2 美元 的 价格 评级 和 户外 座位	哪家 餐厅 有 2 美元 的 价格 和 户外 座位	什么 餐厅 有 2 美元 的 价格 等级 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
餐馆 数量 最少 的 社区	社区 最少 的 餐馆	在 社区 数量 最少 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
找 一个 带 外卖 的 好 团体 餐厅	找 一家 带 外卖 的 好 集体 餐厅	找 一家 有 外卖 的 团体 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
哪家 餐厅 欢迎 儿童 ， 并 有 户外 座位	哪家 餐馆 欢迎 儿童 ， 有 户外 座位	哪家 餐厅 欢迎 儿童 ， 并且 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
什么 泰国 餐厅 有 3 星 评级	哪家 泰国 餐馆 有 三星级	什么 泰国 餐馆 有 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
需要 预订 且 有 服务员 服务 的 餐厅	接受 预订 并 提供 服务员 服务 的 餐厅	接受 预订 并 提供 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
3 星级 或 5 星级 的 餐厅	三五 星级饭店	拥有 3 星 或 5 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
在 市中心 西区 有 哪些 类型 的 美食	市中心 西区 有 什么 菜式	中 城西区 有 哪些 菜系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
餐厅 有 服务员 ， 并 有 2 美元 的 标志 价格 评级	有 服务员 且 有 2 美元 标价 的 餐厅	餐厅 有 服务员 和 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
有 不到 两个 街区 的 餐厅	不到 两个 街区 的 餐馆	少于 两个 街区 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
供应 午餐 并 需要 预订 的 餐厅	提供 午餐 和 预订 的 餐厅	提供 午餐 并 接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
餐厅 至少 有 30 或 40 条 评论	至少 有 30 或 40 条 评论 的 餐厅	至少 有 30 或 40 条 评论 的 餐厅	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
三星级 餐厅 采用 信用卡	三星级 信用卡 餐厅	三星级 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 设有 户外 座位 ， 适合 团体 入住	有 户外 座位 的 餐厅 ， 适合 团体 用餐	有 户外 座位 的 餐厅 ， 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string groups ) ) )
什么 是 泰国 咖啡馆 或 比萨 店 juno 服务 的 一餐	泰国 咖啡馆 或 比萨 店 供应 的 饭菜 是 什么 ？	泰国 咖啡馆 或 披萨 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 餐厅 提供 预订 和 信用卡	哪家 餐厅 提供 预订 和 信用卡	什么 餐厅 提供 预订 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
什么 餐厅 提供 服务员 服务 和 信用卡	什么 餐馆 提供 服务生 服务 和 信用卡	什么 餐馆 提供 服务员 服务 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string waiter ) ) )
在 市中心 西部 的 餐厅	市中心 西餐厅	中 城 西部 的 外卖 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
星级 评级 大于 泰国 咖啡馆 星级 的 餐厅	星级 高于 泰式 咖啡 星级 的 餐厅	星级 大于 泰国 咖啡 星级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
餐厅 接受 预订	接受 预订 的 餐厅	餐馆 接受 预订	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
有 服务员 服务 ， 有 服务员 服务 的 餐厅	有 侍者 服务 和 侍者 服务 的 餐馆	有 服务员 服务 的 餐厅 和 有 服务员 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string waiter ) ) )
哪些 餐厅 有 2 美元 的 价格 评级 提供 外卖	哪家 餐厅 提供 2 美元 的 外卖	哪家 餐厅 的 外卖 价格 为 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
星级 小于 3 星 的 餐厅	星级 低于 三星 的 餐厅	星级 低于 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
这家 三星级 餐厅 供应 什么 餐点	这家 三星级 餐厅 供应 什么 菜	这家 三星级 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
西部 中心 的 餐厅 设有 户外 用餐 区	市中心 西餐厅 ， 带 室外 用餐 区	中 城 西部 的 餐厅 有 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 有 2 个 菜单项 和 信用卡	哪家 餐馆 有 两种 菜单 和 信用卡	什么 餐厅 有 2 个 菜单项 ， 还 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string credit ) ) )
价格 为 2 美元 标志 的 餐厅 是 一个 适合 团体 的 好 地方	哪家 餐厅 的 标价 是 两 美元 ， 对 一个 团体 来说 是 个 好 地方	哪家 餐厅 的 价格 等级 是 2 美元 ， 对 一个 团体 来说 是 一个 好 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐馆 数量 最少 的 街区	餐馆 最少 的 街区	拥有 最少 餐厅 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 供应 午餐 和 泰国 美食	这家 餐馆 供应 午餐 和 泰国菜	这家 餐厅 供应 午餐 和 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
一家 三星级 餐厅 ， 适合 孩子 们	适合 孩子 们 的 三星级 餐厅	一家 适合 孩子 们 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
什么 餐厅 在 两个 街区	两个 街区 有 什么 餐馆	什么 餐馆 在 两个 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( number 2 ) ) )
切尔西 或 中城 西部	切尔西 或 市中心 西	切尔西 或 中西部	( call SW.listValue ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) )
哪个 餐厅 适合 团体 ， 还有 服务员	哪家 餐馆 适合 一个 团体 ， 也 有 服务员	哪家 餐厅 适合 集体 用餐 ， 而且 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
你 可以 在 泰国 咖啡馆 或 比萨 店 juno 吃 什么 饭	你 在 泰国 咖啡馆 或 朱诺 比萨 店能 吃 到 什么 饭 ？	你 在 泰国 咖啡馆 或 披萨 店 都 能 吃 到 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
所有 餐厅 的 总 价格 是 多少 ？	所有 餐馆 的 总 价格 是 多少	所有 餐厅 的 总价 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
与 泰国 咖啡馆 一样 的 餐厅	提供 与 泰国 咖啡馆 相同 餐食 的 餐厅	提供 和 泰国 咖啡馆 一样 饭菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
什么 餐厅 提供 户外 座位 和 预订	哪家 餐厅 提供 户外 座位 和 预订	什么 餐厅 提供 户外 座位 和 采取 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
什么 餐厅 在 两个 街区	哪家 餐馆 在 两个 以上 的 街区	哪个 餐馆 在 两个 以上 的 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
可以 提前 预订 并 接受 信用卡 的 餐厅	可 提前 预订 并 接受 信用卡 的 餐厅	可以 提前 预订 并 接受 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
什么 菜 都 需要 信用卡	什么 菜 需要 信用卡	什么 菜要 用 信用卡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
餐厅 没有 三星 评级	没有 三星级 的 餐馆	没有 三星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string ! = ) ( number 3 en.star ) ) )
什么 餐厅 采取 信用卡 和 户外 设置	哪些 餐厅 有 信用卡 和 户外 设施	什么 餐馆 接受 信用卡 和 有 户外 设置	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
什么 餐厅 对 孩子 有 好处 ， 并 有 送货	哪家 餐馆 适合 孩子 ， 而且 有 送货 服务	什么 餐厅 对 孩子 好 ， 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string kids ) ) )
哪个 餐厅 吸引 孩子 ， 适合 团体 用餐	哪家 餐馆 吸引 孩子 ， 适合 集体 用餐	哪家 餐厅 对 孩子 们 有 吸引力 ， 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
这家 餐厅 的 星级 评分 为 3 星 ， 其 价格 是 2 美元 的 标志	星级 评定 为 三星 ， 价格 评定 为 2 美元 的 餐厅	星级 为 3 星 ， 价格 为 2 元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 总价	餐厅 总 评分	餐厅 的 总 价格 评级	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
泰国 咖啡馆 供应 什么样 的 饭菜	泰国 咖啡馆 供应 什么样 的 饭菜	泰国 咖啡馆 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
找 一个 有 服务员 服务 的 好 团体 餐厅	找 一家 有 服务生 的 好 的 集体 餐厅	找 一家 有 服务员 服务 的 团体 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
餐厅 拥有 最多 的 美食	美食 最多 的 餐厅	拥有 最 多 菜肴 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
外卖 餐厅 的 邻居 是 什么 ？	外卖 店 附近 是 什么 地方	这家 外卖 餐厅 附近 是 什么 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
有 预订 的 餐厅 ， 供应 午餐	有 预订 和 供应 午餐 的 餐厅	餐厅 预订 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
3 星级 餐厅 接受 预订	哪些 三星级 餐厅 接受 预订	什么 三星级 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
哪家 泰国 餐厅 需要 信用卡	哪家 泰国 餐馆 收 信用卡	哪家 泰国 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 外卖 的 餐厅 适合 大型 聚会	有 外卖 的 餐馆 适合 大型 聚会	有 适合 大型 聚会 的 外卖 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
哪些 餐厅 提供 的 餐点 数量 最少	哪家 餐馆 的 饭菜 最少	哪些 餐馆 提供 的 饭菜 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
餐厅 有 户外 座位 ， 邻里 是 市中心 西区	有 户外 座位 的 餐馆 ， 其 附近 是 市中心 西	有 户外 座位 的 餐馆 ， 它 的 邻居 是 中城 西部	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 适合 团体 和 信用卡	哪家 餐馆 适合 团体 就餐 并 接受 信用卡	什么样 的 餐厅 适合 团体 就餐 ， 而且 可以 刷卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
找 一个 外卖 餐厅	找个 外卖 店	找 一家 外卖 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string takeout ) ) )
什么 餐厅 不到 5 星	哪家 餐馆 的 星级 不到 五星级	哪家 餐厅 的 星级 还 不到 5 星级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
位于 市中心 西区 的 餐厅 ， 对 团体 有益	市中心 西餐厅 ， 适合 团体 用餐	中 城 西部 的 一家 餐馆 ， 很 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
酒店 提供 午餐 ， 最 适合 团体 用餐	提供 午餐 和 最 适合 集体 用餐 的 酒店	酒店 提供 午餐 和 最好 的 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
附近 是 市中心 西区 ， 外卖 的 餐厅	附近 是 市中心 西 的 餐馆 ， 有 外卖	附近 是 中 城西区 的 一家 餐馆 ， 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
什么 是 最 昂贵 的 餐厅	最贵 的 餐馆 是 什么	最贵 的 餐厅 是 哪家	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
什么 是 不 供应 午餐 的 餐厅	不 提供 午餐 的 餐馆 是 什么	什么 餐厅 不 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
有 外卖 的 餐厅 ， 有 服务员 服务	有 外卖 和 侍者 服务 的 餐馆	有 外卖 和 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
供应 午餐 的 餐厅 接受 预订	提供 午餐 的 餐厅 接受 预订	接受 预订 的 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
西区 中心 的 餐厅 设有 户外 用餐 区	市中心 西餐厅 ， 有 一个 室外 用餐 区	中 城 西部 的 餐厅 有 一个 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
提供 3 星级 餐厅	3Star 餐厅 提供	提供 外卖 的 3 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
价格 至少 为 2 美元 符号 或 3 美元 符号 的 餐厅	价格 等级 至少 为 2 美元 或 3 美元 的 餐厅	餐厅 的 价格 评级 至少 是 2 美元 或 3 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 是 一些 3 星级 泰国 餐馆	一些 三星级 的 泰国 餐馆 是 什么	有 哪些 三星级 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 餐厅 都 有 户外 座位 ， 需要 预订	哪家 餐厅 既有 室外 座位 又 有 预订	哪家 餐厅 既有 室外 座位 又 可以 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
集团 友好 的 泰国 餐馆	团体 友好 型 泰国 餐厅	团体 友好 型 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
位于 市中心 西区 附近 的 餐厅 ， 有 户外 座位	位于 市中心 西区 附近 且 有 户外 座位 的 餐厅	在 中 城西区 附近 有 露天 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string outdoor ) ) )
2 星 或 以下 的 餐厅	星级 及 以下 餐厅	2 星 或 以下 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 适合 儿童 和 交付	哪家 餐馆 适合 儿童 ， 有 送货 服务	什么 餐厅 是 适合 儿童 的 ， 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
列出 所有 比 2 美元 标志 便宜 的 餐馆	列出 所有 比 2 美元 招牌 便宜 的 餐馆	列出 所有 比 2 美元 还 便宜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
什么 餐厅 只 供应 两顿 或 更 少 的 饭菜	哪家 餐馆 只 供应 两餐 或 两餐 以下	什么 餐馆 只 供应 两餐 或 更 少 的 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
有 外卖 的 餐厅 ， 供应 午餐	有 外卖 和 午餐 的 餐馆	有 外卖 和 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪个 餐厅 有 服务员 ， 还 提供 外卖 服务	哪家 餐馆 有 服务员 ， 也 有 外卖	哪家 餐厅 有 服务员 ， 还 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
什么 是 泰国 餐厅 的 邻居	泰国 餐馆 附近 是 什么 地方	那 家 泰国 餐馆 附近 是 什么 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
列出 所有 与 泰国 咖啡馆 不 相似 的 餐馆	列出 所有 与 泰式 咖啡馆 不 相似 的 餐厅	列出 所有 与 泰国 咖啡 不同 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 餐厅 有 户外 座位 ， 并 提供 服务员 服务	哪家 餐厅 有 室外 座位 并 提供 服务生 服务	什么 餐厅 有 露天 座位 ， 还 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string waiter ) ) )
餐厅 供应 少于 两餐	两餐 以下 的 餐馆	少于 两餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
三星级 的 约束 和 下	三星 及 以下	3 星级 以下 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 有 服务员 服务 和 预订	提供 服务 和 预订 的 餐厅	餐厅 有 服务员 服务 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
找 一家 拿 信用卡 的 餐馆	找 一家 收 信用卡 的 餐馆	找 一家 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) )
2 个 价格 等级 的 餐厅 也 有 服务员 服务	哪些 2 级 价格 的 餐厅 也 有 服务员 服务	有 2 个 价位 的 餐厅 也 有 服务生 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
什么 餐厅 对 孩子 和 团体 有益	什么 餐馆 适合 儿童 和 团体	什么样 的 餐厅 适合 孩子 和 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
什么 餐厅 在 市中心 西区 采取 信用卡	市中心 西区 哪家 餐馆 收 信用卡	什么 餐馆 在 中 城西区 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 2 美元 的 标志 餐馆 在 西部 中城 的 邻居	市中心 西区 附近 有 几家 2 美元 的 招牌 餐馆	中 城西区 的 邻居 有 什么 2 美元 标志 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
西部 市中心 的 餐厅 提供	位于 市中心 西部 的 餐厅	中 城 西部 的 餐馆 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
评价 最高 的 星级 餐厅	星级 最高 的 餐厅	最高 星级 餐厅	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
列出 所有 2 美元 的 标志 餐馆	列出 所有 2 美元 招牌 餐厅	列出 所有 2 美元 标志 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
泰国 或 意大利 餐厅	泰国 或 意大利 餐馆	泰国 或 意大利 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
什么 餐厅 至少 两餐	什么 餐馆 至少 供应 两顿 饭	什么 餐厅 至少 供应 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
餐厅 对 团体 有益 ， 其 菜肴 是 泰国菜	适合 团体 用餐 的 泰国 料理 餐厅	泰国 风味 的 餐厅 ， 适合 团体 就餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
意大利人 或 泰国	意大利语 或 泰语	意大利 或 泰国	( call SW.listValue ( call SW.concat en.cuisine.thai en.cuisine.italian ) )
菜肴 的 美食 ， 其 菜肴 是 泰国菜	泰国 料理 餐厅 的 料理	泰国菜 是 泰国菜 餐馆 的 菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
餐厅 外卖 和 信用卡	带 外卖 和 信用卡 的 餐馆	带 外卖 和 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
酒店 拥有 超过 三星 评级	三星级 以上 的 酒店	拥有 超过 三星级 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
泰国 咖啡馆 或 比萨 店 juno	泰国 咖啡馆 或 比萨 店 Juno	泰国 咖啡馆 或 披萨 店	( call SW.listValue ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) )
需要 预订 且 外卖 的 餐厅	有 外卖 和 预订 的 餐厅	接受 预定 并 有 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
外卖 的 泰国 餐馆	泰国 外卖 餐厅	有 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
预订 的 餐厅 ， 被 评为 2 美元 的 标志	接受 预订 并 被 评为 2 美元 标牌 的 餐厅	接受 预订 并 被 评为 2 美元 级别 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string reserve ) ) )
所有 其他 餐厅 都 提供 同样 的 餐点	其他 餐馆 都 供应 什么 饭菜	其他 餐馆 提供 的 饭菜 都 是 一样 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 提供 outdoot 和 外卖	哪家 餐馆 提供 外卖 和 外卖	什么 餐厅 提供 户外活动 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
什么 是 三星级 餐厅 供应 的 餐点	在 三星级 餐厅 供应 什么 菜	三星级 餐厅 的 一餐 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
我 可以 在 哪家 餐厅 吃 午餐 并用 信用卡 付款	我能 在 哪家 餐馆 吃 午饭 ， 用 信用卡 付款	我 可以 在 哪家 餐厅 吃 午餐 并用 信用卡 付帐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
泰国 餐馆 ， 孩子 们 友好	对 孩子 友好 的 泰国 餐馆	对 孩子 友好 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 ， 其 菜肴 是 泰国菜 ， 外卖	泰国 料理 的 餐厅 ， 有 外卖	这家 餐馆 的 菜 是 泰国菜 ， 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string takeout ) ) )
2 美元 的 标志 餐厅 提供 交付	什么 2 美元 的 招牌 餐厅 提供 送货	什么 2 美元 标志 餐厅 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
提供 信用卡 和 外卖 的 餐厅	提供 信用卡 和 外卖 的 餐馆	提供 信用卡 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
什么 餐厅 对 团体 和 孩子 有益	什么 餐馆 适合 团体 和 孩子	什么 餐厅 适合 团体 和 孩子 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string kids ) ) )
泰国 餐厅 有 户外 座位	什么 泰国 餐馆 有 户外 座位	什么 泰国 餐馆 有 露天 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
餐厅 评级 为 2 美元 的 标志 ， 需要 预订	餐馆 只收 2 美元 的 预订 费	餐厅 对 接受 预订 的 2 美元 标识 进行 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 只能 在 两个 街区 找到	哪家 餐馆 只有 两个 街区	什么 餐厅 只有 两个 街区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
什么 地方 供应 的 食物 不是 泰国菜	哪些地方 供应 的 食物 不是 泰国菜	什么 地方 供应 的 食物 不是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 2 美元 的 标志 餐厅 对 孩子 们 有 好处	哪家 2 美元 的 招牌 餐馆 适合 孩子	哪家 2 美元 的 招牌 餐厅 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
团体 友好 的 餐厅 被 评为 3 星级	被 评为 三星级 的 团体 友好 型 餐厅	被 评为 3 星 的 团体 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
泰国 咖啡馆 供应 什么 餐点	泰国 咖啡馆 供应 什么 饭菜	泰国 咖啡馆 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) )
中 城 西餐厅 有 什么 美食	市中心 西餐厅 有 什么 菜	中 城 西餐厅 有 什么 菜式	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 餐厅 适合 团体 和 接受 预订	哪些 餐厅 适合 团体 和 接受 预订	什么样 的 餐厅 适合 团体 和 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
什么 餐厅 有 两餐	哪家 餐馆 有 两顿 饭	什么 餐厅 有 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 餐厅 外卖 和 2 美元 的 价格 评级	哪家 餐馆 有 外卖 和 2 美元 的 价格	什么 餐厅 有 外卖 和 2 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
找 一家 泰国 或 意大利 餐馆	找 一家 泰国 或 意大利 餐馆	找 一家 泰国 或 意大利 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
泰国 餐厅 提供 什么 交付	什么 泰国 餐馆 提供 送货 服务	什么 泰国 餐馆 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 供应 午餐 ， 并 提供 外卖	哪家 餐馆 提供 午餐 和 外卖	什么 餐厅 供应 午餐 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
在 市中心 附近 的 泰国 餐馆	市中心 附近 的 一家 泰国 餐馆	中 城 附近 的 一家 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
价格 等级 是 泰国 咖啡馆 价格 等级 的 餐厅	价格 等级 为 泰国 咖啡厅 价格 等级 的 餐厅	餐厅 的 价格 评级 是 泰国 咖啡 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
午餐 餐厅 评为 2 美元 的 标志	午餐 餐厅 2 美元 标牌	餐厅 午餐 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
团体 友好 的 餐厅	团体 友好 型 餐厅	群 友好 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) )
餐厅 适合 团体 游客 ， 其 星级 评分 为 3 星级	适合 团体 用餐 ， 星级 为 三星 的 餐厅	适合 团体活动 ， 星级 为 3 星 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 提供 和 服务员 服务	哪家 餐馆 提供 服务生 服务	什么 餐厅 送餐 和 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string waiter ) ) )
餐厅 提供 并且 对 团体 有益	为 团体 提供 便利 的 餐厅	对 团体 有 好处 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
餐厅 对 孩子 们 有益 ， 其 菜肴 是 泰国菜	适合 儿童 的 餐厅 ， 其 菜肴 为 泰国菜	这家 餐馆 对 孩子 们 很 好 ， 它 的 菜 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐馆 的 数量 是 多少	餐馆 的 数目 是 多少	有 多少 家 餐馆	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
有 哪些 餐厅 需要 预订	什么样 的 餐馆 可以 预订	接受 预订 的 餐馆 在 哪些 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
所有 餐厅 的 平均 星级 评分 是 多少 ？	所有 餐馆 的 平均 星级 是 多少	所有 餐厅 的 平均 星级 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
供应 午餐 的 三星级 餐厅	提供 午餐 的 三星级 餐厅	提供 午餐 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 与 交付 额定 2 美元 的 标志	有 2 美元 送货 标志 的 餐厅	外卖 等级 为 2 美元 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string delivery ) ) )
哪些 餐厅 的 评级 在 3 到 5 星 之间	哪些 餐厅 的 星级 在 3 到 5 星级 之间	哪些 餐厅 被 评为 3 至 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
将 酒店 命名 为 三星 评级 ， 适合 团体 用餐	举出 一家 三 星级饭店 ， 适合 集体 用餐	请说出 一家 适合 团体 用餐 的 三星级 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
什么 餐厅 有 预订 和 外卖	什么 餐馆 有 预订 和 外卖	什么 餐厅 有 预订 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
什么 好孩子 餐厅 有 户外 座位	什么 好 的 儿童 餐厅 有 户外 座位	多好 的 儿童 餐厅 有 户外 座位 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string kids ) ) )
哪些 餐厅 的 评级 低于 3 星级	哪些 餐厅 的 评级 低于 三星级	哪些 餐厅 的 评级 低于 3 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string ! = ) ( number 3 en.star ) ) )
大多数 餐馆 都 提供 什么 餐点	大多数 餐馆 供应 什么 饭菜	大多数 餐馆 供应 什么 饭菜	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string meals ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 ， 适合 团体 和 午餐	适合 团体 用餐 的 餐厅	对 团体 有 好处 的 餐厅 ， 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 提供 外卖 和 送货	哪家 餐馆 提供 外卖 和 送货 服务	什么 餐厅 提供 外卖 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string takeout ) ) )
团体 友好 的 餐厅 接受 预订	接受 预订 的 团体 友好 型 餐厅	接受 预订 的 团体 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
位于 市中心 西区 的 哪家 餐厅 有 户外 座位	市中心 西区 哪家 餐厅 有 室外 座位	中 城西区 哪家 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 提供 相同 的 美食	提供 相同 菜肴 的 餐馆	提供 同样 菜肴 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 中 城 西餐厅 的 价格 是 2 美元 的 标志	什么 市中心 西餐厅 的 标价 是 2 美元	什么 中 城 西餐厅 有 2 美元 的 价格 评级 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 是 泰国 咖啡馆 的 价格 评级	泰国 咖啡馆 的 价格 等级 是 多少	泰国 咖啡 的 价格 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
这是 一家 采用 信用卡 的 餐厅 美食	这是 一家 用 信用卡 的 餐厅	用 信用卡 支付 的 餐馆 的 菜肴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
哪个 街区 的 餐馆 最少	哪个 街区 的 餐馆 最少	哪个 社区 的 餐馆 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 容纳 团体	哪些 餐厅 能 容纳 团体	什么 餐厅 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) )
靠近 泰国 咖啡馆 的 餐厅	靠近 泰国 咖啡馆 的 餐馆	离 泰国 咖啡馆 很近 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) ) )
什么样 的 餐厅 提供 户外 座位	什么样 的 餐厅 提供 户外 座位	什么样 的 餐厅 提供 户外 座位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
什么 餐厅 至少 提供 两种 美食	什么 餐馆 至少 供应 两种 菜系	什么 餐厅 至少 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
一个 类似 泰国 咖啡馆 的 社区	类似 泰国 咖啡馆 的 街区	一个 类似 泰国 咖啡馆 的 社区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 有 超过 两种 美食	哪家 餐馆 有 两种 以上 的 菜系	什么 餐厅 有 两种 以上 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
什么 餐厅 的 价格 低于 2 美元	哪家 餐馆 的 价格 低于 2 美元	哪家 餐厅 的 价格 评级 低于 2 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
一家 餐厅 ， 有 很多 餐	有 很多 饭菜 的 餐馆	有 很多 饭菜 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
这家 餐厅 供应 午餐	这家 餐馆 午餐 供应 什么 菜	这家 餐厅 午餐 供应 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
找 一家 带 户外 座位 的 泰国 餐厅	找 一家 有 户外 座位 的 泰国 餐馆	找 一家 有 户外 座位 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
有 服务员 服务 且 有 送货 的 餐厅	有 服务员 服务 和 送货 服务 的 餐馆	有 服务员 服务 和 送货 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string delivery ) ) )
什么 餐厅 对 团体 有益 ， 并 有 服务员 服务	哪家 餐馆 适合 团体 用餐 ， 有 服务员 服务	哪家 餐厅 适合 团体 用餐 ， 而且 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string groups ) ) )
餐厅 的 食物 不像 泰国 咖啡馆	不 喜欢 泰国 咖啡馆 的 餐厅	有 不 像 泰国 咖啡馆 的 食物 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string ! = ) en.restaurant.thai_cafe ) )
什么 餐厅 供应 除 泰国 以外 的 任何 美食	除了 泰国菜 外 ， 有些 餐馆 供应 什么 菜	除了 泰国菜 以外 ， 还有 哪些 餐厅 供应 其他 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
什么 市中心 西餐厅 采取 信用卡	什么 市中心 西餐厅 收 信用卡	什么 中 城 西餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string credit ) ) )
什么 菜 只 在 两家 餐厅 展出	只有 两家 餐馆 供应 什么 菜	什么 菜 只有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
超过 两家 餐厅 提供 什么 菜	两个 以上 的 餐馆 供应 什么 菜	两家 以上 的 餐厅 有 什么 菜式	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
价格 等于 泰国 咖啡馆 的 餐厅	价格 相当于 泰国 咖啡厅 的 餐厅	价格 等级 与 泰国 咖啡 相当 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
附近 有 餐厅 供应 午餐	附近 有 提供 午餐 的 餐厅	附近 有 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 是 集体 餐厅 的 餐厅 的 美食	有 集体 用餐 的 餐馆 的 菜式 是 什么	有 集体 用餐 的 餐厅 的 菜式 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
餐厅 不 超过 2 个 地点	不 超过 两个 地点 的 餐厅	不 超过 两个 地点 的 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string <= ) ( number 2 ) ) )
有 2 或 3 美元 的 标志 评级	有 2 或 3 美元 的 符号 等级	2 或 3 美元 符号 评级	( call SW.listValue ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) )
找 一家 三星级 餐厅	找 一家 三星级 餐厅	找 一家 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪些 餐厅 可以 信用 并 可以 容纳 一个 团体	哪些 餐馆 可以 赊账 ， 并 能 容纳 一个 团体	哪些 餐厅 可以 赊账 并且 可以 容纳 一个 团体	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
什么 是 餐厅 的 邻居 价格 评级 为 2 美元 的 标志	这家 餐馆 的 附近 有 什么 标价 为 2 美元 的 招牌	2 美元 标识 的 餐厅 所在 的 街区 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
西部 中城 的 餐馆 有 外卖	中西部 有 外卖 的 餐馆	中 城 西部 的 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string takeout ) ) )
酒店 的 星级 比 泰国 咖啡厅 更高	星级 高于 泰国 咖啡厅 的 酒店	酒店 星级 比 泰国 咖啡厅 还 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
将 一些 泰国 餐馆 命名 为 团体 用餐	说出 一些 泰国 餐馆 的 名字	说出 一些 适合 集体 用餐 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪家 餐厅 提供 最少 类型 的 美食	哪家 餐馆 提供 的 菜肴 种类 最少	哪家 餐厅 的 菜式 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 餐厅 提供 与 泰国 咖啡馆 相同 的 食物	哪家 餐馆 的 菜 和 泰国 咖啡馆 的 菜 一样	哪 一家 餐厅 的 菜 和 泰国 咖啡馆 的 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
在 西部 市中心 的 餐厅 提供 什么样 的 饭菜	市中心 西餐厅 供应 什么样 的 饭菜	中 城西区 的 餐馆 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
有 户外 座位 的 餐厅 提供 什么 美食	有 户外 座位 的 餐馆 提供 什么 菜 ？	有 户外 座位 的 餐馆 提供 什么样 的 菜肴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
泰国 餐厅 供应 什么 餐	泰国 餐馆 供应 什么 菜	这家 泰国 餐厅 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
价格 适中 的 餐厅 ， 有 户外 座位	有 户外 座位 的 中等 价位 餐厅	有 户外 座位 的 价格 适中 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
什么 餐厅 提供 的 食物 为 孩子 们 提供 食物	哪些 餐厅 提供 适合 儿童 的 食物	什么样 的 餐厅 提供 对 孩子 有益 的 食物	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
为 孩子 们 准备 午餐 的 餐厅	儿童 午餐 餐厅	孩子 们 的 午餐 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string meals ) ( string = ) en.food.lunch ) )
泰国 咖啡馆 没有 提供 的 餐点	泰国 咖啡厅 不 提供 的 饭菜	泰国 咖啡馆 不 提供 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
餐厅 位置	餐厅 位置	餐厅 的 位置	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string > ) ( number 2 ) ) )
餐厅 至少 有 2 美元 的 价格 评级	至少 有 2 美元 价格 的 餐馆	至少 是 2 美元 级别 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
一个 集团 友好 的 餐厅 ， 价格 中等	中等 价位 的 团体 友好 型 餐馆	中档 价位 的 团体 友好 型 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string groups ) ) )
哪家 3 星级 餐厅 有 外卖 服务	哪家 3Star 餐厅 有 外卖 服务	哪家 三星级 餐厅 有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string takeout ) ) )
哪个 社区 最 适合 团体 的 餐馆	哪个 街区 的 餐馆 最 适合 团体	哪个 社区 有 最 多 的 适合 团体活动 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
什么 是 接受 信用卡 的 餐厅 提供 的 餐点	接受 信用卡 的 餐馆 供应 的 饭菜 是 什么	接受 信用卡 的 餐厅 供应 什么 餐食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
哪些 餐厅 有 服务员 并 提供 外卖	哪些 餐厅 有 服务员 和 外卖	哪些 餐厅 有 服务员 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
这家 三星级 餐厅 有 外卖 食品	三 星级饭店 有 外卖 食品	这家 三星级 餐厅 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 餐厅 都 适合 团体 和 小孩	什么 餐馆 既 适合 团体 又 适合 孩子	什么样 的 餐厅 对 团体 和 孩子 都 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
这家 三星级 餐厅 适合 团体 入住	这家 三星级 餐厅 适合 团体 用餐	这家 三星级 餐厅 适合 团体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
有 户外 座位 和 送货 的 餐厅	有 户外 座位 的 餐厅	有 户外 座位 并 提供 外卖 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string delivery ) ) )
接受 信用卡 并 提供 外卖 的 餐厅	接受 信用卡 和 外卖 的 餐馆	接受 信用卡 并 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
哪家 餐厅 的 价格 为 2 美元 标志 ， 并 设有 户外 座位	哪家 餐厅 的 标价 是 2 美元 ， 而且 有 户外 座位	哪家 餐厅 的 标价 是 2 美元 ， 而且 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string outdoor ) ) )
预订 的 餐厅 ， 对 儿童 有益	接受 预订 并 适合 儿童 的 餐厅	接受 预订 的 餐馆 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string kids ) ) )
列出 所有 至少 有 3 星 或 5 星 评级 的 餐厅	列出 所有 至少 有 3 星级 或 5 星级 的 餐厅	列出 所有 至少 有 3 星 或 5 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
午餐 供应 的 餐厅 供应 什么 餐	开放 午餐 的 餐馆 供应 什么 菜	开放 的 午餐 餐厅 供应 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
送货 的 团体 餐厅	提供 送货 服务 的 团体 餐厅	团体 餐厅 送餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
提供 外卖 的 餐厅 提供 什么 美食	提供 外卖 的 餐馆 提供 什么 菜 ？	那些 提供 外卖 的 餐馆 提供 什么样 的 美食 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 邻里 是 泰国 的 咖啡馆	泰国 咖啡馆 在 哪个 街区	泰国 咖啡馆 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
餐厅 每天 至少 开 两餐	餐厅 每天 至少 开放 两餐	餐厅 每天 至少 开放 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
泰国 餐厅 需要 预订	接受 预订 的 泰国 餐厅	接受 预订 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string reserve ) ) )
三星级 餐厅 接受 信用卡	接受 信用卡 的 三星级 餐厅	接受 信用卡 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string credit ) ) )
餐厅 提供 并 提供 户外 座位	提供 室外 座位 的 餐厅	提供 室外 座位 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string outdoor ) ) )
有 预订 的 餐厅 有 什么 美食	有 预约 的 餐馆 有 什么 菜	有 预订 的 餐厅 有 什么 菜式	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
餐厅 有 户外 座位 ， 其 价格 评级 为 2 美元 的 标志	有 户外 座位 且 价格 为 2 美元 标牌 的 餐厅	有 户外 座位 ， 价格 等级 为 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 resturants 采取 信用卡 和 户外 座位	什么 餐厅 有 信用卡 和 户外 座位 ？	什么样 的 餐馆 会 接受 信用卡 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string outdoor ) ) )
3 星级 餐厅 还有 服务员	什么 3Star 餐厅 也 有 服务员	什么 三星级 餐厅 也 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
找 一家 3 星 或 更 少 的 星级 餐厅	找 一家 三星级 或 三星级 以下 的 餐厅	找 一家 三星级 或 以下 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 提供 午餐 ， 可以 使用 信用卡	提供 信用卡 午餐 的 餐厅	接受 信用卡 的 餐馆 午餐 开放	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 提供 服务员 服务 和 外卖	什么 餐馆 提供 服务生 服务 和 外卖	什么 餐馆 提供 服务员 服务 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
餐厅 对 儿童 有益 ， 并 提供 外卖	有利于 儿童 和 提供 外卖 的 餐馆	对 儿童 有益 的 餐馆 ， 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
哪家 餐厅 的 价格 是 两 美元 的 标志 ， 并 有 服务员	哪家 餐馆 的 标价 是 2 美元 ， 有 服务员	哪家 餐厅 的 价格 等级 是 2 美元 ， 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
泰国 餐馆 需要 信用卡	泰国 餐馆 收 信用卡	这家 泰国 餐馆 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string credit ) ) )
哪些 餐厅 接受 信用卡 付款 ， 还有 外卖 服务	哪些 餐厅 接受 信用卡 付款 ， 还有 外卖 服务	哪些 餐厅 接受 信用卡 付款 ， 还 提供 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
一个 儿童 友好 的 餐厅 ， 户外 座位	有 户外 座位 的 儿童 友好 餐馆	有 户外 座位 的 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
餐厅 在 市中心 西部 评为 3 星级	中 城西区 的 餐馆 被 评为 三星级	中 城西区 的 餐厅 被 评为 三星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪家 餐厅 适合 团体 用餐	哪家 餐馆 适合 集体 用餐	哪家 餐厅 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
外卖 餐厅 有 户外 座位	什么 外卖 餐厅 有 室外 座位	什么 外卖 餐厅 有 户外 座位 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
一家 不 供应 泰国菜 的 餐厅	不 提供 泰国菜 的 餐馆	不 供应 泰国菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
什么 是 最 多 餐厅 的 美食	大多数 餐馆 的 菜肴 是 什么	大多数 餐馆 的 菜系 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
餐厅 提供 独特 的 餐点	提供 独特 饭菜 的 餐厅	提供 独特 饭菜 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
提供 午餐 的 餐厅	提供 午餐 的 餐厅	提供 午餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 数量 最少 的 地区	餐厅 最少 的 区域	餐厅 数量 最少 的 区域	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪个 街区 不是 泰国 咖啡馆	泰国 咖啡馆 不 在 哪个 街区	泰国 咖啡馆 不 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string ! = ) en.restaurant.thai_cafe ) )
哪些 社区 至少 有 两家 餐馆	哪个 社区 至少 有 两家 餐馆	哪个 社区 至少 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
位于 市中心 西区 的 餐厅 ， 其 标志 价格 为 2 美元	市中心 西区 有 2 美元 标价 的 餐馆	中 城西区 附近 的 餐馆 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
餐厅 评分 至少 3 星级	星级 以上 餐厅	拥有 至少 3 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
餐厅 对 孩子 们 有 好处 并且 有 外卖	有 外卖 的 儿童 餐厅	对 孩子 们 有 好处 的 餐厅 ， 还有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
2 个 价格 评分 的 餐厅 ， 供应 午餐	提供 午餐 的 2 级 价格 餐厅	有 两个 价格 等级 的 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string meals ) ( string = ) en.food.lunch ) )
多家 餐厅 提供 哪些 美食	不止 一家 餐馆 提供 什么 菜 ？	多家 餐厅 提供 的 美食	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
三星级 的 餐厅 ， 有 户外 座位	三星级 餐厅 ， 有 室外 座位	餐厅 评级 为 3 星 ， 并 设有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string outdoor ) ) )
哪些 餐厅 提供 午餐 ， 并 有 2 美元 的 标志 价格 评级	哪些 餐厅 提供 午餐 ， 并 有 2 美元 的 标价	哪些 餐厅 提供 午餐 ， 并 有 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
在 供应 午餐 的 餐厅 提供 什么样 的 美食	提供 午餐 的 餐馆 有 什么 菜 ？	在 供应 午餐 的 餐馆 里 可以 找到 什么样 的 菜肴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
餐厅 适合 团体 用餐 ， 可以 提前 预订	适合 集体 用餐 且 可 提前 预订 的 餐厅	适合 集体 用餐 的 餐厅 ， 可以 提前 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
什么 是 一些 不 服务 泰国 的 餐馆	有 哪些 餐馆 不 提供 泰国菜	有 哪些 餐厅 不 提供 泰国菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string ! = ) en.cuisine.thai ) )
哪家 餐厅 的 星级 评分 最低	哪家 餐厅 星级 最低	哪家 餐厅 的 星级 最低	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
泰国 餐馆 提供	泰国 餐厅 提供	提供 外卖 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
什么 是 大多数 餐馆 的 美食	大多数 餐馆 的 菜肴 是 什么	大多数 餐馆 的 菜系 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string cuisine ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
3 星级 餐厅 有 户外 座位	哪家 三星级 餐厅 有 室外 座位	什么 三星级 餐厅 有 露天 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string outdoor ) ) )
什么 餐厅 有 两种 以上 的 菜	什么 餐馆 有 两种 以上 的 菜肴	什么 餐馆 有 两种 以上 的 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
所有 餐厅 的 星级 评分 是 多少 ？	所有 餐馆 的 总 星级 是 多少	所有 餐厅 的 总 星级 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ) ) )
哪个 社区 有 餐厅 ， 提供 户外 座位	哪个 街区 有 提供 户外 座位 的 餐厅	哪个 社区 有 提供 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
什么 是 在 西部 市中心 的 餐厅 提供 的 餐点	市中心 西区 的 一家 餐馆 供应 什么 菜	中 城西区 的 餐馆 供应 什么 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
餐厅 供应 午餐 或 晚餐	提供 午餐 或 晚餐 的 餐馆	提供 午餐 或 晚餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
哪些 餐厅 的 价格 高于 或 低于 两 美元 的 标志	哪些 餐厅 的 价格 等级 高于 或 低于 两 美元	哪些 餐厅 的 价格 评级 高于 或 低于 两个 美元 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
餐厅 ， 信用卡 和 外卖	有 信用卡 和 外卖 的 餐馆	可以 用 信用卡 结账 的 餐馆 ， 还有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string takeout ) ) )
什么 餐厅 对 孩子 和 团体 有益	什么样 的 餐馆 对 孩子 和 团体 都 有 好处	什么样 的 餐厅 对 孩子 和 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string groups ) ) )
什么 餐厅 供应 两餐 以上	哪家 餐馆 提供 两顿 以上 的 饭菜	什么 餐馆 供应 两顿 以上 的 饭菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
送餐 的 餐馆	提供	餐馆 提供	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string delivery ) ) )
什么 好 的 儿童 餐厅 供应 泰国菜	什么 好 的 儿童 餐厅 供应 泰国菜	多棒 的 儿童 餐厅 供应 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
外卖 和 送货 的 餐厅	带 外卖 和 送货 的 餐厅	有 外卖 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string delivery ) ) )
哪些 餐厅 被 评为 相同 或 低于 泰国 咖啡馆	哪些 餐厅 的 评分 与 泰国 咖啡厅 相同 或 更 低	哪些 餐厅 被 评为 相同 或 低于 泰国 咖啡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
中 城 西餐厅 需要 预订	市中心 西餐厅 预订 什么	什么 中 城 西餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string reserve ) ) )
邻居 包含 接受 信用卡 的 餐馆	哪个 街区 有 接受 信用卡 的 餐馆	什么 社区 有 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ) )
儿童 友好 且 价格低廉 的 餐厅	对 孩子 友好 又 便宜 的 餐馆	对 孩子 友好 又 便宜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
什么 是 泰国 咖啡馆 的 菜肴 类型	泰国 咖啡馆 的 菜式 是 什么	泰国 咖啡 是 什么 类型 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
这家 餐厅 供应 最多 的 美食	这家 餐馆 的 菜式 最多	这家 餐厅 的 菜式 是 最 多 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
价格 等级 是 2 美元 符号 的 餐厅 附近 的 街区	邻里 是 指 价格 为 2 美元 的 餐馆 的 邻里	价格 等级 为 2 美元 的 餐馆 所在 的 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
靠近 两个 街区 的 餐馆	两个 街区 附近 的 餐馆	在 两个 社区 附近 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
酒店 的 价格 为 2 美元 的 标志 和 3 星 评级	价格 等级 为 2 美元 标志 和 3 星级 的 酒店	酒店 有 2 美元 的 价格 评级 和 3 星 的 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
在 不到 两个 街区 找到 的 餐馆	不到 两个 街区 的 餐馆	不到 两个 街区 就 有 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
哪 三家 星级 餐厅 适合 孩子	哪家 三星级 餐厅 适合 孩子	哪家 三星级 餐厅 适合 孩子 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
在 泰国 咖啡馆 附近 命名 一家 餐馆	在 泰国 咖啡馆 附近 有 一家 餐馆	说出 一家 泰国 咖啡馆 附近 的 餐馆 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ) )
午餐 服务 餐厅 外卖	带 外卖 的 午餐 餐厅	有 外卖 的 午餐 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 的 星级 比 泰国 咖啡馆 小	哪家 餐馆 的 星级 比 泰国 咖啡馆 低	哪家 餐厅 的 星级 比 泰国 咖啡馆 还 低	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 被 评为 3 星级 以下	哪些 餐厅 被 评为 三星 以下	哪些 餐厅 被 评为 三星 以下	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
哪家 餐厅 评价 最高	哪家 餐馆 评价 最高	哪家 餐厅 的 评价 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
附近 是 泰国 咖啡馆	泰国 咖啡馆 在 哪个 街区	附近 有 一家 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 不 在 市中心 西部	什么 餐馆 不 在 市中心 西	有 哪家 餐厅 不 在 中 城西区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
什么 餐馆 在 西部 中 城	市中心 西有 哪些 餐馆	中 城西区 有 哪些 餐馆 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
西部 市中心 或 切尔西 的 一家 餐馆	西城 或 切尔西 的 餐馆	在 西城 或 切尔西 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) ( call SW.concat en.neighborhood.midtown_west en.neighborhood.chelsea ) ) )
哪些 餐厅 与 泰国 咖啡馆 的 星级 相同	哪家 餐馆 的 星级 和 泰国 咖啡馆 一样	哪些 餐厅 的 星级 和 泰国 咖啡 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) )
餐厅 ， 其 菜肴 是 泰国 ， 并 有 送货	泰国 料理 的 餐厅	这家 餐馆 的 菜式 是 泰国菜 ， 还有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
泰国 餐厅 与 服务员	有 服务员 的 泰国 餐厅	有 服务员 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string waiter ) ) )
有 价格 评级 的 泰国菜 餐厅	有 价格 等级 的 泰国 料理 餐厅	泰国菜 餐厅 ， 有 一个 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪些 餐厅 最多 有 两种 美食	哪家 餐馆 最多 有 两道菜	哪些 餐厅 最多 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
什么 餐厅 有 2 美元 的 标志	什么 餐馆 的 招牌 标价 是 2 美元	什么 餐厅 有 2 美元 标志 的 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
位于 市中心 西部 的 餐厅 提供 午餐	位于 市中心 西 的 餐厅 ， 提供 午餐	中 城 附近 的 西餐厅 ， 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string meals ) ( string = ) en.food.lunch ) )
外卖 的 餐厅 ， 对 团体 有益	有 外卖 的 餐馆 ， 对 团体 有益	有 外卖 的 餐厅 ， 对 团体 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
哪家 餐厅 有 2 分钟 的 价格 和 外卖 服务	哪家 餐馆 有 2 美元 的 价格 评定 和 外卖 服务	哪家 餐厅 有 2 美元 的 招牌 价格 和 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
供应 午餐 和 外卖 的 餐厅	提供 午餐 和 外卖 的 餐馆	提供 午餐 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
什么 餐厅 在 多个 社区	什么 餐馆 在 多个 街区	什么 餐厅 在 多个 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string >= ) ( number 2 ) ) )
接受 预订 的 餐厅	接受 预订 的 餐厅	接受 预订 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
价格 最多为 2 美元 符号 的 餐厅	价格 等级 不 超过 2 美元 的 餐厅	餐厅 的 价格 评级 最多 是 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 设有 户外 用餐 区	带 室外 用餐 区 的 餐厅	设有 户外 用餐 区 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) )
儿童 友好 的 餐厅 接受 预订	儿童 友好 型 餐厅 ， 接受 预订	儿童 友好 的 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string kids ) ) )
酒店 提供 送货 服务 ， 价格 为 2 美元 的 标志	提供 送货 服务 并 有 2 美元 标牌 的 酒店	酒店 提供 送货 服务 ， 并 有 2 美元 的 价格 评级 标志	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪家 餐厅 提供 午餐	哪家 餐馆 提供 午餐	哪家 餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 需要 预订 ， 并 有 服务员 服务	哪家 餐厅 接受 预订 并 提供 服务生 服务	哪家 餐厅 接受 预订 并 提供 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string waiter ) ) )
什么 餐厅 提供 预订	哪家 餐厅 提供 预订	哪家 餐厅 提供 预订 服务 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
什么 餐厅 供应 类似 泰国 咖啡馆 的 餐点	哪家 餐馆 提供 的 饭菜 与 泰国 咖啡馆 的 相似	什么 餐厅 供应 类似 的 一餐 ， 发现 在 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) en.restaurant.thai_cafe ) ) )
将 餐厅 命名 为 比 泰国 咖啡馆 更 低 的 价格	说出 一家 价格比 泰国 咖啡馆 低 的 餐馆	说出 一家 比 泰国 咖啡馆 价格 更 低 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 提供 与 泰国 咖啡馆 相同 的 美食	餐厅 提供 与 泰国 咖啡馆 相同 的 菜肴	餐厅 提供 与 泰国 咖啡馆 相同 的 美食	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) ) )
哪些 餐厅 需要 预订 并 接受 信用卡	哪些 餐厅 接受 预订 和 信用卡	哪些 餐厅 接受 预订 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
中等 预订 餐厅	中餐馆	中等 价位 的 预订 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string reserve ) ) )
餐厅 ， 适合 团体 用餐 ， 并 接受 信用卡	适合 集体 用餐 并 接受 信用卡 的 餐厅	适合 团体 用餐 和 接受 信用卡 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string credit ) ) )
价格 为 2 美元 的 餐厅	价格 为 2 美元 的 餐厅	价格 等级 为 2 美元 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
最低 价格 的 泰国 咖啡馆	泰国 咖啡馆 最低 价格	泰国 咖啡 ， 价格 最低	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 提供 午餐 和 接受 信用卡	提供 午餐 和 接受 信用卡 的 餐厅	提供 午餐 和 接受 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
不到 两家 餐厅 供应 什么 菜	不到 两个 餐馆 供应 什么 菜	不到 两家 的 餐馆 供应 什么 菜	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 评分 为 3 星 ， 需要 预订	星级 评定 为 三星 并 接受 预订 的 餐厅	星级 为 3 星 的 餐厅 ， 需要 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
餐厅 供应 午餐 并 需要 预订	提供 午餐 和 预订 的 餐厅	提供 午餐 并 接受 预订 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
泰国 餐馆 便宜	便宜 的 泰国 餐馆	便宜 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 提供 外卖 和 服务员 服务	提供 外卖 和 服务员 服务 的 餐厅	有 外卖 和 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
为 孩子 们 提供 美食 的 餐厅	为 孩子 们 提供 美食 的 餐馆	为 孩子 们 提供 美食 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
哪家 餐厅 接待 儿童 ， 并 提供 外卖 服务	哪家 餐馆 接待 孩子 并 提供 外卖	哪家 餐厅 接受 儿童 套餐 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string takeout ) ) )
我 可以 从中 城 西餐厅 外卖	我能 从 市中心 的 西餐厅 买 外卖 吗	我 在 中 城西区 哪家 餐厅 可以 买 到 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 设有 户外 座位 ， 并 设有 户外 座位	有 室外 座位 和 室外 座位 的 餐厅	有 户外 座位 和 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string outdoor ) ) )
餐厅 被 评为 3 星级 信用卡	餐馆 信用卡 评级 为 三星	接受 信用卡 的 餐馆 被 评为 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 是 一个 儿童 友好 和 服务员 的 餐厅	哪家 餐馆 对 孩子 友好 ， 有 服务员	什么 餐馆 对 孩子 友好 ， 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string waiter ) ) )
什么 餐厅 有 更 多 的 美食 比 任何 其他	哪家 餐馆 的 菜 比 其他 任何 一家 都 多	什么 餐馆 的 菜 比 其他 的 都 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
哪些 餐馆 有 外卖 ， 价格 为 2 美元 的 标志	哪些 餐厅 有 外卖 和 2 美元 的 标价	哪些 餐馆 有 外卖 和 2 美元 标志 的 价格 等级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
餐厅 设有 户外 座位 ， 可 使用 信用卡	提供 可 接受 信用卡 的 户外 座位 的 餐厅	可 接受 信用卡 的 户外 座位 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string credit ) ) )
什么 餐厅 的 价格 评级 较 低	哪家 餐馆 的 价格 比较 低	哪家 餐厅 的 价格 最低	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
什么 餐厅 是 团体 友好 的 ， 并 采取 信用卡	哪家 餐馆 是 团体 友好 型 的 ， 而且 有 信用卡	什么 餐厅 是 团体 友好 的 ， 并且 使用 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string credit ) ) )
泰国 咖啡馆 附近	泰国 咖啡馆 附近	泰国 咖啡 坊	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
价格 为 2 美元 的 餐厅	2 美元 价格 的 餐厅	2 美元 级别 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
提供 外卖 服务 的 餐厅	提供 外卖 服务 的 餐厅	有 服务员 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
餐厅 至少 有 3 星 评级	至少 有 三星级 的 餐厅	至少 有 3 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
酒店 位于 市中心 西区 ， 设有 户外 休息区	位于 市中心 西区 的 酒店 ， 有 室外 座位 设施	酒店 位于 市中心 西区 ， 设有 户外 座位 设施	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
3 星 评级 的 餐厅 有 服务员	有 服务员 的 3 星级 餐厅	有 服务员 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string waiter ) ) )
不 供应 午餐 的 餐厅	不 提供 午餐 的 餐馆	不 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string ! = ) en.food.lunch ) )
哪家 餐厅 有 3 星级 预订	哪家 三星级 餐厅 有 预订	哪家 三星级 餐厅 可以 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string reserve ) ) )
什么 餐厅 是 儿童 友好 和 外卖	哪些 餐馆 对 孩子 友好 ， 有 外卖	哪些 餐馆 对 孩子 很 友好 ， 而且 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
这是 附近 的 泰国 餐馆	哪家 是 这 附近 的 泰国 餐馆	这 附近 的 泰国 餐厅 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
哪些 社区 有 儿童 友好 的 餐馆	哪些 社区 有 儿童 友好 型 餐厅	什么 社区 有 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
哪个 社区 有 两家 餐厅	哪个 街区 有 两家 餐馆	哪个 街区 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
3 家 或 更 高 价格 的 餐厅	价格 等级 为 3 级 及 以上 的 餐厅	3 级 以上 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
找到 2 美元 的 价格 评级 餐厅 与 交付	找 一家 2 美元 价格 的 餐厅 送货	找 一个 2 美元 的 价格 等级 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
附近 只有 一两家 餐馆	哪个 街区 只有 一两家 餐馆	什么 社区 只有 一两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
有 超过 2 家 餐厅 的 社区	有 两个 以上 餐厅 的 社区	拥有 两家 以上 餐厅 的 社区	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
哪家 餐厅 不 在 市中心 西部	哪家 餐馆 不 在 市中心 西	哪家 餐厅 不 在 中 城西区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
什么 市中心 西餐厅 吃 午饭	什么 市中心 西餐厅 有 午餐	什么 中 城 西餐厅 有 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
供应 餐点 的 餐厅	提供 饭菜 的 餐馆	提供 膳食 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
一个 集体 友好 的 餐厅	对 团体 友好 的 餐馆	团体 友好 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string groups ) ) )
什么 是 一个 餐厅 ， 有利于 团体 和 服务员 服务	什么样 的 餐馆 适合 团体 ， 有 服务生 服务	什么 是 对 团体 有 好处 而且 有 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string waiter ) ) )
列出 中 城西区 附近 的 所有 餐厅	列出 市中心 西区 附近 的 所有 餐馆	列出 所有 中 城西区 附近 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 两家 餐厅 的 菜肴	两个 餐馆 的 菜式 是 什么	两家 餐厅 的 菜系 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
3stars 餐厅 需要 预订	有 30 个 座位 的 餐厅 可以 预订	3 星级 餐厅 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪些 餐厅 的 价格 最多为 两三个 美元 符号	哪家 餐厅 的 价格 等级 最多为 2 美元 或 3 美元	哪些 餐厅 的 价格 评级 最多 是 两到 三 美元	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
哪家 餐厅 适合 一群 人 ， 还 供应 午餐	哪家 餐馆 适合 一群 人 ， 而且 还 供应 午餐	哪家 餐厅 适合 一群 人 同时 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string meals ) ( string = ) en.food.lunch ) )
列出 邻近 的 3 星级 餐厅	按 社区 列出 三星级 餐厅	按 社区 列出 3 家 星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
有 服务员 服务 和 外卖 设施 的 酒店	有 服务员 服务 和 外卖 设施 的 酒店	有 服务员 服务 和 外卖 设施 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
什么 餐厅 至少 提供 两种 美食	哪家 餐馆 至少 供应 两种 菜肴	什么 餐厅 至少 有 两种 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string >= ) ( number 2 ) ) )
哪些 餐厅 的 星级 评分 小于 3 星 或 5 星	哪些 餐厅 的 星级 低于 3 或 5 星级	哪些 餐厅 的 星级 低于 3 星 或 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
可以 提前 预订 并 提供 午餐 的 酒店	可 提前 预订 并 提供 午餐 的 酒店	可以 提前 预订 并 提供 午餐 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string meals ) ( string = ) en.food.lunch ) )
所有 餐厅 的 平均价格 是 多少 ？	所有 餐馆 的 平均价格 是 多少	所有 餐厅 的 平均价格 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
什么 餐厅 提供 预订 ， 对 孩子 们 有 好处	哪家 餐厅 提供 预订 ， 适合 孩子 们	什么 餐厅 提供 预订 ， 是 好 的 孩子	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string reserve ) ) )
需要 预订 且 对 团体 有益 的 餐厅	接受 预订 的 餐厅 ， 适合 团体	餐厅 接受 预订 ， 这 对 团体 是 有 好处 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
附近 的 餐厅 ， 提供 户外 座位 设施	提供 户外 座位 设施 的 邻里 餐厅	附近 的 餐厅 ， 提供 户外 座位 设施	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
在 附近 找到 一家 餐馆	在 附近 找家 餐馆	在 附近 找 一家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string < ) ( number 2 ) ) )
餐厅 可以 提前 预订 ， 适合 团体 用餐	可 提前 预定 ， 适合 集体 用餐 的 餐厅	可以 提前 预订 并 适合 集体 用餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string groups ) ) )
什么 餐厅 有 服务员 服务 ， 并 提供 午餐	哪家 餐馆 有 侍者 服务 和 午餐	什么 餐厅 有 服务员 服务 和 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 餐厅 包含 最多 的 美食	哪家 餐馆 的 菜肴 最 多	哪家 餐厅 的 菜式 最多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
价格 为 2 美元 标志 且 星级 评分 为 3 星 的 餐厅	价格 为 2 美元 ， 星级 为 3 星级 的 餐厅	餐厅 的 价格 等级 是 2 美元 ， 星级 是 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
泰国 餐厅 ， 有益于 团体 用餐	适合 集体 用餐 的 泰国 餐厅	泰国 餐厅 ， 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string groups ) ) )
什么 餐厅 的 价格 为 2 美元 的 标志	哪家 餐馆 的 标价 是 2 美元	哪家 餐厅 的 价格 评级 是 2 美元	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 是 泰国 咖啡馆 不 供应 的 一餐	泰国 咖啡馆 不 供应 什么 菜	什么 是 泰国 咖啡馆 不 提供 的 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string ! = ) en.restaurant.thai_cafe ) )
哪家 餐厅 的 价格 不 高于 泰国 咖啡馆	哪家 餐厅 的 价格 等级 不 高于 泰国 咖啡馆	哪家 餐厅 的 价格 评级 不 高于 泰国 咖啡	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
餐厅 类似 于 西部 市中心 的 餐馆	类似 于 市中心 西餐厅 的 餐厅	类似 中 城 西部 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
哪些 餐厅 的 价格 与 泰国 咖啡厅 相同	哪家 餐馆 的 价格 和 泰国 咖啡馆 一样	哪些 餐厅 的 价格 评级 与 泰国 咖啡 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) )
什么 是 4 星级 或 更好 的 餐厅	四星级 以上 的 饭店 有 哪些	哪些 餐厅 是 四星级 以上 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 3 en.star ) ) ) )
什么 餐厅 外卖 和 午餐	哪家 餐馆 有 外卖 和 午餐	什么 餐厅 有 外卖 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
预订 餐厅 提供 什么样 的 饭菜	接受 预订 的 餐馆 供应 什么样 的 饭菜	接受 预订 的 餐馆 供应 什么样 的 饭菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
餐厅 有 2 或 3 个 价格 评级	价格 等级 为 2 或 3 的 餐厅	2 级 或 3 级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
什么 是 酒店 的 价格 评级	这家 旅馆 的 价格 是 多少	这家 旅馆 的 房价 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ) ) )
是 泰国 咖啡馆 或 比萨 店 juno 的 附近 的 邻里	泰国 咖啡馆 或 比萨 店 附近 的 社区	是 泰国 咖啡馆 或 披萨 店 的 邻居	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
什么 餐厅 为 团体 提供 美食 和 外卖	什么 餐馆 为 团体 提供 好 的 食物 和 外卖	什么样 的 餐厅 可以 为 团体 提供 美味 的 食物 和 外卖 呢	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
一家 三星级 餐厅 ， 有 团体 空间	三星级 餐厅 ， 可 供 团体 用餐	一家 三星级 餐厅 ， 有供 团体 用餐 的 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string groups ) ) )
哪些 餐厅 供应 午餐 或 晚餐	哪家 餐馆 供应 午餐 或 晚餐	哪些 餐厅 供应 午餐 或 晚餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
附近 的 餐馆 有 外卖	哪家 附近 的 餐馆 有 外卖	附近 哪家 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 餐厅 的 价格比 泰国 咖啡馆 低	哪家 餐馆 的 价格比 泰国 咖啡馆 低	还有 哪家 餐厅 的 价格 评级 比 泰国 咖啡馆 还 低 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 是 一些 供应 午餐 的 三星级 餐厅	有 哪些 提供 午餐 的 三星级 餐厅	有 哪些 三星级 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪个 连锁 餐厅 在 最少 的 社区	哪家 连锁 餐厅 在 最少 的 社区	哪个 连锁 餐厅 在 最少 的 社区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
餐厅 ， 至少 3 星级 和 儿童 友好	至少 是 三星级 的 儿童 友好 型 餐厅	餐厅 至少 是 3 星级 和 儿童 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
价格 为 2 美元 标志 且 有 服务员 服务 的 餐厅	价格 为 2 美元 的 餐厅 ， 有 服务生 服务	餐厅 的 价格 等级 是 2 美元 的 标志 ， 并 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string waiter ) ) )
酒店 的 价格 等级 超过 2 美元 或 3 美元 的 标志	标价 超过 2 美元 或 3 美元 的 酒店	酒店 的 价格 等级 超过 2 美元 或 3 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 3 星级 餐厅 有 送货	哪家 三星级 餐厅 有 送货	什么 三星级 餐厅 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
哪个 社区 包含 提供 午餐 的 餐馆	哪个 街区 有 提供 午餐 的 餐馆	什么 社区 有 提供 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
泰国 餐厅 ， 提供 服务员 服务	提供 服务员 服务 的 泰国 餐厅	提供 服务员 服务 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪个 社区 拥有 最少 的 餐馆	哪个 社区 的 餐馆 最少	哪个 社区 的 餐馆 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string neighborhood ) ) )
餐厅 供应 午餐 并 接受 信用卡	提供 午餐 和 接受 信用卡 的 餐厅	餐厅 提供 午餐 和 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
什么 餐厅 提供 ， 对 孩子 们 有 好处	哪家 餐馆 对 孩子 有 好处	什么样 的 餐厅 对 孩子 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string kids ) ) )
哪些 餐厅 适合 团体 ， 也 适合 送餐	哪些 餐厅 适合 团体 用餐 ， 也 提供	哪些 餐厅 既 适合 团体 用餐 ， 又 可以 送餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string groups ) ) )
价格 为 2 或 3 美元 的 餐厅	2 美元 或 3 美元 的 餐厅	餐厅 与 2 或 3 美元 的 价格 评级	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) )
有 外卖 的 餐厅 需要 预约	有 外卖 和 预订 的 餐厅	有 外卖 和 接受 预订 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
泰国 餐厅 的 星级 评分 最高	哪家 泰国 餐馆 的 星级 最高	哪家 泰国 餐馆 的 星级 最高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪家 餐厅 有 外卖 服务	哪家 餐馆 有 外卖 服务	哪家 餐厅 有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string takeout ) ) )
星级 评分 最低 的 餐厅	星级 最低 的 餐厅	星级 最低 的 餐厅	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
带 送餐 服务 的 餐厅 有 什么 用餐	有 送货 服务 的 餐馆 有 什么 菜	有 外卖 服务 的 餐厅 有 什么 餐点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
列出 提供 外卖 的 餐厅 的 美食 类型	列出 提供 外卖 的 餐厅 的 菜肴 类型	列出 提供 外卖 的 餐馆 的 菜肴 种类	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
餐厅 有 两道菜	有 两种 菜系 的 餐馆	有 两种 菜系 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string > ) ( number 2 ) ) )
被 评为 3 星级 的 儿童 友好 餐厅	儿童 友好 型 餐厅 被 评为 三星级	被 评为 三星级 的 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
找到 一家 适合 团体 用餐 的 3 星级 餐厅	找 一家 适合 团体 的 三星级 餐厅	找 一家 适合 团体 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
什么 菜 提供 外卖	什么 菜 有 外卖	什么 菜 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
外卖 餐厅 有 服务员	有 外卖 服务生 的 餐馆	有 服务员 的 外卖 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
有 服务员 服务 的 餐厅 ， 对 孩子 们 有 好处	有 服务员 服务 的 餐馆 ， 对 孩子 们 很 好	有 服务员 服务 的 餐厅 ， 这 对 孩子 们 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string kids ) ) )
什么 餐厅 提供 送货 和 预订	哪家 餐厅 提供 送货 和 预订	什么 餐厅 提供 送货 和 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string reserve ) ) )
餐厅 有 户外 座位 ， 并 有 服务员 服务	有 室外 座位 和 服务员 服务 的 餐厅	有 户外 座位 和 服务员 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string waiter ) ) )
泰国 或 意大利 餐馆	泰国 或 意大利 餐厅	泰国 或 意大利 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.concat en.cuisine.thai en.cuisine.italian ) ) )
有 外卖 的 餐厅 ， 其 菜肴 是 泰国菜	有 外卖 和 泰国菜 的 餐馆	有 外卖 和 泰国菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 最多 有 两种 美食	最多 有 两道菜 的 餐馆	餐厅 最多 有 两种 菜肴	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
找 一家 比 泰国 咖啡馆 少 星级 的 餐厅	找 一家 星级 低于 泰国 咖啡馆 的 餐厅	找 一家 比 泰国 咖啡馆 星级 还 低 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
泰国 咖啡馆 在 哪个 街区	泰国 咖啡馆 在 哪个 街区	泰国 咖啡馆 就 在 附近	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string neighborhood ) ) )
最低 价格 为 2 美元 标志 的 酒店	最低 价格 为 2 美元 的 酒店	酒店 最低 价格 为 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) ) ) )
什么 餐厅 提供 午餐 和 外卖	什么 餐馆 提供 午餐 和 外卖	什么 餐厅 提供 午餐 和 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 不仅 供应 午餐 ， 还 提供 送餐 服务	哪家 餐馆 不仅 供应 午餐 而且 还 提供 送货 服务	哪家 餐厅 不仅 供应 午餐 还 送货上门	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
餐厅 供应 午餐	餐厅 午餐 开放	餐厅 开放 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 设有 户外 座位 和 外卖	有 室外 座位 和 外卖 的 餐厅	有 户外 座位 和 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string takeout ) ) )
带 外卖 的 餐厅 ， 对 孩子 友好	带 外卖 的 餐馆 对 孩子 很 友好	带 外卖 的 餐馆 对 孩子 们 很 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string kids ) ) )
什么 好 的 团体 餐厅 送货	什么 好 的 集体 餐厅 有 送货	好 棒 的 团体 餐厅 都 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
找 一家 适合 团体 的 泰国 餐厅	找 一家 适合 团体 的 泰国 餐馆	找 一家 适合 团体 用餐 的 泰国 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 接受 信用卡 和 预订	哪些 餐厅 接受 信用卡 和 预订	哪些 餐厅 接受 信用卡 和 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string credit ) ) )
中 城西区 也 交付	市中心 西区 也 提供	中 城西区 的 邻居 也 送货上门	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
哪些 餐厅 有 户外 用餐 区 接受 预订	哪些 有 室外 用餐 区 的 餐厅 接受 预订	哪些 有 户外 用餐 区 的 餐厅 可以 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
餐厅 的 菜肴 是 泰国 咖啡馆 的 美食	以 泰国 咖啡馆 的 菜肴 为 特色 的 餐厅	餐厅 的 菜 是 菜 ， 那 是 泰国 咖啡馆 的 菜	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
餐厅 ， 其 菜肴 是 泰国菜 ， 其 菜肴 是 泰国菜	泰国菜 和 泰国菜 的 餐馆	这家 餐馆 的 菜式 是 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 需要 预订 并 提供 外卖	哪家 餐厅 接受 预订 并 提供 外卖	什么 餐厅 接受 预订 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
餐厅 价格 最高	价格 最高 的 餐厅	价格 等级 最高 的 餐厅	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
所有 市中心 西餐厅 的 美食 是 什么 ？	市中心 所有 的 西餐厅 都 有 什么 菜 ？	中 城 所有 西餐厅 的 菜系 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 泰国 餐馆 对 孩子 友好	什么 泰国 餐馆 对 孩子 友好	什么样 的 泰国 餐馆 对 孩子 都 很 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string kids ) ) )
哪些 餐厅 提供 午餐 并 接受 预订	哪些 餐厅 提供 午餐 并 接受 预订	哪些 餐厅 提供 午餐 并 接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string reserve ) ) )
餐厅 有 多种 美食	多 菜系 餐厅	有 多种 菜系 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string cuisine ) ) )
没有 的 酒店	没有	那个 酒店 没有	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
有 交付 的 餐厅 ， 对 团体 有益	有 送货 服务 的 餐厅 ， 适合 团体 用餐	有 外卖 的 餐厅 ， 对 团体 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string groups ) ) )
泰国 咖啡馆 的 美食 是 什么 ？	泰国 咖啡馆 的 菜肴 是 什么	泰国 咖啡馆 的 烹饪 风格 是 什么	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string cuisine ) ) )
餐厅 有 送货 和 午餐	提供 送货 和 午餐 的 餐厅	有 外卖 和 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
什么 团体 餐厅 采取 信用卡	哪家 集团 餐厅 收 信用卡	什么 团体 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
找到 一家 餐厅 ， 对于 价格 为 2 美元 的 团体 有用	找 一家 适合 2 美元 价格 的 餐厅	找 一家 适合 2 美元 价位 的 团体 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string groups ) ) )
什么 餐厅 提供 交付 和 户外 座位	哪家 餐厅 提供 送货 和 户外 座位	什么 餐厅 提供 外卖 和 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string delivery ) ) )
餐厅 数量 最少 的 餐厅	菜肴 最少 的 餐馆	菜式 最少 的 餐馆	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( string cuisine ) ) )
什么 市中心 西餐厅 提供 午餐	市中心 西餐厅 提供 什么 午餐	什么 中 城 西餐厅 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
餐厅 提供 ， 适合 大型 聚会	为 大型 聚会 提供 便利 的 餐厅	提供 外卖 ， 适合 大型 聚会 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string delivery ) ) )
位于 市中心 西区 的 餐厅 有 服务员	市中心 西区 有 服务员 的 餐馆	中 城西区 的 餐馆 有 服务员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 社区 有 餐厅 提供 外卖	哪些 社区 有 提供 外卖 的 餐馆	哪个 社区 有 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
什么 是 一些 接受 信用卡 的 儿童 友好 餐厅	有 哪些 儿童 友好 型 餐馆 接受 信用卡	有 哪些 接受 信用卡 的 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
餐厅 有 2 或 3 美元 的 标志 价格 评级	标价 2 美元 或 3 美元 的 餐厅	2 美元 或 3 美元 标识 价格 等级 的 餐馆	( call SW.listValue ( call SW.concat ( number 2 en.dollar_sign ) ( number 3 en.dollar_sign ) ) )
价格 在 2 美元 以上 的 酒店	价格 等级 或 超过 2 美元 的 酒店	价格 等级 超过 2 美元 的 酒店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string > ) ( call SW.ensureNumericEntity ( number 2 en.dollar_sign ) ) ) )
餐厅 供应 两餐	两餐 开放 的 餐馆	开 两餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
什么 餐厅 位于 市中心 西部	市中心 西有 哪些 餐馆	中 城西区 有 哪些 餐馆 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
什么 是 餐厅 的 餐点 ， 对 孩子 们 有 好处	餐馆 的 饭菜 对 孩子 们 有 什么 好处	餐厅 里 的 一顿饭 对 孩子 们 有 什么 好处	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ) )
什么 餐厅 有 两种 不同 的 美食	哪家 餐馆 有 两种 不同 的 菜系	什么 餐厅 有 两种 不同 的 菜系	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
泰国 餐厅 的 星级 评分 为 3 星级	哪家 泰国 餐馆 的 星级 是 三星	什么 泰国 餐馆 的 星级 是 3 星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
餐厅 提供 并 设有 户外 休息区	提供 户外 座位 的 餐厅	餐厅 ， 提供 并 有 一个 户外 座位 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string outdoor ) ) )
这家 餐厅 的 星级 评分 最高	星级 最高 的 餐馆	星级 最高 的 餐馆	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
什么 餐厅 在 菜单 上 至少 有 两餐	什么 餐馆 的 菜单 上 至少 有 两顿 饭	哪些 餐厅 的 菜单 上 至少 有 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
泰国 餐厅 有 送货	泰国 餐馆 有 送货	这家 泰国 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
什么 餐厅 提供 户外 座位 和 预订	哪些 餐厅 提供 户外 座位 和 预订	什么 餐厅 提供 户外 座位 和 采取 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string outdoor ) ) )
一个 中等 价格 的 送 餐厅	中等 价位 的 送货 餐厅	中等 价位 的 外卖 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string delivery ) ) )
位于 市中心 西区 的 餐厅 ， 适合 团体 用餐	市中心 西区 适合 集体 用餐 的 餐厅	中 城西区 的 一家 餐厅 ， 很 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
在 附近 的 泰国 咖啡馆	附近 的 一家 泰国 咖啡馆	附近 有家 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) ( call SW.reverse ( string neighborhood ) ) ( string = ) en.restaurant.thai_cafe ) )
什么 餐厅 的 星级 与 泰国 咖啡馆 相同	哪家 餐馆 的 星级 和 泰国 咖啡馆 一样	有 哪家 餐厅 的 星级 和 泰式 咖啡馆 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
哪些 餐厅 有 户外 座位 ， 团体 友好	哪些 餐厅 有 室外 座位 ， 而且 对 团体 友好 ？	哪些 餐厅 有 户外 座位 ? 哪些 餐厅 对 团体 比较 友好	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string outdoor ) ) )
哪些 社区 拥有 最多 3 星 评级 的 餐厅	哪 一个 社区 有 最 三星级 的 餐馆	哪个 社区 拥有 最多 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ) )
什么 餐厅 提供 送货 和 午餐	什么 餐馆 提供 送货 和 午餐	什么 餐厅 提供 外卖 和 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
哪家 餐厅 评价 最 贵	哪家 餐馆 最 贵	哪家 餐厅 被 认为 是 最贵 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string price_rating ) ) ) )
什么 餐厅 需要 预订	什么 餐馆 接受 预订	什么 餐厅 接受 预订 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) )
餐厅 与 交付 具有 2 美元 的 标志 评级	提供 2 美元 标牌 等级 的 餐厅	餐厅 与 外卖 ， 有 2 美元 符号 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
该 地区 拥有 最 多 位置 的 餐馆	本 地区 位置 最多 的 餐厅	拥有 最 多 餐厅 的 地区	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
什么 是 泰国 咖啡馆 的 星级 评分	泰国 咖啡馆 的 星级 是 多少	泰国 咖啡 的 星级 是 多少	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) )
餐厅 不到 一餐	不到 一顿饭 的 餐馆	供应 少于 一餐 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
这家 餐厅 的 星级 评分 为 3 星级 ， 其 美食 是 泰国菜	星级 评定 为 三星 的 泰国 餐厅	餐厅 星级 为 3 星 ， 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
餐厅 提供 午餐 ， 可以 提供	提供 午餐 的 餐厅	提供 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string meals ) ( string = ) en.food.lunch ) )
供应 泰式 餐 的 餐厅	泰国菜 餐厅	供应 泰国菜 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ) )
一个 三星级 的 儿童 友好 餐厅	三星级 儿童 友好 餐厅	三星 儿童 友好 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string kids ) ) )
我 可以 在 哪家 餐厅 预订 并 从中 获取 送货 服务	我 可以 从 哪家 餐馆 预订 和 送货	我 可以 在 哪家 餐厅 预订 和 送货 呢	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ( string reserve ) ) )
有 30 到 40 条 评论 的 餐厅	有 30 到 40 条 评论 的 餐馆	餐厅 有 30 到 40 个 评论	( call SW.listValue ( call SW.concat ( number 30 en.review ) ( number 40 en.review ) ) )
餐厅 不 超过 两种 美食	不 超过 两道菜 的 餐馆	只有 两种 以上 菜系 的 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string <= ) ( number 2 ) ) )
有 外卖 的 餐馆 ， 对 团体 有益	有 外卖 和 适合 团体 的 餐馆	有 外卖 和 适合 团体 用餐 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
有 外卖 的 餐厅 ， 有 户外 座位	有 外卖 和 户外 座位 的 餐馆	有 外卖 和 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string outdoor ) ) )
菜肴 的 美食 ， 价格 为 2 美元 的 标志	菜系 指 价格 为 2 美元 的 餐厅 菜系	价格 等级 为 2 美元 的 餐馆 的 菜肴	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ) )
泰国 餐厅 提供 午餐	什么 泰国 餐馆 提供 午餐	什么 泰国 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 泰国 餐馆 提供 服务员 服务	什么 泰国 餐馆 提供 服务生 服务	多么 棒 的 泰国 餐馆 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
哪些 泰国 餐厅 有 户外 座位	哪些 泰国 餐厅 有 户外 座位	哪些 泰国 餐厅 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
泰国 餐厅 ， 可 选 户外 座位	泰国 餐厅 ， 可 选择 室外 座位	泰式 餐厅 ， 可 选择 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string outdoor ) ) )
哪家 酒店 吸引 孩子 并 接受 信用卡	哪家 酒店 吸引 孩子 并 接受 信用卡	哪家 酒店 能 吸引 孩子 并 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string credit ) ) )
餐厅 ， 信用卡 和 交付	有 信用卡 和 送货 服务 的 餐馆	接受 信用卡 并 有 送货 服务 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string delivery ) ) )
哪些 泰国 餐厅 需要 预订	哪些 泰国 餐馆 接受 预订	哪些 泰国 餐厅 可以 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
预订 的 餐厅 和 户外 座位	提供 预订 和 户外 座位 的 餐厅	接受 预定 并 有 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string outdoor ) ) )
提供 外卖 的 餐厅 ， 价格 为 2 美元 的 标志	提供 外卖 和 2 美元 标价 的 餐厅	提供 外卖 和 2 美元 标价 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string takeout ) ) )
哪家 餐厅 接受 信用卡	哪家 餐馆 接受 信用卡	哪家 餐厅 接受 信用卡	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string credit ) ) )
有 外卖 和 信用卡 的 餐厅	有 外卖 和 信用卡 的 餐馆	有 外卖 和 信用卡 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string credit ) ) )
哪家 餐厅 有 服务员 和 外卖 服务	哪家 餐馆 有 服务员 和 外卖 服务	哪家 餐厅 有 服务员 和 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string waiter ) ) )
价格 为 2 的 家庭 友好 型 餐厅	家庭 友好 型 餐厅 ， 价格 等级 为 2	家庭 友好 型 餐厅 ， 价格 等级 为 2	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) ( string kids ) ) )
什么 餐厅 适合 团体 和 外卖	哪家 餐馆 适合 团体 和 外卖	哪家 餐厅 适合 团体 用餐 ， 还 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
什么样 的 美食 至少 有 两家 餐厅	哪 种菜 至少 有 两家 餐馆	什么样 的 菜系 至少 有 两家 餐厅	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
西部 市中心 的 餐厅 评为 3 星级	中西部 的 餐馆 评为 三星级	中 城西区 的 餐厅 被 评为 三星级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 餐厅 有 户外 用餐	什么 餐馆 有 户外 用餐	什么 餐厅 有 户外 用餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) )
餐厅 供应 午餐 和 晚餐	提供 午餐 和 晚餐 的 餐厅	午餐 和 晚餐 开放 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
泰国 咖啡馆 的 价格 评级	泰国 咖啡厅 价格 评级	泰国 咖啡 的 价格 等级	( call SW.listValue ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) )
什么 餐厅 适合 午餐 或 晚餐	什么 餐馆 适合 午餐 或 晚餐	什么 餐厅 是 午餐 或 晚餐 的 好去处	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) ( call SW.concat en.food.lunch en.food.dinner ) ) )
适合 儿童 口味 的 酒店 ， 并 提供 送货 服务	适合 儿童 口味 并 提供 送货 服务 的 酒店	适合 孩子 的 口味 和 提供 送货 服务 的 酒店	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string delivery ) ) )
哪些 餐厅 的 价格 等级 为 两 美元 符号	哪些 餐厅 的 价格 等级 为 2 美元	哪些 餐厅 的 价格 等级 是 2 美元 的 标志	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪个 社区 至少 包含 两家 餐馆	哪个 街区 至少 有 两家 餐馆	哪个 社区 至少 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
在 大多数 社区 中 找到 哪家 连锁 餐厅	哪家 连锁 餐厅 在 大多数 社区 都 有	哪个 连锁 餐厅 在 附近 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string neighborhood ) ) )
餐厅 设有 户外 用餐 区 ， 供应 午餐	提供 午餐 的 室外 餐厅	餐厅 与 户外 用餐 区 ， 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string outdoor ) ) )
外卖 的 餐厅 适合 举办 大型 派对	有 外卖 的 餐馆 ， 适合 大型 聚会	有 外卖 的 餐馆 适合 大型 聚会	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string takeout ) ) )
什么 餐厅 需要 团体 预订	什么 餐馆 接受 团体 预订	什么 餐厅 接受 团体 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ( string reserve ) ) )
泰国 咖啡馆 ， 供应 比萨 店	提供 比萨 店 的 泰国 咖啡馆	供应 比萨饼 的 泰国 咖啡馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
比 泰国 咖啡馆 便宜 的 餐厅	比 泰国 咖啡馆 便宜 的 餐馆	比 泰国 咖啡馆 便宜 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string price_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string price_rating ) ) ) ) )
什么 餐馆 不 在 市中心 西部	什么 餐馆 不 在 市中心 西	中 城西区 有 什么 餐馆 不是 这样 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string ! = ) en.neighborhood.midtown_west ) )
一个 有 两家 餐馆 的 社区	有 两家 餐馆 的 街区	附近 有 两家 餐馆	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
附近 有 哪些 街区 是 最 多 餐厅 的 所在地	哪个 街区 是 大多数 餐馆 的 家	哪个 社区 的 餐馆 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
是 有 交货 的 餐厅 的 附近 的 附近	附近 有 送货 的 餐馆	街坊 是 指有 外卖 的 餐馆 的 街坊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string delivery ) ) ) )
什么 餐厅 需要 预订 ， 并 有 户外 座位	哪家 餐厅 有 预订 和 户外 座位	什么 餐厅 接受 预订 并 有 户外 座位	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ( string reserve ) ) )
餐厅 有 户外 座位	有 户外 座位 的 餐厅	有 户外 座位 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string outdoor ) ) ) )
市中心 西餐厅 有 2 美元 的 标志 价格 评级	市中心 西餐厅 2 美元 标牌 价格 评级	中 城 西餐厅 2 美元 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
哪些 餐厅 至少 供应 两餐	哪家 餐馆 至少 供应 两顿 饭	哪些 餐厅 提供 至少 两餐	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
接受 预订	接受 预订	接受 预订	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string reserve ) ) )
西部 中 城 哪家 餐厅 有 服务员 服务	市中心 西区 哪家 餐馆 有 服务员 服务	中 城西区 哪家 餐厅 有 服务生 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
西区 中心 的 哪家 餐厅 有 服务员 服务	中西部 的 哪家 餐馆 有 服务员 服务	中 城西区 哪家 餐馆 有 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
哪些 餐厅 被 评为 3 或 5 星	哪些 餐厅 被 评为 三星级 或 五星级	哪些 餐厅 被 评为 3 星 或 5 星	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) )
哪些 社区 都 有 适合 大型 聚会 的 餐厅	哪些 社区 有 适合 大型 聚会 的 餐厅	什么样 的 社区 有 适合 大型 聚会 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string groups ) ) ) )
什么 餐厅 有 泰国菜	哪家 餐馆 有 泰国菜	什么 餐厅 有 泰国菜	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string cuisine ) ( string = ) en.cuisine.thai ) )
什么 餐厅 提供 与 泰国 咖啡馆 相同 的 美食	哪些 餐厅 提供 与 泰国 咖啡馆 相同 的 菜肴	有 什么 餐厅 提供 和 泰国 咖啡馆 一样 的 美食 呢	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) en.restaurant.thai_cafe ) ) )
接受 预订 并 提供 外卖 的 餐厅	接受 预订 并 提供 外卖 的 餐厅	接受 预订 并 提供 外卖 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string reserve ) ) )
什么 餐厅 有 外卖 和 服务员 服务	哪家 餐馆 有 外卖 和 服务生 服务	什么 餐厅 有 外卖 和 服务员 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string waiter ) ) ( string takeout ) ) )
你 可以 在 餐厅 吃点 什么 餐	你 能 在 餐馆 吃 什么 外卖	你 在 这家 餐馆 能 买 到 什么 外卖 餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ( call SW.reverse ( string meals ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ) )
餐厅 拥有 最 多 选择	选择 最多 的 餐厅	选择 最多 的 餐厅	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string max ) ( string meals ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
西郊 中心 的 餐馆 是 哪个 社区	市中心 西区 的 餐馆 在 哪个 街区	中 城西区 的 餐馆 在 哪个 街区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ) )
餐厅 提供 午餐 ， 并 有 三星 评级	提供 午餐 和 三星级 评级 的 餐厅	餐厅 提供 午餐 ， 并 有 一个 三星级 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 评为 3 星级 ， 2 美元 符号 价格 评级	餐厅 以 2 美元 的 标示 价格 评定 三星级	餐厅 被 评为 3 星级 ， 2 美元 的 标志 价格 评级	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string price_rating ) ( string = ) ( number 2 en.dollar_sign ) ) )
什么 餐厅 需要 预订 并 提供 外卖	哪些 餐厅 接受 预订 并 提供 外卖	哪些 餐馆 接受 预订 并 提供 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ( string takeout ) ) )
什么 泰国 餐厅 有 送货	哪家 泰国 餐馆 有 送货	什么 泰国 餐馆 有 外卖	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string delivery ) ) )
哪个 街区 的 餐馆 数量 最少	哪个 街区 的 餐馆 最少	哪个 社区 的 餐馆 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string neighborhood ) ) ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ) )
什么 餐厅 采取 信用卡 ， 对 团体 有益	哪家 餐馆 收 信用卡 ， 对 团体 有 好处	什么 餐厅 接受 信用卡 ， 对 团体 有益	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string credit ) ) ( string groups ) ) )
西区 中心 的 哪家 餐厅 对 团体 有益	市中心 西区 的 哪家 餐馆 适合 团体 用餐	中 城西区 哪家 餐厅 适合 集体 用餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string groups ) ) )
什么 餐厅 没有 2 美元 的 标志	哪家 餐馆 没有 2 美元 的 招牌	什么 餐馆 没有 2 美元 的 招牌	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string price_rating ) ( string ! = ) ( number 2 en.dollar_sign ) ) )
附近 是 市中心 西区 ， 有 送货 的 餐厅	附近 是 市中心 西 的 餐馆 ， 有 送货 服务	附近 是 中城 西部 的 一家 餐馆 ， 有 外卖 服务	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) ( string delivery ) ) )
一家 提供 午餐 和 送货 服务 的 餐厅	提供 午餐 和 送货 服务 的 餐馆	提供 午餐 和 外卖 服务 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string delivery ) ) )
哪家 餐厅 位于 市中心 西部	哪家 餐馆 位于 市中心 西	哪家 餐厅 位于 中 城西区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
什么 是 一个 很 好 的 儿童 餐厅	什么 是 好 的 儿童 餐厅	什么 是 好 的 儿童 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) )
按 餐厅 类型 列出 供应 午餐 的 餐厅	按 菜肴 类型 列出 提供 午餐 的 餐厅	按菜式 列出 供应 午餐 的 餐馆	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
什么 餐厅 的 星级 评分 最低	哪家 餐馆 的 星级 最低	哪家 餐厅 的 星级 最低	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string star_rating ) ) ) )
3 至 5 星 评级 的 餐厅	3 - 5 星级 餐厅	拥有 3 到 5 星 评级 的 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 3 en.star ) ( number 5 en.star ) ) ) ) )
什么 餐厅 提供 午餐	什么 餐馆 提供 午餐	什么 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 非常 友好 ， 设有 户外 用餐 区	对 儿童 友好 的 餐厅 ， 有 一个 户外 用餐 区	餐厅 是 儿童 友好 ， 并 有 一个 户外 用餐 区	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string kids ) ) ( string outdoor ) ) )
什么 餐厅 的 评级 低于 泰国 咖啡馆	泰国 咖啡馆 的 收视率 哪家 餐馆 低	什么 餐厅 的 评级 比 泰国 咖啡馆 还 低	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string star_rating ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.restaurant.thai_cafe ( string star_rating ) ) ) ) )
餐厅 提供 信用卡 并 供应 午餐	这家 餐馆 收 信用卡 ， 供应 午餐	餐厅 接受 信用卡 并 提供 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string credit ) ) )
找到 所有 预订 餐厅 的 食物 类型	找出 所有 预定 餐厅 的 食物 类型	找到 所有 接受 预订 的 餐馆 的 食物 种类	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.cuisine ) ( string ! type ) ) ( call SW.reverse ( string cuisine ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string reserve ) ) ) )
什么 餐厅 外卖 和 午餐 菜单	哪家 餐馆 有 外卖 和 午餐 菜单	什么 餐厅 有 外卖 和 午餐 菜单	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string takeout ) ) )
一个 外卖 餐厅	外卖 餐馆	外卖 餐厅	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) )
外卖 的 餐厅 ， 对 团体 有益	有 外卖 的 餐馆 ， 对 团体 有益	有 外卖 的 餐厅 ， 对 团体 有 好处	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string takeout ) ) ( string groups ) ) )
哪些 餐厅 供应 两餐 以上	哪家 餐馆 提供 两餐 以上 的 服务	哪些 餐厅 提供 两餐 以上 的 服务	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.food ) ( string ! type ) ) ) )
西部 市中心 的 哪些 餐厅 供应 午餐	中西部 有 哪些 餐馆 供应 午餐	中 城西区 有 哪些 餐厅 供应 午餐	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string neighborhood ) ( string = ) en.neighborhood.midtown_west ) )
列出 所有 提供 午餐 的 泰国 餐厅	列出 所有 提供 午餐 的 泰国 餐厅	列出 所有 提供 午餐 的 泰国 餐馆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string cuisine ) ( string = ) en.cuisine.thai ) ( string meals ) ( string = ) en.food.lunch ) )
餐厅 供应 午餐 ， 其 星级 评分 为 3 星级	提供 午餐 的 餐厅 ， 星级 为 三星	餐厅 提供 午餐 ， 星级 为 3 星	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) )
是 供应 午餐 的 餐厅 的 附近 的 附近	附近 是 提供 午餐 的 餐馆 附近	邻区 是 提供 午餐 的 餐馆 的 邻区	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string meals ) ( string = ) en.food.lunch ) ) )
3 星级 餐厅 接受 信用卡	接受 信用卡 的 三星级 餐厅	接受 信用卡 的 三星级 餐厅	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.restaurant ) ( string ! type ) ) ( string star_rating ) ( string = ) ( number 3 en.star ) ) ( string credit ) ) )
什么 邻里 是 泰国 咖啡馆 或 比萨 店 juno   in	泰国 咖啡馆 或 比萨 店 在 哪 附近	在 哪个 街区 有 泰国 咖啡馆 或 披萨 店	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.neighborhood ) ( string ! type ) ) ( call SW.reverse ( string neighborhood ) ) ( string = ) ( call SW.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno ) ) )
爱丽丝 开始 离职 的 员工	爱丽丝 开始 工作 后 离开 的 雇员	爱丽丝 开始 工作 后 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 不 超过 员工 爱丽丝 的 员工	查找 结束 日期 不 大于 员工 alice 的 员工	查找 结束 日期 不 大于 雇员 alice 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
自 2004 年 以来 谁 是 爱丽丝 的 雇主	从 2004 年 起 谁 是 爱丽丝 的 雇主	2004 年 以来 爱丽丝 的 雇主 是 谁	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
什么 城市 有 一个 至少 180 厘米 的 人 的 出生地	哪个 城市 有 一个 至少 180 厘米 的 人 的 出生地	哪个 城市 有 一个 身高 至少 180 厘米 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 约会 之日 或 之后 出生 的 人 开始 工作	爱丽丝 开始 工作 之日 或 之后 出生 的 人	在 爱丽丝 开始 工作 那天 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
找到 2004 年 出生 的 所有 单身 人士	找到 2004 年 出生 的 所有 单身 人士	找出 所有 2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
最后 一天 在 爱丽丝 之前 的 员工	最后 一天 在 爱丽丝 之前 的 雇员	员工 的 最后 一天 就 在 爱丽丝 面前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 2004 年 之前 的 学生 的 朋友	找 那些 最后 一天 在 2004 年 之前 的 学生 的 朋友	找 那些 最后 一天 在 2004 年 之前 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 之前 出生 的 人	在 爱丽丝 之前 出生 的 人	爱丽丝 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
员工 开始 约会 的 时间 与 alice 相同	哪个 员工 的 开始 日期 和 爱丽丝 一样	哪些 员工 的 入职 日期 与 alice 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 最后 一天 不早 于 爱丽丝 的 第一天	哪位 员工 上 一天 不早 于 爱丽丝 的 第一天	哪些 员工 的 离职 日期 不早 于 爱丽斯 入职 的 第一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 她 还是 学生 的 结束 日期	爱丽丝 在 学生 时代 的 结束 日期 是 什么	爱丽丝 当 学生 的 最后 期限 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )
谁 是 开始 约会 的 学生 的 朋友 是 2004 年	与 2004 年 入学 的 学生 交朋友	谁 是 开始 日期 为 2004 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 开始 的 员工 是 什么 性别	2004 年 开始 工作 的 员工 是 什么 性别	2004 年入 职 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 出生 后 开始 工作 的 人 在 哪里	2004 年 出生 后 开始 工作 的 人 在 哪里	2004 年 后 开始 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 结束 日期 是 在 alice 结束 日期 之前	哪个 员工 的 结束 日期 早于 alice 的 结束 日期	哪个 雇员 的 结束 日期 在 alice 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 麦肯锡 或谷歌 工作 的 人	在 麦肯锡 或谷歌 工作 的 人	在 麦肯锡 或谷歌 工作 的 人	( call SW.listValue ( call SW.concat en.company.mckinsey en.company.google ) )
哪个 城市 至少 有 两个 人 出生 在	哪个 城市 至少 有 两个 人 出生 在	哪个 城市 至少 有 两个 人 出生	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 我 在 2004 年 之前 开始 的 员工 的 朋友	给 我 找 2004 年 以前 开始 工作 的 员工 的 朋友	给 我 找 一位 2004 年 以前 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 日期 不是 2004 年 的 员工 的 性别	起始 日期 不是 2004 年 的 员工 性别	入职 日期 不是 2004 年 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 加入 棕色 大学	爱丽丝 什么 时候 加入 布朗 大学 的	爱丽斯 什么 时候 加入 布朗 大学 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )
找到 开始 日期 晚于 2004 年 的 出生地 城市 学生	找到 2004 年 以后 开始 学习 的 学生 的 出生地 城市	寻找 出生 城市 的 学生 有 一个 开始 日期 晚于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 且 与 爱丽丝 性别 相同 的 人	找 一个 身高 180 厘米 和 爱丽丝 性别 相同 的 人	找 一个 身高 180 厘米 ， 性别 和 爱丽丝 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
爱丽丝 的 单身 朋友	爱丽丝 的 单身 朋友	爱丽丝 的 朋友 们 都 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 2004 年 之前 开始 的 员工	2004 年 以前 开始 工作 的 员工	2004 年 以前 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 毕业生 朋友	2004 届 毕业生 朋友	2004 名 毕业生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 结束 之前 或 之 时 结束 的 员工	在 爱丽丝 死前 或 死 后 结束 的 雇员	雇员 在 alice 结束 之前 或 结束 时 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 城市 的 员工 ， 其 结束 日期 不是 2004 年 之后	结束 日期 不 在 2004 年 之后 的 员工 的 出生 城市	2004 年 以后 未满 退休年龄 的 职工 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
和 爱丽丝 一样 出生 在 同一个 城市 的 人	和 爱丽丝 出生 在 同一个 城市 的 人	和 爱丽丝 出生 在 同一个 城市 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
为 不到 两个 雇主 工作 的 人	为 少于 两个 雇主 工作 的 人	为 少于 两个 雇主 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 艾丽斯 出生 的 城市	她 出生 在 爱丽丝 出生 的 城市	谁 出生 在 爱丽丝 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
谁 有 两个 以上 的 性别	有 两个 以上 性别 的 人	谁 有 多于 两种 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
爱丽丝 的 朋友	爱丽丝 的 朋友	爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
没有 在 2004 年 之前 毕业 的 学生	2004 年 以前 未 毕业 的 学生	二 00 四年 以前 未 毕业 之 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最后 一天 在 2004 年 或 之后 的 学生 的 出生地	查找 最后 一天 在 2004 年 或 以后 的 学生 的 出生地	找出 最后 一天 是 2004 年 或 以后 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
所有人 目前 在线	所有 当前 联机 的 人	所有人 目前 在线	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) )
性别 不到 三人 的 性别	少于 三人 的 性别	指 少于 三人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 人 是 180 厘米 高 的 男性	什么 人 是 一个 180 厘米 高 的 男人	什么 人 是 180 厘米 高 的 男人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
学生 的 开学 日期 与 学生 爱丽丝 相同	什么 学生 的 开始 日期 和 学生 爱丽丝 一样	什么 学生 有 一个 开始 的 日期 是 一样 的 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 并 在 2004 年 后 开始 工作 的 人	在 2004 年 后 有 朋友 并 开始 工作 的 人	有 朋友 并 在 2004 年 后 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是不是 软件 工程师 的 朋友	他 和 不是 软件 工程师 的 人 是 朋友	谁 是 那个 不是 软件 工程师 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 出生 的 那些 没有 停止 工作 的 人	那些 在 2004 年 没有 停止 工作 的 人 在 哪里 出生	那些 在 2004 年 没有 停止 工作 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 是 朋友 的 男性	爱丽丝 的 朋友	爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
在 2004 年 或 2010 年 之前 开始 的 学生	2004 年 或 2010 年 以前 开始 学习 的 学生	2004 年 或 2010 年 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪名 员工 早于 2004 年 结束	哪个 员工 在 2004 年 之前 离职	哪位 员工 在 2004 年 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 开始 工作 的 员工 的 所有 关系 状态	给 我查 一下 2004 年 以后 开始 工作 的 员工 的 所有 关系 状况	为 我 找到 所有 的 关系 状态 的 员工 开始 工作 后 ， 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 辞职 的 人 的 出生地	2004 年 后 辞职 者 的 出生地	2004 年 后 辞职 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 晚于 alice 开始 日期 的 员工	结束 日期 晚于 Alice 开始 日期 的 员工	结束 日期 晚于 alice 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 性别 是 最 多 的 人	什么 性别 的 人 最 多	什么 性别 的 人 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
出 生于 180 厘米 高 的 人 是 哪个 城市	哪个 城市 出生 的 人 身高 180 厘米	身高 180 厘米 的 人 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
说出 在 爱丽丝 出生 前 退出 的 员工	说出 一个 在 爱丽丝 出生 前 辞职 的 雇员 的 名字	说出 一个 在 alice 出生 前 就 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 没有 开始 的 员工 是 什么 性别	2004 年 没有 开始 工作 的 员工 是 什么 性别	2004 年 没有 开始 工作 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 开始 上学	爱丽丝 什么 时候 开始 上学 的	爱丽斯 什么 时候 开始 上学 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )
找到 学生 在 爱丽丝 的 最后 一天 或 之后 开始	寻找 学生 在 爱丽丝 的 最后 一天 或 之后 开始	寻找 学生 在 爱丽丝 的 最后 一天 开始 或 结束 后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 爱丽丝 毕业 之前 就 开始 了	艾丽斯 毕业 前 的 学生	哪些 学生 在 爱丽丝 毕业 之前 就 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
列出 2005 年 之前 辞职 的 人 的 关系 状况	列出 2005 年前 辞职 者 的 关系 状况	列出 2005 年 以前 辞职 的 人 的 感情 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 的 结束 日期 是 2004 年 ， 身高 是 180 厘米	什么 人 的 结束 日期 是 2004 年 ， 身高 是 180 厘米	什么 人 的 最后 期限 是 2004 年 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 员工 与 爱丽丝 有 同样 的 生日	哪个 雇员 的 生日 和 爱丽丝 一样	哪个 雇员 的 生日 和 爱丽丝 的 生日 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 开始 日期 至少 与 员工 alice 的 结束 日期 相同 的 员工	查找 开始 日期 至少 与 员工 alice 的 结束 日期 相同 的 员工	找到 至少 与 员工 alice 的 结束 日期 相同 的 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 工作 后 开始 上学 的 人	爱丽丝 开始 工作 后 开始 上学 的 人	在 爱丽丝 开始 工作 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 或 之前 开始 工作 的 人 的 朋友	与 2004 年 或 之前 开始 工作 的 人 交朋友 的 人	与 在 2004 年 或 之前 开始 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 关系 状态 ， 其 开始 日期 不是 2004 年 之后	开始 日期 不 在 2004 年 之后 的 员工 的 关系 状态	开始 日期 不 超过 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 至少 为 2004 年 的 学生 的 性别	截止 日期 至少 为 2004 年 的 学生 性别	截止 日期 不少 于 2004 年 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 最后 一天 是 在 爱丽丝 的 最后 一天 之前 或 之后	最后 一天 在 爱丽丝 最后 一天 之前 或 当天 的 雇员	员工 的 最后 一天 在 爱丽丝 的 最后 一天 之前 或 当天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 学生 关系 状态 谁 早于 2004 年 结束	2004 年 以前 结束 的 学生 关系 状况 如何	在 2004 年 之前 结束 的 学生 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 没有 在 2004 年 开始 的 学生	2004 年 未 入学 的 学生	2004 年 没有 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 出生 的 人 的 朋友	寻找 2004 年 出生 的 人 的 朋友	寻找 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
与 朋友 最多 的 人	朋友 最多 的 人	拥有 最 多 朋友 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 毕业 后 出生 的 人	爱丽丝 毕业 后 出生 的 人	爱丽丝 毕业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
找到 目前 在线 的 所有 爱丽丝 的 朋友	找到 所有 爱丽丝 的 朋友	找到 所有 爱丽丝 现在 在线 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
雇员 最后 被 雇用 了 什么	最后 雇用 的 是 哪位 员工	最后 聘用 的 员工 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在线 男性 会员	在线 男性 会员	在线 男性 成员	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
学生 在 2004 年 或 2010 年 之前 完成	2004 年 或 2010 年 以前 毕业 的 学生	2004 年 或 2010 年 以前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 2004 年 出生 的 人 称为 爱丽丝 的 朋友	说出 一个 2004 年 出生 的 人 和 爱丽丝 是 朋友	说出 一个 2004 年 出生 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
是 单身 的 人	这个 人 单身 吗	这个 人 是 单身 吗	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
关系 状态 最少 的 人	关系 状态 最少 的 人	拥有 最少 关系 状态 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
员工 的 开始 日期 与 爱丽丝 的 结束 日期 相同	哪个 员工 的 开始 日期 与 alice 的 结束 日期 相同	什么 员工 的 开始 日期 与 alice 的 结束 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
目前 在线 人员 的 关系 状态 是 什么 ？	目前 在线 的 人 的 关系 状态 是 什么	当前 在线 的 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 与 爱丽丝 的 出生日期 同时 开始 的 员工	找到 与 爱丽丝 生日 同时 有 开始 日 的 员工	找 一个 和 alice 生日 同一天 上班 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 人 是 2004 年 之前 开始 的 员工 的 朋友	哪些 人 是 2004 年 以前 开始 工作 的 员工 的 朋友 ？	哪些 人 是 2004 年 以前 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
登录 的 人 ， 出 生于 2004 年	2004 年 出生 的 登录 者	登录 的 人 是 2004 年 出生 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )
什么 是 员工 关系 状态 谁 在 2004 年 结束	2004 年 结束 的 员工 关系 状况 如何	2004 年 离职 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 180 厘米 高 的 人 都 学习 过 计算机科学	所有 研究 计算机科学 的 180 厘米 高 的 人	所有 180 厘米 高 的 人 都 学过 计算机科学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
那些 去过 棕色 大学 并且 单身 的 人	去 布朗 大学 单身 的 人	上 过 布朗 大学 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
从 2004 年 及 以后 开始 找到 学生 的 生日	从 2004 年 开始 寻找 学生 的 出生地	找出 2004 年 及 以后 出生 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 我 没有 上 过 棕色 大学 的 学生 的 性别	帮 我 找出 没有 上 布朗 大学 的 学生 的 性别	帮 我查 一下 没有 上 布朗 大学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 在 2004 年 毕业 时 做 了 什么 研究	爱丽丝 2004 年 毕业 时学 的 是 什么	爱丽丝 2004 年 毕业 时学 的 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
与 爱丽丝 同日 开始 的 学生	和 爱丽丝 同一天 开始 的 学生	和 爱丽丝 同一天 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 毕业 之前 过生日 的 人	在 爱丽丝 毕业 前 过生日 的 人	爱丽丝 毕业 前 过生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
与 2004 年 及 之后 加入 的 学生 成为 朋友 的 人	与 2004 年 及 以后 加入 的 学生 交朋友 的 人	与 2004 年 及 以后 入学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 辞职 后 被 雇用 的 人	爱丽丝 辞职 后 被 雇佣 的 人	爱丽丝 辞职 后 谁 被 雇用 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之后 受雇 的 朋友	2004 年 后 受雇 的 人 的 朋友	2004 年 后 被 雇佣 者 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 之后 或 2010 年 之后 停止 工作 的 人	2004 年 或 2010 年 后 停止 工作 的 人	在 2004 年 或 2010 年 之后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 爱丽丝 的 第一天 之后 的 学生	找到 最后 一天 在 爱丽丝 第一天 之后 的 学生	找出 学生 谁 的 最后 一天 是 在 爱丽丝 的 第一天 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 她 2004 年 离开 的 工作	艾丽斯 什么 时候 开始 她 2004 年 离开 的 工作	艾丽丝 2004 年 离职 的 工作 是 什么 时候 开始 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
什么 性别 是 在线 人	网上 的 人 是 什么 性别	网上 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 我 在 爱丽丝 开始 前 离开 学校 的 学生	给 我 找 一个 在 爱丽丝 开始 之前 离开 学校 的 学生	帮 我 找到 那个 在 爱丽丝 上学 之前 就 离开 学校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除了 计算机科学 之外 ， 任何 领域 的 学生 都 在 哪里 出生	除了 计算机科学 以外 ， 其他 任何 领域 的 学生 都 是 在 哪里 出生 的	除了 计算机科学 ， 其他 任何 领域 的 学生 都 是 在 哪里 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 在 爱丽丝 之前 或 同期 开始	在 爱丽丝 之前 或 同时 开始 工作 的 员工	在 alice 之前 或 同一 时期 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 不迟于 爱丽丝 的 毕业典礼 那天 开始	哪位 员工 最迟在 爱丽丝 毕业 那天 开始 工作	哪些 员工 的 入职 时间 不晚 于 爱丽丝 的 毕业 日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 2004 年 之前	2004 年 以前 出生 的	谁 是 2004 年 以前 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 2004 年 或 之前 或 2010 年 或 之前 开始 上学 的 人	2004 年 或 之前 或 2010 年 或 之前 开始 上学 的 人	在 2004 年 或 之前 、 2010 年 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 工作 之前 开始 上学 的 人	在 爱丽丝 停止 工作 之前 就 开始 上学 的 人	在 爱丽丝 停止 工作 之前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 爱丽丝 停止 上学 或 之前 停止 工作 的 人	当 爱丽丝 停学 或 之前 停止 工作 的 人	那些 在 爱丽丝 停学 或 停学 前 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 结束 日期 晚于 2004 年 或 2010 年	哪些 员工 的 结束 日期 晚于 2004 年 或 2010 年	什么 员工 的 离职 日期 比 2004 年 或 2010 年 都 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 人 在 2004 年 出生 后 停止 工作 的 地方	2004 年 出生 后 停止 工作 的 人 在 哪里	2004 年 后 停止 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 ， 哪个 城市 是 员工 的 发源地	2004 年 以前 员工 的 出生地 是 哪个 城市	2004 年 以前 员工 的 出生地 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 开始 和 结束 工作 日期 是 什么 ？	艾丽斯 的 开始 和 结束 雇用 日期 是 什么 时候	爱丽斯 的 入职 和 离职 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
mckinsey 未 聘用 的 人 的 关系 状态 是 什么	非 麦肯锡 雇员 的 关系 状况 如何 ？	未 被 麦肯锡 聘用 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 的 职称 最 多	哪个 员工 的 职称 最 多	哪个 员工 的 头衔 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 学习 计算机科学 的 学生 的 出生地	寻找 不 学 计算机 的 学生 的 出生地	找到 不 学习 计算机科学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
至少 有 两个 人有 什么 性别	至少 两个 人有 什么 性别	至少 两个 人 做 什么 性别 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学生 将 于 2004 年 之后 开课 ， 不迟于 2010 年	2004 年 以后 不迟于 2010 年 开始 的 学生	2004 年 以后 入学 ， 不迟于 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 的 关系 状态 与 爱丽丝 一样	什么 人 和 爱丽丝 有 同样 的 恋爱 关系	什么 人 的 恋爱 状态 和 爱丽丝 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
哪个 男人 身高 180 厘米	哪个 男人 180 厘米 高	哪些 人 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
没有 受雇 于 麦肯锡 的 员工	非 麦肯锡 雇员	麦肯锡 没有 雇佣 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 2004 年 之前 停止 工作 的 人	2004 年 以前 停止 工作 的 人	在 2004 年 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 人 是 与 2004 年 毕业 的 学生 的 朋友	哪些 人 和 2004 年 毕业 的 学生 是 朋友 ？	哪些 人 是 毕业 不早 于 2004 年 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 在 2004 年 毕业	2004 年 以后 哪些 学生 毕业	哪些 学生 2004 年 后 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
非 棕色 大学 的 大学生 的 性别	非 布朗 大学 学生 性别	非 布朗 大学 所属 大学 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 员工 朋友	在 2004 年 或 之前 的 最后 一天 找到 员工 朋友	在 2004 年 或 之前 的 最后 一天 找 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 是 朋友 的 人 是 爱丽丝 的 朋友	爱丽丝 和 哪些 人 是 朋友	爱丽丝 和 哪些 人 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
2004 年 出生 的 人 身高 180 厘米	2004 年 出生 的 人 身高 180 厘米	2004 年 出生 的 人 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 们 在 同一 年 完成 了 学校 的 爱丽丝 开始	爱丽丝 开学 那年 ， 学生 们 完成 了 什么 学业 ？	爱丽丝 开始 上学 的 那 一年 ， 学生 们 完成 了 学业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 之后 完成 的 员工 朋友	2004 年 或 之后 完成 的 员工 之友	2004 年 或 以后 毕业 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 与 员工 的 朋友 ， 他们 不迟于 2004 年 开始	谁 是 不 迟于 2004 年 开始 工作 的 员工 的 朋友 ？	谁 是 不 迟于 2004 年入 职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 大于 2004 的 员工 的 关系 状态	查找 结束 日期 大于 2004 年 的 员工 的 关系 状态	查找 终止 日期 大于 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 开始 上学 的 那天 或 之前 停止 上学 的 人	爱丽丝 上学 当天 或 之前 停学 的 人	在 爱丽丝 上学 当天 或 之前 停课 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 至少 有 2 所 大学 要 去	哪个 学生 至少 要 上 两所 大学	哪个 学生 至少 要 上 两所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 爱丽丝 的 朋友	180 厘米 高 的 爱丽丝 的 朋友	爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 人 是 爱丽丝 的 朋友 ， 身高 180 厘米	哪些 人 是 爱丽丝 的 朋友 ， 身高 180 厘米	哪些 人 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 2004 年 或 之后 开始 工作 的 人 的 关系 状况 是 什么	2004 年 或 之后 开始 工作 的 人 的 关系 状况 如何	2004 年 或 之后 开始 工作 的 人 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 之后 开始 的 员工 的 性别 是 什么 ？	2004 年 以后 开始 工作 的 雇员 的 性别 是 什么	2004 年 后 入职 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 完成 之前 或 之 时 开始 的 员工	在 Alice 完成 之前 或 完成 时 开始 工作 的 员工	在 alice 完成 工作 之前 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之后 开始 上学 的 人 的 关系 状况 如何 ？	2004 年 或 之后 开始 上学 的 人 的 关系 状况 如何	2004 年 或 以后 入学 的 人 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 的 人 身高 180 厘米	180 厘米 高 的 人 出生 在 哪里	身高 180 厘米 的 人 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
离开 爱丽丝 的 人员 加入	在 爱丽丝 加入 公司 时 或 之后 离职 的 雇员	在 爱丽斯 加入 公司 后 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 在 爱丽丝 结束 日期 之前 或 之后 的 员工	开始 日期 在 Alice 结束 日期 之前 或 当天 的 员工	开始 日期 在 alice 结束 日期 之前 或 当天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出 生于 2004 年	2004 年 出生 的	谁 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 员工 关系 状态 谁 开始 不迟于 2004 年	不迟于 2004 年 开始 工作 的 员工 关系 状况 如何	不迟于 2004 年 开始 工作 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 结束 日期 不 超过 学生 爱丽丝 的 开始 日期	哪些 员工 的 结束 日期 不 大于 学生 alice 的 开始 日期	什么 员工 的 结束 日期 不 大于 学生 alice 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 之前 开始 上学 的 学生 的 性别	2004 年 以前 开始 上学 的 学生 的 性别 是 什么	2004 年 以前 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 艾利斯 的 生日 前 离开 的 员工 很 好	对 在 爱丽丝 生日 前 离开 的 员工 罚款	在 爱丽斯 生日 之前 离职 的 员工 ， 我要 罚款	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 离开 公司 不早 于 爱丽丝 的 开始 日期	员工 离开 公司 的 时间 不早 于 爱丽丝 的 开始 日期	员工 离开 公司 不早 于 爱丽斯 的 上班时间	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 与 2004 年 没有 开始 的 人 交朋友 的 人	与 2004 年 没有 开始 工作 的 人 交朋友 的 人	那些 和 2004 年 没有 结婚的人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 高度 为 180 厘米 的 人 的 大学	一个 身高 180 厘米 的 人 的 大学 是 什么	身高 180 厘米 的 人 的 大学 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
爱丽丝 退学 后 辞职 的 员工	爱丽丝 退学 后 辞职 的 雇员	爱丽丝 离开 学校 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 活着 当天 或 之前 开始 上学 的 学生	与 生前 同一天 开学 的 学生	当天 或 之前 开学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 爱丽丝 结束 日期 或 之后 的 学生	结束 日期 为 Alice 结束 日期 或 更 晚 日期 的 学生	学生 的 结束 日期 是 爱丽丝 的 结束 日期 或 更 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 前 开始 上学 的 人	在 爱丽丝 停下来 之前 就 开始 上学 的 人	在 爱丽丝 之前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 去 棕色 大学 或 ucla	哪些 学生 上 布朗 大学 或 加州大学洛杉矶分校	哪些 学生 上 布朗 大学 或 加州大学洛杉矶分校	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 第一个 开始 工作 的 人	谁 是 第一个 开始 工作 的 人	谁 是 第一个 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 开始 日期 不晚 于 爱丽丝 的	开始 日期 不迟于 爱丽丝 的 学生	上课 日期 不晚 于 爱丽斯 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 哪个 城市 是不是 软件 工程师 的 员工	不是 软件 工程师 的 雇员 是 在 哪个 城市 出生 的	在 哪个 城市 出生 的 员工 不是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 出生地 未 在 2004 年 结束	一名 员工 的 出生地 在 2004 年 还 没有 结束	一名 雇员 的 出生地 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 或 之后 开始 的 员工 性别	2004 年 及 以后 的 雇员 性别	2004 年 及 以后 入职 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那个 学生 和 爱丽丝 同一天 毕业 了	哪个 学生 和 爱丽丝 同一天 毕业	哪个 学生 和 爱丽丝 是 同一天 毕业 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 毕业 那天 开始 的 员工	从 爱丽丝 毕业 那天 开始 工作 的 员工	从 爱丽丝 毕业 那天 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 们 在 爱丽丝 的 生日 那天 结束	学生 们 在 爱丽丝 生日 那天 完成学业	学生 们 在 爱丽丝 生日 那天 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 哪些 朋友 出生 在 纽约	爱丽丝 的 哪个 朋友 出生 在 纽约 ？	爱丽斯 的 哪些 朋友 是 在 纽约 出生 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪些 人 是 爱丽丝 的 朋友 的 朋友	哪些 人 和 爱丽丝 的 朋友 是 朋友	哪些 人 和 爱丽丝 的 朋友 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
这个 学生 与 爱丽丝 的 生日 同一天 开始	在 爱丽丝 生日 的 同一天 开始 的 学生	和 爱丽丝 同一天 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 没有 毕业 的 学生 成为 朋友 的 人	与 2004 年 未 毕业 学生 交朋友 的 人	与 2004 年 未 毕业 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开学 日期 在 2004 年 之前 的 学生 的 关系 状态	2004 年 以前 学生 关系 状况	2004 年 以前 入 学者 之 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我们 从 2004 年 开始 的 新 员工 的 发源地	从 2004 年 开始 寻找 新 员工 的 出生地	找出 2004 年 开始 的 新 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 在 2004 年 后 停止 工作 ， 并 与 我 有 联系	2004 年 后 就 不 工作 了 而且 和 我 有 联系	谁 在 2004 年 之后 停止 工作 ， 和 我 有 联系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 180 厘米 且 出生日期 为 2004 年 的 人	找到 身高 180 厘米 ， 出生日期 2004 年 的 人	寻找 身高 180 厘米 ， 出生日期 为 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 与 爱丽丝 成为 朋友 并且 单身 的 人	找 一些 和 爱丽丝 是 朋友 的 单身 人士	找 一些 和 alice 是 朋友 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找 一个 在 爱丽丝 之前 出生 的 人	找 一个 比 爱丽丝 先 出生 的 人	找 一个 比 爱丽丝 先 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
员工 的 开始 日期 是 2004 年 还是 2010 年	哪些 员工 的 起始 日期 是 2004 年 或 2010 年	什么 员工 的 起始 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
诞生 城市 爱丽丝 的 朋友	爱丽丝 朋友 的 出生 城市	爱丽丝 朋友 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
当 爱丽丝 辞掉 工作 时 ， 哪位 员工 就 开始 了	爱丽丝 辞职 的 时候 哪个 雇员 就 开始 工作 了	哪位 员工 是 在 爱丽丝 辞职 后 才 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 关系 状况 是 什么 ， 其 最后 一天 不早 于 2004 年	最后 一天 不早 于 2004 年 的 员工 的 关系 状况 如何	员工 离职 日期 不早 于 2004 年 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 为 2004 年 的 所有 学生 的 关系 状况	截止 日期 为 2004 年 的 所有 学生 的 关系 状况	所有 结束 日期 为 2004 年 的 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 2010 年 毕业 的 学生	2004 年 或 2010 年 毕业 的 学生	2004 年 或 2010 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 所有 高度 为 180 厘米 的 人 的 研究 领域	找到 所有 身高 180 厘米 的 人 的 研究 领域	找到 所有 身高 180 厘米 的 人 的 研究 领域	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
与 爱丽丝 或 鲍勃有 朋友 的 人	和 爱丽丝 或 鲍勃 是 朋友 的 人	与 爱丽丝 或 鲍勃 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
在 艾丽斯 当天 或 之前 离开 的 学生	在 爱丽丝 离开 的 那天 或 之前 离开 的 学生	在 爱丽丝 离开 的 那天 或 之前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 约会 之前 出生 的 人	在 爱丽丝 出生日期 之前 出生 的 人	在 爱丽丝 出生日期 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
什么 员工 不是 软件 工程师	不是 软件 工程师 的 员工	不是 软件 工程师 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 有 一个 纽约 的 出生地 ， 他们 也 是 爱丽丝 的 朋友	什么 人有 纽约 的 出生地 谁 也 是 爱丽丝 的 朋友	什么 人有 一个 纽约 的 出生地 ， 谁 也 是 朋友 的 爱丽丝	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
与 爱丽丝 不是 朋友 的 人	不是 爱丽丝 朋友 的 人	不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string ! = ) en.person.alice ) )
找到 2004 年 之前 开始 上学 的 朋友	找 2004 年 以前 开始 上学 的 朋友	找 一些 2004 年 以前 就 开始 上学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 有 180 厘米 的 高度 和 计算机科学 的 研究 领域	人 的 身高 是 180 厘米 ， 研究 领域 是 计算机科学	什么 人有 180 厘米 的 身高 和 研究 领域 ， 那 就是 计算机科学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
什么 性别 是 180 厘米 高 的 人	身高 180 厘米 的 人 是 什么 性别	身高 180 厘米 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
毕业典礼 的 学生 不会 比 爱丽丝 开始 的 那样 早	爱丽丝 刚 毕业 的 学生	学生 们 在 爱丽丝 开始 的 那天 就 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 的 发源地	爱丽丝 朋友 的 出生地	爱丽丝 的 朋友 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
将 员工 出生 的 城市 命名 为 不 迟于 2004 年 开始 的 城市	说出 一个 不迟于 2004 年 开始 工作 的 雇员 出生 的 城市	说出 一名 雇员 出生 在 2004 年 之前 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 早 于 爱丽丝 的 开始 日期	结束 日期 早 于 爱丽丝 开始 日期 的 学生	结束 日期 在 alice 开始 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 不上 棕色 大学 的 学生	不上 布朗 大学 的 学生	一个 没有 上 布朗 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 2004 年 之前 或 之前 完成	2004 年 或 之前 完成学业 的 学生	在 2004 年 或 之前 完成学业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 是 2004 年 或 以后 ， 谁 是 他们 的 朋友	哪些 学生 的 开始 日期 是 2004 年 或 更 晚 ， 哪些 是 他们 的 朋友	什么样 的 学生 有 一个 开始 的 日期 是 2004 年 或 以后 ， 谁 是 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 出生 在 同一个 城市 的 人	和 爱丽丝 出生 在 同一个 城市 的 人	和 爱丽丝 出生 在 同一个 城市 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
找到 最后 一天 是 2004 年 或 之后 的 学生	找到 最后 一天 是 2004 年 或 更 晚 的 学生	找出 最后 一天 是 2004 年 或 以后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 完成学业 之前 开始 工作 的 员工	艾丽斯 毕业 前 就 开始 工作 的 雇员	在 爱丽丝 毕业 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 出生 的 单身 人士	单身汉 出生 在 什么 城市	单身 人士 是 在 哪些 城市 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 同一天 或 爱丽丝 开始 上学 后 辞职 的 员工	同一天 或 爱丽丝 开学 后 辞职 的 雇员	在 爱丽丝 上学 当天 或 之后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 2004 年 以后 学生 的 出生地	什么 城市 是 2004 年 以后 学生 的 出生地	2004 年 以后 哪些 城市 是 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 哪些 朋友 是 男性	爱丽丝 的 哪个 朋友 是 男性	爱丽斯 的 哪些 朋友 是 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
列出 所有 在 爱丽丝 之前 退出 的 学生	在 爱丽丝 面前 说出 所有 退学 的 学生 的 名字	在 爱丽丝 之前 说出 所有 退学 的 学生 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 学生 的 关系 状态 ， 开始 日期 晚于 2004 年	查找 开始 日期 晚于 2004 年 的 学生 的 关系 状态	找出 开始 日期 晚于 2004 年 的 学生 的 恋爱 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
只有 一个 人 的 出生地	只有 一个 人 的 出生地	只有 一个 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
查找 2004 年 及 之前 开始 的 学生 的 所有 关系 状态	查找 2004 年 及 以前 开始 的 学生 的 所有 关系 状态	找出 2004 年 及 之前 所有 学生 的 恋爱 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 至少 有 两种 性别 的 人	找到 至少 有 两个 性别 的 人	找到 至少 有 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
员工 在 2004 年 之前 结束	2004 年 以前 离职 的 雇员	2004 年 以前 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 开始 上学 的 人 的 关系 状况 如何 ？	2004 年 以后 开始 上学 的 人 的 关系 状况 如何	2004 年 后 开始 上学 的 人 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 一个 研究 领域 是 计算机科学 ， 身高 180 厘米 的 人	谁 是 计算机科学 专业 的 人 ， 身高 180 厘米	谁 的 研究 领域 是 计算机科学 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
和 爱丽丝 的 朋友 一样 ， 身高 180 厘米	与 身高 180 厘米 的 爱丽丝 是 朋友 的 人	爱丽丝 身高 180 厘米 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
爱丽丝 开始 工作 后 ， 员工 被 解雇 了 什么	爱丽丝 开始 工作 后 哪个 雇员 被 解雇 了	什么 雇员 在 爱丽丝 开始 工作 后 就 被 解雇 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人口 来自 的 城市 数量	来自 城市 的 人数	许多 城市 的 人 来自	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
找到 2004 年 没有 入学 的 人 的 朋友	找些 2004 年 没 开始 上学 的 朋友	寻找 2004 年 没有 上学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 毕业 不迟于 爱丽丝 的 最后 一天 工作	哪个 学生 不迟于 爱丽丝 最后 一天 毕业	哪些 学生 在 爱丽丝 工作 的 最后 一天 才 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 工作 后 结束 学业 的 学生	爱丽丝 开始 工作 后 就 辍学 的 学生	在 爱丽丝 开始 工作 后 辍学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 员工 在 2004 年 或 2010 年 之后 开始	2004 年 或 2010 年 后 开始 工作 的 员工	哪些 员工 是 在 2004 年 或 2010 年 之后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2010 年 或 之前 开始 工作 的 员工	2010 年 或 之前 开始 工作 的 员工	2010 年 或 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 辞职 后 开始 工作 的 员工	爱丽丝 辞职 后 开始 工作 的 雇员	爱丽丝 辞职 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 与 爱丽丝 成为 朋友 的 人	说出 一个 和 爱丽丝 是 朋友 的 人 的 名字	说出 一个 和 爱丽丝 是 朋友 的 单身 人士 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
2004 年 没有 入学 的 学生 的 关系 状况 如何 ？	2004 年 未 入学 学生 的 人际关系 状况	没有 在 2004 年 开始 的 学生 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 的 出生 城市 ， 开始 日期 晚于 2004 年	查找 开始 日期 晚于 2004 年 的 员工 的 出生 城市	查找 开始 日期 晚于 2004 年 的 雇员 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 先 退出	哪个 员工 先 辞职	哪个 员工 先 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 一个 出生 在 纽约 的 爱丽丝 的 朋友	找 一个 爱丽丝 在 纽约 出生 的 朋友	找 一个 爱丽丝 在 纽约 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
2004 年 之前 的 学生 朋友	2004 年 以前 的 学生 朋友	2004 年 以前 的 学生 之友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 开始 的 员工 性别	2004 年前 开始 工作 的 员工 性别	2004 年 以前 入职 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 与 爱丽丝 有 相同 出生地 的 人	找到 和 爱丽丝 出生地 一样 的 人	找到 和 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
什么 学生 只有 两个 学习 领域	哪个 学生 的 学习 领域 少于 两个	什么 学生 有 少于 两个 领域 的 学习	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 最后 一天 工作 之前 出生 的 人	她 出生 在 爱丽丝 工作 的 最后 一天 之前	谁 是 在 爱丽丝 工作 的 最后 一天 之前 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
什么 是 不 学习 计算机科学 的 学生 的 关系 状态	不 学 计算机 的 学生 的 关系 状况 如何	没有 学习 计算机科学 的 学生 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 不是 爱丽丝 出生日期 的 学生	结束 日期 不 在 爱丽丝 出生日期 之后 的 学生	学生 的 结业 日期 不 超过 爱丽斯 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 在 2004 年 或 之后 停学 的 人	有 朋友 在 2004 年 或 之后 辍学 的 人	有 朋友 在 2004 年 或 之后 辍学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 停止 上学 之前 开始 工作 的 人	爱丽丝 停学 前 就 开始 工作 的 人	那些 在 爱丽丝 辍学 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 属于 爱丽丝 的 朋友 的 单身 状态	找到 爱丽丝 的 朋友	寻找 单身 状态 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
与 学生 成为 朋友 的 人 在 2004 年 没有 结束	与 学生 交朋友 的 人 在 2004 年 还 没有 结束	那些 和 2004 年 毕业 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 之后 开始 工作 的 人	2004 年 后 开始 工作 的 人	2004 年 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 人 和 爱丽丝 出生 在 同一个 地方	和 爱丽丝 出生 在 同一个 地方	哪些 人 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
什么 是不是 棕色 大学生 的 学生 的 出生地	非 布朗 大学 学生 的 出生地 是 什么	非 布朗 大学 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 alice 的 朋友 ， 他 登录 了	找到 爱丽丝 的 朋友	找到 登录 的 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
离开 爱丽丝 的 员工	像 爱丽丝 一样 晚 辞职 的 雇员	和 alice 一样 晚 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
自 2004 年 以来 一直 在 工作 的 员工 的 朋友	自 2004 年 起 工作 的 员工 的 朋友	自 2004 年 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 在 2004 年 离开 公司 的 员工 的 朋友	谁 是 2004 年 离开 公司 的 员工 的 朋友 ？	谁 是 2004 年 离开 公司 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 至 2010 年间 毕业 的 所有 学生 的 姓名	找出 2004 年 至 2010 年 毕业 的 所有 学生 的 名字	找出 2004 年 到 2010 年 毕业 的 所有 学生 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 在 2004 年 开始 的 员工	2004 年 未 开始 工作 的 员工	2004 年 没有 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 是 与 2004 年 之前 开始 的 学生 的 朋友	哪个 人 是 2004 年 以前 开始 学习 的 学生 的 朋友	谁 是 2004 年 以前 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 城市 是 2004 年 之前 结束 学业 的 学生 的 出生地	2004 年 以前 辍学 的 学生 的 出生地 是 哪个 城市	2004 年前 辍学 的 学生 的 出生地 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 有 两种 关系 状态 的 人	查找 具有 两种 关系 状态 的 人	找到 有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
在 爱丽丝 离开 之前 或 之前 加入 的 学生	在 爱丽丝 离开 当天 或 之前 加入 的 学生	在 爱丽丝 离开 当天 或 之前 加入 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 最后 一天 不 在 2004 年 的 员工 的 出生地	最后 一天 不是 2004 年 的 员工 的 出生地 是 什么 ？	员工 的 最后 一天 不是 在 2004 年 ， 他们 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 时候 爱丽丝 开始 为 麦肯锡 工作	爱丽丝 什么 时候 开始 为 麦肯锡 工作 的 ？	爱丽丝 什么 时候 开始 在 麦肯锡 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
在 大学 学习 计算机科学 的 人	在 大学 学习 计算机科学 的 爱丽丝	在 大学 里 学习 计算机科学 的 一个 叫 爱丽丝 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
在 2004 年 或 之后 退出 的 员工 的 关系 状态 是 什么	2004 年 或 以后 离职 的 员工 的 关系 状况 如何	2004 年 或 以后 离职 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 2004 年 入学 的 出生地 学生 城市	2004 年 入学 的 学生 出生地 城市 是 什么 ？	2004 年 入学 的 学生 的 出生地 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 最近 辞职 了	哪位 员工 最近 辞职 了	哪位 员工 最近 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 活着 共享 工作 场所 的 员工	与 Alive 共享 工作 场所 的 员工	与 alive 共享 一个 工作 场所 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 是 哪 两所 大学 的 一部分	什么 学生 是 两所 大学 的 一部分	两所 大学 的 学生 是 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 名叫 爱丽丝 的 人 ， 他们 在 2004 年 辞职	找 我 所有 2004 年 辞职 的 叫 爱丽丝 的 人	给 我 找到 所有 在 2004 年 辞职 的 叫 爱丽丝 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_end_date ) ) )
学生 最早 的 开学 日期 是 什么	什么 学生 最早 开始 上课	什么 是 学生 最早 开始 上课 的 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 非 麦肯锡 员工 的 生日	寻找 非 麦肯锡 员工 的 出生地	寻找 非 麦肯锡 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人口 最少 的 城市	出生 人口 最少 的 城市	人口 最少 的 城市	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
雇主 不是 麦肯锡 的 雇员	雇主 不是 麦肯锡 的 雇员	雇主 不是 麦肯锡 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 所有 与 alice 或 bob 性别 相同 的 人	找 我 所有 和 爱丽丝 或 鲍勃 性别 相同 的 人	找到 所有 和 alice 或 bob 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
2004 年 之前 离职 的 员工 的 性别	2004 年前 离职 员工 性别	2004 年 以前 离职 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出 生于 2004 年 ， 是 男性	他出 生于 2004 年 ， 是 个 男性	谁 是 2004 年 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 是 爱丽丝 的 朋友 ， 是 男性	她 是 爱丽丝 的 朋友 而且 是 个 男人	谁 是 爱丽丝 的 朋友 ， 是 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
那天 开始 工作 的 人 爱丽丝 辞去 了 工作	爱丽丝 辞职 那天 开始 工作 的 人	从 爱丽丝 辞职 那天 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 拥有 最少 的 朋友	朋友 最少 的 人	谁 的 朋友 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 开始 工作 后 辞职 的 员工	爱丽丝 开始 工作 后 辞职 的 员工	爱丽丝 开始 工作 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 不是 从 2004 年 开始 的	2004 年 未 开始 工作 的 员工	2004 年 起 不再 雇佣 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 离开 她 的 工作 后 ， 哪些 人 出生	爱丽丝 辞职 后 出生 的 人	爱丽斯 离职 后 出生 了 哪些 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
什么 是 性别 ， 最 多 两个 人 的 性别	最 多 两个 人 的 性别 是 什么	最 多 两个 人 的 性别 是 什么 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 单身 人士 的 朋友	谁 是 单身汉 的 朋友	谁 是 单身 人士 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
找到 员工 在 爱丽丝 的 出生日期 或 之后 开始	寻找 爱丽丝 生日 当天 或 之后 开始 工作 的 员工	寻找 在 alice 生日 当天 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不是 2004 年 的 学生 的 关系 状态 是 什么	结束 日期 不是 2004 年 的 学生 的 关系 状况 如何	如果 学生 的 恋爱 关系 结束 日期 不是 2004 年 ， 那 他们 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 早 于 爱丽丝 的 开始 日期	哪些 学生 的 结束 日期 早 于 爱丽丝 的 开始 日期	什么 学生 有 一个 结束 日期 早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 和 爱丽丝 在 同一个 学习 领域	哪个 学生 和 爱丽丝 在 同一个 研究 领域	哪个 学生 和 爱丽丝 在 同一个 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 朋友 在 2004 年 或 之后 开始 上 大学 的 人	2004 年 或 以后 开始 上 大学 的 朋友	有 朋友 在 2004 年 或 以后 上 大学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 朋友 ， 其 开始 日期 是 2004 年 之前	2004 年 以前 开始 工作 的 员工 的 朋友	2004 年 以前 入职 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 爱丽丝 不是 朋友 的 人	不是 爱丽丝 朋友 的 人	不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string ! = ) en.person.alice ) )
2004 年 或 之前 同期 开学 的 学生 的 性别	2004 年 及 以前 同期 入学 学生 性别	同 时期 至 2004 年 以前 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 不迟于 2004 年 结束 日期 的 员工 及其 朋友	查找 结束 日期 不晚 于 2004 年 的 员工 及其 朋友	找到 那些 截止 日期 不晚 于 2004 年 的 员工 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 开始 上学 后 停止 上学 的 人	爱丽丝 开学 后 停学 的 人	那些 在 爱丽丝 上学 后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 或 之前 开始 的 员工 的 性别	2004 年 以前 或 2004 年 开始 工作 的 雇员 的 性别	2004 年 或 之前 入职 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 高 ， 单身 的 人	身高 180 厘米 单身 的 人	身高 180 厘米 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
任何 一个 单身 出 生于 2004 年	2004 年 出生 的 单身 人士	2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 我 所有 同时 开始 或 在 爱丽丝 开始 后 开始 的 学生	给 我 找 所有 在 同一时间 或 爱丽丝 开始 后要 开始 的 学生	为 我 找到 所有 将 在 同一时间 或 爱丽丝 开始 后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 180 厘米 高 的 大学	找 一所 180 厘米 高 的 大学	寻找 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 麦肯锡 或谷歌 工作 的 人	在 麦肯锡 或谷歌 工作 的 人	在 麦肯锡 或谷歌 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪名 员工 在 2004 年 后 结束	2004 年 后 离职 的 员工	哪位 员工 在 2004 年 后 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 之前 或 之前 完成 的 员工	在 Alice 开始 工作 时 或 之前 完成 工作 的 员工	在 alice 开始 之前 或 之前 完成 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 最 关系 的 人	谁 的 关系 最 亲密	谁 拥有 最多 的 人际关系	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以后 开始 的 员工 的 性别 是 什么 ？	2004 年 以后 开始 工作 的 员工 的 性别 是 什么	2004 年 后 入职 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 的 员工 的 开始 日期 至少 是 2004 年 的 朋友	开始 日期 至少 是 2004 年 的	谁 是 开始 工作 日期 至少 为 2004 年 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 开始 日期 早 于 学生 爱丽丝 结束 日期 的 员工	查找 开始 日期 早 于 学生 alice 结束 日期 的 员工	查找 开始 日期 早 于 学生 alice 结束 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
同一天 出生 的 人 爱丽丝 开始 上学	爱丽丝 上学 那天 出生 的 人	出生 在 同一天 的 人 爱丽丝 开始 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) )
找到 2004 年 或 更 长时间 开始 日期 的 学生 的 出生 城市	找出 2004 年 及 以后 开始 学习 的 学生 的 出生 城市	找出 2004 年 或 更 早 开学 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 一个 大学 不是 棕色 大学 朋友 的 人	谁 的 大学 不是 布朗 大学 的 朋友	谁 的 大学 不是 布朗 大学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
关于 2004 年 之前 开始 工作 的 员工 的 关系 状况	2004 年 以前 开始 工作 的 员工 的 关系 状况	2004 年 以前 入职 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 出生 的 人	2004 年 以后 出生 的 人	2004 年 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
在 2004 年 之后 的 最后 一天 找到 员工 朋友	在 2004 年 后 的 最后 一天 找到 员工 的 朋友	2004 年 后 的 最后 一天 找 员工 做 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 有 两个 性别	有 两个 以上 性别 的 人	谁 有 超过 两种 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
是 麦肯锡 聘请 的 爱丽丝	艾丽斯 受雇 于 麦肯锡 吗	艾丽丝 受雇 于 麦肯锡 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )
找到 结束 日期 与 学生 alice 相同 的 员工	查找 结束 日期 与 学生 alice 相同 的 员工	查找 结束 日期 与 学生 alice 相同 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 上学 的 学生 的 关系 状况 如何 ？	2004 年 以前 入学 学生 的 人际关系 状况	2004 年 以前 入学 的 学生 的 人际关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 朋友 ， 大学 不是 棕色 大学	不是 布朗 大学 的 学生 朋友	不是 布朗 大学 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 朋友 在 2004 年 停止 了 工作	哪些 朋友 在 2004 年 停止 工作	哪些 朋友 2004 年 就 失业 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 与 2004 年 没有 开始 的 人 成为 朋友 的 人	与 2004 年 未 开始 交往 的 人 交朋友	与 2004 年 没有 开始 交往 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 结束 日期 晚于 员工 爱丽丝 的 结束 日期	哪些 员工 的 结束 日期 晚于 员工 alice 的 结束 日期	什么 员工 的 结束 日期 比 员工 alice 的 结束 日期 还 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 参加 布朗 大学 的 学生 的 性别	非 布朗 大学 学生 的 性别	非 布朗 大学 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
少于 两个 人 的 性别	少于 两个 人 的 性别	少于 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
不 在 布朗 大学 学习 的 学生 的 关系 状况	布朗 大学 非 在校学生 的 人际关系 状况	非 布朗 大学 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开学 日期 不是 2004 年 的 学生 的 性别	起始 日期 不是 2004 年 的 学生 性别	入学 日期 不是 2004 年 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开始 日期 的 学生 不是 在 学生 爱丽丝 的 结束 日期 之后	开始 日期 不 在 学生 alice 结束 日期 之后 的 学生	学生 开始 日期 后 ， 而 不是 结束 日期 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是 单身 还是 已婚 的 人	是 单身 还是 已婚	这个 人 是 单身 还是 已婚	( call SW.listValue ( call SW.concat en.relationship_status.single en.relationship_status.married ) )
什么 时候 爱丽丝 停止 为 麦肯锡 工作	爱丽丝 什么 时候 不再 为 麦肯锡 工作 了 ？	爱丽丝 什么 时候 不再 为 麦肯锡 工作 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
找到 每个 有 两性 的 人	找到 每个 有 两种 性别 的 人	找到 每 一个 有 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
什么 是 爱丽丝 的 2004 年 结束 日期	艾丽斯 2004 年 的 结束 日期 是 什么	爱丽丝 2004 年 的 结束 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_end_date ) ) )
谁 是 员工 ， 其 开始 日期 不是 2004 年 的 朋友	他们 是 员工 ， 开始 日期 不是 2004 年 的 朋友	那些 员工 的 起始 日期 不是 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 学生 的 结束 日期 是 在 学生 爱丽丝 的 开始 日期 之后	什么 学生 的 结束 日期 是 在 学生 alice 的 开始 日期 之后	学生 的 结束 日期 是 在 学生 alice 的 开始 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
不 作为 软件 工程师 工作 的 员工 的 性别	不 担任 软件 工程师 的 员工 性别	不 从事 软件 工程师 工作 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 开始 做 员工	爱丽丝 什么 时候 开始 当 雇员 的	爱丽斯 什么 时候 开始 当 雇员 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) )
谁 比 爱丽丝 短	谁 比 爱丽丝 矮	谁 比 爱丽丝 矮	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
2004 年 之前 开始 上学 的 人 的 关系 状况 如何 ？	2004 年 以前 开始 上学 的 人 的 关系 状况 如何	2004 年 以前 入学 的 人 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那里 有 多少 职位	有 多少 个 职位	有 多少 个 职衔	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ) )
哪个 学生 不是 来自 棕色 大学	哪个 学生 不是 布朗 大学 的	哪个 学生 不是 布朗 大学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 为 麦肯锡 以外 的 人 工作	为 麦肯锡 以外 的 人 工作	除了 麦肯锡 ， 还有 谁 在 为 别人 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 最后 一天 之前 或 之前 开始 的 学生	在 爱丽丝 最后 一天 之前 或 当天 开始 的 学生	在 爱丽丝 的 最后 一天 之前 或 当天 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 上学 的 最后 一天 或 之后 出生 的	在 爱丽丝 上学 的 最后 一天 或 之后 出生 的 人	谁 是 爱丽丝 最后 一天 上学 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
朋友 不到 两个 的 人	朋友 少于 两个 的 人	朋友 少于 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 与 学生 爱丽丝 相同 的 最后 一天 的 员工	找 和 学生 爱丽丝 最后 一天 同一天 的 员工	找到 和 学生 alice 同一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 在 爱丽丝 之后 开始	哪些 员工 是 在 Alice 之后 开始 的	哪些 员工 是 在 alice 之后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 结束 之前 开始 的 学生	在 爱丽丝 完成 之前 开始 的 学生	在 alice 完成 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那天 出生 的 人 爱丽丝 开始 工作	爱丽丝 上班 那天 出生 的 人	出生 在 爱丽丝 开始 工作 那天 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )
2004 年 作为 结束 日期 出生 的 学生 是 哪个 城市	出生 在 哪个 城市 ， 截止 日期 是 2004 年	2004 年 作为 结业 日期 的 学生 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 人 是 2004 年 来到 这里 的 员工 的 朋友	哪位 是 2004 年来 这里 的 员工 的 朋友	哪个 人 和 2004 年 来 过 这里 的 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 在 2004 年 之前 的 学生 的 出生地	结束 日期 在 2004 年 之前 的 学生 的 出生地	终止 日期 在 2004 年 以前 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 人 身高 180 厘米	哪些 人 身高 180 厘米	哪些 人 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找 我 的 学生 的 开始 日期 是 2004 年 或 2010 年	给 我 找些 2004 或 2010 年 开始 的 学生	给 我 找 一些 学生 ， 他们 的 开学 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 在 爱丽丝 之前 开始 的 学生	给 我 找 一个 在 爱丽丝 之前 开始 的 学生	帮 我 找 那个 比 爱丽丝 先 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪名 员工 不迟于 2004 年 结束	哪个 员工 在 2004 年 之前 离职	哪位 员工 在 2004 年 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 开始 日期 晚于 2004 年 的 员工 的 关系 状态	开始 日期 晚于 2004 年 的 员工 的 关系 状态 是 什么	如果 雇员 的 入职 日期 迟于 2004 年 ， 他们 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 不早 于 2004 年	哪些 学生 的 截止 日期 不早 于 2004 年	学生 的 毕业 日期 不早 于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 有 多 高	爱丽丝 有 多 高	爱丽丝 有 多 高	( call SW.listValue ( call SW.getProperty en.person.alice ( string height ) ) )
命名 在 alice 退出 之前 开始 的 员工	说出 爱丽丝 辞职 前 开始 工作 的 雇员 的 名字	说出 一名 在 alice 辞职 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 哪些 朋友 身高 180 厘米	爱丽丝 的 哪个 朋友 身高 180 厘米	爱丽丝 的 哪个 朋友 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
结束 日期 不 在 2004 年 之后 的 员工	结束 日期 不 在 2004 年 之后 的 员工	结束 日期 不 超过 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 与 学生 alice 或 更 高 版本 相同	哪些 员工 的 开始 日期 与 学生 alice 或 更 高 版本 相同	什么 员工 有 一个 开始 的 日期 是 相同 的 学生 爱丽丝 或 以后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 学生 的 出生地 在 哪里	2004 年 以前 开始 学习 的 学生 的 出生地 在 哪里	2004 年 以前 入学 的 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 不 超过 两个 专业	哪个 学生 的 专业 不 超过 两个	哪些 学生 的 专业 不 超过 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 之前 开始 的 学生 的 朋友	谁 是 2004 年 以前 开始 学习 的 学生 的 朋友 ？	谁 是 2004 年 以前 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
关系 状态 至少 为 两人 的 人	关系 状态 至少 为 两人 的 人	至少 有 两个 人 关系 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 学生 不迟于 2004 年 或 2010 年 毕业	哪些 学生 不迟于 2004 年 或 2010 年 毕业	哪些 学生 不迟于 2004 年 或 2010 年 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 所有 不 在 关系 中 并 在 2004 年 出生 的 人	找出 所有 没有 恋爱 关系 的 2004 年 出生 的 人	找出 所有 2004 年 出生 的 未婚 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 少于 两个 学习 领域 的 学生	寻找 学习 领域 少于 两个 的 学生	找 那些 学习 领域 少于 两个 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
纽约 的 哪些 城市 是 出 生于 此 的 人	纽约 有 哪些 城市 的 人 出生 在	人们 出生 在 纽约 的 哪些 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
从 2004 年 开始 的 学生 朋友	早于 2004 年 的 学生 朋友	2004 年 以前 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 作为 约会 的 学生	以 2004 年 为 日期 的 学生	以 2004 年 为 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 入学 的 学生 的 性别	2004 年 未 开学 学生 的 性别	2004 年 未 入学 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
职称 不是 软件 工程师 的 员工 的 朋友	职位 不是 软件 工程师 的 员工 的 朋友	职务 不是 软件 工程师 的 雇员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 朋友 的 人 目前 在线	有 朋友 在 网上 的 人	有 朋友 在 网上 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 我 在 2004 年 或 2010 年 出生 的 人	给 我 找 一个 2004 年 或 2010 年 出生 的 人	给 我 找 一个 出生 在 2004 年 或 2010 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
不 学习 计算机科学 的 学生 的 性别	非 计算机专业 学生 的 性别	非 计算机专业 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 员工 的 开始 日期 早 于 爱丽丝 的 出生日期	哪个 员工 的 开始 日期 早 于 爱丽丝 的 生日	什么 员工 的 上班 日期 比 爱丽斯 的 生日 还 早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人比 爱丽丝 更 早 出生	哪个 人比 爱丽丝 出生 得 早	什么 人比 爱丽丝 出生 得 早	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
2004 年 之前 出生 的 人	2004 年 以前 出生 的 人	2004 年 以前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪些 学生 在 爱丽丝 之前 毕业	哪个 学生 比 爱丽丝 先 毕业	哪些 学生 比 爱丽丝 先 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 纽约 出生 的 人 的 关系 状况 如何 ？	在 纽约 出生 的 人 的 关系 状况 如何	在 纽约 出生 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
谁 是 有 联系 的 朋友 谁 在 2004 年 之前 开始 上学	2004 年 以前 开始 上学 的 朋友	谁 是 2004 年 以前 入学 的 有 关系 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 早于 2004 年 的 员工 的 性别	截止 日期 在 2004 年 之前 的 员工 性别	2004 年 以前 离职 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 开始 约会 的 时间 不是 2004 年	哪些 员工 的 起始 日期 不是 2004 年	哪些 员工 的 入职 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最快 开始	员工 最快 开始	员工 最快 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 超过 两个 学习 领域 的 学生	寻找 不 超过 两个 学习 领域 的 学生	找到 不 超过 两个 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除了 棕色 大学 以外 任何 地方 学习 或 学习 的 人	在 布朗 大学 以外 的 任何 地方 学习 或 学习 的 人	在 布朗 大学 以外 的 地方 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 的 朋友 已 登录	谁 的 朋友 登录 了	谁 的 朋友 登录 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
任何 登录 的 男性	任何 登录 的 男性	任何 登录 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string logged_in ) ) )
与 2004 年 之前 雇用 的 员工 的 朋友 是 什么 人	什么 人 是 2004 年 以前 雇佣 的 员工 的 朋友	什么 人 是 2004 年 以前 聘用 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 之前 完成 的 员工	在 爱丽丝 之前 完成 的 员工	比 爱丽丝 先 完成 任务 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 以外 的 开始 日期 的 员工 的 关系 状态	员工 与 2004 年 以外 的 开始 日期 的 关系 状况	除了 2004 年 以外 ， 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
登录 的 alice 的 朋友	爱丽丝 的 一个 朋友 登录 了	登录 的 alice 的 一个 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
列出 2004 年 之前 完成学业 的 人 的 出生地	列出 2004 年 以前 完成学业 的 人 的 出生地	列出 2004 年 以前 完成学业 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学习 领域 最少 的 学生	学习 领域 最少 的 学生	学习 领域 最少 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以前 出生 的 人	2004 年 以前 出生 的 人	2004 年 以前 出生 的 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
员工 的 最后 一天 是 爱丽丝 的 最后 一天	最后 一天 是 在 爱丽丝 的 最后 一天 之后	哪些 员工 的 最后 一天 是 在 alice 的 最后 一天 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 员工 alice 共享 同一 雇主 的 员工	与 雇员 alice 共用 同一 雇主 的 雇员	与 雇员 爱丽丝 共用 一个 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 不 为 麦肯锡 工作	不 为 麦肯锡 工作 的 人	谁 不 为 麦肯锡 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
男性 ， 2004 年 出生 的 人	2004 年 出生 的 男性	2004 年 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 和 alice 同一天 开始 的 所有 员工	找 我 所有 和 爱丽丝 同一天 上班 的 员工	找到 所有 和 alice 同一天 上班 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 开始 日期 为 2004 年 或 之后 的 学生 的 朋友 是 什么	哪些 人 和 2004 年 或 更 晚 开始 的 学生 是 朋友 ？	什么 人 是 朋友 的 学生 有 一个 开始 日期 2004 年 或 以后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 登录 的 人 的 出生地	登录 的 人 的 出生地 是 什么	登录 的 人 的 出生地 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
什么 人 少于 两个 朋友	谁 的 朋友 少于 两个	什么 人 的 朋友 还 不到 两个	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
非 软件 工程师 的 关系 状况	非 软件 工程师 的 关系 现状	非 软件 工程师 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 爱丽丝 的 朋友 ， 也 有 单身 的 关系 状态	谁 是 爱丽丝 的 朋友 ， 和 她 也 有 单身 的 关系	谁 是 爱丽丝 的 朋友 ， 也 有 单身 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 麦肯锡 工作 的 人 ， 身高 180 厘米	在 麦肯锡 工作 ， 身高 180 厘米 的 人	在 麦肯锡 工作 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
哪位 软件 工程师 身高 180 厘米	哪个 软件 工程师 是 180 厘米 高	哪个 软件 工程师 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
那些 学生 在 爱丽丝 开始 她 的 新 工作 后 毕业	艾丽斯 开始 新 工作 后 哪个 学生 毕业	爱丽斯 开始 新 工作 后 ， 哪些 学生 能 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 登录 的 人 是 爱丽丝 的 朋友	找到 登录 的 人 谁 是 爱丽丝 的 朋友	找到 登录 的 人 ， 他们 是 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 学生 主修 计算机科学 或 历史	哪个 学生 主修 计算机科学 或 历史	哪些 学生 主修 计算机科学 或 历史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 爱丽丝 之后 完成	学生 在 爱丽丝 之后 完成	学生 跟 完 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 先 辞职	哪个 雇员 先 辞职	哪个 员工 先 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 与 2004 年 同期 或 之后 完成 的 关系 状况	2004 年 及 以后 同期 离职 员工 关系 状况	2004 年 前后 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 的 学生 ， 其 开学 日期 至少 是 2004 年 的 朋友	开始 日期 至少 是 2004 年 的 学生	谁 是 和 至少 2004 年 是 朋友 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
性别 只有 一个 人	只有 一个 人 的 性别	只有 一个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 最多 有 两个 职称	最 多 两个 职称 的 员工	最 多 拥有 两个 工作 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
每个 人 的 平均 身高 是 多少	每个 人 的 平均 身高 是 多少	每个 人 的 平均 身高 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
2004 年 以外 的 最后 一天 员工 的 性别 是 什么	除 2004 年外 ， 最近 几天 工作 的 员工 的 性别 是 什么 ？	除 2004 年外 ， 最近 工作日 数 的 雇员 性别 为何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 开始 最新	员工 最新 开始	最新 雇员 入职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 工作 之前 辞职 的 员工	在 爱丽丝 开始 工作 前 辞职 的 雇员	在 alice 开始 工作 之前 就 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 为 2004 年 或 之后 的 学生	查找 起始 日期 为 2004 或 更 高 的 学生	找到 2004 年 或 以后 开学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 结束 之前 开始 的 学生	在 爱丽丝 完成 之前 就 开始 学习 的 学生	在 爱丽丝 完成 之前 就 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 或 之后 开始 工作 的 人 在 哪里	在 2004 年 或 之后 开始 工作 的 人 在 哪里 出生	2004 年 以后 开始 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 之前 开始 工作 的 人 的 朋友	找 2004 年 以前 开始 工作 的 人 的 朋友	找 一些 2004 年 以前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是非 软件 工程师 的 关系 状态	不是 软件 工程师 的 人 的 关系 状况 如何	不是 软件 工程师 的 每个 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
除了 纽约 以外 的 地方 出生 的 人	出生 在 纽约 以外 任何 地方 的 人	出生 在 纽约 以外 任何 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
谁 是 180 厘米 的 朋友	谁 是 180 厘米 的 朋友	180 厘米 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 结束 日期 是 学生 爱丽丝 或 更 晚 的 开始 日期 的 员工	查找 结束 日期 为 学生 alice 或 更 晚 开始 日期 的 员工	查找 结束 日期 为 学生 alice 的 开始 日期 或 以后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 或 之前 开始 的 学生 的 出生地 城市	2004 年 或 之前 开始 学习 的 学生 的 出生地 城市 是 什么 ？	2004 年 或 之前 入学 的 学生 的 出生地 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 比 爱丽丝 的 出生日期 更 早 开始	哪个 雇员 比 爱丽丝 的 生日 早	哪位 员工 比 爱丽斯 的 生日 还 早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 出生 的 单身 人士	2004 年 出生 的 单身汉	2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
谁 在 学生 爱丽丝 之后 开始 工作	她 在 学生 爱丽丝 之后 就 开始 工作 了	是 谁 在 爱丽丝 之后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 结束 日期 大于 爱丽丝 的 开始 日期	哪个 学生 的 结束 日期 大于 爱丽丝 的 开始 日期	哪些 学生 的 结束 日期 大于 alice 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两个 或 更少 出生地 的 人	有 两个 或 两个 以下 出生地 的 人	有 两个 或 两个 以下 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )
什么 人 出生 在 纽约 ， 是 爱丽丝 的 朋友	什么 人 出生 在 纽约 和 爱丽丝 是 朋友	哪个 人 出生 在 纽约 ， 并且 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string friend ) ( string = ) en.person.alice ) )
一名 工人 是 软件 工程师 或 项目经理	软件 工程师 或 程序 经理	软件 工程师 或 程序 经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不能 解释	无法解释	不能 解释	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
雇员 不 超过 两名 雇主	雇主 不 超过 两个 的 雇员	不 超过 两个 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 与 爱丽丝 成为 朋友 的 人	找到 所有 和 爱丽丝 是 朋友 的 单身 人士	找到 所有 和 alice 是 朋友 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 爱丽丝 的 出生日期 或 之后 毕业 的 学生	爱丽丝 生日 当天 或 之后 毕业 的 学生	爱丽丝 生日 当天 或 之后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 辞职 的 员工 是 什么 性别	2004 年 没有 辞职 的 员工 是 什么 性别	2004 年 没有 辞职 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是非 软件 工程师 的 员工 的 关系 状态	非 软件 工程师 的 员工 的 关系 状况 如何	非 软件 工程师 的 雇员 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 有 一个 职称	一职 员工	只有 一个 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 是 2004 年 或 更 高 的 学生 的 关系 状态 是 什么	结束 日期 在 2004 年 或 以后 的 学生 的 关系 状况 如何	如果 学生 的 恋爱 关系 结束 日期 在 2004 年 或 以后 ， 他们 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 当前 在线 人员 的 朋友	查找 当前 在线 用户 的 朋友	找到 当前 在线 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 不早 于 2004 年 的 员工 的 关系 状态	截止 日期 不早 于 2004 年 的 员工 关系 状况	离职 日期 不早 于 2004 年 的 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 退出 的 人 的 朋友	2004 年前 辞职 的 朋友	2004 年 以前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 没有 入学 的 学生 的 出生地	一个 2004 年 才 出生 的 学生 的 出生地	一名 2004 年 毕业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
他于 2004 年出 生于 纽约	2004 年出 生于 纽约	谁 2004 年 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找 我 2004 年 出生 的 人	找 我 2004 年 出生 的 人	找 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 180 厘米 高 的 人 的 关系 状态	了解 180 厘米 高 人群 的 人际关系 状况	找到 180 厘米 高 的 人 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 有 一两个 学习 领域 的 学生	寻找 有 一两个 学习 领域 的 学生	找 一两个 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
只有 一个 朋友 的 人	只有 一个 朋友 的 人	只有 一个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 员工 的 起步 不 超过 爱丽丝	哪个 员工 的 起薪 不 超过 爱丽丝	哪个 雇员 的 起点 不 大于 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 最多 在 艾 莉斯 的 出生日期 结束	哪个 学生 最多 在 爱丽丝 生日 那天 结束	哪位 学生 的 生日 最多 是 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
作为 大多数 人 的 关系 状态	大多数 人 的 关系 状况	大多数 人 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
有 多少 性别	有 多少 性别	有 多少 种 性别	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )
谁 是 软件 工程师 或 项目经理	谁 是 软件 工程师 或 程序 经理	谁 是 软件 工程师 或 程序 经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 2004 年 没有 入学 的 学生 的 出生地	什么 城市 是 2004 年 未 入学 学生 的 出生地	哪些 城市 是 2004 年 没有 开始 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 与 爱丽丝 同时 完成	与 爱丽丝 同时 毕业 的 学生	学生 们 完成 了 与 爱丽丝 同 时期 的 课程	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 开始 同时 或 在 爱丽丝 之后 工作 的 人	同时 或 在 爱丽丝 之后 开始 工作 的 人	和 爱丽丝 在 同一时间 开始 工作 或 在 爱丽丝 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 加入 她 的 学习 之前 ， 找到 那些 辞掉 工作 的 人	在 爱丽丝 加入 学习 之前 找到 辞职 的 人	找出 那些 在 alice 加入 她 的 研究 之前 就 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 结束 日期 是 2004 年 或 以后 ， 谁 是 他们 的 朋友	哪些 员工 的 结束 日期 是 2004 年 或 更 晚 ， 哪些 是 他们 的 朋友	哪些 员工 的 离职 日期 是 2004 年 或 以后 ? 谁 是 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
以 软件 工程师 或 经理 身份 工作 的 员工	担任 软件 工程师 或 经理 的 员工	软件 工程师 或 经理 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 2004 年 和 2010 年 结束 了 学业	2004 年 和 2010 年 哪些 学生 退学	哪些 学生 在 2004 年 和 2010 年 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
到 2004 年 毕业 的 学生 是 什么 性别	2004 年 毕业 的 学生 是 什么 性别	2004 年 毕业 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 同一天 或 以后 离开 的 员工	与 Alice 在 同一天 或 更 晚 离开 的 员工	与 爱丽丝 同一天 或 更 晚 离开 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 最长 的 员工	结束 日期 最大 的 员工	拥有 最大 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
无论是 爱丽丝 还是 鲍勃	不是 爱丽丝 就是 鲍勃	不是 alice 就是 bob	( call SW.listValue ( call SW.concat en.person.alice en.person.bob ) )
哪个 员工 与 alice 在 同一天 结束	哪个 雇员 和 爱丽丝 在 同一天 结束	哪位 员工 和 爱丽丝 是 同一天 离职 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
目前 登录 的 人 ， 出生 在 纽约	目前 登录 的 在 纽约 出生 的 人	目前 登录 的 人 是 在 纽约 出生 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 爱丽丝 退出 之前 ， 学生 开始 做 什么 工作	爱丽丝 辞职 前 是 哪个 学生 干 的	爱丽丝 辞职 前 是 哪个 学生 开始 做 这份 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 结束 日期 与 员工 爱丽丝 的 开始 日期 相同	哪些 员工 的 结束 日期 与 员工 alice 的 开始 日期 相同	什么 员工 的 结束 日期 与 员工 alice 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 ， 不少 于 一个 学习 领域	不少 于 一个 学习 领域 的 学生	不少 于 一个 学科 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 开始 日期 是 2004 年 之后	2004 年 以后 开始 工作 的 员工	2004 年 以后 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 学生 的 开始 日期 与 员工 alice 的 结束 日期 相同	查找 开始 日期 与 员工 alice 的 结束 日期 相同 的 学生	查找 起始 日期 与 员工 alice 的 结束 日期 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 员工	结束 日期 不是 2004 年 的 员工	员工 的 离职 日期 不是 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 不 超过 2004 年 的 员工 的 关系 状态	查找 结束 日期 不 超过 2004 年 的 员工 的 关系 状态	查找 终止 日期 不 超过 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 男性 的 人	找到 男性	找 一些 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 员工 在 爱丽丝 的 最后 一天 之前 开始	在 爱丽丝 的 最后 一天 之前 找到 员工	寻找 在 alice 的 最后 一天 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 不 在 员工 爱丽丝 的 开始 日期 之前	开始 日期 不早 于 员工 alice 开始 日期 的 员工	开始 日期 不是 在 雇员 alice 开始 日期 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 早于 2004 年 的 学生 的 关系 状况 如何	截止 日期 早于 2004 年 的 学生 的 关系 状况 如何	终止 日期 早于 2004 年 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 员工 不是 软件 工程师 的 朋友	与非 软件 工程师 的 员工 交朋友 的 人	与 不是 软件 工程师 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 大于 学生 爱丽丝 的 结束 日期	哪些 学生 的 结束 日期 大于 学生 爱丽丝 的 结束 日期	什么 学生 的 结束 日期 比 学生 爱丽丝 的 结束 日期 还长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 一个 人 的 数量	一个 人 的 数目 是 多少	一个 人 的 人数 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 是 变性人 的 识别 性别	变性人 的 性别 是 什么	变性人 的 身份 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
除了 2004 年 以外 加入 多年 的 学生 朋友	2004 年 以外 的 学生 朋友	2004 年 以外 年份 加入 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 至 2010 年间 出生 的 人	2004 年 至 2010 年 出生 的 人	2004 年 至 2010 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
什么 在线 人 是 爱丽丝 的 朋友	网上 的 人 是 爱丽丝 的 朋友	网上 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
什么 是 2004 年 没有 毕业 的 学生 的 出生地	2004 年 没有 毕业 的 学生 的 出生地 是 什么	2004 年 未 毕业 的 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 入学 日期 不迟于 2004 年	哪个 学生 的 起始 日期 不迟于 2004 年	什么 学生 的 开学 日期 不迟于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之前 完成学业 的 人 的 关系 状况 如何 ？	2004 年 以前 完成学业 的 人 的 关系 状况 如何	2004 年 以前 毕业 的 人 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 性别 在 2004 年 没有 完成	2004 年 未 完成学业 的 学生 性别	2004 年 未 毕业 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 学生 与 爱丽丝 同一天 开始	找到 和 爱丽丝 同一天 开始 的 学生	找到 和 alice 同一天 开学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 2003 年 或 之前 开始 的 学生 的 关系 状况 是 什么	2003 年 及 以前 学生 的 恋爱 状况 如何	2003 年 或 以前 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 在 纽约 或 北京 的 人	在 纽约 或 北京 出生 的 人	出生 在 纽约 或 北京 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
什么 关系 状态 由 最少 人数 列出	按 最少 人数 列出 的 关系 状态	什么 关系 状态 被 最少 的 人 列出	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
人们 在 网上 出生 的 地方	网上 出生 的 人 在 哪里	网上 出生 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
那些 在 同一天 停止 工作 的 人 爱丽丝 开始 上学	爱丽丝 上学 那天 就 停止 工作 的 人	那些 在 爱丽丝 开始 上学 的 当天 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 结束 的 学生 的 性别	2004 年 以前 毕业 的 学生 性别	2004 年 以前 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
查找 开始 日期 不晚 于 2004 年 的 学生 的 关系 状态	查找 开始 日期 不晚 于 2004 年 的 学生 的 关系 状态	查找 不迟于 2004 年 开学 的 学生 的 恋爱 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 男性 ， 是 爱丽丝 的 朋友	他 是 男性 ， 和 爱丽丝 是 朋友	谁 是 男性 ， 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
开始 日期 在 学生 爱丽丝 开始 日期 之前 的 员工	开始 日期 早 于 学生 alice 开始 日期 的 员工	开始 日期 在 学生 alice 开始 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
这个 人 是 单身 还是 已婚	这个 人 是 单身 还是 已婚	这个 人 是 单身 还是 已婚	( call SW.listValue ( call SW.concat en.relationship_status.single en.relationship_status.married ) )
与 alice 职位 相同 的 员工	与 爱丽丝 有 相同 职称 的 雇员	与 alice 工作 头衔 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 与 爱丽丝 同时 开始	哪个 雇员 和 爱丽丝 同时 开始 工作	哪位 员工 和 爱丽丝 同时 上班	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 的 结束 日期 早 于 爱丽丝 的 生日	什么 学生 的 毕业 日期 不早 于 爱丽丝 的 生日	学生 们 的 结业 日期 竟然 不早 于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 或 以后 毕业 的 学生 的 朋友	与 2004 年 或 以后 毕业 的 学生 交朋友 的 人	谁 是 2004 年 或 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 结束 日期 少于 2004 年 的 所有 员工 的 诞生 城市	截止 日期 低于 2004 年 的 所有 员工 的 出生 城市 是 什么	哪些 城市 的 所有 员工 的 离职 日期 少于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最 多 两份 工作	最 多 两份 工作 的 员工	最多 有 两份 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 在 爱丽丝 工作 的 最后 一天 开始 上学	爱丽丝 工作 的 最后 一天 哪个 学生 开始 上学	爱丽丝 工作 的 最后 一天 是 哪个 学生 开始 上学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 为 最少 的 雇主 工作	哪个 雇员 为 最少 的 雇主 工作	哪个 雇员 为 最少 的 雇主 工作 过	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 我 2004 年 之前 毕业 的 学生 朋友	给 我 找些 2004 年 以前 毕业 的 同学 的 朋友	给 我 找 一些 2004 年 以前 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 不 超过 员工 爱丽丝 的 开始 日期	哪些 学生 的 结束 日期 不 大于 员工 alice 的 开始 日期	什么 学生 有 一个 结束 日期 不 大于 雇员 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
男性 单身	什么 男人 是 单身	什么 男性 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
谁 是 不 为 mckinsey 工作 的 员工 的 朋友	谁 是 不 为 麦肯锡 工作 的 员工 的 朋友 ？	谁 是 不 为 麦肯锡 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 开始 日期 不晚 于 爱丽丝 的 出生日期	哪些 员工 的 开始 日期 不迟于 爱丽丝 的 生日	什么 员工 的 上班 日期 不晚 于 爱丽斯 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 学生 的 结束 日期 与 员工 alice 的 开始 日期 相同	查找 结束 日期 与 员工 alice 的 开始 日期 相同 的 学生	查找 结束 日期 与 员工 alice 的 开始 日期 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 人 的 关系 状态 为 单身	哪个 人 的 关系 状态 是 单身	哪个 人 是 单身	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
员工 最后 一天 不早 于 2004 年	哪位 员工 最后 一天 不早 于 2004 年	哪些 员工 的 离职 日期 不早 于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 上学 的 人 的 性别 是 什么 ？	2004 年 以前 开始 上学 的 人 的 性别 是 什么	2004 年 以前 入学 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 早 于 爱丽丝 的 出生日期	结束 日期 早 于 爱丽丝 出生日期 的 学生	结束 日期 在 爱丽丝 生日 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 或 之前 开始 上学 的 人 是 什么 性别	2004 年 或 之前 开始 上学 的 人 是 什么 性别	在 2004 年 或 之前 开始 上学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 ， 参加 棕色 大学 的 人	找个 180 厘米 高 的 人 上 布朗 大学	找 一些 身高 180 厘米 的 人 ， 就读 布朗 大学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
爱丽丝 就业 的 开始 日期 于 2004 年 结束	艾丽斯 2004 年 结束 的 工作 开始 日期	alice 的 工作 开始 日期 在 2004 年 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
找出 mckinsey 未 聘用 的 员工 的 性别	找出 麦肯锡 未 雇佣 员工 的 性别	确定 未 被 麦肯锡 雇佣 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 的 性别	爱丽丝 朋友 的 性别	爱丽丝 朋友 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
找到 最后 一天 在 爱丽丝 生日 之后 的 学生	找到 最后 一天 在 爱丽丝 生日 之后 的 学生	找 一个 学生 ， 他 的 最后 一天 是 在 爱丽丝 生日 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 的 出生日期 是 什么 ？	180 厘米 高 的 人 的 生日 是 什么 时候	身高 180 厘米 的 人 的 生日 是 哪一天	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 最早 开始 的 是 什么	哪个 员工 最早 开始 工作	哪位 员工 开始 得 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 在 2004 年 出生 的 朋友	找到 爱丽丝 2004 年 出生 的 朋友	找出 爱丽丝 2004 年 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 公司 雇用 180 厘米 高 的 人	找 公司 雇佣 180 厘米 高 的 人	找 一家 公司 雇佣 那些 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 所有 在 爱丽丝 开始 之前 出生 的 人	找出 爱丽丝 出生 前 所有 的 人	找出 所有 在 alice 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
与 工作人员 不是 软件 工程师 的 朋友	与 不是 软件 工程师 的 工作人员 交朋友 的 人	与 不是 软件 工程师 的 同事 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 学习 计算机科学 或 历史	哪个 学生 学 的 是 计算机科学 或 历史	哪个 学生 学 的 是 计算机科学 还是 历史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 不 学习 计算机科学 的 学生 的 朋友	谁 是 不学 计算机 的 学生 的 朋友	谁 是 不 学习 计算机科学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
高度 为 180 厘米 的 人 的 性别	身高 180cm 者 性别	身高 180 厘米 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
2003 年 后 加入 学习 的 人	2003 年 以后 参加 学习 的 人	2003 年 后 加入 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 研究 开始 日期 或 之后 出生 的 人	在 艾丽斯 学习 开始 之日 或 之后 出生 的 人	在 alice 的 研究 开始 日 或 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
高于 200 厘米 的 人	身高 超过 200 厘米 的 人	身高 超过 200 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
出生 在 纽约 并且 目前 在线 的 人	在 纽约 出生 并 目前 在线 的 人	出生 在 纽约 ， 目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string logged_in ) ) )
告诉 我 所有 将 在 2004 年 或 2010 年 离开 的 学生	给 我 看看 2004 年 或 2010 年 要 离开 的 所有 学生	告诉 我 所有 将 在 2004 年 或 2010 年 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 2004 年 及 以后 找到 员工	从 2004 年 及 以后 开始 寻找 员工	从 2004 年 开始 寻找 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之后 停止 工作 的 人 成为 朋友 的 人	与 2004 年 后 停止 工作 的 人 交朋友 的 人	与 2004 年 后 失业 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
以 爱丽丝 开始 或 之后 开始 的 员工	以 Alice 开头 或 之后 的 员工	从 alice 开始 或 之后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 晚于 2004 年 的 员工 和 他们 的 朋友	查找 结束 日期 晚于 2004 年 的 员工 及其 朋友	找到 工作 结束 日期 晚于 2004 年 的 员工 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 爱丽丝 和 鲍勃 的 性别	爱丽丝 和 波比 是 什么 性别	爱丽丝 和 鲍勃 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
哪些 人 是 与 2004 年 以前 开始 的 学生 的 朋友	哪些 人 和 2004 年 开始 的 学生 是 朋友 ？	哪些 人 是 不 早于 2004 年 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
没有 在 2004 年 开始 的 员工	2004 年 未 开始 工作 的 员工	2004 年 没有 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 个人 的 性别	个人 的 性别 是 什么	一个 人 的 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
我 的 朋友 在 180 厘米 大学 的 地方	我 那些 180 厘米 长 的 朋友 在 哪里 上 大学	我 那些 身高 180 厘米 的 朋友 在 哪里 上 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 爱丽丝 和 鲍勃 的 关系 状态	爱丽丝 和 波比 的 关系 状态 是 什么	爱丽斯 和 鲍勃 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
那些 在 2004 年 或 2010 年 停止 上学 的 人	2004 年 或 2010 年 辍学 的 人	2004 年 或 2010 年 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 完成 的 员工	2004 年 未 完成 工作 的 员工	2004 年 没有 完成 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 开始 的 员工 的 关系 状态	2004 年 未 开始 工作 的 员工 的 关系 状况 如何	没有 在 2004 年 开始 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 员工 有 相同 或 更 大 的 员工 alice 结束 日期	哪个 员工 的 结束 日期 与 员工 alice 相同 或 更 大	哪位 员工 拥有 与 员工 alice 相同 或 更 大 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 公司 的 电话号码	公司 的 电话号码 是 多少	公司 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ) )
找到 一个 在 两个 或 两个 以下 工作岗位 上 工作 过 的 员工	给 我 找 一个 做过 两份 或 更少 工作 的 雇员	给 我 找 一个 做过 两份 或 两份 以下 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之后 开始 上学 的 人	2004 年 或 之后 开始 上学 的 人	在 2004 年 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生地 与 180 厘米 高 的 人 相同 的 人	出生地 与 身高 180 厘米 的 人 相同 的 人	出生 时 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
哪个 学生 与 2004 年 以后 开始 的 学生 有 同样 的 关系	哪个 学生 和 2004 年 以后 开始 学习 的 学生 有 同样 的 关系	哪个 学生 与 2004 年 后 入学 的 学生 关系 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 爱丽丝 开始 日期 后 员工 的 开始 日期	什么 员工 的 开始 日期 在 员工 alice 的 开始 日期 之后	什么 雇员 在 雇员 爱丽丝 的 开始 日期 之后 有 一个 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 的 性别	爱丽丝 的 性别 是 什么	爱丽丝 的 性别 是 什么	( call SW.listValue ( call SW.getProperty en.person.alice ( string gender ) ) )
什么 是 2004 年 以后 开始 的 学生 的 出生地	2004 年 以后 开始 学习 的 学生 的 出生地 是 什么 ？	2004 年 后 入学 的 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 与 爱丽丝 的 朋友 是 朋友	什么 人 和 爱丽丝 的 朋友 是 朋友	那些 和 爱丽丝 是 朋友 的 人 是 什么 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
谁 出生 在 两个 地方	他 出生 在 两个 地方	谁 出生 在 两个 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
与 爱丽丝 出生 在 同一个 地方 的 人	和 爱丽丝 出生 在 同一个 地方 的 人	和 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
什么 时候 是 爱丽丝 的 结束 日期	爱丽丝 什么 时候 结束	爱丽丝 的 最后 期限 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 开始 的 学生 的 性别 是 什么	2004 年 未 入学 的 学生 的 性别 是 什么 ？	没有 在 2004 年 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 身高 180 厘米 的 大学 去 哪儿	那些 180 厘米 高 的 去 哪 所 大学	什么 大学 做 那些 180 厘米 高 的 去	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 不 学习 计算机科学 领域 的 学生 的 关系 状况	寻找 非 计算机专业 学生 的 关系 现状	了解 非 计算机专业 学生 的 人际关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 员工 爱丽丝 开始 日期 之前 的 学生	结束 日期 早 于 雇员 alice 开始 日期 的 学生	结束 日期 在 雇员 爱丽丝 开始 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 纽约 人 的 朋友	谁 是 纽约 人 的 朋友	谁 是 那个 从 纽约 来 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
那些 不是 软件 工程师 出生 的 工作人员 在 哪里	不是 软件 工程师 的 工人 是 在 哪里 出生 的	不是 软件 工程师 的 工人 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 爱丽丝 的 最后 一个 日期 是 棕色 大学 的 学生	布朗 大学 学生 爱丽丝 的 最后 一次 约会 是 什么 时候	爱丽丝 是 布朗 大学 的 学生 ， 她 最后 一次 约会 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
工作 职位 最少 的 工作人员	职称 最少 的 工作人员	工作 头衔 最少 的 工人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 加入 工作 之前 完成 教育 的 人	在 爱丽丝 加入 工作 之前 完成 教育 的 人	在 alice 加入 工作 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 第一个 开始 的 学生	找到 最先 开始 的 学生	找出 最先 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 雇主 与 雇主 不同 的 雇员	找 一个 和 爱丽丝 不同 的 雇主	寻找 雇主 与 alice 不同 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 爱丽丝 也 是 朋友 ， 也 出 生于 2004 年	艾丽斯 的 朋友 们 也 都 是 2004 年 出生 的	爱丽丝 的 朋友 们 也 是 2004 年 出生 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 性别 有 最少 的 人	什么 性别 的 人 最少	什么 性别 的 人 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
人们 的 身高 是 180 厘米 ， 与 爱丽丝 有着 相同 的 关系	什么 人 的 身高 是 180 厘米 ， 和 爱丽丝 的 关系 状况 一样	什么 人有 180 厘米 的 身高 和 爱丽丝 一样 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
2004 年 或 之前 开始 工作 的 人 在 哪里 出生	在 2004 年 或 之前 开始 工作 的 人 在 哪里 出生	在 2004 年 出生 或 之前 开始 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 未 在 2004 年 辞职 的 员工 的 性别	2004 年 未 离职 员工 性别	2004 年 未 离职 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 一个 人 的 学习 领域 不是 计算机科学 的 朋友	谁 的 研究 领域 不是 计算机科学 的 朋友	谁 的 研究 领域 不是 计算机科学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 学生 在 爱丽丝 开始 后 结束	爱丽丝 开始 后 结束 的 学生	一个 学生 在 爱丽丝 开始 后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是 爱丽丝 的 职称 软件 工程师	是 爱丽丝 的 职称 软件 工程师	爱丽斯 的 职称 是 软件 工程师 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string job_title ) ) )
单身 且 目前 在线 的 人	单身 且 目前 在线 的 人	单身 且 目前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
2005 年 之前 离职 的 员工 的 性别	2005 年前 离职 员工 性别	2005 年 以前 离职 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 的 人 ， 他们 是 爱丽丝 的 性别	找 一个 身高 180 厘米 ， 和 爱丽丝 性别 相同 的 人	找 一个 180 厘米 高 ， 和 爱丽丝 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
两个 或 两个 以下 的 人 的 关系 状况	两人 或 两人 以下 的 关系 状况	两人 或 两人 以下 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
和 爱丽丝 一起 离开 的 学生	跟 爱丽丝 一起 离开 的 学生	跟 爱丽丝 一起 走 或 跟 在 爱丽丝 之后 走 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最后 一天 也 是 爱丽丝 最后 一天 的 员工	最后 一天 也 是 爱丽丝 最后 一天 的 雇员	员工 的 最后 一天 也 是 爱丽丝 的 最后 一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之前 开始 的 学生 朋友	2004 年 或 以前 开始 的 学生 的 朋友	2004 年 或 以前 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 最 开始 的 是 什么	什么 学生 最早 开始	学生 最早 开始 做 什么 ?	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 朋友 已 登录	爱丽丝 的 朋友 们 都 登录 了	爱丽丝 的 朋友 们 登录 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
身高 180 厘米 的 单打	身高 180 厘米 的 单身汉	身高 180 厘米 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
那些 在 2004 年 之前 或 2010 年 之前 开始 工作 的 人	2004 年 或 2010 年 以前 开始 工作 的 人	在 2004 年 或 2010 年 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 纽约 出生 的 人 ， 目前 在线	在 纽约 出生 的 人 现在 都 在 网上	出生 在 纽约 的 人 现在 上网	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪些 员工 在 2004 年 或 2010 年 之前 开始	哪些 员工 在 2004 年 或 2010 年 之前 开始 工作	哪些 员工 是 在 2004 年 或 2010 年 之前 入职 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 拥有 2004 年 以后 的 开始 日期 的 朋友	在 2004 年 以后 有 开始 约会 的 朋友	谁 有 朋友 的 开始 日期 是 2004 年 以后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 性别 的 人	性别 最多 的 人	性别 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string gender ) ) )
员工 最后 一天 不迟于 2004 年 或 2010 年	哪位 员工 最后 一天 不迟于 2004 年 或 2010 年	哪些 员工 的 离职 日期 不晚 于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 爱丽丝 的 生日 之前 开始	爱丽丝 生日 前 开始 工作 的 员工	员工 在 爱丽丝 生日 之前 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
首先 辞去 工作 的 人	第一个 辞职 的 人	第一个 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 结束 日期 之后 ， 学生 开始 了 什么	爱丽丝 结束 约会 后 的 学生	爱丽丝 结束 约会 后 ， 学生 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 不是 爱丽丝 的 朋友	她 不是 爱丽丝 的 朋友	谁 不是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
在 2004 年 之前 或 2010 年 离职 的 员工	2004 年 或 2010 年 离职 的 员工	2004 年 或 2010 年 以前 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 在 同一天 或 在 爱丽丝 之后 辞职	哪位 员工 在 同一天 或 爱丽丝 之后 辞职	哪个 雇员 在 同一天 或 在 爱丽丝 之后 就 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 为 2004 或 更 高 版本 的 员工 的 性别	查找 结束 日期 为 2004 年 或 更 晚 的 员工 的 性别	找出 2004 年 或 以后 离职 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 与 员工 爱丽丝 的 开始 日期 相同	起始 日期 与 员工 alice 相同 的 员工	雇员 的 入职 日期 与 雇员 alice 的 入职 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 一个 人 的 身高	找到 一个 人 的 身高	找出 一个 人 的 身高	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
谁 拥有 最少 的 朋友	朋友 最少 的 人	谁 的 朋友 数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 我 所有 的 员工 ， 开始 日期 是 2004 年 或 2010 年	找 我 所有 员工 卖淫 开始 日期 是 2004 年 或 2010 年	找到 我 所有 的 员工 开始 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 结束 日期 为 2004 年 或 之后 的 学生 的 朋友 是 什么 人	什么 人 和 一个 结束 日期 为 2004 或 更 晚 的 学生 是 朋友	什么 人 是 朋友 的 学生 有 一个 结束 日期 2004 年 或 以后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
至少 180 厘米 高 的 人	身高 至少 180 厘米 的 人	身高 至少 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
出生 城市 的 员工 ， 其 职称 不是 软件 工程师	非 软件 工程师 员工 出生 城市	非 软件 工程师 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
和 爱丽丝 一样 生日 的 人	和 爱丽丝 生日 一样 的 人	和 爱丽丝 同一天 生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
人们 登录 的 是 什么 ， 他们 是 谁 的 朋友	哪些 人 登录 ， 他们 与 哪些 人 是 朋友	人们 登录 什么 和 他们 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
员工 的 开始 日期 是 爱丽丝 的 出生日期	起始 日期 为 Alice 出生日期 的 员工	员工 的 起始 日期 是 alice 的 出生日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 ， 艾丽斯 从 哪 所 大学毕业	艾丽斯 2004 年 毕业 于 哪 所 大学	爱丽丝 2004 年 毕业 于 哪 所 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
他们 的 关系 状态 是 独特 的	其 关系 状态 是 唯一 的	谁 的 关系 状态 是 独特 的	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 2004 年 开始 工作 的 人 的 朋友	谁 是 2004 年 开始 工作 的 人 的 朋友	谁 是 2004 年 开始 工作 的 那个 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 三个 或 更 多 朋友 的 人	有 三个 或 更 多 朋友 的 人	有 三个 或 更 多 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
这个 学生 几乎 与 爱丽丝 同时 完成学业	这个 学生 几乎 和 爱丽丝 同时 毕业	这个 学生 几乎 和 爱丽丝 同时 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 以外 的 一年 开始 学习 的 人 的 朋友	在 2004 年 以外 的 一年 开始 学习 的 人 的 朋友	在 2004 年 以外 的 一年 开始 学习 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 不 学习 计算机科学 领域 的 学生 的 性别	非 计算机专业 学生 的 性别	非 计算机专业 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 没有 毕业 的 学生 的 性别 是 什么	2004 年 未 毕业 学生 的 性别	2004 年 未 毕业 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 最早 完成 了 学业	最早 完成学业 的 人	谁 完成学业 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结局 不 超过 爱丽丝 的 开始 日期	哪个 雇员 的 离职 日期 不 超过 爱丽丝 的 起始 日期	哪位 员工 的 离职 日期 不 超过 爱丽斯 的 起始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 为 2004 年 ， 身高 180 厘米 的 人	寻找 2004 年 开始 ， 身高 180 厘米 的 人	找 一个 2004 年 出生 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 所有 将 在 爱丽丝 的 生日 开始 的 员工	帮 我 找到 所有 在 爱丽丝 生日 前 就 开始 工作 的 员工	帮 我 找到 所有 在 alice 生日 之前 会 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 180 厘米 高 的 人 称号	180 厘米 高 的 人 的 职称 是 什么	身高 180 厘米 的 人 的 职称 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 加入 之前 辞职 的 人	爱丽丝 加入 前 辞职 的 人	在 alice 加入 之前 就 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 的 最后 一次 不早 于 2004 年 或 2010 年	哪些 员工 的 离职 时间 不早 于 2004 年 或 2010 年	哪些 员工 的 离职 时间 不早 于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 2004 年 或 2010 年 之前 开始	2004 年 或 2010 年 之前 开始 的 学生	哪些 学生 在 2004 年 或 2010 年 之前 入学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 2004 年 未 退出 的 员工 的 朋友 命名 为	说出 一个 在 2004 年 没有 辞职 的 员工 的 朋友	说出 一位 2004 年 没有 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 是 爱丽丝 的 朋友 ， 身高 180 厘米	什么 人 和 爱丽丝 是 朋友 ， 身高 180 厘米	什么 人 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 测量 180 厘米 ， 并 在 2004 年 退出	世卫 组织 身高 180 厘米 ， 2004 年 退出	谁 测量 了 180 厘米 并 在 2004 年 戒烟	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找人 身高 180 厘米	找到 180 厘米 高 的 人	找 一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 我 在 2004 年 或 2010 年 开始 的 所有 员工	找 我 2004 年 或 2010 年 开始 工作 的 所有 员工	为 我 找到 所有 在 2004 年 或 2010 年 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 与 学生 在 2004 年 之前 开始 上学 的 朋友	谁 是 不 迟于 2004 年 开学 的 学生 的 朋友 ？	谁 是 不 迟于 2004 年 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 之前 加入 学生 的 性别	2004 年前 入学 学生 性别	2004 年 以前 入学 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这名 员工 的 结束 日期 与 alice 的 结尾 日期 几乎 相同	这个 雇员 的 结束 日期 和 爱丽丝 的 差不多	这名 员工 的 离职 日期 几乎 和 爱丽丝 的 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 属于 计算机科学 的 学生 的 性别	非 计算机专业 学生 的 性别	非 计算机科学 专业 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 开始 ， 员工 的 关系 状况 如何	2004 年 以后 员工 的 关系 状况 如何	2004 年 后 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 或 2010 年 最后 一天 的 学生	查找 2004 或 2010 年 最后 一天 的 学生	查找 2004 年 或 2010 年 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 有 180 厘米 高 的 朋友 的 朋友	找到 有 180 厘米 高 的 朋友 的 朋友	找 那些 有 180 厘米 高 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
2004 年 以后 完成 的 学生	2004 年 后 毕业 的 学生	2004 年 后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一名 员工 于 2004 年 或 之前 离职	2004 年 或 之前 离职 的 一名 员工	2004 年 或 之前 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 员工 的 关系 状况 如何 ？	2004 年 以前 开始 工作 的 员工 的 关系 状况 如何	2004 年 以前 入职 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 的 出生日期 或 之前 开始	哪个 学生 在 爱丽丝 生日 当天 或 之前 开始 的	哪个 学生 是 在 爱丽丝 生日 那天 或 之前 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 的 单一 专业 的 学生	给 我 找 一个 专业 的 学生	给 我 找 所有 学 单一 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 在 纽约 出生 的 人 ， 他们 是 爱丽丝 的 朋友	找 一些 在 纽约 出生 的 人 和 爱丽丝 是 朋友	找 一些 出生 在 纽约 的 人 ， 他们 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string friend ) ( string = ) en.person.alice ) )
找到 我 所有 在 纽约 出生 的 朋友	找 我 所有 在 纽约 有 朋友 的 人	找到 所有 在 纽约 有 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
说出 与 爱丽丝 成为 朋友 的 人	说出 一个 和 爱丽丝 是 朋友 的 人 的 名字	说出 一个 和 爱丽丝 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 不 在 员工 alice 结束 日期 之前 的 员工	结束 日期 不早 于 员工 alice 结束 日期 的 员工	终止 日期 未 在 雇员 爱丽丝 的 终止 日期 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 最后 一天 工作 之前 或 之前 出生 的 人	在 爱丽丝 最后 工作日 或 之前 出生 的 人	谁 是 在 爱丽丝 工作 的 最后 一天 之前 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
宣称 在 2004 年 或 之后 工作 的 人	声称 在 2004 年 或 之后 工作 的 人	在 2004 年 或 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 早于 2004 年 的 员工 的 性别 是 什么	开始 日期 早于 2004 年 的 员工 的 性别	在 2004 年 之前 入职 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 那天 结束 的 员工	在 爱丽丝 生日 那天 结束 的 员工	员工 在 alice 生日 那天 完成 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 开始 的 人 的 性别 是 什么	2004 年 以前 开始 工作 的 人 的 性别 是 什么	在 2004 年 以前 开始 工作 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
关于 学生 在 2004 年 之前 离开 的 关系 状况	2004 年 以前 离校 学生 的 关系 状况	2004 年 以前 离校 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
说出 180 厘米 高 的 人	说出 一个 180 厘米 高 的 人	说出 一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 开始 日期 晚于 爱丽丝 的 结束 日期	哪个 学生 的 开始 日期 晚于 爱丽丝 的 结束 日期	哪个 学生 的 开始 日期 比 爱丽丝 的 结束 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 停止 上学 后 开始 工作 的 人	爱丽丝 辍学 后 开始 工作 的 人	那些 在 爱丽丝 辍学 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 没有 在 2004 年 完成 的 学生	2004 年 未 毕业 的 学生	2004 年 没有 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 ， 是 软件 工程师	180 厘米 高 的 软件 工程师	身高 180 厘米 的 人 是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
在 爱丽丝 的 生日 之前 毕业 的 学生	爱丽丝 生日 前 毕业 的 学生	爱丽丝 生日 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 出生 之前 没有 停止 工作 的 员工	爱丽丝 出生 前 没有 停止 工作 的 雇员	在 alice 出生 之前 没有 停止 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 雇员 的 朋友 谁 是 结束 日期 是 2004 年	谁 是 员工 的 朋友 ， 截止 日期 是 2004 年	谁 是 2004 年 离职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 是 在 爱丽丝 的 结束 日期 之前	哪个 学生 的 结束 日期 早 于 爱丽丝 的 结束 日期	哪个 学生 的 结束 日期 早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 及 之后 开始 的 学生 朋友	寻找 2004 年 及 以后 开始 学习 的 学生 的 朋友	找 一些 2004 年 及 之后 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
城市 号码 是 多少 ？	城市 号码 是 多少	这个 城市 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
哪些 人 是 2004 年 之后 开始 工作 的 员工 的 朋友	哪些 人 是 2004 年 后 开始 工作 的 员工 的 朋友 ？	哪些 人 是 2004 年 后 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 拥有 最多 的 朋友	谁 的 朋友 最 多	谁 的 朋友 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 最后 一天 与 爱丽丝 的 出生日期 相同	哪位 员工 的 最后 一天 和 爱丽丝 的 生日 一样	哪位 员工 的 最后 一天 与 爱丽斯 的 生日 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 朋友 最多 的 人	找到 朋友 最多 的 人	找 一个 朋友 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 员工 在 爱丽丝 的 生日 那天 结束 了 他们 的 工作	哪个 雇员 在 爱丽丝 生日 的 同一天 结束 了 工作	哪位 雇员 在 爱丽斯 生日 的 同一天 结束 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
告诉 我 学生 同时 或 在 爱丽丝 之后 开始	让 我 看看 学生 们 同时 开始 还是 在 爱丽丝 之后 开始	让 我 看看 在 同一时间 或 在 爱丽丝 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一名 身高 180 厘米 ， 于 2004 年 开始 工作 的 人	说出 一个 身高 180 厘米 ， 2004 年 开始 工作 的 人 的 名字	说出 一个 身高 180 厘米 ， 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 那些 在 2004 年 毕业 但 没有 毕业 的 人 的 朋友	找 2004 年 毕业 但 没有 的 朋友	找 一些 2004 年 没有 毕业 的 人 做 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 员工 的 朋友 是 谁 ， 其 开始 日期 不迟于 2004 年	什么 人 和 一个 开始 日期 不迟于 2004 年 的 员工 是 朋友	什么 人 是 朋友 的 员工 有 一个 开始 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 有 最 多 2 个 朋友	最多 有 两个 朋友	谁 最 多 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 男性 和 他们 的 朋友 的 性别	找到 男朋友 的 人	找 一个 性别 为 男性 的 人 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 没有 两个 以上 朋友 的 人	找 那些 朋友 不 超过 两个 的 人	找 那些 没有 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 后 完成 学生 的 关系 状况	2004 年 后 学生 结业 的 关系 现状	2004 年 以后 结业 的 学生 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
开始 日期 不 在 学生 爱丽丝 开始 日期 之后 的 员工	开始 日期 不 在 学生 alice 的 开始 日期 之后 的 员工	开始 日期 未 超过 学生 alice 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 2004 年 之前 辞职 的 人	2004 年前 辞职 的 人	2004 年 以前 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 早 于 爱丽丝 的 开始 日期	哪个 员工 的 开始 日期 早于 alice 的 开始 日期	什么 员工 的 上班 日期 比 alice 的 上班 日期 还 早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 状态 是 不到 两个 人 的 关系 状态	不到 两个 人 的 关系 状态 是 什么	什么 状态 是 少于 两个 人 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学生 在 2004 年 或 2010 年 之后 开始 上学	什么 学生 在 2004 年 或 2010 年 后 开始 上学	学生 们 在 2004 年 或 2010 年 后 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 何时 开始 学习 计算机科学	爱丽丝 什么 时候 开始 学习 计算机科学 的	爱丽斯 什么 时候 开始 学习 计算机科学 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
同一天 开始 上学 的 学生 阿 丽斯 辞去 了 工作	同一天 开始 上学 的 学生 爱丽丝 辞职 了	同一天 开始 上学 的 学生 爱丽丝 辞掉 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结束 日期 早于 alice	哪个 员工 的 结束 日期 早于 alice	哪位 员工 的 离职 日期 比 爱丽丝 早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 超过 两个 人 的 性别	找到 不 超过 两个 人 的 性别	找出 不 超过 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以外 的 人 加入 工作 的 朋友	2004 年 以外 工作 的 人 的 朋友	在 2004 年 以外 的 年份 加入 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 出生 在 纽约	爱丽丝 在 纽约 出生 的 朋友	爱丽丝 在 纽约 出生 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 爱丽丝 开始 上学 之前 开始 工作 的 人	爱丽丝 上学 前 就 开始 工作 的 人	在 爱丽丝 上学 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 的 朋友	找到 爱丽丝 的 朋友	找 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
什么 是 人数	人数 是 多少	这个 人 的 电话号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
180 厘米 高 ， 与 爱丽丝 处于 同 一种 关系 的 情况	他 有 180 厘米 高 ， 和 爱丽丝 处于 同样 的 关系 状态	她 身高 180 厘米 ， 和 爱丽丝 的 恋爱 关系 差不多	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
员工 爱丽丝 之后 开始 了 哪个 员工	哪个 雇员 是 在 雇员 爱丽丝 之后 开始 的	哪个 雇员 在 雇员 爱丽丝 之后 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 任何 性别 的 人	找到 任何 性别 的 人	寻找 任何 性别 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
谁 是 2004 年 之前 开始 的 学生 的 朋友	从 2004 年 开始 谁 是 学生 的 朋友	谁 是 2004 年 以前 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 的 学习 领域 最少	哪个 学生 的 学习 领域 最少	哪个 学生 的 学习 领域 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一名 2004 年 或 之后 开始 的 学生	2004 年 或 之后 入学 的 学生	2004 年 或 以后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 ， 出生 在 纽约 的 人	找 一个 180 厘米 高 ， 出生 在 纽约 的 人	找 一个 身高 180 厘米 ， 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
与 alice 有着 相同 关系 的 人 ， 身高 180 厘米	她 和 爱丽丝 有 同样 的 关系 ， 身高 180 厘米	谁 有 和 爱丽丝 一样 的 恋爱 关系 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
2004 年 之后 与 员工 离开 公司 的 朋友	与 2004 年 后 离开 公司 的 员工 成为 朋友 的 人	与 2004 年 后 离开 公司 的 员工 为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 在 爱丽丝 的 出生日期 的 员工	找到 最后 一天 是 爱丽丝 生日 的 雇员	找到 最后 一天 是 爱丽丝 生日 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之后 开始 的 学生 朋友	2004 年 或 以后 开始 的 学生 朋友	2004 年 或 以后 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 毕业 的 学生 的 关系 状况 如何 ？	2004 年 以后 毕业 的 学生 的 人际关系 状况 如何	2004 年 后 毕业 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 之后 开始 辞职 的 人	爱丽丝 辞职 后 开始 工作 的 人	爱丽丝 辞职 后 开始 创业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 为 2004 年 或 之后 的 学生 的 关系 状态 是 什么	结束 日期 在 2004 年 或 以后 的 学生 的 关系 状况 如何	2004 年 或 以后 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
将 2004 年 之前 开始 的 学生 的 朋友 命名 为	说出 一个 2004 年 以前 开始 学习 的 学生 的 朋友	说出 一位 2004 年 以前 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 是 180 厘米 高	什么 人 180 厘米 高	什么 人 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 开始 日期 少于 2004 年 的 出生 城市	查找 开始 日期 小于 2004 年 的 员工 的 出生 城市	查找 起始 日期 小于 2004 年 的 雇员 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 没有 在 2004 年 开始 的 学生 是 什么 性别	2004 年 没有 入学 的 学生 是 什么 性别	2004 年 没有 开始 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 180 厘米 的 人于 2004 年 加入	身高 180 厘米 的 人于 2004 年 加入	身高 180 厘米 的 人 在 2004 年 加入	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 学生 从 alice 的 最后 一天 开始	从 爱丽丝 的 最后 一天 开始 找 学生	从 alice 的 最后 一天 开始 找 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 的 职称 是 什么 ？	180 厘米 高 的 人 的 职称 是 什么	身高 180 厘米 的 人 的 职称 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
爱丽丝 上学 第一天 后 出生 的 人	爱丽丝 上学 后 出生 的 人	出生 在 爱丽丝 第一天 上学 之后 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
爱丽丝 是 男性 还是 女性	爱丽丝 是 男 是 女	爱丽斯 是 男 是 女	( call SW.listValue ( call SW.getProperty en.person.alice ( string gender ) ) )
找到 所有 在 2004 年 完成学业 的 朋友	找到 2004 年 毕业 的 朋友	找到 所有 2004 年 毕业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 有 关系 的 人	像 爱丽丝 这样 有 关系 的 人	有 恋爱 关系 的 人 ， 比如 爱丽丝	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
alice 什么 时候 停止 作为 软件 工程师 工作	爱丽丝 什么 时候 停止 了 软件 工程师 的 工作	爱丽斯 什么 时候 停止 了 软件 工程师 的 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
180 厘米 高 的 人 与 艾丽斯 分享 生日	180 厘米 高 的 人 与 爱丽丝 共享 生日	身高 180 厘米 ， 和 爱丽丝 同一天 生日 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
谁 有 在线 朋友	有 朋友 在 网上	谁 有 在线 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
什么 人 只有 两个 朋友	什么 人 只有 两个 朋友	什么 人 只有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 之后 出生 的 学生 是 哪个 城市	2004 年 出生 的 学生 是 哪个 城市 的 ？	2004 年 后 开始 的 学生 是 在 哪个 城市 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
最少 人 的 出生地	人口 最少 的 出生地	最少 人 出生 的 地方	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 我 与 180 厘米 高 的 人 有 相同 关系 的 人	找 我 和 180 厘米 高 的 人 有 同样 关系 的 人	给 我 找 一些 和 180 厘米 高 的 人 有 同样 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
大多数 人 的 性别 是 什么	大多数 人 的 性别 是 什么	什么 是 最 重要 的 性别	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
查找 没有 软件 工程师 职称 的 员工 的 关系 状态	查找 没有 软件 工程师 职称 的 员工 的 关系 状态	查找 没有 软件 工程师 头衔 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 毕业生 在 哪里 出生	2004 届 毕业生 在 哪里 出生	2004 年 的 毕业生 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 性别 超过 两个 人	什么 性别 超过 两个 人	什么 性别比 两个 人 还 多	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
从 2004 年 或 2010 年 开始 的 员工	2004 年 或 2010 年 以前 开始 工作 的 雇员	2004 年 或 2010 年 以前 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 雇主 的 雇员 人数 最少	哪个 雇主 的 雇员 最少	哪个 雇主 的 雇员 人数 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 在 2004 年 或 2010 年 后 开始 上学	哪些 学生 在 2004 年 或 2010 年 后 开始 上学	哪些 学生 在 2004 年 或 2010 年 后 入学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 出生地 是 纽约 ， 身高 180 厘米 的 人	谁 的 出生地 是 纽约 ， 身高 180 厘米	谁 的 出生地 是 纽约 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 我 所有人 都 高于 180 厘米	找到 我 所有人 都 超过 180 厘米	找到 我 ， 所有人 都 比 我 高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
出生 城市 的 员工 ， 其 结束 日期 不是 2004 年	结束 日期 不是 2004 年 的 员工 的 出生 城市	非 2004 年 终止 日期 的 员工 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不是 2004 年 的 学生 的 性别 是 什么	结束 日期 不是 2004 年 的 学生 的 性别 是 什么	非 2004 年 毕业 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 最 老 的 人	谁 是 最 年长 的 人	谁 是 世界 上 最 年长 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
来自 纽约 的 人 ， 他们 是 爱丽丝 的 朋友	纽约 人 和 爱丽丝 是 朋友	来自 纽约 的 人 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
学生 的 结束 日期 低于 爱丽丝 的 开始 日期	哪些 学生 的 结束 日期 低于 alice 的 开始 日期	学生 的 结束 日期 比 alice 的 开始 日期 还 低	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不迟于 2004 年 或 2010 年 开始 的 学生	寻找 不迟于 2004 年 或 2010 年 开始 学习 的 学生	寻找 不迟于 2004 年 或 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
男性 出生 在 哪个 城市	那 男 的 出生 在 哪个 城市	哪个 城市 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 2004 年 辞职 的 人 的 朋友	找些 2004 年 辞职 的 朋友	寻找 2004 年 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 城市 至少 有 两个 人 出生 在	哪个 城市 至少 有 两个 人 出生 在	哪座 城市 至少 有 两个 人 出生	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 180 厘米 高 的 爱丽丝 朋友	谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	身高 180 厘米 的 爱丽丝 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
与 2004 年 之前 开始 工作 的 员工 成为 朋友 的 人	与 2004 年 以前 开始 工作 的 员工 交朋友 的 人	与 2004 年 以前 开始 工作 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 出 生于 2004 年 在 纽约	2004 年出 生于 纽约	谁 2004 年 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
与 至少 在 2004 年 退休 的 员工 成为 朋友 的 人	与 至少 在 2004 年 退休 的 员工 交朋友 的 人	与 至少 在 2004 年 退休 的 雇员 为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 所有 身高 180 厘米 ， 出 生于 2004 年 的 人	找 我 所有 身高 180 厘米 ， 2004 年 出生 的 人	所有 身高 180 厘米 ， 2004 年 出生 的 人 都 来 找 我	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 的 学生 ， 开始 日期 是 爱丽丝 的 生日	给 我 找 一个 开始 日期 是 爱丽丝 生日 的 学生	帮 我 找 那个 生日 是 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 的 人	找到 身高 180 厘米 的 人	寻找 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪个 员工 的 工作 最少	哪个 雇员 的 工作 最少	哪个 员工 的 工作 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不 学习 计算机科学 的 学生 的 关系 状态	找出 不 学 计算机 的 学生 的 关系 状况	找出 不 学习 计算机科学 的 学生 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 同一天 停止 工作 的 人	和 爱丽丝 同一天 停止 工作 的 人	和 爱丽丝 同一天 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 爱丽丝 开始 前 哪个 学生 停 了 下来	哪个 学生 在 学生 爱丽丝 开始 之前 停 了 下来	哪个 学生 在 爱丽丝 开始 之前 就 停止 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 艾丽斯 的 出生日期 开始 的 学生	从 爱丽丝 的 生日 开始 的 学生	开始 于 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 大于 2004 的 员工 的 性别 是 什么	截止 日期 大于 2004 年 的 员工 的 性别	终止 日期 大于 2004 年 的 雇员 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 开始 日期 不 等于 2004 年 的 学生 的 朋友 是 什么 人	什么 人 和 学生 是 朋友 ， 他们 的 开始 日期 不 等于 2004 年	谁 是 朋友 的 学生 有 一个 开始 日期 不 等于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
属于 爱丽丝 的 朋友 的 人	爱丽丝 朋友 的 性别	爱丽丝 朋友 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
当 爱丽丝 停止 工作 时 开始 工作 的 人	当 爱丽丝 停止 工作 时 开始 工作 的 人	当 爱丽丝 停止 工作 时 ， 人们 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
没有 受雇 于 麦肯锡 的 员工 的 关系 状况 如何 ？	非 麦肯锡 雇员 的 关系 状况 如何 ？	未 被 麦肯锡 聘用 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 不 超过 两个 雇主	哪个 雇员 的 雇主 不 超过 两个	哪个 雇员 有 两个 以上 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
单身 而且 出生 在 纽约 的 人	在 纽约 出生 的 单身 人士	在 纽约 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 一个 在 爱丽丝 开始 工作 之前 出生 的 人	找 一个 爱丽丝 工作 前 出生 的 人	找 一个 在 爱丽丝 开始 工作 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
与 alice 处于 同一 类型 的 关系 ， 身高 180 厘米	她 和 爱丽丝 有 同样 的 关系 ， 身高 180 厘米	谁 和 爱丽丝 处于 同样 的 关系 ， 并且 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
找到 在 爱丽丝 的 就业 结束 日期 之前 出生 的 人	找到 爱丽丝 工作 结束 日期 之前 出生 的 人	找出 在 alice 的 雇佣 结束 日期 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
找到 作为 员工 出生地 的 城市 ， 其 结束 日期 不迟于 2004 年	查找 员工 出生地 且 结束 日期 不晚 于 2004 年 的 城市	找出 那些 员工 的 出生 城市 ， 其 截止 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 在 学生 爱丽丝 之前 离开 的 学生	在 学生 爱丽丝 离开 之前 离开 的 学生	一个 比 爱丽丝 先 走 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
到 2004 年 ， 学生 离职 的 关系 状况 如何	2004 年 离岗 学生 的 关系 状况 如何	这个 学生 在 2004 年 离职 时 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
两国人民 关系 的 现状 如何 ？	两国人民 关系 的 现状 如何	两国人民 的 关系 如何	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
最多 有 两个 朋友	最多 有 两个 朋友	谁 最 多 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 只 在 一所 大学 学习	他 只 在 一所 大学 学习	谁 只 上 过 一所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 性别 低于 两个 的 人	找 不到 两个 性别 的 人	找到 少于 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
找 一个 短于 200 厘米 的 人	找个 200 厘米 以下 的 人	找 一个 身高 低于 200 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
找到 2004 年 或 2010 年 结束 日期 的 学生	查找 结束 日期 在 2004 或 2010 年 的 学生	查找 2004 年 或 2010 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 关系 状态 不到 两个 人	不到 两个 人有 什么 关系	少于 两个 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪 两个 人 都 出生 了	两个 人 都 出生 在 哪里	两个 人 都 出生 在 哪里	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 从 2004 年 开始 工作 的 最后 一天 是 什么 时候	艾丽斯 2004 年 工作 的 最后 一天 是 什么 时候	2004 年 爱丽丝 工作 的 最后 一天 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
说出 2004 年 之后 退出 的 员工 的 朋友	说出 2004 年 后 辞职 的 员工 的 朋友	说出 一位 2004 年 后 离职 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 何时 完成 计算机科学 的 学习	爱丽丝 什么 时候 读完 计算机科学 的	爱丽斯 什么 时候 学完 计算机科学 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
男性 是 爱丽丝 的 朋友	什么 男人 是 爱丽丝 的 朋友	什么 男人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
哪些 人 是 爱丽丝 的 共同 朋友	哪些 人 是 爱丽丝 的 共同 朋友	哪些 人 是 爱丽丝 的 共同 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 2004 年 之前 与 员工 成为 朋友 的 人	与 2004 年前 离职 的 员工 交朋友 的 人	与 2004 年 以前 离职 的 员工 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 第一天 或 之后 找到 最后 一天 的 学生	查找 爱丽丝 第一天 当天 或 之后 最后 一天 的 学生	找出 爱丽丝 第一天 的 最后 一天 或 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 于 2004 年 离职 的 日期 是 什么 时候	艾丽斯 2004 年 什么 时候 离职	艾丽丝 2004 年 什么 时候 离职 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
员工 最后 一天 不迟于 爱丽丝 的 出生日期	哪位 员工 最后 一天 不迟于 爱丽丝 的 生日	哪个 员工 的 最后 一天 不晚 于 alice 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 后 开始 上学 的 学生	2004 年 后 开始 上学 的 学生	2004 年 后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 以 最 多 开始 的 学生 的 朋友 的 人	在 2004 年 之前 最 多 开始 学习 的 学生 的 朋友	一个 学生 的 朋友 ， 他 最 多 在 2004 年 入学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 从 2004 年 开始	寻找 2004 年 以外 的 新 员工	寻找 2004 年 以外 的 新 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 就业 后 出生 的 人	找 爱丽丝 工作 后 出生 的 人	找 那些 在 爱丽丝 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
在 爱丽丝 就业 结束 时 或 之后 出生 的 人	在 爱丽丝 工作 结束 时 或 之后 出生 的 人	爱丽丝 工作 期满 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
哪些 员工 的 开始 日期 最近	哪些 员工 最近 的 开始 日期 最少	哪些 员工 的 入职 日期 最近	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 的 朋友 数量 最少	哪个 人 的 朋友 最少	哪个 人 的 朋友 数 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
最近 在 2004 年 找到 了 和 朋友 一起 上学 的 人	找 那些 最迟在 2004 年 毕业 的 朋友	找 那些 最迟 2004 年 毕业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
发现 2004 年 出生 的 所有人 都 是 爱丽丝 的 朋友	找出 2004 年 出生 的 所有 和 爱丽丝 是 朋友 的 人	找出 所有 2004 年 出生 的 和 alice 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
在 爱丽丝 之前 或 之后 出生 的 人	与 爱丽丝 同一天 或 之后 出生 的 人	和 爱丽丝 同一天 出生 或 在 爱丽丝 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
两个 或 两个 以下 的 人 的 出生地	两人 或 两人 以下 的 出生地	两个 或 更 少人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 结束 的 人 是 180 厘米 高	2004 年 落幕 的 人 身高 是 180 厘米	2004 年 结束 的 那个 人 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 的 结束 日期 晚于 2004 年	哪些 学生 的 截止 日期 晚于 2004 年	学生 们 的 毕业 日期 竟然 比 2004 年 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 的 学生 的 开始 日期 至少 是 2004 年 的 朋友	学生 的 起始 日期 至少 是 2004 年	谁 是 和 至少 2004 年 是 朋友 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 停止 工作 后 开始 工作 的 人	爱丽丝 停止 工作 后 开始 工作 的 人	在 爱丽丝 停止 工作 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
除了 棕色 大学 之外 ， 哪个 人 是 去 某个 地方 的 人 的 朋友	哪个 人 和 去 布朗 大学 以外 的 地方 的 人 是 朋友	哪个 人 的 朋友 去过 布朗 大学 以外 的 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 最后 一天 是 2010 年 之前 的 学生	寻找 最后 一天 在 2010 年 之前 的 学生	找出 2010 年 以前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找 我 单身 的 朋友	给 我 找 单身 朋友	帮 我 找 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
与 结束 日期 在 2004 年 之后 的 某人 成为 朋友 的 人	与 结束 日期 在 2004 年 之后 的 人 成为 朋友 的 人	与 2004 年 后 分手 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一位 员工 的 朋友 ， 在 2004 年 之后 结束	2004 年 后 离职 的 员工 的 朋友	2004 年 后 离职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 之前 或 之前 完成 同步	在 Alice 之前 或 之前 完成 的 员工	员工 完成 同时代 或 之前 的 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 身高 180 厘米 ， 现在 在线	什么 人 身高 180 厘米 ， 目前 在线	什么 人 是 180 厘米 高 ， 目前 是 在 网上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
哪个 员工 的 开始 时间 不早 于 爱丽丝 的 结束 日期	哪个 雇员 的 开始 时间 不早 于 爱丽丝 的 结束 日期	哪位 员工 的 入职 时间 不早 于 爱丽丝 的 离职 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 的 朋友 ， 他们 出 生于 2004 年	找到 爱丽丝 2004 年 出生 的 朋友	找出 爱丽丝 2004 年 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 只有 一两个 朋友 的 人	找到 只有 一两个 朋友 的 人	找 那些 只有 一两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
有 多少 人 在 那里	有 多少 人	有 多少 人	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以后 哪位 员工 辞职 了	哪个 雇员 在 2004 年 后 辞职	哪位 员工 在 2004 年 后 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
180 厘米 高 的 爱丽丝 朋友	180 厘米 高 的 爱丽丝 之友	180 厘米 高 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 不 在 员工 爱丽丝 开始 日期 之后 的 员工	结束 日期 不 在 雇员 alice 的 开始 日期 之后 的 雇员	结束 日期 未 超过 雇员 alice 开始 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 在 2004 年 或 2010 年 之前 的 员工	截止 日期 在 2004 年 或 2010 年 之前 的 员工	截止 日期 在 2004 年 或 2010 年 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 她 家乡 爱丽丝 的 朋友	谁 是 爱丽丝 家乡 的 朋友	谁 是 爱丽丝 家乡 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
爱丽丝 或 鲍勃 的 朋友	爱丽丝 或 鲍勃 的 朋友	爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
一个 员工 朋友 在 2004 年 没有 离开 的 人	其 雇员 朋友 在 2004 年 没有 离开 的 人	一个 员工 朋友 2004 年 没有 离开 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 开始 的 员工	2004 年 以前 开始 工作 的 雇员	2004 年 以前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 在 她 的 软件 工程师 工作 的 老板	谁 是 爱丽丝 软件 工程师 工作 的 老板	爱丽丝 软件 工程师 工作 的 老板 是 谁	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )
找到 一位 2010 年 后 离职 的 员工	找 一个 2010 年 后 离职 的 员工	找 一个 2010 年 后 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 2004 年 后 开始 日期 的 学生 的 性别	找出 2004 年 以后 开始 约会 的 学生 的 性别	找出 2004 年 后 开始 上课 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 不迟于 2004 年 的 员工 性别	查找 截止 日期 不晚 于 2004 年 的 员工 的 性别	找出 截止 日期 不晚 于 2004 年 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 与 2004 年 之前 开始 的 员工 具有 相同 的 关系	哪个 员工 与 2004 年 之前 开始 工作 的 员工 具有 相同 的 关系 状态	哪名 员工 与 2004 年 以前 入职 的 员工 有 相同 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 结束 日期 晚于 2004 年 的 学生 的 性别	查找 结束 日期 晚于 2004 年 的 学生 的 性别	找出 结业 日期 晚于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 成为 朋友 的 人 的 关系 状态	与 爱丽丝 交朋友 的 人 的 关系 状况	与 alice 是 朋友 的 人 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
命名 不迟于 2004 年 开始 的 员工 的 关系 状态	列出 不迟于 2004 年 开始 工作 的 员工 的 关系 状态	说出 不迟于 2004 年 开始 工作 的 雇员 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 学校 结束 学校 后 结束 学业 的 学生	爱丽丝 放学 后 放学 的 学生	爱丽丝 放学 后 放学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 爱丽丝 离开 之前 出生	在 爱丽丝 离开 之前 出生 的	爱丽丝 走 之前 谁 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
找到 180 厘米 到 200 厘米 之间 的 人	找到 身高 在 180 到 200 厘米 之间 的 人	找 一些 身高 在 180 到 200 厘米 之间 的 人	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )
身高 180 厘米 的 人 登录	180 厘米 高 的 登录 者	身高 180 厘米 的 人 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
180 厘米 或 200 厘米	180cm 或 200cm	要么 180 厘米 ， 要么 200 厘米	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )
什么 是 男性 的 关系 状态	男性 的 关系 状况 如何	男性 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪个 学生 比 2004 年 开始	哪个 学生 在 2004 年 之前 就 开始 了	哪个 学生 的 入学 时间 早于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 2004 年 之前 完成	2004 年前 完成学业 的 学生	2004 年 以前 结业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 多少 关系 状态	有 多少 关系 状态	有 多少 种 关系 状态	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ) )
什么 人 出生 在 纽约 和 单身	什么 人 出生 在 纽约 单身	什么 人 出生 在 纽约 ， 还是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 2004 年 出生 的 人 是 180 厘米	2004 年 出生 的 180 厘米 的 人	2004 年 出生 的 人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
一个 180 厘米 高 的 爱丽丝 的 朋友	爱丽丝 的 一个 180 厘米 高 的 朋友	爱丽丝 的 一个 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 的 结束 日期 晚于 学生 爱丽丝 的 开始 日期	哪些 员工 的 结束 日期 晚于 学生 alice 的 开始 日期	什么 员工 的 结束 日期 比 学生 alice 的 开始 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 有 两个 朋友	他 有 两个 朋友	他 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 以后 开始 的 员工 的 发源地	2004 年 后 开始 工作 的 员工 的 出生地	2004 年 后 入职 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 开始 的 学生 的 性别	2004 年 及 以后 入学 的 学生 性别	2004 年 或 以后 入学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 与 学生 爱丽丝 同一天 开始	寻找 与 学生 爱丽丝 同一天 开始 工作 的 员工	找到 和 学生 alice 同一天 上班 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 在 纽约 出生 的 人 的 朋友	谁 是 在 纽约 出生 的 人 的 朋友	谁 是 在 纽约 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找到 开始 日期 与 学生 爱丽丝 相同 或 更 大 的 学生	查找 起始 日期 与 学生 alice 相同 或 更 大 的 学生	查找 起始 日期 与 学生 alice 相同 或 更 大 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最后 一天 是 2004 年 或 之前 的 学生 的 出生地	找出 最后 一天 是 2004 年 或 以前 的 学生 的 出生地	找出 最后 一天 是 2004 年 或 之前 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 2004 年 出生 的 身高 180 厘米 的 人	找到 2004 年 出生 的 180 厘米 高 的 人	找出 2004 年 出生 的 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
与 2004 年 之前 开始 上学 的 人 有 朋友 的 人	与 2004 年 以前 开始 上学 的 人 交朋友 的 人	与 2004 年 以前 入学 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 学生 在 爱丽丝 出生 后 开始	爱丽丝 出生 后 开始 学习 的 学生	爱丽丝 出生 后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
关系 状态 与 2004 年 出生 的 人 相同	与 2004 年 出生 的 人 相同 的 关系 状态	与 2004 年 出生 的 人 相同 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
出生 城市 的 人 身高 180 厘米	身高 180 厘米 者 出生 城市	身高 180 厘米 的 人 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 最早 在 2004 年 开始 工作 的 人 的 朋友	找 最早 在 2004 年 开始 工作 的 人 的 朋友	找 那些 最早 在 2004 年 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 开始 日期 不是 学生 爱丽丝 的 结束 日期	开始 日期 不 在 学生 alice 结束 日期 之后 的 员工	开始 日期 未 超过 学生 alice 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 拥有 最多 的 朋友	谁 的 朋友 最 多	谁 的 朋友 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 最后 一天 不 在 2004 年 的 员工 的 出生地	查找 最后 一天 不 在 2004 年 的 员工 的 出生地	找出 那些 最后 一天 不 在 2004 年 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 单身 的 人 是 爱丽丝 的 朋友	什么 单身汉 是 爱丽丝 的 朋友	什么样 的 单身 人才 是 爱丽丝 的 朋友 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 爱丽丝 出生 之前 完成学业 的 人	爱丽丝 出生 前 完成学业 的 人	在 爱丽丝 出生 前 完成 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 爱丽丝 出生 后 辞职 的 人	找到 爱丽丝 辞职 后 出生 的 人	找出 爱丽丝 辞职 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
哪个 学生 和 学生 爱丽丝 一起 去 同一 所 大学	哪个 学生 和 爱丽丝 上 同一 所 大学	哪个 学生 和 艾丽斯 上 同一 所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 没有 出生地 的 人	找 没有 出生地 的 人	寻找 没有 出生地 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string birthplace ) ) )
2004 年 的 哪一天 爱丽丝 开始 工作 了	艾丽斯 2004 年 哪天 开始 工作	2004 年 的 哪一天 ， 爱丽丝 开始 工作 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
2004 年 出生 的 人 的 关系 状况 如何 ？	2004 年 出生 的 人 的 关系 状况 如何	2004 年 出生 的 人 的 婚姻状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
2003 年 以后 辞职 的 人 的 朋友	2003 年 后 辞职 的 朋友	2003 年 后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 爱丽丝 出生 时 辞职 的 员工	说出 爱丽丝 出生 时 辞职 的 雇员 的 名字	说出 爱丽丝 出生 时 辞职 的 员工 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
关于 2004 年 以后 加入 的 学生 的 关系 状况	2004 年 以后 入职 学生 的 关系 状况	2004 年 以后 加入 的 学生 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 员工 的 结束 日期 晚于 爱丽丝 的 开始 日期	哪个 员工 的 结束 日期 晚于 alice 的 开始 日期	什么 员工 的 结束 日期 比 alice 的 开始 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 有 两种 性别 的 人 叫	有 两种 性别 的 人 叫 什么	一个 有 两种 性别 的 人 叫 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
结束 日期 与 员工 爱丽丝 相同 的 学生	结束 日期 与 雇员 爱丽丝 相同 的 学生	结束 日期 与 员工 alice 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 以后 辞职 的 员工	找到 2004 年 后 辞职 的 员工	寻找 2004 年 后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 在 员工 alice 的 结束 日期 之前	开始 日期 早 于 员工 alice 结束 日期 的 员工	开始 日期 在 雇员 alice 结束 日期 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 就业 结束 日期 为 2004 年 的 人	查找 结束 日期 为 2004 年 的 人员	寻找 就业 截止 日期 为 2004 年 的 人	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
出生 在 纽约 ， 身高 180 厘米 的 人	在 纽约 出生 ， 身高 180 厘米 的 人	出生 在 纽约 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 朋友 ， 开始 日期 是 2004 年 以后	2004 年 以后 的 学生 朋友	2004 年 以后 入学 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 大于 爱丽丝 生日 的 学生	找 那些 结束 日期 大于 爱丽丝 生日 的 学生	找 一些 学生 ， 他们 的 结业 日期 大于 alice 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 结束 日期 之后 开始 的 学生	在 爱丽丝 的 结束 日期 之后 开始 的 学生	爱丽丝 结束 约会 后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 研究 计算机科学	爱丽丝 学 计算机科学 吗	爱丽丝 学过 计算机科学 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string field_of_study ) ) )
在 爱丽丝 开始 工作 之前 停止 上学 的 人	在 爱丽丝 开始 工作 之前 就 停学 的 人	那些 在 爱丽丝 开始 工作 之前 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 的 关系 状态 不到 两种	哪些 人 的 关系 状态 少于 两种	哪些 人 的 恋爱 状态 少于 两种	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
人生 日 是 在 2004 年	2004 年 是 什么 人 的 生日	2004 年 是 什么 人 的 生日 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 的 朋友 的 性别	爱丽丝 朋友 的 性别	爱丽丝 朋友 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
将 于 2004 年 毕业 的 学生 的 朋友	2004 年 毕业 的 学生 朋友	2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
以 爱丽丝 开始 的 学生	从 爱丽丝 开始 的 学生	从 爱丽丝 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2005 年 之前 辞职 的 人 的 朋友	2005 年前 辞职 的 朋友	2005 年 以前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 与 男性 成为 朋友 的 人	找到 那些 和 男人 交朋友 的 人	找 那些 和 男性 做 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
找到 开始 日期 少于 学生 爱丽丝 的 学生	查找 起始 日期 小于 学生 alice 的 学生	查找 学生 的 开始 日期 小于 学生 alice 的 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 是 2004 年 或 2010 年	学生 的 起始 日期 是 2004 年 还是 2010 年	什么 学生 有 一个 开始 的 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 结束 日期 不 超过 2004 年 的 员工 的 朋友	什么 人 和 一个 结束 日期 不迟于 2004 年 的 员工 是 朋友	什么样 的 人会 和 不 迟于 2004 年 结束 约会 的 员工 成为 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 结束 日期 或 之后 开始 的 学生	在 爱丽丝 的 最后 一天 或 之后 开始 的 学生	在 alice 结束 日期 前后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 作为 软件 工程师 的 工作 结束 日期 是 什么 时候	艾丽斯 软件 工程师 的 工作 结束 日期 是 什么 时候	爱丽斯 软件 工程师 的 工作 什么 时候 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
什么 是 不到 两个 人 的 关系 状态	不到 两个 人 的 关系 状况 如何	少于 两个 人 的 关系 状况 如何	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 人 是 与 2004 年 结束 日期 的 员工 的 朋友	哪位 员工 的 结束 日期 不是 2004 年	哪位 员工 的 结发 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
没有 受雇 于 麦肯锡 的 员工 的 出生地	非 麦肯锡 雇员 的 出生地	非 麦肯锡 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 一个 2004 年 出生 的 人 朋友	说出 2004 年 出生 的 朋友 的 名字	说出 一个 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
与 2004 年 完成学业 的 人 有 朋友 的 人	与 2004 年 毕业 的 人 交朋友 的 人	除了 2004 年 以外 的 任何 一年 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 bob 或 alice 的 朋友	谁 是 鲍勃 或 爱丽丝 的 朋友	谁 是 鲍勃 或 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
什么 是 2004 年 开始 最多 的 学生 出生地 城市	2004 年 开始 最多 的 学生 出生地 城市 是 什么 ？	2004 年 学生 出生 最多 的 城市 是 哪个	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
去过 大多数 大学 的 人	上 大学 最多 的 人	上过 最多 大学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 是 软件 工程师 或 项目经理	软件 工程师 或 项目经理	软件 工程师 或 程序 经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 180 厘米 高 的 人 ， 和 爱丽丝 一样 出生 在 同一个 地方	一个 180 厘米 高 的 人 和 爱丽丝 出生 在 同一个 地方	身高 180 厘米 的 人 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
当天 加入 学习 爱丽丝 的 人 出生 了	爱丽丝 出生 那天 参加 学习 的 人	爱丽丝 出生 那天 就 参加 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 不到 两所 大学 就读 过 的 人	在 不到 两所 大学 学习 的 人	在 不到 两所 大学 学习 过 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 上学 之前 停止 工作 的 人	在 爱丽丝 上学 之前 就 停止 工作 的 人	那些 在 爱丽丝 上学 之前 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 学习 领域 最多 的 学生	找到 学习 领域 最广 的 学生	寻找 学习 领域 最 广泛 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 的 身高 短于 180 至 200 厘米	身高 在 180 到 200 厘米 之间 的 人	什么 人 的 身高 低于 180 到 200 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
从 2004 年 开始 ， 学生 的 性别 是 什么	2004 年 以后 开始 的 学生 的 性别 是 什么	2004 年 后 入学 的 学生 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
拥有 最 多 关系 状态 的 人	谁 拥有 最多 的 关系 状态	谁 的 恋爱 状态 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string relationship_status ) ) )
找到 与 爱丽丝 成为 朋友 的 单身 人士	找到 和 爱丽丝 交朋友 的 单身 人士	找 一些 和 alice 是 朋友 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
爱丽丝 开始 上学 后 停止 工作 的 人	爱丽丝 开学 后 停止 工作 的 人	那些 在 爱丽丝 上学 后 就 不 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那个 学生 开始 的 那天 爱丽丝 离开 了 她 的 工作	爱丽丝 辞职 那天 是 哪个 学生 开始 的	爱丽丝 离职 那天 ， 哪个 学生 开始 工作 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最高 的 人	找到 最高 的 人	找到 最高 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
两个 人 的 出生地	两人 出生地	二人 出生地点	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
是 爱丽丝 的 职称 软件 工程师	是 爱丽丝 的 职称 软件 工程师	爱丽斯 的 职称 是 软件 工程师 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string job_title ) ) )
什么 是 不 超过 两个 人 的 出生 城市	不 超过 两个 人 的 出生 城市 是 什么	哪个 城市 出生 的 人 不 超过 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
结束 日期 不晚 于 2004 年 的 学生 的 关系 状态 是 什么	截止 日期 不迟于 2004 年 的 学生 的 关系 状况 如何	如果 学生 的 恋爱 关系 结束 日期 不晚 于 2004 年 ， 那该 学生 的 恋爱 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在线 的 男性	上网 的 男性	在线 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
谁 出 生于 2004 年 ， 身高 180 厘米	他出 生于 2004 年 ， 身高 180 厘米	谁 出 生于 2004 年 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
当 爱丽丝 开始 工作 或 之前 开始 上学 的 人	当 爱丽丝 开始 工作 或 以前 开始 上学 的 人	那些 在 alice 开始 工作 之前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 生日 之后 ， 哪位 员工 辞职 了	哪个 雇员 在 爱丽丝 生日 后 辞职	爱丽斯 生日 后 哪个 员工 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 家伙 也 是 180 厘米 高	哪个 男人 也 有 180 厘米 高	哪些 人 也 有 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 最后 一天 的 员工	查找 最后 一天 的 员工	找到 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 180 厘米 高 的 人 的 出生地	找到 180 厘米 高 的 人 的 出生地	找出 180 厘米 高 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 我 目前 在线 的 所有 男性	帮 我 找到 所有 在线 的 男性	为 我 找到 所有 在线 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
找到 开始 日期 为 2004 年 或 以后 的 员工 及其 朋友	查找 开始 日期 为 2004 或 更 高 的 员工 及其 朋友	找到 2004 年 或 以后 才 开始 工作 的 员工 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 人有 两个 朋友	哪个 人有 两个 朋友	哪个 人有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 做 完后 停止 上学 的 人	在 艾丽斯 之后 停止 上学 的 人	那些 在 爱丽丝 之后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 有 两个 或 更 多 性别	有 两个 或 更 多 性别 的 人	谁 有 两个 或 更 多 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
名字 还 活着 或者 鲍勃 的 人	名字 是 活着 的 人 或 鲍勃	名字 是 alive 或 bob 的 人	( call SW.listValue ( call SW.concat en.person.alice en.person.bob ) )
那些 在 2004 年 出生 后 开始 上学 的 人 在 哪里	2004 年 出生 后 开始 上学 的 人 在 哪里	2004 年 后 入学 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 朋友 ， 其 开始 日期 最多为 2004 年	开始 日期 不 超过 2004 年 的 员工 的 朋友	员工 的 朋友 ， 其入 职 日期 最多为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 在 爱丽丝 之前 开始 上学	她 比 爱丽丝 先 上学	谁 比 爱丽丝 先 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 的 生日 那天 开始 工作	哪个 雇员 是 在 爱丽丝 生日 那天 开始 工作 的	哪位 雇员 是 在 爱丽斯 生日 那天 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 学生 爱丽丝 相同 的 学习 领域 的 学生	与 学生 爱丽丝 的 研究 领域 相同 的 学生	与 爱丽丝 同学 研究 领域 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 同一天 出生 的 人	与 爱丽丝 同日 出生 的 人	和 爱丽丝 同一天 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
哪些 学生 在 2004 年 以外 退学	哪些 学生 在 2004 年外 退学	哪些 学生 在 2004 年 后退 学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 的 人 和 与 爱丽丝 相同 的 出生地	找到 身高 180 厘米 和 爱丽丝 出生地 相同 的 人	找 一个 身高 180 厘米 的 人 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
出生 城市 的 学生 ， 其 结束 日期 不是 2004 年 之后	结束 日期 不 在 2004 年 之后 的 学生 出生 城市	2004 年 以后 未 毕业 的 学生 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
男性 和 出生 在 纽约 的 人	在 纽约 出生 的 男性	出生 在 纽约 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthplace ) ( string = ) en.city.new_york ) )
学生 的 朋友 ， 开始 日期 是 2004 年 之前	2004 年 以前 的 学生 朋友	2004 年 以前 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 约会 之前 开始 的 学生	在 爱丽丝 开始 约会 之前 开始 的 学生	在 alice 开始 上课 之前 就 开始 上课 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 朋友 们 声称 有 什么 关系 状态	爱丽丝 的 朋友 们 声称 什么样 的 关系 状态	爱丽斯 的 朋友 们 声明 了 什么 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
谁 是 与 爱丽丝 成为 朋友 的 人 的 朋友	谁 是 一个 和 爱丽丝 是 朋友 的 人 的 朋友	谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
超过 两个 人 的 人	两人 以上 的 人	两个 人 以上 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 出生 的 朋友	2004 年 出生 的 朋友	2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
结束 日期 与 学生 爱丽丝 开始 日期 相同 的 学生	结束 日期 与 学生 alice 的 开始 日期 相同 的 学生	学生 的 结束 日期 与 学生 alice 的 开始 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 研究 了 什么	爱丽丝 学了 什么	爱丽丝 研究 了 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
什么 是 爱丽丝 的 诞生地	爱丽丝 的 出生地 是 什么	爱丽丝 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
2004 年 之前 加入 的 学生 的 出生地 是 什么 ？	2004 年 以前 加入 的 学生 的 出生地 是 什么	2004 年 以前 加入 的 学生 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 与 alice 同一个 城市 出生 的 人	找 一个 和 爱丽丝 出生 在 同一个 城市 的 人	找 一个 和 爱丽丝 出生 在 同一个 城市 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
两个 人 的 性别 是 什么	两个 人 是 什么 性别	这 两个 人 是 什么 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 的 朋友 ， 其 结束 日期 是 2004 年 之后	结束 日期 在 2004 年 之后 的 员工 的 朋友	2004 年 以后 离职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 出生 之前 或 之 时 结束	雇员 在 爱丽丝 出生 前 或 出生 时 终止	雇员 在 爱丽丝 出生 之前 或 出生 时 死亡	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 后 出生 的 人	爱丽丝 之后 出生 的 人	爱丽丝 之后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
谁 是 我 的 非 计算机科学 专业 的 一些 朋友	我 的 一些 非 计算机科学 的 主要 关系 朋友	我 的 一些 非 计算机专业 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 在 爱丽丝 开始 上学 之前 开始 上学	爱丽丝 开学 前 哪些 学生 开学	哪些 学生 在 爱丽丝 上学 之前 就 开始 上学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之后 完成学业 的 人 是 什么 性别	2004 年 以后 毕业 的 人 是 什么 性别	2004 年 后 毕业 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 男性 的 朋友	谁 是 男人 的 朋友	谁 是 男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
学生 的 结束 日期 晚于 爱丽丝 的 开始 日期	哪个 学生 的 结束 日期 晚于 爱丽丝 的 开始 日期	哪个 学生 的 结束 日期 比 alice 的 开始 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 开始 日期 与 员工 alice 相同 的 员工	查找 与 员工 alice 具有 相同 开始 日期 的 员工	查找 与 雇员 alice 的 起始 日期 相同 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 公司 雇用 一个 180 厘米 高 的 人	什么 公司 雇用 一个 180 厘米 高 的 人	什么 公司 雇佣 一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 人 与 大多数 人 的 关系 地位 相同	什么 人 的 关系 地位 和 大多数 人 一样	什么 人 与 大多数 人有 相同 的 关系 地位	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
一个 学生 在 爱丽丝 开始 之后 或 之后 结束	在 爱丽丝 开始 或 开始 之后 结束 的 学生	学生 在 爱丽丝 开始 后 或 开始 时 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 180 厘米 高 的 所有人	找到 所有 180 厘米 高 的 人	找出 所有 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
人们 有 两种 关系 状态	什么 人有 两种 关系 状态	什么 人有 两种 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
找到 2004 年 以外 的 最后 几天 的 学生 朋友	与 2004 年 以外 的 最后 几天 寻找 学生 朋友	寻找 学生 朋友 与 最后 的 日子 ， 而 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 开始 日期 是 员工 爱丽丝 开始 日期 之后	起始 日期 在 雇员 alice 起始 日期 之后 的 学生	开始 日期 在 雇员 alice 的 开始 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 出生 前 离开 的 员工	爱丽丝 出生 前 离开 的 雇员	爱丽丝 出生 前 就 离开 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 开始 上学 的 人 的 性别 是 什么 ？	2004 年 以后 开始 上学 的 人 的 性别 是 什么	2004 年 后 入学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 没有 职称 软件 工程师	哪些 员工 没有 软件 工程师 的 职位	哪些 员工 没有 软件 工程师 的 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
作为 软件 工程师 或 项目经理 的 人	软件 工程师 或 程序 经理	软件 工程师 或 程序 经理	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
在 2004 年 之前 加入 的 员工	2004 年 以前 加入 的 员工	2004 年 以前 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 在 爱丽丝 之后 出生 的 学生	以 爱丽丝 的 名字 出生 的 学生	说出 那个 以 爱丽丝 的 名字 出生 的 学生 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 是 在 爱丽丝 的 出生日期 之后 开始 的	哪个 雇员 是 在 爱丽丝 出生 后 开始 工作 的	哪位 员工 是 在 爱丽丝 出生 后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
单身 的 人 的 性别	单身汉 的 性别	单身 人士 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
爱丽丝 研究 的 开始 日期 于 2004 年 结束	艾丽斯 研究 的 开始 日期 2004 年 结束	alice 的 研究 开始 于 2004 年	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
与 2004 年 或 之前 开始 工作 的 员工 成为 朋友 的 人	与 2004 年 或 之前 开始 工作 的 员工 交朋友 的 人	与 在 2004 年 或 之前 开始 工作 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 那些 不是 计算机科学 的 学生 和 他们 的 朋友 的 学生	寻找 那些 学习 非 计算机科学 的 学生 和 他们 的 朋友	找 一些 不是 计算机科学 的 学生 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 开始 上学 后 出生 的 人	爱丽丝 上学 后 出生 的 人	爱丽丝 上学 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
找人 比 爱丽丝 短	找到 比 爱丽丝 矮 的 人	找 比 爱丽丝 矮 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
爱丽丝 的 男性 朋友	爱丽丝 的 男朋友	爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
2004 年 或 之前 离职 的 一名 工人 的 性别	2004 年 或 以前 离职 的 工人 的 性别	2004 年 或 之前 离职 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学习 计算机科学 或 历史 的 学生	学习 计算机科学 或 历史 的 学生	学习 计算机科学 或 历史 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 一个 不是 软件 工程师 的 员工 的 关系 状态	不是 软件 工程师 的 员工 的 关系 状况 如何	一个 不是 软件 工程师 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 朋友 的 朋友 是 2004 年 之前 开始 约会 的 学生	谁 的 朋友 是 2004 年 以前 开始 约会 的 学生	谁 的 朋友 是 2004 年 以前 入学 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
我 网络 中 每个 人 的 总 高度 是 多少	我 的 网络 中 每个 人 的 总 身高 是 多少	我 的 网络 中 每个 人 的 总 高度 是 多少	( call SW.listValue ( call SW.aggregate ( string sum ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
什么 是 2004 年 或 之前 开始 的 学生 的 关系 状况	2004 年 或 以前 开始 学习 的 学生 的 关系 状况 如何	在 2004 年 或 之前 就读 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 有 同样 的 生日 和 开始 日期 的 爱丽丝	哪个 学生 的 生日 和 爱丽丝 的 开始 日期 是 一样 的	哪些 学生 的 生日 和 开始 日期 与 alice 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 以外 结束 日期 的 学生 朋友	查找 结束 日期 不是 2004 年 的 学生 的 朋友	寻找 学生 的 朋友 与 结束 日期 ， 而 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这是 2004 年 完成 的 学生 爱丽丝 大学	2004 年 毕业 的 爱丽丝 大学	哪所 大学 是 2004 年 毕业 的 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
什么 是 职称 不是 软件 工程师 的 员工 的 关系 状态	非 软件 工程师 员工 的 关系 状况	非 软件 工程师 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 没有 开始 工作 的 人 的 性别 是 什么	2004 年 没有 开始 工作 的 人 的 性别 是 什么 ？	没有 在 2004 年 开始 的 劳动 人口 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 在 2004 年 之前 的 员工 的 关系 状态	截止 日期 在 2004 年 之前 的 员工 关系 状况	2004 年 以前 离职 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 开始 日期 不是 2004 年 的 学生 的 出生 城市	为 开始 日期 不是 2004 年 的 学生 查找 出生 城市	寻找 出生 城市 ， 为 学生 有 一个 开始 日期 ， 而 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 人 在 棕色 大学 180 厘米	布朗 大学 有 180 厘米 的 人	布朗 大学 哪些 人 的 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
结束 日期 不 在 2004 年 之前 的 学生 朋友	结束 日期 不早 于 2004 年 的 学生 的 朋友	学生 之 朋友 ， 其 毕业 日期 不得 早于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 有 两个 以上 出生地 的 人	找到 有 两个 以上 出生地 的 人	找到 有 两个 以上 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string > ) ( number 2 ) ) )
说出 生于 纽约 的 爱丽丝 的 朋友	说出 爱丽丝 在 纽约 出生 的 一个 朋友 的 名字	说出 爱丽丝 在 纽约 出生 的 一个 朋友 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪个 学生 最近 离开 了	哪个 学生 最近 离开	哪个 学生 最近 离开 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 后 完成 研究 的 人	2004 年 后 完成 研究 的 人	2004 年 后 完成 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 和 爱丽丝 有 相同 的 出生日期	哪个 人 的 生日 和 爱丽丝 一样	什么 人 的 生日 和 爱丽丝 的 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) )
180 厘米 高 的 人 的 关系 状况 是 什么	身高 180 厘米 的 人 的 关系 状况 如何	身高 180 厘米 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
身高 180 厘米 ， 于 2004 年 退出 的 人	身高 180 厘米 2004 年 辞职 的 人	身高 180 厘米 的 人 在 2004 年 辞职	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
身高 180cm 的 人 的 关系 状况	身高 180cm 人群 的 人际关系 状况	身高 180 厘米 的 人 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 结束 日期 早 于 学生 爱丽丝 的 学生	查找 结束 日期 早 于 学生 alice 的 学生	找到 比 学生 alice 提前结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
所有 单身 或 已婚 人士	所有 单身 或 已婚 人士	所有 单身 或 已婚 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.concat en.relationship_status.single en.relationship_status.married ) ) )
找到 我 所有 不是 爱丽丝 朋友 的 人	找 我 所有 不是 爱丽丝 朋友 的 人	找到 所有 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
谁 是 爱丽丝 的 雇主	谁 是 爱丽丝 的 雇主	爱丽丝 的 雇主 是 谁	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employer ) ) )
找到 最老 的 人	找到 最 年长 的 人	找到 最 年长 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
在 爱丽丝 的 开始 日期 之后 找到 有 结束 日期 的 学生	在 Alice 的 开始 日期 之后 查找 结束 日期 为 的 学生	在 alice 的 开始 日期 之后 找到 有 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 单身 的 人 是 爱丽丝 的 朋友	什么 单身汉 是 爱丽丝 的 朋友	什么样 的 单身 人才 是 爱丽丝 的 朋友 啊	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
那些 在 2004 年 之前 开始 上学 的 人	2004 年 以前 开始 上学 的 人	2004 年 以前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友	爱丽丝 的 朋友	爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
一个 学生 在 爱丽丝 开始 的 同时 结束	在 爱丽丝 开始 的 同时 结束 的 学生	一个 学生 结束 的 时间 和 爱丽丝 开始 的 时间 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 之前 或 之前 停止 工作 的 人	当 爱丽丝 停止 工作 或 以前 停止 工作 的 人	在 爱丽丝 之前 或 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 朋友 单身 的 人	有 单身 朋友 的 人	有 单身 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 爱丽丝 出生 后 开始 上学 的 学生	爱丽丝 出生 后 开始 上学 的 学生	爱丽丝 出生 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生 城市 的 学生 ， 其 开学 日期 是 在 2004 年 之前	2004 年 以前 学生 出生 城市	2004 年 以前 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪 种 关系 状态 最多为 两个 人	哪 种 关系 状态 最多 是 两个 人	两个 人 的 关系 状态 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 爱丽丝 的 男性 朋友	谁 是 爱丽丝 的 男朋友	爱丽丝 的 男性 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
在 2004 年 之前 离开 公司 的 员工 是 什么 性别	2004 年 以前 离开 公司 的 员工 是 什么 性别	2004 年 以前 离职 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 关系 状态 为 单身 且 总 高度 为 180 厘米 的 人	找 关系 状态 为 单身 ， 总 身高 180 厘米 的 人	寻找 单身 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
哪些 人 是 当前 登录 的 人 的 朋友	哪些 人 与 当前 登录 的 人 是 朋友	哪些 人 和 当前 登录 的 人 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
哪个 员工 拥有 最 先前 的 雇主	哪个 雇员 以前 的 雇主 最 多	哪个 雇员 的 前 雇主 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
ucla 或 布朗 大学	加州大学洛杉矶分校 或 布朗 大学	加州大学洛杉矶分校 或 布朗 大学	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )
最后 一天 的 员工 是 在 2004 年 到 2010 年 之间	员工 的 最后 一天 在 2004 年 到 2010 年间	员工 离职 时间 为 2004 年 至 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
命名 在 与 员工 alice 相同 的 日期 退出 工作 的 员工	说出 与 雇员 爱丽丝 同一天 辞职 的 雇员 的 名字	说出 在 同一 日期 辞职 的 员工 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
所有 180 厘米 高 的 人 的 出生地	所有 180 厘米 高 的 人 的 出生地	所有 180 厘米 高 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
那些 在 爱丽丝 之前 停止 上学 的 人	在 爱丽丝 之前 停止 上学 的 人	在 爱丽丝 之前 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 之前 开始	哪个 雇员 在 爱丽丝 之前 开始 工作	哪个 雇员 比 爱丽丝 先 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 以后 停学 的 人 的 关系 状况 如何 ？	2004 年 或 以后 辍学 者 的 关系 状况 如何	2004 年 或 以后 辍学 的 人 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 完成 同期 或 爱丽丝 之前	同时代 或 爱丽丝 之前 完成学业 的 学生	学生 完成 同时代 或 之前 的 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 晚于 学生 爱丽丝 的 开课日期	哪个 学生 的 开始 日期 比 学生 爱丽丝 的 晚	什么 学生 的 开始 日期 比 alice 的 开始 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 或 期间 开始 的 学生 的 朋友	2004 年 以前 或 期间 开始 的 学生 的 朋友	在 2004 年 之前 或 期间 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 之前 开始 的 员工 的 出生地	2004 年 以前 开始 工作 的 员工 的 出生地	2004 年 以前 入职 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 大多数 领域 学习 的 人	在 大多数 领域 学习 的 人	在 大多数 领域 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 从 2004 年 开始	2004 年 后 开始 工作 的 员工	2004 年 后 入职 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有人 不是 爱丽丝 的 朋友	不是 爱丽丝 的 朋友	不是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
开始 日期 比 alice 小 的 员工	开始 日期 比 Alice 短 的 员工	开始 日期 比 alice 短 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最后 一天 找到 学生	找到 最后 一天 最早 的 学生	最后 一天 最早 找到 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 以后 开始 的 学生	谁 是 2004 年 以后 开始 的 学生	谁 是 2004 年 后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 公司 雇用 一个 180 厘米 高 的 人	什么 公司 雇用 一个 180 厘米 高 的 人	什么 公司 雇佣 一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 在 爱丽丝 结束 前 开始	学生 在 爱丽丝 完成 之前 开始	学生 们 在 爱丽丝 结束 之前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 之前 结束 的 员工	在 艾丽斯 开始 之前 就 结束 的 雇员	一名 雇员 在 爱丽丝 开始 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 爱丽丝 之后 开始	从 爱丽丝 开始 的 员工	爱丽丝 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 之后 或 之后 完成 的 学生	以 爱丽丝 为 结尾 或 以 爱丽丝 为 结尾 的 学生	跟 爱丽丝 一起 或 跟 爱丽丝 一起 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是否 有 不到 两个 人 的 性别	是否 有 少于 两个 人 的 性别	是否 有 少于 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 纽约 出生 的 人 是 单身 的	在 纽约 出生 的 单身 人士	在 纽约 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
人们 从 2004 年 开始 ， 身高 180 厘米	从 2004 年 开始 的 身高 180 厘米 的 人	2004 年 开始 工作 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 出生 后 停止 工作 的 人	爱丽丝 出生 后 停止 工作 的 人	那些 在 爱丽丝 出生 后 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
上 大学 的 学生 时间 最长	上 大学 时间 最长 的 学生	上 大学 时间 最长 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
指出 一个 180 厘米 高 的 在线 人	说出 一个 180 厘米 高 的 人 的 名字	说出 一个 180 厘米 高 的 网友 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
爱丽丝 出生 时 或 之前 开始 工作 的 人	爱丽丝 出生 或 之前 就 开始 工作 的 人	在 爱丽丝 出生 或 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 离开 后 开始	艾丽斯 离开 后 哪个 雇员 开始 工作	爱丽斯 离开 后 ， 哪个 员工 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 与 爱丽丝 成为 朋友 的 人 的 出生地 是 什么 ？	那些 和 爱丽丝 是 朋友 的 人 的 出生地 是 什么	那些 和 爱丽丝 是 朋友 的 人 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
与 爱丽丝 成为 朋友 并 在 纽约 出生 的 人	和 爱丽丝 是 朋友 ， 在 纽约 出生 的 人	那些 和 爱丽丝 是 朋友 并且 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 在 爱丽丝 出生日期 之后 的 员工	终止 日期 在 爱丽丝 出生日期 之后 的 雇员	结束 日期 在 alice 出生日期 之后 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 出生 的 人 有 什么 性别	2004 年 出生 的 人 有 什么 性别	2004 年 出生 的 人 有 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
员工 有 一个 职称	一个 职称 的 员工	只有 一个 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 的 身高 至少 180 厘米	什么 人 身高 至少 180 厘米	什么 人 的 身高 至少 有 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 我 爱丽丝 的 所有 朋友	帮 我 找到 爱丽丝 所有 的 男朋友	帮 我 找到 爱丽丝 所有 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
谁 在 2004 年 停止 工作 ， 身高 180 厘米	他 在 2004 年 停止 工作 ， 身高 180 厘米	谁 在 2004 年 停止 工作 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
在 爱丽丝 开始 的 那天 ， 员工 辞职 了	爱丽丝 开始 工作 那天 哪个 雇员 辞职 了	什么 雇员 在 爱丽斯 上班 的 那天 就 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 结束 日期 是 在 alice 结束 日期 之前	哪个 员工 的 结束 日期 早于 alice 的 结束 日期	哪个 雇员 的 结束 日期 在 alice 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 大于 2004 年 或 2010 年	哪些 员工 的 起始 日期 大于 2004 年 或 2010 年	什么样 的 员工 的 起始 日期 大于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 停止 的 学生 的 诞生 城市	一个 2004 年 没 停下来 的 学生 的 出生 城市 是 什么 ？	一个 在 2004 年 没有 停止 学习 的 学生 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 2004 年 之后 的 学生 的 朋友	结束 日期 在 2004 年 之后 的 学生 的 朋友	2004 年 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	她 是 爱丽丝 的 朋友 ， 身高 180 厘米	谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 2004 年 以外 的 最后 一天 找到 员工 朋友	在 2004 年 以外 的 最后 一天 找到 员工 的 朋友	为 员工 寻找 除 2004 年 以外 的 最后 一天 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 职称 不是 软件 工程师 的 雇员 的 出生地	不是 软件 工程师 的 员工 的 出生地 是 什么 ？	不是 软件 工程师 的 雇员 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 纽约 的 关系 中 出生 的 人 是 什么 ？	在 纽约 出生 的 人 的 关系 状况 如何	在 纽约 出生 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
在 爱丽丝 之前 出生 的 人 开始 上学	爱丽丝 上学 前 出生 的 人	出生 在 爱丽丝 上学 之前 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
出生 的 员工 在 哪里 不 为 麦肯锡 工作	不 为 麦肯锡 工作 的 员工 出生 在 哪里 ？	不 为 麦肯锡 工作 的 员工 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
关于 员工 的 关系 状态 是 什么 ， 结束 日期 不迟于 2004 年	截止 日期 不迟于 2004 年 的 员工 关系 状况	不迟于 2004 年 离职 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找 一个 列出 2 个 出生地 的 人	找 一个 列出 两个 出生地 的 人	找 一个 列出 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
员工 的 结束 日期 早 于 员工 alice 结束 日期 之后	结束 日期 早 于 雇员 alice 结束 日期 之后 的 雇员	结束 日期 在 雇员 爱丽丝 的 结束 日期 之前 或 之后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 来自 纽约 并 登录	他 是从 纽约 来 的	谁 从 纽约 登陆	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪位 软件 工程师 雇用 了 爱丽丝	哪个 软件 工程师 雇佣 了 爱丽丝	哪位 软件 工程师 雇佣 了 爱丽丝	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )
与 员工 有 朋友 的 人 ， 他们 的 最后 一天 是 在 2004 年 或 之前	与 最后 一天 在 2004 年 或 之前 的 员工 交朋友 的 人	与 2004 年 或 之前 离职 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
雇主 最少 的 雇员	雇主 最少 的 雇员	雇主 最少 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 180 厘米 高 的 人	一个 180 厘米 高 的 人	一个 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
有 朋友 的 人 最迟在 2004 年 开始 工作	最迟在 2004 年 开始 工作 的 朋友	有 朋友 的 人 最迟在 2004 年 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 正在 学习 计算机科学 或 历史	谁 在 学习 计算机科学 或 历史	谁 在 学习 计算机科学 或 历史	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 以后 毕业 的 朋友	谁 是 2004 年 毕业 的 朋友	谁 是 2004 年 后 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 员工 的 最后 一天 与 爱丽丝 一样	找到 最后 一天 与 Alice 相同 或 之前 的 员工	查找 与 alice 的 最后 一天 相同 或 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 之后 停止 工作 的 人	爱丽丝 死后 停止 工作 的 人	在 爱丽丝 之后 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有 朋友 的 人 不是 软件 工程师	朋友 不是 软件 工程师 的 人	有些 人 的 朋友 不是 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 员工 从 爱丽丝 的 第一天 或 更 晚 开始	从 Alice 的 第一天 或 之后 开始 寻找 员工	从 alice 的 第一天 或 更 晚 开始 找 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 除了 布朗 去 另 一所 大学	除了 布朗 ， 哪个 学生 去 了 另 一所 大学	除了 布朗 大学 ， 哪个 学生 还 去 了 另 一所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 哪些 朋友 在线	爱丽丝 的 哪个 朋友 在 网上	爱丽丝 的 哪个 朋友 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 我 在 爱丽丝 离开 之前 将 在 公司 开始 的 所有 员工	在 艾丽斯 离开 之前 给 我 找 所有 在 公司 工作 的 员工	在 爱丽斯 离开 之前 为 我 找到 所有 在 公司 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
目前 在线 的 单身 人士	目前 在线 的 单身 人士	目前 在线 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
什么 是 去 任何 大学 的 人 的 关系 状态 ， 但 棕色	除了 布朗 ， 上 大学 的 人 的 关系 状况 如何	除了 布朗 大学 以外 ， 就读 其他 大学 的 人 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 学生 拥有 最多 的 专业	哪个 学生 的 专业 最 多	哪个 学生 的 专业 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 结束 日期 不 超过 2004 年 的 朋友 的 学生	他们 是 结束 日期 不 超过 2004 年 的 学生	谁 是 和 不 超过 2004 年 的 朋友 约会 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 在 纽约 的 爱丽丝 的 朋友	爱丽丝 在 纽约 出生 的 朋友	爱丽丝 在 纽约 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 所有 有 朋友 的 男性	找到 所有 有 朋友 的 男人	找到 所有 有 朋友 的 男性	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
谁 是 2004 年 以后 开始 的 学生 的 朋友	谁 是 2004 年 后 开始 的 那个 学生 的 朋友 ？	谁 是 2004 年 后 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 之后 加入 的 人 出生 了	爱丽丝 出生 后 加入 的 人	爱丽丝 出生 后 加入 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
除了 布朗 大学 以外 的 所有 学生 的 关系 状况	除了 布朗 大学 的 学生 外 ， 所有 学生 的 关系 状况 如何	除了 布朗 大学 的 学生 ， 其他 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 单身 高 180 厘米	哪个 单打 有 180 厘米 高	哪些 单身 人士 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
2004 年 之前 加入 的 学生	2004 年 以前 加入 的 学生	2004 年 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 或 之后 退出 的 员工 的 朋友	查找 2004 年 或 以后 离职 员工 的 朋友	找到 2004 年 或 以后 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之前 的 最后 一天 员工 的 性别 是 什么	2004 年 或 以前 最后 一天 的 员工 性别	2004 年 或 之前 的 最后 一天 的 员工 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 那天 开始 新 工作 的 员工	在 爱丽丝 生日 那天 开始 新 工作 的 员工	在 爱丽斯 生日 那天 开始 新 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 离职 的 员工 的 关系 状况 如何 ？	2004 年 以前 离职 员工 的 关系 状况 如何	2004 年 以前 离职 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 爱丽丝 之前 或 之前 开始 上学 的 人	爱丽丝 上学时 或 以前 开始 上学 的 人	那些 在 爱丽丝 上学 之前 或 之前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 最后 一天 是 最近 的	哪位 员工 最近 一天 最少	最近 哪些 员工 的 最后 一天 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
我 网络 中 所有人 的 平均 身高 是 多少	我 的 网络 中 所有人 的 平均 身高 是 多少	我 的 网络 中 所有人 的 平均 身高 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
以 2004 年 开始 但 在 2011 年 之前 开始 的 员工 命名	说出 2004 年 开始 但 2011 年 之前 的 员工 姓名	说出 一名 2004 年入 职 但 2011 年 以前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 在 爱丽丝 的 出生日期 之后 开始	哪些 员工 是 在 爱丽丝 出生 后 开始 工作 的	哪些 员工 是 在 爱丽丝 出生 后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 2004 年 开始 的 学生 的 性别 是 什么	2004 年 入学 的 学生 的 性别 是 什么	2004 年 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 停止 工作 的 员工 的 关系 状态 是 什么	在 2004 年 或 之前 停止 工作 的 员工 的 关系 状况 如何	在 2004 年 或 之前 停止 工作 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 不是 计算机科学 专业 的 学生 成为 朋友 的 人	与 不 主修 计算机科学 的 学生 交朋友 的 人	与 不 主修 计算机科学 的 学生 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 停止 工作 之前 停止 上学 的 人	在 爱丽丝 停止 工作 前 停止 上学 的 人	在 爱丽丝 停止 工作 之前 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 为 2004 年 的 人 身高 180 厘米	截止 日期 是 2004 年 的 人 有 180 厘米 高	哪些 人 的 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
有 多少 个 字 段	有 多少 个 字 段	有 多少 字 段	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ) )
找到 与 alice 或 180   cm 高度 相同 的 人	找 跟 爱丽丝 一样 高 或 180 厘米 的 人	找到 和 爱丽丝 一样 高 的 人 ， 或者 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
在 2004 年 或 之后 完成 的 员工 的 性别	2004 年 或 之后 离职 的 员工 性别	2004 年 后 或 2004 年 毕业 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 学生 在 爱丽丝 结束 时 开始	当 爱丽丝 结束 时 开始 的 学生	当 爱丽丝 结束 时 ， 一个 学生 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 学生 在 2004 年 之前 有 结束 日期	什么 学生 在 2004 年 之前 有 结束 日期	什么 学生 在 2004 年 之前 就 结束 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 朋友 最多 的 人	朋友 最多 的 人	朋友 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string friend ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 或 2010 年 开始 上学 的 学生	2004 年 或 2010 年 入学 的 学生	2004 年 或 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 学生 分享 爱丽丝 的 学习 领域	发现 学生 们 分享 爱丽丝 的 研究 领域	发现 学生 们 分享 爱丽丝 的 研究 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 毕业 后 出生 的 人	爱丽丝 毕业 后 出生 的 人	爱丽丝 毕业 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 两个 或 更少 领域 学习 的 人	在 两个 或 两个 以下 领域 学习 的 人	研究 两个 或 两个 以下 领域 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 2004 年 之前 离职	2004 年 之前 离职 的 员工	哪些 员工 在 2004 年 之前 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 朋友 出生 在 纽约	爱丽丝 的 哪个 朋友 出生 在 纽约	爱丽斯 的 哪个 朋友 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 爱丽丝 的 生日 或 之后 找到 最后 几天 的 员工	寻找 爱丽丝 生日 当天 或 之后 最后 几天 的 员工	查找 在 alice 生日 当天 或 之后 的 最后 几天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
alice 从 哪个 日期 开始 于 2004 年 完成	艾丽丝 从 哪一天 开始 2004 年 毕业	2004 年 完成 比赛 的 爱丽丝 是 哪一天 开始 比赛 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
学生 开始 约会 的 时间 是 在 爱丽丝 的 结束 日期 之前 或 之前	哪个 学生 的 开始 日期 在 爱丽丝 的 结束 日期 或 之前	哪些 学生 的 开始 日期 是 在 alice 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
不迟于 爱丽丝 开学 日期 开始 的 学生	不迟于 艾丽斯 开学 日期 的 学生	不迟于 alice 开学 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 或 bob 的 关系 状态 是 什么	爱丽丝 和 鲍勃 的 关系 状况 如何	爱丽斯 和 鲍勃 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
开始 日期 不 在 学生 爱丽丝 结束 日期 之前 的 员工	开始 日期 不早 于 学生 alice 结束 日期 的 员工	员工 的 开始 日期 不是 在 学生 alice 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之前 开始 的 学生 成为 朋友 的 人	和 一个 不早 于 2004 年 开始 的 学生 交朋友 的 人	与 不 早于 2004 年 入学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 员工 朋友 的 人 ， 其 结束 日期 不晚 于 2004 年	与 结束 日期 不迟于 2004 年 的 员工 交朋友 的 人	与 雇员 的 离职 日期 不迟于 2004 年 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 学生 与 2004 年 之前 的 最后 一天 的 关系 状况	学生 与 2004 年前 最后 一天 的 关系 状况 如何	学生 与 2004 年前 最后 一天 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
来自 纽约 的 爱丽丝 朋友 的 朋友	爱丽丝 朋友 的 朋友 ， 他 来自 纽约	爱丽丝 的 朋友 的 朋友 ， 她 来自 纽约	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
员工 的 朋友 ， 其 结束 日期 是 2004 年 之后	结束 日期 在 2004 年 之后 的 员工 的 朋友	2004 年 以后 离职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 员工 的 朋友 ， 其 结束 日期 为 2004 年	谁 是 2004 年 结束 日期 的 员工 的 朋友	谁 是 2004 年 离职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 没有 停止 的 劳动 人民 的 关系 状况 如何	2004 年 没有 停止 工作 的 工人 的 关系 状况 如何 ？	没有 在 2004 年 停止 的 劳动 人民 的 关系 状态 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那天 停止 上学 的 人 爱丽丝 出生 了	爱丽丝 出生 那天 停止 上学 的 人	爱丽丝 出生 那天 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 180 厘米 的 人 的 职称	180 厘米 的 人 的 职称 是 什么	身高 180 厘米 的 人 的 职称 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 的 开始 日期 不晚 于 爱丽丝 的 生日	什么 员工 的 开始 日期 不迟于 爱丽丝 的 生日	什么 员工 的 上班 日期 不晚 于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 了 爱丽丝 结束 日期 的 学生	从 爱丽丝 的 结束 日期 开始 的 学生	从 爱丽丝 的 结束 日期 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 分享 生日 ， 身高 180 厘米	她 和 爱丽丝 一起 过生日 ， 身高 180 厘米	谁 和 爱丽丝 同一天 生日 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
我 认识 所有 从 2004 年 开始 的 员工	罚 我 2004 年 开始 工作 的 所有 员工	所有 在 2004 年 之前 入职 的 员工 都 被 罚款	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 开学 的 学生 的 关系 状况 如何 ？	刚 从 2004 年 开始 学习 的 学生 的 人际关系 状况 如何	2004 年 以前 入学 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 或 2010 学生 的 最终 结束 日期 是 什么	2004 年 或 2010 年 学生 的 最 结束 日期 是 什么 ？	2004 年 或 2010 年 学生 的 最长 结业 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 时候 麦肯锡 员工 爱丽丝 开始 了	麦肯锡 员工 爱丽丝 什么 时候 开始 工作 的 ？	麦肯锡 员工 爱丽丝 什么 时候 开始 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
哪些 员工 的 职称 最少	哪些 员工 的 职称 最少	哪些 员工 拥有 最少 的 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 后 ， 哪位 员工 离职 了	爱丽丝 开始 工作 后 哪个 雇员 离职 了	爱丽斯 工作 后 ， 哪个 雇员 离职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 爱丽丝 之前 开始	在 爱丽丝 之前 开始 的 员工	在 alice 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 早于 2004 年 的 员工	截止 日期 在 2004 年 之前 的 员工	2004 年 以前 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 超过 两个 人 的 朋友	谁 是 两个 人 以上 的 朋友	谁 是 超过 两个 人 的 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 后 加入 学业 的 人 的 性别	2004 年 后 参加 研究者 的 性别	2004 年 后 加入 他们 研究 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 的 出生地	爱丽丝 的 出生地 是 什么	爱丽斯 的 出生地 是 哪里	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )
在 爱丽丝 开始 之前 结束 的 员工	在 爱丽丝 开始 之前 就 结束 的 雇员	在 alice 开始 之前 结束 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 不 超过 两个 雇主	哪个 雇员 只有 两个 雇主	哪个 雇员 有 两个 以上 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之前 完成学业 的 人	2004 年 或 之前 完成学业 的 人	在 2004 年 或 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最 不 常见 的 关系 状态	最 不 常见 的 关系 状态	最 不 常见 的 关系 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 所有 男单 曲	找到 所有 单身 男性	查找 所有 男性 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
哪些 学生 在 艾丽斯 的 毕业典礼 那天 开始	哪个 学生 在 爱丽丝 毕业 日前 就 开始 了	哪些 学生 一 毕业 就 开学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日期 不早 于 2004 年 的 员工 的 出生 城市 在 哪里	开始 日期 不早 于 2004 年 的 员工 的 出生 城市 在 哪里	不早 于 2004 年入 职 的 雇员 的 出生 城市 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 不 迟于 2004 年 开始 的 学生 的 关系 状况	不迟于 2004 年 入学 的 学生 的 人际关系 状况 如何	不迟于 2004 年 入学 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 员工 早于 2004 年 或 2010 年 开始	2004 年 或 2010 年 之前 开始 工作 的 员工	哪个 员工 的 入职 时间 早于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
为 mckinsey 或谷歌 工作 的 人	为 麦肯锡 或谷歌 工作 的 人	在 麦肯锡 或谷歌 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 2004 年 之前 完成学业 的 人 在 哪里 出生	在 2004 年 出生 之前 完成学业 的 人 在 哪里	2004 年 以前 毕业 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 多种 关系 状态 的 人	具有 多种 关系 状态 的 人	有 多种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
谁 是 身高 180 厘米 的 人 的 雇主	谁 是 身高 180 厘米 的 人 的 雇主	身高 180 厘米 的 雇主 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 2004 年 或 之前 开始 的 学生	2004 年 或 以前 入学 的 学生	2004 年 或 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 停学 的 时候 停止 工作 的 人	爱丽丝 辍学 时 停止 工作 的 人	当 爱丽丝 停止 上学时 ， 人们 停止 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 没有 去过 布朗 大学 的 人 的 朋友	他 和 一个 没 上 布朗 大学 的 人 是 朋友	谁 是 没 上 过 布朗 大学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 180 厘米 ， 与 爱丽丝 同一个 地方	他 有 180 厘米 ， 和 爱丽丝 在 同一个 地方	谁 是 180 厘米 ， 和 爱丽丝 来自 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
谁 是 爱丽丝 的 朋友 ， 来自 纽约	爱丽丝 的 朋友 是 谁 ， 从 纽约 来 的	从 纽约 来 的 爱丽丝 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
哪个 学生 不迟于 爱丽丝 结束	哪个 学生 不迟于 爱丽丝	哪个 学生 结束 的 时间 不晚 于 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
命名 一名 员工 ， 其 结束 日期 与 alice 的 结束 日期 类似	说出 一个 雇员 的 名字 ， 他 的 结束 日期 与 爱丽丝 的 相似	说出 一名 员工 的 离职 日期 与 alice 相似	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人有 爱丽丝 的 出生日期	哪个 人 的 生日 是 爱丽丝	谁 有 爱丽丝 的 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
找到 爱丽丝 最后 一天 工作 后 出生 的 人	找到 爱丽丝 最后 一天 工作 后 出生 的 人	找出 那些 在 爱丽丝 最后 一天 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
两个 人 的 性别 是 什么	两个 人 是 什么 性别	这 两个 人 是 什么 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 前一天 或 与 爱丽丝 相同 的 学生	找到 前一天 的 学生 或 和 爱丽丝 一样 的 学生	找出 前一天 和 爱丽丝 一样 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 没有 上 过 棕色 大学 的 学生 的 性别	没有 上 布朗 大学 的 学生 的 性别 是 什么	没有 上 布朗 大学 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
查找 开始 日期 与 员工 alice 相同 的 员工	查找 开始 日期 与 员工 alice 相同 的 员工	查找 与 雇员 alice 的 起始 日期 相同 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 不到 学习 计算机科学 领域 的 学生 朋友	找不学 计算机科学 的 学生 朋友	寻找 不 学习 计算机科学 领域 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 城市 的 学生 ， 其 学习 领域 不是 计算机科学	非 计算机专业 学生 的 出生 城市	非 计算机专业 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出 生于 2004 年 或 2010 年 的 人	2004 年 或 2010 年 出生 的 人	2004 年 或 2010 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
有 朋友 的 人 ， 爱丽丝 是 朋友	有 爱丽丝 朋友 的 人	那些 有 爱丽丝 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
员工 在 爱丽丝 结束 前 开始	在 爱丽丝 完成 之前 开始 的 员工	员工 在 alice 完成 之前 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 加入 工作 的 人	2004 年 后 加入 工作 的 人	2004 年 后 加入 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 爱丽丝 的 毕业 日期 是 什么 时候	艾丽斯 2004 年 的 毕业 日期 是 什么 时候	2004 年 爱丽丝 的 毕业 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_end_date ) ) )
结束 日期 是 2004 年 之前 的 学生 的 性别 是 什么	截止 日期 在 2004 年 之前 的 学生 的 性别 是 什么	2004 年 以前 毕业 的 学生 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 的 学生 ， 其 结束 日期 不晚 于 2004 年	给 我 找个 截止 日期 不迟于 2004 年 的 学生	为 我 寻找 学生 的 截止 日期 不迟于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 之后 加入 的 员工	在 Alice 之后 加入 的 员工	在 爱丽丝 之后 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 关系 状态 意味着 不到 两个 人	不到 两个 人 的 关系 状态 意味着 什么	什么 关系 状态 意味着 少于 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 学生 在 2004 年 或 2010 年 或 之前 毕业	2004 年 或 2010 年 或 之前 毕业 的 学生	哪些 学生 在 2004 年 、 2010 年 或 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 之前 开始 的 学生 成为 朋友 的 人	与 2004 年 以前 开始 学习 的 学生 交朋友 的 人	与 2004 年 以前 入学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 或 之后 停学 的 人	2004 年 或 之后 停学 的 人	在 2004 年 或 之后 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 出生 之后 开始 工作 的 人	在 爱丽丝 出生 后 开始 工作 的 人	在 爱丽丝 出生 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
拥有 最新 开始 日期 的 员工	最新 开始 日期 的 员工	具有 最新 开始 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之后 停止 工作 的 人 是 什么 性别	2004 年 以后 停止 工作 的 人 是 什么 性别	什么 性别 的 人 在 2004 年 后 停止 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 一个 180 厘米 的 人 ， 他 在 2004 年 开始 工作	说出 一个 在 2004 年 开始 工作 的 180 厘米 的 人	请说出 一个 身高 180 厘米 ， 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 是 谁 的 朋友 是 什么 性别	爱丽丝 和 哪些 性别 的 人 是 朋友	爱丽丝 的 朋友 是 什么 性别 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
与 开始 日期 不晚 于 2004 年 的 人 成为 朋友 的 人	与 开始 日期 不迟于 2004 年 的 人 交朋友 的 人	与 开始 日期 不晚 于 2004 年 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 180 厘米 ， 与 爱丽丝 出生 在 同一个 城市	他 有 180 厘米 高 ， 和 爱丽丝 出生 在 同一个 城市	谁 身高 180 厘米 ， 和 爱丽丝 出生 在 同一个 城市	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
在 爱丽丝 之前 开始 的 学生 的 开始 日期 是 什么 时候	在 爱丽丝 之前 开始 学习 的 学生 的 开始 日期 是 什么	在 alice 之前 开始 上课 的 学生 的 开学 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 完成学业 之前 或 之前 开始 上学 的 人	在 爱丽丝 毕业 当天 或 之前 开始 上学 的 人	在 爱丽丝 放学 当天 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 爱丽丝 何时 开始	雇员 爱丽丝 什么 时候 开始 的	员工 爱丽丝 什么 时候 开始 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) )
哪个 学生 的 结束 日期 最长	哪个 学生 的 结束 日期 最长	哪个 学生 的 毕业 时间 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 之前 停止 工作 的 人 有 朋友 的 人	与 2004 年前 停止 工作 的 人 交朋友 的 人	与 2004 年 以前 失业 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 出 生于 2004 年	爱丽丝 的 朋友 2004 年 出生	爱丽丝 的 朋友 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 最早 毕业 的 是 什么	什么 学生 最早 毕业	什么 学生 毕业 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 在 2004 年 或 2010 年 之前 有 开始 日期 的 学生	查找 2004 年 或 2010 年 之前 有 开始 日期 的 学生	寻找 那些 在 2004 年 或 2010 年 之前 就 有 开始 上课 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 职位 与 员工 爱丽丝 相同 的 职位	与 雇员 alice 的 职称 相同 的 雇员	职位 头衔 与 alice 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 城市 是 爱丽丝 或 鲍勃 出生 的	爱丽丝 和 鲍勃 出生 在 哪个 城市	爱丽丝 或 鲍勃 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
180 厘米 高 的 人 的 职称	一个 180 厘米 高 的 人 的 职称	身高 180 厘米 的 人 的 工作 头衔	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 2004 年 以后 结束 的 员工 的 出生地	2004 年 后 离职 的 员工 的 出生地 是 什么 ？	2004 年 后 离职 的 员工 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 结束 上学 的 学生 的 出生地	2004 年 或 之后 辍学 的 学生 的 出生地	2004 年 或 以后 离校 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 之前 完成 的 学生	在 爱丽丝 之前 完成 的 学生	比 爱丽丝 先 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 学生 的 性别	结束 日期 不是 2004 年 的 学生 性别	截止 日期 不是 2004 年 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 的 朋友 ， 于 2004 年 出生	她 是 爱丽丝 的 朋友 ， 2004 年 出生	谁 是 爱丽丝 的 朋友 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
学生 在 爱丽丝 的 出生日期 之前 有 一个 开始 日期	哪个 学生 在 爱丽丝 出生 之前 有 开始 的 日期	什么 学生 在 爱丽丝 的 生日 之前 就 有 了 开始 的 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 属于 同一性 别的 所有人	找 我 所有 属于 同一性 别的 人	为 我 找到 所有 属于 同一性 别的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
谁 是 在 2004 年 或 之前 开始 工作 的 人 的 朋友	谁 是 2004 年 或 之前 开始 工作 的 人 的 朋友	谁 是 2004 年 或 之前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最后 一天 是 最近 一次	上 一天 哪个 员工 最近	哪些 员工 的 最后 一天 是 最近 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 及 以后 开始 的 学生 的 性别	2004 年 及 以后 入学 的 学生 的 性别	2004 年 及 以后 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 的 开课日期 找到 身高 180 厘米 的 人	在 2004 年 开始 约会 的 时候 找 身高 180 厘米 的 人	找 一些 身高 180 厘米 ， 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 的 开始 日期 是 爱丽丝 的 生日 或 以后	哪些 员工 的 开始 日期 是 爱丽丝 的 生日 或 更 晚	什么 员工 的 上班 日期 是 爱丽丝 的 生日 或 更 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 身高 180 厘米 ， 出 生于 2004 年 的 人	说出 2004 年 出生 的 180 厘米 高 的 人 的 名字	说出 一个 出生 在 2004 年 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
来自 同一个 出生地 的 人 和 爱丽丝 的 人	和 爱丽丝 出生 在 同一个 地方 的 人	和 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
在 爱丽丝 停止 工作 之前 开始 工作 的 人	在 爱丽丝 停止 工作 之前 就 开始 工作 的 人	在 爱丽丝 停止 工作 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 与 学生 成为 朋友 的 人	与 2004 年 以前 开始 学习 的 学生 交朋友 的 人	与 2004 年 以前 入学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
180 厘米 高 的 人 的 关系 状态 是 什么	身高 180 厘米 的 人 的 关系 状况 如何	身高 180 厘米 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
一个 人 的 关系史	一个 人 的 关系史	一个 人 的 恋爱史	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
在 棕色 大学 以外 的 大学 学习 的 人	在 布朗 大学 以外 的 大学 学习 的 人	在 布朗 大学 以外 的 大学 学习 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生 城市 的 大学 不是 棕色 大学 的 学生	非 布朗 大学 学生 的 出生 城市	非 布朗 大学 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 晚于 2004 年 的 出生 城市	查找 结束 日期 晚于 2004 年 的 学生 的 出生 城市	找到 出生 城市 的 学生 与 结束 日期 晚于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 离开 爱丽丝 的 员工 出生 了	爱丽丝 出生 后 离开 的 雇员	爱丽丝 出生 后 离职 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 在 学生 爱丽丝 开始 日期 之前 的 员工	结束 日期 早 于 学生 alice 开始 日期 的 员工	结束 日期 在 学生 alice 开始 日期 之前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 离开 爱丽丝 生日 的 学生	找 一个 在 爱丽丝 生日 那天 离开 的 学生	找 一个 在 爱丽丝 生日 那天 走 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 或 之后 辞职 的 人	2004 年 或 之后 辞职 的 人	在 2004 年 或 之后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 为 2004 的 员工 的 关系 状态	查找 结束 日期 为 2004 的 员工 的 关系 状态	查找 终止 日期 为 2004 年 的 员工 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 人 出生 在 2 个 以上 的 地方	哪个 人 出生 在 两个 以上 的 地方	哪个 人 出生 在 两个 以上 的 地方	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string > ) ( number 2 ) ) )
什么 是 2004 年 之前 离开 的 学生 的 性别	2004 年 以前 离开 的 学生 的 性别 是 什么	2004 年 以前 离校 的 学生 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 是 最高 的	哪个 人 最高	哪个 人 最高	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string height ) ) ) )
爱丽丝 离开 后 ， 员工 开始 了	爱丽丝 走后 哪个 雇员 开始 工作	爱丽斯 离开 后 ， 哪个 员工 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 开始 的 新生 的 朋友	谁 是从 2004 年 开始 的 新生 的 朋友	谁 是 2004 年 开学 的 新 同学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 之后 开始 上学 的 学生 的 关系 状况	2004 年 及 以后 入学 学生 的 人际关系 状况	二 00 四年 或 以后 入学 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 开始 的 员工	2004 年 以前 开始 工作 的 雇员	2004 年 以前 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 180 厘米 高	他 有 180 厘米 高	谁 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 最近 辞职 了	最近 辞职 的	最近 谁 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 完成学业 之前 出生 的 人	爱丽丝 还 没 毕业 就 出生 的 人	爱丽丝 毕业 前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 爱丽丝 结束 上学 的 同一天 结束 上学 的 学生	爱丽丝 放学 当天 放学 的 学生	在 爱丽丝 放学 的 同一天 放学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 有 最新 的 开始 日期	哪个 员工 有 最新 的 开始 日期	什么 员工 有 最近 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 开始 日期 是 学生 爱丽丝 的 开始 日期 之后	开始 日期 在 学生 爱丽丝 开始 日期 之后 的 学生	学生 的 开始 日期 在 学生 alice 的 开始 日期 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 毕业 于 爱丽丝 的 第一天 工作	哪个 学生 在 爱丽丝 上班 的 第一天 就 毕业 了	哪些 学生 在 爱丽丝 上班 的 第一天 就 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 人 的 朋友 在 2004 年 之前 开始 学习	一个 朋友 在 2004 年前 开始 学习 的 人	一个 人 的 朋友 在 2004 年 之前 就 开始 学习 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 2004 年 之前 或 之前 的 学生	在 2004 年 以前 还是 学生 的	谁 是 2004 年 以前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 人 的 研究 领域	一个 180 厘米 高 的 人 的 研究 领域	一个 180 厘米 高 的 人 的 研究 领域	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 少于 两个 职称 的 员工	找到 少于 两个 职位 的 员工	寻找 少于 两个 职位 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 或 之后 或 2010 年 或 之后 开始 工作 的 人	2004 年 或 之后 或 2010 年 或 之后 开始 工作 的 人	2004 年 或 之后 、 2010 年 或 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
某人 身高 180 厘米 ， 性别 与 爱丽丝 相同	一个 180 厘米 高 和 爱丽丝 性别 相同 的 人	一个 180 厘米 高 ， 和 爱丽丝 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
什么 时候 软件 工程师 爱丽丝 离开 了	软件 工程师 爱丽丝 什么 时候 离开 的	软件 工程师 爱丽丝 什么 时候 离开 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_end_date ) ) )
2004 年 爱丽丝 的 职称 是 什么	艾丽斯 2004 年 的 职称 是 什么	2004 年 爱丽丝 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
哪些 人 是 员工 的 朋友 ， 是 如何 在 2004 年 之后 开始 的	哪些 人 与 员工 是 朋友 2004 年 后 是 如何 开始 的	哪些 人 和 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 之前 或 之前 同时 开始	在 Alice 之前 或 之前 同时 开始 工作 的 员工	和 alice 同 时期 或 更 早 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 的 学生 结束 日期 等于 学生 爱丽丝	找 我 学生 结束 日期 等于 学生 爱丽丝	给 我 找 学生 结束 日期 等于 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在线 ， 身高 180 厘米	他 在 网上 ， 身高 180 厘米	谁 在线 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
什么 人有 两个 或 更 少 的 朋友	什么 人有 两个 或 更 少 的 朋友	什么 人有 两个 或 两个 以下 的 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
说出 爱丽丝 的 朋友 ， 他 的 出生地 是 纽约	请说出 爱丽丝 的 朋友 的 名字 ， 她 的 出生地 是 纽约	说出 艾丽斯 的 朋友 的 名字 ， 她 的 出生地 是 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
男性 或 女性 的 人	男性 或 女性	男人 或 女人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
爱丽丝 的 朋友 出 生于 2004 年	爱丽丝 的 朋友 2004 年 出生	爱丽丝 的 朋友 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 人 是 雇主 的 雇员 ， 不是 麦肯锡 的 朋友	哪些 人 是不是 麦肯锡 朋友 的 雇主 的 雇员	那些 不是 麦肯锡 的 朋友 的 雇主 的 雇员 是 什么 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 最后 一天 或 之后 开始 的 员工	在 爱丽丝 最后 一天 或 之后 开始 工作 的 员工	在 alice 的 最后 一天 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 出生 的 学生 的 性别	找出 2004 年 以后 出生 的 学生 的 性别	找出 2004 年 以后 出生 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 一位 朋友 ， 出 生于 2004 年	爱丽丝 的 一个 朋友 ， 2004 年 出生	爱丽丝 2004 年 出生 的 一个 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
与 结束 日期 在 2004 年 之后 的 学生 成为 朋友 的 人	与 2004 年 以后 结束 的 学生 交朋友 的 人	与 2004 年 以后 毕业 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 开始 日期 与 爱丽丝 的 结束 日期 相同	什么 学生 的 开始 日期 和 爱丽丝 的 结束 日期 一样	什么 学生 的 开始 日期 和 爱丽丝 的 结束 日期 是 一样 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 退休 时间 超过 2004 年 的 员工 的 朋友	谁 是 2004 年 以后 辞职 的 员工 的 朋友 ？	谁 是 2004 年 以后 离职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
到 2004 年 离开 的 学生 的 性别 是 什么 ？	到 2004 年 离开 的 学生 的 性别 是 什么	2004 年 离校 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
除了 2004 年 以外 ， 任何 一年 都 停止 上学 的 人 是 什么 性别	除了 2004 年外 ， 在 任何 一年 停止 上学 的 人 是 什么 性别	除了 2004 年 ， 哪一年 不 上学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 180 厘米 高 的 男性	一个 180 厘米 高 的 男人	一个 180 厘米 高 的 男人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
那些 在 2004 年 或 之前 完成学业 的 人 在 哪里 出生	在 2004 年 或 之前 完成学业 的 人 在 哪里 出生	在 2004 年 或 之前 完成学业 的 人 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 出生 在 纽约	什么 人 出生 在 纽约	什么 人 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 2004 年 之前 没有 毕业 的 学生 的 性别 是 什么	2004 年 以前 没有 毕业 的 学生 的 性别 是 什么	2004 年 以前 未 毕业 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
给 一个 180 厘米 高 的 人 说出 他 是 爱丽丝 的 朋友	说出 一个 180 厘米 高 的 人 和 爱丽丝 是 朋友	说出 一个 180 厘米 高 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
员工 的 开始 日期 是 2004 年 之前	2004 年 以前 开始 工作 的 员工	2004 年 以前 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 之前 停止 工作 的 人 的 朋友	谁 是 2004 年 以前 停止 工作 的 人 的 朋友 ？	谁 是 2004 年 以前 失业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 辞职 的 人 的 朋友	2004 年 后 辞职 的 朋友	2004 年 后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
对于 180 厘米 高 的 人 来说 ， 研究 领域 是 什么 ？	180 厘米 高 的 人 的 研究 领域 是 什么 ？	180 厘米 高 的 人 研究 的 领域 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ( call SW.reverse ( string field_of_study ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 员工 的 出生地 ， 其 最后 一天 是 在 2004 年 之前	员工 的 出生地 是 什么 ？ 他们 的 最后 一天 是 在 2004 年 之前	2004 年 以前 离职 的 员工 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 开始 日期 为 2004 年 或 之后 的 员工	查找 开始 日期 为 2004 或 更 高 版本 的 员工	查找 起始 日期 为 2004 年 或 以后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 员工 的 关系 状况	2004 年 以后 员工 关系 状况	2004 年 后 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 之前 没有 上学 的 学生	2004 年 以前 未 开学 的 学生	2004 年 以前 未 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 在 棕色 大学 学习 的 爱丽丝	爱丽丝 在 布朗 大学 学习 什么	爱丽丝 在 布朗 大学 学 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
查找 结束 日期 不晚 于 2004 年 的 学生 的 性别	查找 截止 日期 不晚 于 2004 年 的 学生 性别	找出 截止 日期 不迟于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 开始 工作 后 停止 工作 的 人	爱丽丝 开始 工作 后 就 停止 工作 的 人	那些 在 爱丽丝 开始 工作 后 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
变性人	变性人	变性人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
在 爱丽丝 的 最后 一天 或 之后 找到 员工	在 Alice 的 最后 一天 或 之后 找到 员工	寻找 在 alice 的 最后 一天 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
毕业 不迟于 爱丽丝 那天 的 学生	不迟于 爱丽丝 毕业 那天 的 学生	不晚 于 爱丽丝 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 辞职 之前 辞职 的 员工	在 爱丽丝 辞职 前 辞职 的 雇员	在 alice 辞职 之前 就 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
工作 状态 最低 的 员工	工作 状态 最低 的 员工	工作 地位 最低 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 最后 一天 之前 或 之前 找到 员工	在 Alice 的 最后 一天 之前 或 当天 找到 员工	查找 在 alice 的 最后 一天 之前 或 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 或 更 早 毕业 的 人 的 朋友	谁 是 2004 年 或 更 早 毕业 的 人 的 朋友	谁 是 2004 年 或 更 早 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 学生 在 爱丽丝 的 最后 一天 工作 之前 开始	在 爱丽丝 上班 的 最后 一天 之前 找到 学生	找到 学生 在 alice 最后 一天 上班 前 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 是 爱丽丝 的 生日	什么 学生 的 结束 日期 是 在 爱丽丝 生日 之前	学生 们 的 结束 日期 是 在 爱丽丝 的 生日 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 有 最新 的 开始 日期	哪个 员工 有 最新 的 开始 日期	什么 员工 有 最近 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 爱丽丝 同时 停止 工作 的 员工	与 爱丽丝 同时 停止 工作 的 雇员	和 爱丽丝 同时 停止 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 朋友 不是 软件 工程师 的 人	朋友 不是 软件 工程师 的 人	朋友 不是 软件 工程师 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 或 更 高 的 人	180 厘米 或 以上 的 人	身高 180 厘米 或 更 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
来自 棕色 大学 的 学生 身高 180 厘米	哪个 布朗 大学 的 学生 身高 180 厘米	哪个 布朗 大学 的 学生 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string university ) ( string = ) en.university.brown ) )
谁 是 2004 年 开始 的 员工 的 朋友	从 2004 年 开始 谁 是 该 员工 的 朋友	从 2004 年 开始 ， 谁 是 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪些 学生 不晚 于 爱丽丝 的 出生日期	哪个 学生 最迟在 爱丽丝 的 生日 开始	哪些 学生 开始 上课 不晚 于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 与 一个 身高 180 厘米 的 人 成为 朋友	什么 人 和 身高 180 厘米 的 人 是 朋友 ？	什么样 的 人会 和 身高 180 厘米 的 人 交朋友 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 加入 学业 之前 ， 找到 那些 加入 工作 的 人	在 爱丽丝 参加 学习 之前 找到 参加 工作 的 人	找出 那些 在 alice 参加 学习 之前 就 已经 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 我 的 社交 网络 中 ， 哪个 城市 超过 两个 人	在 我 的 社交 网络 中 ， 哪个 城市 出 生于	我 的 社交 网络 中有 两个 以上 的 人 是 在 哪个 城市 出生 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 人 声称 性别 最高	哪个 人 声称 自己 的 性别 最 多	哪个 人 的 性别 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string gender ) ) )
当天 加入 学习 爱丽丝 的 人 完成 了	爱丽丝 完成学业 那天 参加 学习 的 人	参加 研究 的 人 在 爱丽丝 完成 的 那天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 上学 前 停止 工作 的 人	爱丽丝 停学 前 停止 工作 的 人	在 爱丽丝 辍学 之前 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 单身 朋友	爱丽丝 的 单身 朋友	爱丽丝 的 单身 朋友 们	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
找到 与 员工 结交 的 朋友 ， 他们 的 结束 日期 不晚 于 2004 年	找 那些 与 不 迟于 2004 年 结束 日期 的 员工 交朋友 的 人	找 一些 员工 的 朋友 ， 他们 的 离职 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 结束 时 开始	爱丽丝 下班 后 开始 工作 的 员工	员工 在 alice 完成 工作 后 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 同一天 出生 的 人 爱丽丝 结束 了 学业	找到 爱丽丝 上学 那天 出生 的 人	找出 出生 在 爱丽丝 放学 当天 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) )
爱丽丝 在 2004 年 停止 学习 的 是 什么	艾丽斯 2004 年 停止 学习 的 是 什么 ？	2004 年 爱丽丝 停止 了 学习 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
180 厘米 高 的 所有人 的 雇主	所有 身高 180 厘米 的 雇主	所有 身高 180 厘米 的 人 的 雇主	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 的 开始 日期 最短 为 员工 爱丽丝 的 结束 日期	开始 日期 是 雇员 alice 的 最 短 结束 日期 的 雇员	雇员 的 开始 日期 是 雇员 alice 的 最小 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 女性	找个 女 的	找 一个 女性朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string ! = ) en.gender.male ) )
关于 2004 年 之前 毕业 的 学生 的 关系 状况	2004 年 以前 毕业 学生 的 恋爱 状况	2004 年 以前 毕业 的 学生 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 的 性别	爱丽丝 的 性别 是 什么	爱丽丝 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
结束 日期 不 在 爱丽丝 结束 日期 之后 的 员工	结束 日期 不 在 Alice 结束 日期 之后 的 员工	结束 日期 未 超过 爱丽丝 的 结束 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
男性 或 女性 的 人	男性 或 女性	男人 或 女人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.concat en.gender.male en.gender.female ) ) )
人比 alice 高	比 爱丽丝 高 的 人	比 爱丽丝 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
在 2004 年 或 之后 开始 工作 的 人 是 什么 性别	2004 年 或 之后 开始 工作 的 人 是 什么 性别	2004 年 或 以后 开始 工作 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在线 的 男性	上网 的 男性	在线 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string logged_in ) ) )
在 爱丽丝 辞掉 工作 之前 ， 学生 毕业 了	爱丽丝 辞职 前 哪个 学生 毕业 了	爱丽丝 辞职 之前 ， 那个 学生 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 和 爱丽丝 出生 在 同一个 地方	她 和 爱丽丝 出生 在 同一个 地方	谁 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
雇用 到 2004 年 或 2010 年	在 2004 年 或 2010 年 之前 工作	一直 到 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 的 关系 状态 最少	哪个 人 的 关系 状态 最少	哪个 人 的 恋爱 状态 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
出生 在 纽约 ， 身高 180 厘米 的 人	出生 在 纽约 ， 身高 180 厘米 的 人	出生 在 纽约 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 180 厘米 高 的 人	找 180 厘米 高 的 人	找到 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
当 爱丽丝 开始 工作 时 ， 哪个 学生 就 这样 结束 了 学业	爱丽丝 刚 开始 工作 时 哪个 学生 就 辍学 了	爱丽丝 刚 开始 工作 ， 哪个 学生 就 辍学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 单身 的 人	找 单身 的 人	寻找 单身 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
哪些 员工 开始 新 的 一天 alice 开始	艾丽斯 上班 的 那天 是 哪个 员工 上班	爱丽斯 上班 的 第一天 是 哪位 员工 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 在 爱丽丝 出发 前 开始 的 学生	给 我 找 一个 在 爱丽丝 离开 之前 就 开始 学习 的 学生	帮 我 找到 那个 在 爱丽丝 出发 前 就 出发 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 上学	爱丽丝 什么 时候 开始 上学 的	爱丽丝 什么 时候 开始 上学 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )
男性 的 朋友	男性 朋友	男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
有 两个 或 更少 雇主 列出 的 人	列出 两个 或 更少 雇主 的 人	有 两个 或 两个 以下 雇主 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 前 停止 工作 的 人	爱丽丝 出生 前 停止 工作 的 人	在 爱丽丝 出生 之前 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 学生 关系 状态 谁 结束 超过 2004 年	结束 时间 超过 2004 年 的 学生 关系 状况 如何	什么 是 学生 关系 状态 结束 大于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 性别 是 职称 不是 软件 工程师 的 员工	不是 软件 工程师 的 员工 是 什么 性别	不是 软件 工程师 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 后 辞职 的 人	爱丽丝 出生 后 辞职 的 人	爱丽丝 出生 后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 之后 加入 工作 的 人	在 爱丽丝 之后 加入 工作 的 人	爱丽丝 之后 加入 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
性别 是 两个 人 的 性别	两个 人 的 性别 是 什么	什么 性别 是 两个 人 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 约会 之前 或 之前 出生 的 人 停止 上学	艾丽斯 停止 上学 之日 或 之前 出生 的 人	在 爱丽丝 的 生日 当天 或 之前 出生 的 人 不再 上学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
将 一个 人 的 名字 命名 为 一个 身高 180 厘米 的 人	说出 一个 人 和 一个 180 厘米 高 的 人 的 朋友	说出 一个 人 的 朋友 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
不是 在 纽约 出生 的 人	不是 在 纽约 出生 的 人	不是 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
与 爱丽丝 出生 在 同一个 地方 的 人	和 爱丽丝 出生 在 同一个 地方 的 人	和 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
生日 城市 的 员工 ， 其 开始 日期 不是 2004 年	起始 日期 不是 2004 年 的 员工 的 出生 城市	非 2004 年入 职 日期 的 员工 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 与 员工 成为 朋友 的 人	谁 是 员工 的 朋友	谁 是 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 性别 未 在 2004 年 完成	2004 年 未 完成 工作 的 员工 性别	2004 年 未 完成 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
独特 的 关系 状态	独特 的 关系 状态	独特 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 爱丽丝 最后 一天 工作 后 出生 的 人	找 一个 在 爱丽丝 最后 一天 工作 后 出生 的 人	找 一个 出生 在 爱丽丝 最后 一天 工作 之后 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
2004 年 或 以后 出生 的 人	2004 年 或 以后 出生 的 人	2004 年 或 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
与 2004 年 之后 开始 的 员工 成为 朋友 的 人	与 2004 年 后 开始 工作 的 员工 交朋友 的 人	与 2004 年 后 入职 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 爱丽丝 成为 朋友 并于 2004 年 出生 的 人	2004 年 出生 的 爱丽丝 的 朋友	和 爱丽丝 是 朋友 的 人 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
员工 的 开始 日期 是 2004 年	哪个 员工 的 起始 日期 是 2004 年	什么 员工 的 开始 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 出 生于 2004 年 的 男性	2004 年 出生 的 所有 男性	所有 的 男性 都 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
那些 没有 在 2004 年 开始 的 学生	2004 年 未 入学 的 学生	2004 年 没有 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 不仅仅 是 性别	哪种 人 的 性别 多	哪些 人 的 性别 多于 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
找到 开学 日期 不 超过 学生 爱丽丝 开学 日期 的 学生	查找 开始 日期 不 大于 学生 alice 的 开始 日期 的 学生	查找 起始 日期 不 大于 学生 alice 的 起始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
查找 结束 日期 不是 2004 的 员工	查找 结束 日期 不是 2004 年 的 员工	寻找 结束 日期 不是 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 性别 未 在 2004 年 开始	2004 年 未入 职 员工 性别	2004 年 起 未入 职 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 作为 一名 学生 的 学习 领域 是 什么	爱丽丝 作为 学生 的 学习 领域 是 什么	爱丽丝 作为 学生 的 研究 领域 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
与 朋友 在 2004 年 后 毕业 的 人	2004 年 毕业 的 朋友	2004 年 后 毕业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 的 生日 或 之前 毕业 的 学生	爱丽丝 生日 当天 或 之前 毕业 的 学生	爱丽丝 生日 当天 或 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
高于 180 厘米 的 人 的 朋友	180 公分 以上 的 朋友	身高 超过 180 厘米 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
与 alice 一样 研究 同一 领域 的 人	和 爱丽丝 研究 同一 领域 的 人	和 爱丽丝 研究 同一 领域 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 没有 完成 的 员工 朋友	2004 年 没有 完成 工作 的 员工 的 朋友	2004 年 没有 完成学业 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
alice 或 bob 的 性别 是 什么 ？	爱丽丝 和 鲍勃 是 什么 性别	爱丽丝 和 鲍勃 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
哪个 性别 是 2004 年 以后 结束 的 学生	哪个 性别 的 学生 在 2004 年 后 毕业	2004 年 后 毕业 的 学生 是 哪个 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 在 学生 爱丽丝 结束 日期 之前 的 学生	结束 日期 早 于 学生 alice 结束 日期 的 学生	结束 日期 在 学生 alice 结束 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 至少 是 2004 年 或 2010 年	哪些 学生 的 起始 日期 至少 是 2004 年 或 2010 年	什么 学生 有 一个 开始 的 日期 ， 至少 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两性 的 人	有 两种 性别 的 人	有 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string <= ) ( number 2 ) ) )
找到 结束 日期 不是 2004 年 的 员工 朋友	查找 结束 日期 不 在 2004 年 的 员工 的 朋友	寻找 员工 的 朋友 ， 截止 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
关系 状态 单身 的 人	单身 人士 出生 的 城市	单身 人士 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
爱丽丝 的 朋友	爱丽丝 的 朋友	爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
爱丽丝 出生 在 哪里	爱丽丝 出生 在 哪里	爱丽丝 出生 在 什么 地方 ?	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
2004 年 或 之前 开始 上学 的 人 的 关系 状况 如何 ？	2004 年 或 之前 开始 上学 的 人 的 关系 状况 如何	2004 年 或 之前 入学 的 人 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 一个 登录 的 人 ， 出 生于 2004 年	找到 一个 2004 年 出生 的 人	找到 一个 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )
什么 时候 爱丽丝 开始 在 麦肯锡	爱丽丝 什么 时候 开始 在 麦肯锡 工作 的 ？	爱丽丝 什么 时候 开始 在 麦肯锡 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
开学 日期 不 在 2004 年 之前 的 学生 的 关系 状态	2004 年 以前 学生 关系 状况	2004 年 以前 开学 的 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
由 两个 人 分享 的 性别	两人 共有 的 性别	两个 人 共有 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 人 是 与 2004 年 毕业 的 学生 的 朋友	哪些 人 和 2004 年 刚 毕业 的 学生 是 朋友 ？	哪些 人 是 2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
一个 学生 在 爱丽丝 开始 时 结束	当 爱丽丝 开始 时 结束 的 学生	一个 学生 在 爱丽丝 开始 的 时候 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 工作 之前 开始 上学 的 人	在 爱丽丝 开始 工作 之前 就 开始 上学 的 人	在 爱丽丝 开始 工作 之前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 alice 在 2004 年 工作 的 人	找出 爱丽丝 2004 年 为 谁 工作	找出 alice 在 2004 年 为 谁 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
在 2004 年 或 2010 年 被 雇用 的 员工	2004 年 或 2010 年 聘用 的 员工	在 2004 年 或 2010 年 被 雇佣 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 的 职称	爱丽丝 的 职称 是 什么	爱丽斯 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
alice 是 计算机科学 专业 的 学生 ， 是 哪 所 大学 的 学生	爱丽丝 是 计算机科学 系 的 学生 ， 她 是 哪 所 大学 的 学生	爱丽丝 是 哪个 大学 的 学生 ， 她 是 计算机科学 专业 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
开始 日期 在 204 之前 的 学生 的 关系 状态 是 什么	开始 日期 在 204 之前 的 学生 的 关系 状况 如何	204 日前 开学 的 学生 的 恋爱 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 出生 之前 去世 的 学生	爱丽丝 出生 前 就 死 了 的 学生	爱丽丝 出生 前 死去 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 学生 的 朋友	结束 日期 不是 2004 年 的 学生 的 朋友	学生 的 朋友 ， 截止 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 最早 开始	哪个 学生 最早 开始	哪个 学生 开始 得 最早 ?	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 研究 最多 的 东西	谁 研究 的 东西 最 多	谁学 的 东西 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 人 的 生日 不迟于 2004 年	什么 人 的 生日 不迟于 2004 年	什么 人 的 生日 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 城市 是 2004 年 没有 开始 的 员工 的 出生地	一个 2004 年 没有 开始 工作 的 员工 的 出生地 是 哪个 城市	哪个 城市 是 一个 2004 年 没有 开始 工作 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 不是 软件 工程师 的 员工 在 哪里 出生	不是 软件 工程师 的 员工 出生 在 哪里	非 软件 工程师 的 员工 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 出生 前 退出 的 员工	在 艾丽斯 出生 前 辞职 的 雇员	在 爱丽丝 出生 前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 出生 后 完成学业 的 人 在 哪里 ？	2004 年 出生 后 毕业 的 人 在 哪里	2004 年 后 毕业 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 不 超过 员工 爱丽丝 的 学生	查找 结束 日期 不 超过 员工 alice 的 学生	查找 那些 终止 日期 不 大于 员工 alice 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 爱丽丝 开始 工作 时 停止 上学 的 人	当 爱丽丝 开始 工作 时 停止 上学 的 人	当 爱丽丝 开始 工作 时 ， 他们 就 辍学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 厘米 ， 学习 计算机科学 的 人	身高 180 厘米 学习 计算机科学 的 人	身高 180 厘米 ， 学习 计算机科学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
在 2004 年 或 2010 年 开始 工作 的 员工	2004 年 或 2010 年 开始 工作 的 员工	在 2004 年 或 2010 年 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 晚于 2004 年 的 学生	结束 日期 晚于 2004 年 的 学生	二 、 结业 日期 迟于 二 四年 者	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 出生 的 所有人	找到 2004 年 出生 的 所有人	找出 所有 2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
出生 城市 的 员工 ， 其 开始 日期 不是 2004 年 之后	起始 日期 不 在 2004 年 之后 的 员工 的 出生 城市	2004 年 以后 入职 日期 未满 的 职工 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
朋友 不是 麦肯锡 雇用 的 人	朋友 不是 麦肯锡 雇佣 的 人	朋友 是 麦肯锡 没有 雇佣 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 以后 开始 上学 的 学生	2004 年 或 以后 开始 上学 的 学生	2004 年 或 以后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 艾丽斯 被 录用 时 ， 学生 毕业 了 什么	爱丽丝 被 录用 时 学生 毕业 的 是 什么	爱丽丝 被 雇用 时 ， 学生 们 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 只有 一个 学习 领域	只有 一个 学习 领域 的 学生	只有 一个 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 之前 结束 的 员工	在 爱丽丝 之前 结束 的 雇员	在 alice 之前 结束 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 开始 与 爱丽丝 同时 或 之后 完成	在 Alice 完成 之前 或 之后 同时 开始 的 员工	从 同一 时期 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 后 完成 的 学生	爱丽丝 开始 后 完成 的 学生	学生 在 alice 开始 后 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 180 厘米 高 的 人 性别 相同 的 人	与 身高 180 厘米 者 性别 相同 者	与 身高 180 公分 者 同 性别 者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
从 2004 年 开始 ， 员工 的 出生地 是 什么 ？	从 2004 年 开始 ， 员工 的 出生地 是 什么 ？	2004 年 后 入职 员工 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 什么 时候 开始 上 棕色 大学	爱丽丝 什么 时候 开始 上 布朗 大学 的	爱丽斯 什么 时候 开始 上 布朗 大学 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_start_date ) ) )
找到 参加 过 大多数 大学 的 学生	找到 上 大学 最多 的 学生	找出 上过 最多 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
这是 大学 alice 研究 的	爱丽丝 上 的 是 哪 所 大学	爱丽丝 上 的 是 哪 所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 第一天 或 之前 找到 最后 几天 的 员工	在 Alice 的 第一天 或 之前 找到 最后 几天 的 员工	查找 在 alice 的 第一天 或 之前 的 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 的 开始 日期 是 爱丽丝 的 诞生 日期	哪个 雇员 的 开始 日期 是 爱丽丝 的 生日	什么 员工 的 起始 日期 是 alice 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 毕业 不早 于 爱丽丝 的 第一个 工作日	哪个 学生 在 爱丽丝 第一个 工作日 毕业	哪些 学生 在 爱丽丝 第一个 工作日 就 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
高度 为 180 厘米 的 人 的 职称 是 什么 ？	身高 180 厘米 的 人 的 职称 是 什么	身高 180 厘米 的 人 的 职称 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
除 软件 工程师 以外 的 员工	软件 工程师 以外 的 员工	软件 工程师 以外 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 与 员工 开始 约会 的 朋友 不是 2004 年	谁 是 开始 日期 不是 2004 年 的 员工 的 朋友	谁 是 开始 日期 不是 2004 年 的 雇员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 是 男性 的 朋友	什么 人 是 男人 的 朋友	什么 人 是 男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
2004 年 出生 的 人 声称 有 哪些 关系 状态	2004 年 出生 的 人 要求 什么样 的 关系 状态	2004 年 出生 的 人 有 哪些 恋爱 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 是 爱丽丝 大学	什么 是 爱丽丝 大学	爱丽丝 大学 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
谁 比 爱丽丝 短 或 相同	不是 比 爱丽丝 矮 就是 一样	谁 比 爱丽丝 矮 ， 谁 和 她 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
2004 年 以后 开始 的 员工	2004 年 后 开始 工作 的 员工	2004 年 后 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 最后 一天 比 爱丽丝 毕业 那天 更近	昨天 哪个 员工 比 爱丽丝 的 毕业 日 还 晚	哪位 员工 的 最后 一天 比 爱丽丝 的 毕业 日 更 近	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 爱丽丝 的 开始 日期 或 之后 开始 的 员工	在 Alice 的 开始 日期 或 之后 开始 工作 的 员工	在 alice 的 开始 日期 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 只有 雇主	哪些 员工 只有 雇主	哪些 雇员 拥有 的 雇主 数量 最 多	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 员工 爱丽丝 的 职称	雇员 爱丽丝 的 职称 是 什么	员工 alice 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
哪个 学生 停止 了 员工 爱丽丝 的 同时	哪个 学生 同时 停 了 下来	哪个 学生 和 雇员 爱丽丝 同时 停止 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 男性 的 关系 状况	男性 的 关系 状况 如何	男性 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
什么 人 登录	什么 人 登录	什么 人 登录 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) )
在 爱丽丝 开始 上学 之前 就 开始 工作 的 员工	爱丽丝 上学 前 就 开始 工作 的 雇员	在 alice 上学 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 的 退出 日期 不是 2004 年	哪些 员工 的 离职 日期 不是 2004 年	哪些 员工 的 离职 日期 不是 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
离开 这 一天 的 员工 加入 了 爱丽丝	爱丽丝 加入 时 离开 的 雇员	爱丽丝 加入 的 那天 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 职位 数量 最少 的 员工	找到 职称 最少 的 员工	寻找 拥有 最少 职位 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 之前 毕业 的 学生	在 爱丽丝 开始 之前 毕业 的 学生	在 alice 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 的 开始 日期 是 2004 年 或 2010 年 的 学生名单	给 我 找 一份 2004 年 或 2010 年 开学 的 学生名单	给 我 找 一份 2004 年 或 2010 年 开学 的 学生名单	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 不再 是 学生 之前 开始 的 员工	在 艾丽斯 不再 是 学生 之前 就 开始 工作 的 员工	在 爱丽丝 还 没 毕业 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 结束 日期 少于 员工 爱丽丝 的 开始 日期	哪些 学生 的 结束 日期 小于 员工 alice 的 开始 日期	什么 学生 有 一个 结束 日期 比 员工 alice 的 开始 日期 少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 在 2004 年 或 2010 年 之后 开始 工作 的 所有 员工	找 我 2004 年 或 2010 年 以后 开始 工作 的 所有 员工	找到 所有 在 2004 年 或 2010 年 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 城市 的 学生 ， 其 结束 日期 是 在 2004 年 之前	结束 日期 在 2004 年 之前 的 学生 出生 城市	2004 年 以前 学生 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 爱丽丝 或 鲍勃 的 朋友	找 爱丽丝 或 鲍勃 的 朋友	寻找 爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
员工 拥有 与 爱丽丝 相同 的 职位	什么 员工 的 职称 和 爱丽丝 一样	什么 员工 的 头衔 和 爱丽丝 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 学生 朋友	2004 年 以前 开始 的 学生 之友	2004 年 以前 开始 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 180 厘米 高 的 人 的 朋友	谁 是 180 厘米 高 的 人 的 朋友	谁 是 180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
将 与 两个 以上 其他人 成为 朋友 的 人 命名	说出 一个 和 另外 两个 以上 的 人 是 朋友 的 人 的 名字	说出 一个 和 两个 以上 的 人 是 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 拥有 相同 关系 身份 的 人 alice 就是 朋友	找到 和 爱丽丝 有 同样 关系 的 人	找 一些 和 alice 有 同样 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
2004 年 没有 入学 的 学生 的 关系 状况	2004 年 未 入学 学生 的 恋爱 状况	未 在 2004 年 开始 恋爱 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 2004 年 就业 开始 日期	艾丽斯 2004 年 就业 开始 日期	爱丽丝 2004 年 的 工作 开始 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
找到 2010 年 之前 开始 的 员工	2010 年前 开始 寻找 员工	寻找 2010 年 以前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
列出 2004 年 之前 开始 的 学生 的 关系	说出 2004 年 以前 开始 的 学生 的 关系	说出 2004 年 以前 开始 交往 的 学生 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 在线 和 爱丽丝 的 朋友	她 在 网上 和 爱丽丝 是 朋友	谁 在 网上 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
有 关系 的 人	恋爱 中 的 人	恋爱 中 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string ! = ) en.relationship_status.single ) )
2004 年 之前 离职 的 员工 的 性别 是 什么 ？	2004 年 以前 离职 的 员工 的 性别 是 什么 ？	2004 年 以前 离职 的 员工 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 开始 ， 员工 的 关系 状况 如何	2004 年 以后 员工 的 关系 状况 如何	2004 年 以后 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
注册 棕色 或 ucla 大学 的 学生	就读于 布朗 大学 或 加州大学洛杉矶分校 的 学生	就读于 布朗 大学 或 加州大学洛杉矶分校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 不 超过 两个 职称	不 超过 两个 职称 的 员工	不 超过 两个 工作 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 180 厘米 高 ， 也 是 女性 的 人	找 一个 180 厘米 高 的 女人	找 一个 身高 180 厘米 的 女性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
在 爱丽丝 之后 出生 的 人	在 爱丽丝 之后 出生 的 人	出生 在 爱丽丝 之后 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
哪些 人 是 员工 的 朋友 ， 其 职称 不是 软件 工程师	哪些 人 和 职位 不是 软件 工程师 的 员工 是 朋友 ？	哪些 人 与 职位 不是 软件 工程师 的 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
说出 2004 年 以后 毕业 的 学生 的 朋友	说出 2004 年 毕业 的 学生 的 朋友	说出 一位 2004 年 后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 不同 性别 的 人	和 爱丽丝 不同 性别 的 人	和 爱丽丝 性别 不同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string ! = ) en.person.alice ) )
什么 是 爱丽丝 2004 年 离开 公司 的 职位	艾丽斯 2004 年 离开 的 公司 的 职位 是 什么	艾丽丝 2004 年 离开 的 那家 公司 的 职位 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
目前 在线 的 人	当前 联机 的 人	当前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) )
员工 最后 一天 是 爱丽丝 上学 的 同一天	哪位 员工 上 一天 是 爱丽丝 上学 的 同一天	哪位 员工 的 最后 一天 是 爱丽丝 上学 的 那 一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 至少 有 两种 关系 状态	人们 至少 有 两种 关系 状态	什么 人 至少 有 两种 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
最近 停学 的 人	最近 辍学 的 人	最近 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 出生 在 哪里	爱丽丝 的 朋友 出生 在 哪里	爱丽斯 的 朋友 出生 在 什么 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
找到 2004 年 出生 的 人 的 朋友	寻找 2004 年 出生 的 人 的 朋友	寻找 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找到 所有 爱丽丝 的 朋友	找到 所有 爱丽丝 的 朋友	找出 所有 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
现在 或 以前 的 学生 的 关系 状况 是 什么 ， 不 包括 2004 年 开始 的 学生	除了 2004 年 开始 的 学生 外 ， 现在 或 以前 的 学生 的 关系 状况 如何 ？	除了 2004 年 入学 的 学生 外 ， 现在 或 以前 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
告诉 我 在 爱丽丝 开始 之前 离开 公司 的 所有 员工	让 我 看看 所有 在 爱丽丝 开始 之前 离开 公司 的 员工	让 我 看看 所有 在 爱丽斯 开始 之前 离开 公司 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 以后 开始 上学 的 人 的 朋友	寻找 2004 年 后 开始 上学 的 人 的 朋友	寻找 2004 年 后 开始 上学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 与 爱丽丝 成为 朋友 并 在 纽约 出生 的 人	找 一些 和 爱丽丝 是 朋友 ， 在 纽约 出生 的 人	找 一些 和 爱丽丝 是 朋友 的 人 ， 他们 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 有 两个 性别	有 两种 性别	谁 有 两种 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
找到 2004 年 以外 的 最后 一天 的 学生	查找 最后 一天 不是 2004 年 的 学生	查找 2004 年 以外 的 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 性别 是 180 厘米 高 的 大多数 人	哪个 性别 的 人 身高 180 厘米	身高 180 厘米 的 人 多 属于 哪 种 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 们 不 迟于 爱丽丝 的 出生日期 开始	不迟于 爱丽丝 生日 的 学生	不晚 于 爱丽丝 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 或 之前 毕业 的 人 的 朋友	谁 是 2004 年 或 之前 毕业 的 人 的 朋友	谁 是 2004 年 或 之前 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2010 年 之前 开始 的 员工	2010 年前 开始 工作 的 员工	2010 年 以前 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 晚于 2004 年 的 学生 的 性别	结束 日期 在 2004 年 以后 的 学生 性别	二 、 结业 日期 在 二 00 四年 以上者 ， 其 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 有 两个 出生地 的 人	找到 有 两个 出生地 的 人	找到 有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
谁 拥有 最大 的 两个 关系 状态	最多 有 两个 关系 状态 的 人	谁 有 最 多 两个 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
给 在线 爱丽丝 的 朋友 起个 名字	请说出 爱丽丝 的 一个 在线 朋友 的 名字	说出 爱丽丝 网上 的 一个 朋友 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 有 两种 关系 状态 的 人	查找 具有 两种 关系 状态 的 人	找到 有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
爱丽丝 的 研究 领域 是 计算机科学	爱丽丝 的 研究 领域 是 计算机科学	爱丽丝 的 研究 领域 是 计算机科学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string field_of_study ) ) )
说出 不迟于 2004 年 开始 的 学生 朋友	说出 一个 不迟于 2004 年 开始 学习 的 学生 的 朋友	说出 一位 最迟在 2004 年 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
他于 2004 年 创立 ， 身高 180 厘米	他 从 2004 年 开始 ， 身高 180 厘米	谁 2004 年 出生 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
与 软件 工程师 以外 的 员工 成为 朋友 的 人	与 软件 工程师 以外 的 员工 交朋友 的 人	与 雇员 而 不是 软件 工程师 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 登录 身高 180 厘米 的 人	查找 登录 高度 为 180 厘米 的 用户	查找 登录 高度 为 180 厘米 的 用户	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
那些 在 2004 年 或 之后 开始 工作 的 人	2004 年 或 之后 开始 工作 的 人	在 2004 年 或 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
大学 号码	大学 编号	大学 的 数量	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ) )
谁 有 两个 出生地	他 有 两个 出生地	谁 有 两个 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
找到 结束 日期 少于 2004 年 的 学生	查找 结束 日期 小于 2004 年 的 学生	查找 结业 日期 少于 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 所有 开始 日期 与 爱丽丝 相匹配 的 员工	查找 所有 开始 日期 与 Alice 匹配 的 员工	查找 所有 与 alice 的 起始 日期 匹配 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之后 开始 工作 的 人 的 性别 是 什么 ？	2004 年 以后 开始 工作 的 人 的 性别 是 什么	2004 年 后 开始 工作 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 后 毕业 的 学生	2004 年 后 毕业 的 学生	2004 年 后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 毕业 ， 但 2004 年	除 2004 年外 ， 哪些 学生 毕业	除了 2004 年 ， 哪一年 有 学生 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 两个 人 的 关系 状况	两个 人 的 关系 状况 如何	两个 人 的 关系 怎么样	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
性别 与 爱丽丝 相同	和 爱丽丝 一样 的 性别	性别 和 alice 一样	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
爱丽丝 开始 或 之前 完成 工作 的 人	爱丽丝 开始 工作 时 或 以前 完成 工作 的 人	在 爱丽丝 开始 工作 之前 或 之前 完成 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 员工 alice 或 更 高级 别的 开始 日期 的 学生	查找 员工 起始 日期 为 Alice 或 更 高 的 学生	查找 雇员 alice 或 更 大 的 起始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 朋友 已 登录	爱丽丝 的 朋友 登录 了	爱丽丝 的 朋友 登录 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
谁 是 没有 上 过 棕色 大学 的 学生 的 朋友	他 和 一个 没有 上 布朗 大学 的 学生 是 朋友	谁 是 没有 上 布朗 大学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 2004 年 或 之后 退出 学生 的 朋友	谁 是 2004 年 或 之后 辞职 的 学生 的 朋友 ？	2004 年 或 以后 退学 的 学生 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 人数 高达 180 ， 结束 日期 为 2004 的 人	找到 身高 180 ， 截止 日期 2004 的 人	寻找 身高 为 180 的 人 ， 并 在 2004 年 结束	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
当 爱丽丝 辞掉 工作 时 开始 的 员工	爱丽丝 辞职 时 开始 工作 的 员工	爱丽丝 辞职 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 城市 是 两个 人 的 发源地	哪个 城市 是 两个 人 的 出生地	哪座 城市 是 这 两个 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
职位 最少 的 员工	职称 最少 的 员工	工作 头衔 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 男性 的 出生地	找出 男性 的 出生地	找出 男性 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪些 员工 在 爱丽丝 的 出生日期 或 之前 开始	哪些 员工 在 爱丽丝 生日 当天 或 之前 开始 工作	哪些 员工 是 在 爱丽斯 生日 当天 或 之前 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 是 爱丽丝 的 朋友	什么 人 是 爱丽丝 的 朋友	什么 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
学生 从 2004 年 开始	2004 年 以后 开始 的 学生	2004 年 后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 在 2004 年 之后 出生	2004 年 以后 出生 的 人	哪些 人 是 2004 年 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
什么 是 不 迟于 2004 年 毕业 的 学生 的 出生地	不迟于 2004 年 毕业 的 学生 的 出生地 是 什么	不迟于 2004 年 毕业 的 学生 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
mckinsey 的 alice 开始 日期	爱丽丝 在 麦肯锡 的 开始 日期	alice 在 麦肯锡 的 开始 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
在 爱丽丝 的 出生日期 之后 ， 学生 开始 了 什么	爱丽丝 出生 后 是 什么 学生	爱丽丝 出生 后 ， 学生 们 开始 做 什么 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 生日 与 爱丽丝 的 结束 日期 相同 的 人	找到 生日 和 爱丽丝 的 结束 日期 相同 的 人	找到 和 alice 的 结束 日期 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
找到 所有 登录 的 人 的 性别 ， 身高 180 厘米	查找 所有 登录 高度 为 180 厘米 的 人 的 性别	查找 所有 登录 高度 为 180 厘米 的 用户 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 与 爱丽丝 有 相同 出生地 的 人	找到 和 爱丽丝 出生地 一样 的 人	找到 和 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ) )
员工 的 开始 日期 不是 2004 年	开始 日期 不是 2004 年 的 员工	入职 日期 不是 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 与 180 厘米 的 爱丽丝 一样 高	她 和 爱丽丝 一样 高 180 厘米	谁 和 爱丽丝 一样 高 ， 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
找到 我 在 2004 年 之前 加入 他们 工作 的 人 的 朋友	给 我 找些 2004 年 以前 参加 工作 的 朋友	给 我 找 一些 在 2004 年 之前 找到 工作 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 与 员工 爱丽丝 的 开始 日期 相同	结束 日期 与 雇员 alice 的 开始 日期 相同 的 学生	结束 日期 与 雇员 爱丽丝 的 开始 日期 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在线 180 厘米 高	谁 在 网上 身高 180 厘米	谁 在 网上 有 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
什么 是 大学 是 棕色 大学 的 学生 爱丽丝 的 研究 领域	布朗 大学 学生 爱丽丝 的 研究 领域 是 什么 ？	布朗 大学 的 学生 爱丽丝 的 研究 领域 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
谁 是 这个 人 的 朋友 ， 不迟于 2004 年 退出	谁 是 这个 人 的 朋友 不迟于 2004 年 辞职	谁 是 2004 年 之前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 之前 开始 的 学生	2004 年 以前 入学 的 学生	2004 年 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 停止 工作 的 人 的 关系 状况 如何 ？	2004 年 以后 停止 工作 的 人 的 关系 状况 如何	2004 年 后 失业 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 不 超过 两所 大学	不 超过 两所 大学 的 学生	不 超过 两所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 开始 的 学生 的 出生地	从 2004 年 开始 的 学生 的 出生地	2004 年 以后 出生 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 开始 工作 后 出生 的 人	爱丽丝 开始 工作 后 出生 的 人	爱丽丝 开始 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
哪个 城市 是 单身 出生 的 人	单身 的 人 出生 在 哪个 城市	单身 人士 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
在 纽约 出生 的 人	在 纽约 出生 的 人	出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
有 两个 以上 朋友 的 人	有 两个 以上 朋友 的 人	有 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
将 2004 年 或 之后 开始 的 员工 命名 为	说出 2004 年 或 以后 开始 工作 的 员工 的 名字	说出 一名 2004 年 或 之后 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
为 2004 年 或 2010 年 开始 的 学生 命名	说出 2004 年 或 2010 年 入学 的 学生 的 名字	说出 一个 2004 年 或 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 有 不同 关系 的 人	和 爱丽丝 有 不同 关系 的 人	和 爱丽丝 有 不同 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
学生 们 在 爱丽丝 的 开始 日 结束	学生 们 在 爱丽丝 的 开学日 完成学业	学生 们 在 爱丽丝 的 开学日 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 停止 工作 的 人 的 朋友	谁 是 2004 年 停止 工作 的 人 的 朋友	谁 是 2004 年 失业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 最短 的 员工	结束 日期 最小 的 员工	具有 最小 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 男性 关系 状态	男性 关系 状况 如何	男性 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
什么 是 一个 人 的 平均 身高	一个 人 的 平均 身高 是 多少	一个 人 的 平均 身高 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
找到 爱丽丝 是 朋友 的 男性	找到 爱丽丝 的 朋友	找到 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string gender ) ( string = ) en.gender.male ) )
找到 爱丽丝 的 男性 朋友	找到 爱丽丝 的 男朋友	找到 爱丽丝 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
哪个 员工 在 爱丽丝 的 开始 日期 结束 了	哪个 雇员 在 爱丽丝 的 开始 日期 结束	哪位 员工 在 爱丽斯 的 上班 日期 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 开始 的 员工 的 出生地	2004 年 没有 开始 工作 的 员工 的 出生地 是 什么 ？	2004 年 没有 开始 工作 的 员工 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
艾丽斯 2004 年 辞职 的 日期 是 什么 时候	艾丽斯 2004 年 什么 时候 退学 的	2004 年 爱丽丝 是 什么 时候 放弃 学习 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
在 爱丽丝 出生 之前 ， 学生 停止 了 什么	爱丽丝 出生 前 哪个 学生 停 了 下来	爱丽丝 出生 前 学生 们 停止 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 在 爱丽丝 离开 学校 之前 离开 学校	爱丽丝 离开 学校 之前 哪个 学生 离开 了 学校	在 爱丽丝 离开 学校 之前 ， 哪个 学生 离开 了 学校	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两个 出生地 的 人	有 两个 出生地 的 人	有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
找到 结束 日期 大于 员工 爱丽丝 开始 日期 的 学生	查找 结束 日期 大于 员工 alice 的 开始 日期 的 学生	查找 终止 日期 大于 雇员 alice 的 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 开始 日期 早于 2004 年 的 学生 成为 朋友 的 人	与 2004 年 以前 的 学生 交朋友 的 人	与 开学 日期 在 2004 年 以前 的 学生 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 出生 的 人 的 性别 是 什么 ？	2004 年 出生 的 人 的 性别 是 什么	2004 年 出生 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
雇主 不是 麦肯锡 的 雇员 的 诞生 城市	雇主 不是 麦肯锡 的 员工 出生 城市	雇主 不是 麦肯锡 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 与 学生 爱丽丝 相同 或 晚于 的 员工	查找 结束 日期 与 学生 alice 相同 或 晚于 该 日期 的 员工	查找 结束 日期 与 学生 alice 相同 或 更 晚 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
职位 数量 最少 的 员工	职称 最少 的 员工	职位 头衔 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 城市 是 早于 2004 年 开始 的 员工 的 出生地	2004 年 以前 开始 工作 的 员工 的 出生地 是 哪个 城市	哪个 城市 是 2004 年 以前 入职 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 那个 不是 软件 工程师 朋友 的 员工	谁 不是 软件 工程师 的 朋友	那个 不是 软件 工程师 朋友 的 员工 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 城市 是 爱丽丝 或 鲍勃 出生 的	爱丽丝 和 鲍勃 出生 在 哪个 城市	爱丽丝 或 鲍勃 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
结束 日期 在 爱丽丝 出生日期 之前 的 学生	结束 日期 早 于 爱丽丝 出生日期 的 学生	结束 日期 在 爱丽丝 出生日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 教育 开始 日期	艾丽丝 什么 时候 开始 上学	爱丽斯 的 开学 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) )
2003 年 之前 毕业 的 学生 的 关系 状况 如何 ？	2003 年 以前 毕业 的 学生 的 人际关系 状况 如何	2003 年 以前 毕业 的 学生 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 不 在 2004 年 之后 的 学生 的 性别	结束 日期 不晚 于 2004 年 的 学生 性别	2004 年 以后 未 毕业 的 学生 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 没有 开始 的 劳动 人民 的 关系 状况 如何 ？	2004 年 没有 开始 工作 的 人 的 关系 状况 如何 ？	没有 开始 于 2004 年 的 劳动 人民 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 学生 在 alice 之前 开始	在 爱丽丝 之前 找到 学生	找到 比 爱丽丝 先 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友 的 朋友	谁 是 爱丽丝 朋友 的 朋友	谁 是 爱丽丝 的 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
不迟于 2004 年 开始 的 学生 的 性别 是 什么	不迟于 2004 年 入学 的 学生 的 性别	不迟于 2004 年 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 学生 的 专业 最少	哪个 学生 的 专业 最少	哪些 学生 的 专业 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 与 员工 有 朋友 的 人 ， 他们 的 开始 日期 不晚 于 2004 年	寻找 与 员工 交朋友 的 人 ， 他们 的 开始 日期 不迟于 2004 年	找 一些 员工 的 朋友 ， 他们 的 工作 开始 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 2005 年 或 以后 开始 上学 的 学生 成为 朋友 的 人	与 2005 年 或 以后 开始 上学 的 学生 交朋友 的 人	与 2005 年 或 以后 入学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 们 在 爱丽丝 之前 开始 学习	学生 们 在 爱丽丝 之前 开始 的	在 爱丽丝 之前 学生 们 开始 做 什么 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开学 日期 不迟于 2004 年 的 学生 的 性别 是 什么	开始 日期 不迟于 2004 年 的 学生 的 性别 是 什么	不迟于 2004 年 开学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 朋友 的 人 不是 麦肯锡 的 雇员	他 的 朋友 不是 麦肯锡 的 员工	谁 有 不是 麦肯锡 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 在 纽约 出生 的 单身 人士	寻找 在 纽约 出生 的 单身 人士	寻找 在 纽约 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
与 没有 软件 工程师 职称 的 员工 成为 朋友 的 人	与 没有 软件 工程师 职称 的 员工 交朋友 的 人	与 没有 软件 工程师 头衔 的 雇员 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 出生 在 哪里	爱丽丝 的 朋友 出生 在 哪里	爱丽斯 的 朋友 是 在 哪里 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
哪些 学生 在 爱丽丝 的 出生日期 之前 毕业	爱丽丝 出生 前 毕业 的 学生	哪些 学生 在 爱丽丝 出生 之前 就 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 以后 毕业 的 朋友 关系	寻找 2004 年 后 毕业 的 朋友	寻找 2004 年 后 毕业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 哪些 朋友 出 生于 2004 年	爱丽丝 的 哪个 朋友 是 2004 年 出生 的 ？	爱丽丝 的 哪个 朋友 是 2004 年 出生 的	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 爱丽丝 的 关系 状态	爱丽丝 的 关系 状况 如何	爱丽斯 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
找到 2004 年 或 以后 出生 的 人	找到 2004 年 或 以后 出生 的 人	找出 2004 年 或 以后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
哪些 学生 与 爱丽丝 有 同样 的 专业	哪个 学生 的 专业 和 爱丽丝 一样	哪些 学生 的 专业 与 爱丽丝 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
最近 哪位 员工 辞职 了	哪位 员工 最近 辞职 了	哪位 员工 最近 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 列出 了 最 多 的 出生地	谁 的 出生地 最 多	谁 的 出生地 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string birthplace ) ) )
谁 出 生于 2004 年 ， 身高 180 厘米	他出 生于 2004 年 ， 身高 180 厘米	谁 出 生于 2004 年 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 2004 年 出生 的 人 ， 身高 180 厘米	找到 2004 年 出生 的 身高 180 厘米 的 人	找出 2004 年 出生 的 人 ， 他们 的 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 开始 日期 是 员工 爱丽丝 的 结束 日期	开始 日期 在 雇员 alice 结束 日期 之后 的 学生	开始 日期 在 雇员 爱丽丝 的 结束 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 生日 之后 退出	爱丽丝 生日 后 辞职 的 人	谁 在 爱丽丝 生日 后 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人比 alice 更早 出生	谁 的 生日 比 爱丽丝 早	谁 的 生日 比 爱丽丝 还 早	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
在 2004 年 或 之前 停止 工作 的 人 是 什么 性别	2004 年 或 之前 停止 工作 的 人 是 什么 性别	什么 性别 的 人 在 2004 年 或 之前 停止 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 辞职 的 员工	2004 年 或 之后 辞职 的 员工	2004 年 或 以后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 的 那天 或 之后 结束 上学 的 学生	爱丽丝 出生 当天 或 之后 结束 学业 的 学生	爱丽丝 出生 当天 或 之后 辍学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 生日 之前 或 之前 找到 最后 一天 的 学生	寻找 在 爱丽丝 生日 前 或 生日 当天 的 学生	找出 爱丽丝 生日 前一天 或 那天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 是 2004 年 之后 开始 的 学生 的 朋友	哪些 人 是 2004 年 以后 开始 学习 的 学生 的 朋友 ？	哪些 人 是 2004 年 后 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 晚于 爱丽丝 的 学生	结束 日期 比 爱丽丝 晚 的 学生	学生 的 结业 日期 比 爱丽丝 的 晚多 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 未 被 麦肯锡 聘用 的 人 的 朋友 命名 为	说出 一个 不是 麦肯锡 雇员 的 朋友 的 名字	说出 一个 没有 被 麦肯锡 聘用 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 180 厘米 的 人 ， 也 是 爱丽丝 的 朋友	找 那些 身高 180 厘米 的 人 ， 他们 也 是 爱丽丝 的 朋友	找 一些 身高 180 厘米 的 人 ， 他们 也 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
身高 180 厘米 ， 于 2004 年 出生	他 身高 180 厘米 ， 2004 年 出生	谁 身高 180 厘米 ， 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
在 爱丽丝 的 生日 之前 完成 的 员工	在 爱丽丝 生日 前 完成 的 员工	在 爱丽丝 生日 之前 完成 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 自己 的 身份	什么 人 是 单身	什么 人有 单身 的 状态	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
找到 与 爱丽丝 一样 的 出生地 的 人	找到 和 爱丽丝 出生地 一样 的 人	找到 和 爱丽丝 出生地 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.getProperty en.person.alice ( string birthplace ) ) ) )
找到 不迟于 2004 年 的 开始 日期 的 员工 和 他们 的 朋友	查找 开始 日期 不晚 于 2004 年 的 员工 及其 朋友	找到 最迟在 2004 年 开始 工作 的 员工 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 学生 的 结束 日期 与 学生 爱丽丝 相同	哪些 学生 的 结束 日期 与 学生 爱丽丝 相同	学生 们 有 一个 和 学生 爱丽丝 一样 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 身高 180 厘米 ， 生日 与 爱丽丝 相同 的 人	一个 180 厘米 高 的 人 ， 出生日期 和 爱丽丝 一样	身高 180 厘米 和 爱丽丝 出生日期 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
找到 2004 年 以后 辞职 的 员工 的 朋友	寻找 2004 年 后 辞职 员工 的 朋友	找到 2004 年 后 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 停止 工作 的 那天 或 之后 开始 上学 的 人	爱丽丝 停止 工作 当天 或 之后 开始 上学 的 人	在 爱丽丝 停止 工作 当天 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 艾 莉斯 之前 没有 毕业 的 学生 报名 参加	爱丽丝 入学 前 没有 毕业 的 学生	在 爱丽丝 入学 之前 没有 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之后 退出 的 人 的 朋友	2004 年 后 辞职 的 朋友	2004 年 后 辞职 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 2004 年 或 之后 开始 的 工人 的 诞生 城市	2004 年 或 之后 开始 工作 的 工人 的 出生 城市 是 什么 ？	2004 年 或 之后 开始 工作 的 工人 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 最 年轻 的	谁 最 年轻	谁 是 最 年轻 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
分享 爱丽丝 学习 领域 的 学生	与 爱丽丝 有 共同 研究 领域 的 学生	与 爱丽丝 研究 领域 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
180 厘米 高 的 大学	一所 180 厘米 高 的 大学	大学 里 有人 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 我 所有 2004 年 以后 毕业 的 学生	找 我 所有 2004 年 毕业 的 学生	给 我 找到 所有 2004 年 后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 学生 爱丽丝 开始 后 出生 的	在 学生 爱丽丝 出生 后 出生 的	谁 是 学生 爱丽丝 开始 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
爱丽丝 的 朋友 的 关系 状态 是 什么	爱丽丝 的 朋友 的 关系 状况 如何	爱丽斯 的 朋友 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
什么 人有 两个 或 更 多 性别	什么 人有 两个 或 两个 以上 的 性别	什么 人有 两个 或 更 多 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string >= ) ( number 2 ) ) )
哪个 男性 的 关系 状态 为 单身	哪个 男人 的 关系 是 单身	哪个 男性 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
2004 年 后 开始 上学 的 学生 的 出生地	2004 年 后 开始 上学 的 学生 的 出生地	2004 年 以后 入学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 开始 不迟于 爱丽丝 开始 工作 的 那天	哪些 学生 不迟于 爱丽丝 开始 工作 的 那天 开始 学习	哪些 学生上课 不晚 于 爱丽丝 开始 工作 的 那天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 之后 开始 工作 的 人	在 爱丽丝 之后 开始 工作 的 人	在 爱丽丝 之后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 与 爱丽丝 成为 朋友 的 人	找 一些 和 爱丽丝 是 朋友 的 人	找 一些 和 爱丽丝 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
2004 年 生日 的 人 也 是 爱丽丝 的 朋友	什么 人 的 生日 是 2004 年 ， 也 是 爱丽丝 的 朋友	2004 年 出生 的 人 也 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
说出 在线 人员 的 朋友	说出 一个 在 网上 的 朋友 的 名字	说出 一个 上网 的 人 的 朋友 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
结束 日期 不 在 员工 爱丽丝 结束 日期 之前 的 学生	结束 日期 不早 于 雇员 alice 结束 日期 的 学生	终止 日期 未 在 雇员 爱丽丝 的 终止 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 出生 在 爱丽丝 出生 的 城市	她 出生 在 爱丽丝 出生 的 城市	谁 出生 在 爱丽丝 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
学生 的 开始 日期 接近 爱丽丝 的 开始 日期	哪个 学生 的 开始 日期 接近 爱丽丝 的 开始 日期	哪个 学生 的 开始 日期 接近 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之后 开始 的 学生	2004 年 后 才 开始 学习 的 学生	2004 年 以后 才 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 是 学生 爱丽丝 开始 的 日期	结束 日期 为 学生 爱丽丝 开始 的 日期 的 学生	结束 日期 与 alice 开始 日期 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
棕色 或 ucla 的 学生	布朗 大学 或 加州大学洛杉矶分校 的 学生	布朗 大学 或 加州大学洛杉矶分校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 起始 日期 最早	哪个 员工 的 起始 日期 最早	哪个 员工 的 上班时间 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 所有 结束 日期 为 2004 年 或 以后 的 学生 的 出生 城市	为 我 找出 截止 日期 为 2004 年 或 更 晚 的 所有 学生 的 出生 城市	为 我 找出 所有 在 2004 年 或 以后 毕业 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 最新 的 员工	谁 是 新 员工	谁 是 最新 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不是 在 纽约 出生 的 人	不是 在 纽约 出生 的 人	不是 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
找到 爱丽丝 开始 后 离开 的 员工	找到 爱丽丝 开始 工作 后 离开 的 那个 雇员	找到 alice 开始 工作 后 离开 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 不上 棕色 大学	哪些 学生 不上 布朗 大学	哪些 学生 没有 上 布朗 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 毕业 于 计算机科学 专业	爱丽丝 什么 时候 毕业 的	艾丽丝 学完 计算机科学 后 什么 时候 毕业 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
找到 结束 日期 不 超过 学生 爱丽丝 的 学生	找出 结束 日期 不 超过 学生 爱丽丝 的 学生	找到 学生 谁 有 一个 结束 日期 不 大于 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 出生 在 哪里	爱丽丝 的 朋友 出生 在 哪里	爱丽丝 的 朋友 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
爱丽丝 是 大学 的 学生	爱丽丝 是 哪 所 大学 的 学生	爱丽丝 是 哪 所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
与 2005 年 之前 获得 当前工作 的 人 成为 朋友 的 人	与 2005 年 以前 找到 当前工作 的 人 交朋友 的 人	在 2005 年 之前 找到 现在 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 从 2004 年 之前 开始 的 所有 员工 的 出生地	从 2004 年 开始 给 我 找 所有 员工 的 出生地	为 我 找到 2004 年 以前 所有 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 员工 从 2004 年 开始	从 2004 年 开始 寻找 员工	寻找 2004 年 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 两种 关系 状态	什么 人有 两种 关系 状态	什么 人有 两种 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
2004 年 艾丽斯 参加 了 哪 所 大学	艾丽斯 2004 年 上 什么 大学	2004 年 爱丽丝 上 的 是 哪 所 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
谁 离开 了 他们 的 工作 最 久 以前	最早 离开 工作 的 人	谁 离职 时间 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 在 2004 年 做 了 什么	2004 年 爱丽丝 学了 什么	2004 年 爱丽丝 研究 了 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
首先 完成 教育 的 人	先 完成 教育 的 人	先 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 人 的 平均 身高	人 的 平均 身高 是 多少	人 的 平均 身高 是 多少	( call SW.listValue ( call SW.aggregate ( string avg ) ( call SW.getProperty ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ) ) )
2004 年 之前 完成 学生 的 关系 状况 如何 ？	2004 年 以前 毕业 的 学生 的 关系 状况 如何	2004 年 以前 毕业 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 之前 出生 的 人 辞掉 了 工作	爱丽丝 辞职 前 出生 的 人	出生 在 爱丽丝 之前 的 人 辞职 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
2004 年 开始 的 员工 的 关系 状况 如何 ？	2004 年 开始 工作 的 员工 的 关系 状况 如何	2004 年入 职 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 开始 日期 为 2004 年 或 之后 的 学生 成为 朋友 的 人	与 开始 日期 为 2004 或 更 高 的 学生 交朋友 的 人	与 开学 日期 为 2004 年 或 以后 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 是 最后 完成 的	哪个 学生 是 最后 一个 完成 的	哪个 学生 最后 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 一名 大学生	在 大学 里 给 爱丽丝 找个 学生	找 一个 大学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
那些 员工 在 同一天 盯 着 爱丽丝 开始 上学	爱丽丝 开学 的 同一天 ， 哪个 员工 盯 着 看	哪位 员工 在 爱丽丝 上学 的 同一天 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之后 被 雇用 的 雇员 城市	2004 年 后 受雇 的 雇员 所在城市	2004 年 后 被 雇佣 的 雇员 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 爱丽丝 后 开始 的 学生	以 学生 爱丽丝 为 起点 的 学生	一个 跟着 爱丽丝 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
是 什么 学生 和 爱丽丝 同一天 开始 的	哪个 学生 和 爱丽丝 在 同一天 开始 的	哪个 学生 和 爱丽丝 是 同一天 开学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 不早 于 爱丽丝 的 结束 日期	哪个 学生 的 结束 日期 不早 于 爱丽丝 的 结束 日期	哪个 学生 的 结束 日期 不早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 性别 至少 有 两个 人 声称	哪 种 性别 至少 有 两个 人 认领	至少 两个 人 声称 自己 是 哪种 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
当 爱丽丝 辞职 时 出生 的 员工	爱丽丝 辞职 时 出生 的 雇员	爱丽丝 辞职 时 出生 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 城市 的 雇员 ， 其 结束 日期 是 在 2004 年 之前	截止 日期 在 2004 年 之前 的 员工 出生 城市	2004 年 以前 结束 工作 的 员工 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之后 完成 学生 的 出生地	2004 年 及 以后 毕业 学生 的 出生地	2004 年 或 以后 毕业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 学生 在 学生 爱丽丝 之前 有 结束 日期	哪个 学生 在 学生 爱丽丝 之前 有 结束 日期	什么 学生 在 学生 爱丽丝 之前 有 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 第一天 或 之前 找到 最后 一天 的 员工	在 Alice 的 第一天 当天 或 之前 找到 最后 一天 的 员工	查找 在 alice 的 第一天 或 之前 的 最后 一天 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 男性 和 180 厘米 高 的 人	找到 身高 180 厘米 的 男性	寻找 身高 180 厘米 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 的 开始 日期 是 2004 年 还是 2010 年	哪些 员工 的 起始 日期 是 2004 年 或 2010 年	什么 员工 的 开始 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 性别 总数	性别 总数 是 多少	总共 有 多少 性别	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )
谁 是 2004 年 之前 开始 的 学生 的 朋友	他 和 一个 2004 年 以前 开始 的 学生 是 朋友	谁 是 2004 年 以前 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 不去 布朗 大学 的 学生 的 性别 是 什么 ？	不上 布朗 大学 的 学生 的 性别 是 什么	没有 上 布朗 大学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 毕业 之前 辞职 的 员工	爱丽丝 毕业 前 辞职 的 雇员	爱丽丝 毕业 前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之前 结束 日期 的 员工 的 朋友	哪些 人 与 2004 年 之前 有 结束 日期 的 员工 是 朋友 ？	那些 在 2004 年 之前 就 有 工作 结束 日期 的 员工 是 怎样 的 朋友 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 是 2004 年 或 之后 的 学生 的 朋友	找到 最后 一天 是 2004 年 或 更 晚 的 学生 的 朋友	找到 最后 一天 是 2004 年 或 以后 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
这个 180 厘米 高 的 人 的 开始 日期 是 2004 年	哪个 180 厘米 高 的 人 的 开始 日期 是 2004 年	哪个 180 厘米 高 的 人 的 开始 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2004 年 以前 开始 的 学生 是 哪个 城市	2004 年 以前 出生 在 哪个 城市 的 学生	2004 年 以前 出生 在 哪个 城市 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
当 爱丽丝 离开 公司 时 ， 员工 的 起点 是 什么	艾丽斯 离开 公司 时 ， 哪个 雇员 开始 工作	爱丽斯 离开 公司 的 时候 ， 哪个 员工 已经 开始 工作 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 alice 之后 找到 有 开始 日期 的 员工	在 Alice 之后 查找 开始 日期 为 的 员工	找到 在 alice 之后 有 一个 开始 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
没有 在 2004 年 开始 的 员工	2004 年 未 开始 工作 的 员工	2004 年 没有 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 没有 入学 的 学生 的 关系 状况	2004 年 未 入学 学生 的 人际关系 状况	二 00 四年 起 停学 学生 之 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 以后 退职 的 员工 的 出生地	2004 年 或 以后 离职 员工 的 出生地	2004 年 或 以后 离职 雇员 的 出生地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 员工 在 2004 年 或 2010 年 之后 开始	2004 年 或 2010 年 后 开始 工作 的 员工	哪个 员工 是 在 2004 年 或 2010 年 之后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 那些 与 开学 日期 早于 2004 年 的 学生 成为 朋友 的 人	找 那些 与 2004 年 以前 开始 约会 的 学生 交朋友 的 人	寻找 那些 与 学生 的 朋友 谁 已 开始 日期 早于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人短于 180 厘米	什么 人短于 180 厘米	什么 人比 180 厘米 还 矮	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
身高 180 厘米 ， 开始 日期 为 2004 年	他 身高 180 厘米 ， 2004 年 开始 约会	谁 的 身高 是 180 厘米 ， 并 有 一个 开始 的 日期 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
指出 身高 超过 180 厘米 的 人	说出 身高 超过 180 厘米 的 人 的 名字	说出 身高 超过 180 厘米 的 人 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 有 一个 或 两个 出生地 的 人	找到 有 一两个 出生地 的 人	找到 有 一两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )
学生 和 alice 一样 的 学习 领域	与 爱丽丝 有 相同 研究 领域 的 学生	与 爱丽丝 研究 领域 相同 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 们 在 爱丽丝 开始 工作 之前 就 开始 上学 了	爱丽丝 开始 工作 之前 学生 们 开始 上学 的 事	学生 们 在 爱丽丝 开始 工作 之前 就 开始 上学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 之前 开始 上学 的 人	比 爱丽丝 先 上学 的 人	比 爱丽丝 先 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 至 2010 年 期间 参加 过 哪些 学生	2004 年 至 2010 年间 有 哪些 学生 参加	哪些 学生 在 2004 年 至 2010 年 就读	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 是 最 短 的	什么 人 最矮	什么 人 是 最矮 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
谁 在 爱丽丝 开始 之前 就 停止 了 学业	她 在 爱丽丝 开始 上学 之前 就 停学 了	谁 在 爱丽丝 上学 之前 就 辍学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
男性 出生 在 纽约	哪个 男人 在 纽约 出生	什么 男人 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string birthplace ) ( string = ) en.city.new_york ) )
在 2004 年 或 之后 终止 的 雇员 的 性别 是 什么	2004 年 或 之后 被 解雇 的 雇员 的 性别 是 什么	在 2004 年 或 以后 被 解雇 的 雇员 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 生日 或 之后 离开 的 学生	在 爱丽丝 生日 当天 或 之后 离开 的 学生	在 爱丽丝 生日 当天 或 之后 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 是 2004 年 或 以后 毕业 的 学生 的 朋友	哪些 人 是 2004 年 或 以后 毕业 的 学生 的 朋友	哪些 人 是 2004 年 或 以后 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 在 2004 年 之前 的 结束 日期	哪个 员工 在 2004 年 之前 有 结束 日期	什么样 的 员工 在 2004 年 之前 就 已经 结束 工作 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 2004 年 没有 开始 的 人 的 出生地	没有 从 2004 年 开始 的 人 的 出生地 是 什么 ？	没有 在 2004 年 开始 的 人 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出生地 至少 有 两个 人	哪个 出生地 至少 有 两个 人	哪个 出生地 至少 有 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
非 软件 工程师 的 员工 朋友	不是 软件 工程师 的 员工 的 朋友	不是 软件 工程师 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不 超过 两个 学习 领域 的 学生	学习 领域 不 超过 两个 的 学生	不 超过 两个 学科 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
无论是 麦肯锡 还是 谷歌	麦肯锡 或谷歌	不是 麦肯锡 就是 谷歌	( call SW.listValue ( call SW.concat en.company.mckinsey en.company.google ) )
爱丽丝 辞掉 工作 后 ， 哪个 学生 离开 了 学校	爱丽丝 辞职 后 哪个 学生 离开 了 学校	爱丽丝 辞职 后 ， 哪个 学生 离开 了 学校	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 开始 日期 与 alice 的 结束 日期 相同	哪些 员工 的 开始 日期 与 Alice 的 结束 日期 相同	什么 员工 的 开始 日期 和 爱丽丝 的 结束 日期 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 2004 年 或 2010 年 开始 的 学生	2004 年 或 2010 年 入学 的 学生	2004 年 或 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 与 爱丽丝 同一天 停止 上学 的 人	和 爱丽丝 同一天 停学 的 人	和 爱丽丝 同一天 停课 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 朋友 ， 其 开始 日期 不是 2004 年	开始 日期 不是 2004 年 的 员工 的 朋友	不是 2004 年入 职 日期 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 没有 在 2004 年 完成	2004 年 未 完成学业 的 学生	2004 年 未 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 工人 拥有 最多 的 职称	哪个 工人 的 职称 最 多	什么 工人 有 最 多 的 职称	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 在 爱丽丝 的 同一天 开始	学生 们 是从 爱丽丝 那天 开始 的	哪些 学生 和 爱丽丝 是 同一天 开学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找 我 在 棕色 大学 以外 的 地方 学习 的 朋友	给 我 找 一些 在 布朗 大学 以外 的 地方 学习 的 朋友	帮 我 找 一些 在 布朗 大学 以外 的 地方 学习 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 或 之前 开始 工作 的 人	2004 年 或 之前 开始 工作 的 人	在 2004 年 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
登录 时 身高 超过 180 厘米 的 人	身高 超过 180 厘米 的 人 登录	身高 超过 180 厘米 的 用户 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
哪些 人 是 2004 年 之前 开始 的 学生 的 朋友	哪些 人 是 2004 年 以前 开始 学习 的 学生 的 朋友 ？	哪些 人 是 2004 年 以前 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 登录 的 身高 是 180 厘米	什么 人登入 的 高度 是 180 厘米	什么 人用 180 厘米 的 高度 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
在 纽约 出生 的 人	在 纽约 出生 的 人	在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 180 厘米 高 的 人	找到 180 厘米 高 的 人	找到 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
找到 登录 的 人 ， 他们 也 是 alice 的 朋友	查找 已 登录 且 与 Alice 也 是 朋友 的 人	找到 登录 的 人 ， 他们 也 是 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
找到 180 厘米 高 的 男性	找到 身高 180 厘米 的 男性	寻找 身高 180 厘米 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
什么 是 爱丽丝 的 研究 领域	爱丽丝 的 研究 领域 是 什么	爱丽丝 的 研究 领域 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
什么 是 城市 数量	城市 的 数目 是 多少	有 多少 个 城市	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
谁 出生 在 爱丽丝 离开 的 日期	在 爱丽丝 离开 的 那天 出生 的	爱丽丝 离开 那天 谁 出生 了	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) )
找到 alice 的 180 厘米 高 的 朋友	找到 爱丽丝 的 180 厘米 高 的 朋友	找到 爱丽丝 的 朋友 谁 是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 是 最早 在 2004 年 毕业 的 人 的 朋友	谁 是 最早 2004 年 毕业 的 人 的 朋友	谁 是 最早 于 2004 年 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 登录 并 将 出生地点 为 纽约 的 人	查找 已 登录 且 出生地 为 纽约 的 人	找到 登录 并 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string logged_in ) ) )
哪些 学生 的 开学 日期 最早	哪个 学生 的 起始 日期 最早	哪些 学生 的 开学 日期 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 开始 工作 的 人 是 什么 性别	2004 年 以前 开始 工作 的 人 是 什么 性别	2004 年 以前 开始 工作 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 在 同一个 城市 出生 的 两个 人	给 我 找 两个 在 同一个 城市 出生 的 人	给 我 找 两个 出生 在 同一个 城市 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
与 alice 具有 相同 性别 并且 身高 180 厘米 的 人	她 和 爱丽丝 性别 相同 ， 身高 180 厘米	谁 和 爱丽丝 性别 相同 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
说出 一个 在 爱丽丝 开始 后 离开 的 员工	说出 一个 在 爱丽丝 开始 工作 后 离开 的 雇员 的 名字	说出 一位 在 爱丽斯 上任 后 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最 年轻 的 人	找到 最 年轻 的 人	找到 最 年轻 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
开始 日期 最小 的 学生	开始 日期 最小 的 学生	开始 日期 最小 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 自 2004 年 以来 毕业 的 学生 的 关系 状况	了解 2004 年 毕业 学生 的 恋爱 状况	请 帮 我 查询 自 2004 年 毕业 的 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 在 2004 年 之前 退出 的 所有 员工	给 我 找 2004 年前 辞职 的 所有 员工	找到 所有 在 2004 年 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 那些 不是 棕色 大学 的 学生 和 他们 的 朋友	找 那些 不是 布朗 大学 的 学生 和 他们 的 朋友	找 一些 不是 布朗 大学 的 学生 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 有 180 厘米 的 高度 和 爱丽丝 的 高度	什么 人 身高 180 厘米 和 爱丽丝 的 身高	什么 人有 180 厘米 的 身高 和 爱丽丝 的 身高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
找到 不是 爱丽丝 朋友 的 人	找 一些 不是 爱丽丝 朋友 的 人	找 一些 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
员工 在 2004 年 之前 完成	2004 年前 完成 的 员工	2004 年 以前 完成 工作 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 入学 之前 就 开始 工作 的 员工	爱丽丝 入学 前 开始 工作 的 雇员	在 alice 入学 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 在 爱丽丝 开始 时 或 之后 完成 同步	学生 在 爱丽丝 开始 之前 或 之后 同时 完成	学生 完成 同 时期 的 爱丽丝 开始 或 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 学生 在 2004 年 没有 停止 过	一个 2004 年 没 停下来 的 学生	一个 学生 在 2004 年 没有 停止	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 完成 的 员工 的 出生地	2004 年前 完成 的 员工 出生地	2004 年 以前 毕业 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 开始 日期 与 员工 爱丽丝 的 结束 日期 或 之后 相同	哪些 学生 的 开始 日期 与 员工 alice 的 结束 日期 相同 或 更 晚	什么 学生 有 一个 开始 的 日期 是 相同 的 雇员 爱丽丝 的 结束 日期 或 更 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 有 两个 朋友 的 人	找到 有 两个 朋友 的 人	找 那些 有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪个 学生 在 同一天 开始 上学 ， 爱丽丝 开始 工作	爱丽丝 开始 工作 的 同一天 哪个 学生 开始 上学	哪些 学生 在 爱丽丝 开始 工作 的 当天 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 纽约 出生 的 人 的 性别 是 什么 ？	在 纽约 出生 的 人 的 性别 是 什么	在 纽约 出生 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
雇主 是 麦肯锡 或谷歌 的 雇员	雇主 为 麦肯锡 或谷歌 的 雇员	雇主 为 麦肯锡 或谷歌 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
只有 一种 关系 状态 的 人	只有 一种 关系 状态 的 人	只有 一种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
单身 ， 出 生于 2004 年 的 人	2004 年 出生 的 单身 人士	2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
关于 2004 年 以后 毕业 的 学生 的 关系 状况	2004 年 毕业 学生 的 恋爱 状况 如何	2004 年 后 毕业 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 在 麦肯锡 的 职位	爱丽丝 在 麦肯锡 的 职位 是 什么 ？	爱丽丝 在 麦肯锡 的 职位 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
哪个 学生 的 结束 日期 小于 爱丽丝 的 开始 日期	哪个 学生 的 结束 日期 小于 爱丽丝 的 开始 日期	哪个 学生 的 结束 日期 比 alice 的 开始 日期 小	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 与 2004 年 之后 开始 上学 的 人 成为 朋友 的 人	与 2004 年 后 开始 上学 的 人 交朋友 的 人	与 2004 年 后 入学 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 只有 1 种 关系 状态 的 人	找到 只有 一种 关系 状态 的 人	寻找 那些 只有 一种 关系 状态 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
结束 日期 在 学生 爱丽丝 结束 日期 之后 的 学生	结束 日期 在 学生 alice 结束 日期 之后 的 学生	结束 日期 在 学生 alice 结束 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 去 学校 ， 她 于 2004 年 毕业	艾丽斯 什么 时候 开始 上 她 2004 年 毕业 的 那 所 学校	爱丽丝 2004 年 毕业 的 那 所 学校 是 什么 时候 开始 上学 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
爱丽丝 上学 或 之前 开始 工作 的 人	当 爱丽丝 辍学 或 之前 开始 工作 的 人	那些 在 爱丽丝 辍学 或 辍学 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 为 2004 或 更 晚 的 学生 的 性别	查找 结束 日期 为 2004 年 或 更 晚 的 学生 的 性别	找出 2004 年 或 以后 毕业 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学习 领域 不是 计算机科学 的 学生 的 关系 状况	非 计算机专业 学生 的 关系 状况	非 计算机专业 学生 的 人际关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 晚于 2004 年 的 员工 的 性别 是 什么	结束 日期 晚于 2004 年 的 员工 的 性别	2004 年 以后 离职 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 之前 辞职 的 人 的 朋友	找 2004 年前 辞职 的 人 的 朋友	找 那些 在 2004 年 之前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
身高 180 厘米 ， 与 爱丽丝 有 相同 的 出生地	她 身高 180 厘米 ， 出生地 和 爱丽丝 一样	谁 身高 180 厘米 ， 和 爱丽丝 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
找到 结束 日期 等于 或 大于 alice 生日 的 员工	查找 结束 日期 等于 或 大于 Alice 生日 的 员工	找到 拥有 与 alice 生日 相同 或 更 大 的 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 2004 年 之前 开始 工作 的 人 有 朋友 的 人	与 2004 年 以前 开始 工作 的 人 交朋友 的 人	与 2004 年 以前 开始 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 开始 日期 晚于 2004 年 的 员工 的 关系 状态	查找 开始 日期 晚于 2004 年 的 员工 的 关系 状态	查找 开始 日期 晚于 2004 年 的 雇员 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 开始 爱丽丝 生日 的 学生	爱丽丝 生日 那天 开始 的 学生	从 爱丽丝 生日 那天 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 学习 时间 晚于 2004 年	什么 学生 的 起始 日期 晚于 2004 年	哪些 学生 的 开学 日期 晚于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开学 日期 不是 2004 年 的 学生	开始 日期 不是 2004 年 的 学生	开始 日期 不是 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 至少 在 2004 年 出生 的 同 性别 学生	找出 至少 在 2004 年 出生 的 同一性 别的 学生	找出 至少 在 2004 年 出生 的 相同 性别 的 学生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 城市 是 员工 的 出生地 ， 其 结束 日期 不是 2004 年	员工 的 出生地 是 哪个 城市 ， 其 结束 日期 不是 2004 年	哪个 城市 是 一个 员工 的 出生地 ， 他 的 离职 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 具有 最新 结束 日期 的 员工	查找 具有 最新 结束 日期 的 员工	寻找 拥有 最新 截止 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
列出 少于 两个 性别 的 人	不到 两个 性别 的 人	少于 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
目前 在线 的 人 和 爱丽丝 的 朋友	目前 在线 的 人 和 爱丽丝 的 朋友	目前 在线 的 人 和 alice 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
有 超过 两个 朋友 的 人	有 两个 以上 朋友 的 人	有 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 最后 一天 与 爱丽丝 的 开始 日期 相匹配 的 学生	找到 最后 一天 和 爱丽丝 的 开始 日期 相符 的 学生	找到 学生 的 最后 一天 与 alice 的 开始 日期 匹配	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两种 或 两种 以上 关系 状态 的 人	具有 两种 或 两种 以上 关系 状态 的 人	有 两种 或 两种 以上 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
从 2004 年 开始 ， 新 学生 的 关系 状况 如何	2004 年 以前 新生 的 恋爱 状况 如何	2004 年 以前 入学 的 新生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
不是 软件 工程师 的 员工 的 朋友	不是 软件 工程师 的 雇员 的 朋友	不是 软件 工程师 的 雇员 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 出 生于 2004 年 ， 是 爱丽丝 的 朋友	她 出 生于 2004 年 ， 是 爱丽丝 的 朋友	谁 出 生于 2004 年 ， 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
与 2005 年 之前 开始 工作 的 人 有 朋友 的 人	与 2005 年 以前 开始 工作 的 人 交朋友 的 人	与 2005 年 以前 开始 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 与 2004 年 没有 停止 工作 的 人 交朋友 的 人	与 2004 年 没有 停止 工作 的 人 交朋友 的 人	与 2004 年 没有 停止 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 小于 2004 年 或 2010 年 的 员工	查找 结束 日期 小于 2004 或 2010 的 员工	查找 结束 日期 少于 2004 年 或 2010 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
当 爱丽丝 于 2004 年 毕业 时 ， 他 开始 上学	爱丽丝 2004 年 毕业 时 就 开始 上学 了	2004 年 爱丽丝 毕业 时 谁 开始 上学 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string education_start_date ) ) )
找到 2004 年 后 加入 学业 的 人 的 朋友	寻找 2004 年 后 加入 他们 研究 的 人 的 朋友	寻找 2004 年 后 加入 他们 研究 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 或 更 早 开始 上学 的 学生 的 性别	2004 年 或 更 早 入学 的 学生 性别	2004 年 或 以前 入学 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 在 学校 最后 一天 出生 的 人	在 爱丽丝 上学 的 最后 一天 之前 出生 的	谁 在 爱丽丝 上学 的 最后 一天 之前 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 学生	查找 最后 一天 在 2004 年 或 更 早 的 学生	查找 2004 年 最后 一天 或 更 早 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 职称 最多 的 员工	谁 是 职位 最多 的 员工	谁 是 头衔 最多 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 不晚 于 2004 年 的 员工 的 所有 关系 状态	为 开始 日期 不晚 于 2004 年 的 员工 查找 所有 关系 状态	为 我 找到 所有 关系 状态 的 员工 ， 其 开始 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
任何 登录 的 爱丽丝 的 朋友	爱丽丝 的 任何 一个 朋友	alice 的 任何 一个 登录 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string logged_in ) ) )
找到 2004 年 出生 的 人 的 关系 状况	了解 2004 年 出生 人口 的 关系 状况	找出 2004 年 出生 的 人 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
找到 有 一两个 职称 的 员工	找 一两个 职称 的 员工	寻找 拥有 一个 或 两个 职位 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 不 为 麦肯锡 工作 的 劳动 人民 的 性别 是 什么	不 为 麦肯锡 工作 的 员工 的 性别 是 什么 ？	不 为 麦肯锡 工作 的 工人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
最后 结束 的 学生	最后 结束 的 学生	最后 一名 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
比 爱丽丝 年长 的 人	比 爱丽丝 大 的 人	比 爱丽丝 年长 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
找到 我 在 2004 年 之前 开始 的 员工 性别	找 我 2004 年 以前 开始 的 雇员 的 性别	请 给 我 2004 年 以前 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 180 厘米 的 人 及其 关系 状况	找到 身高 180 厘米 的 人 及其 关系 状况	找到 身高 180 厘米 的 人 ， 看看 他们 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
哪个 学生 开始 约会 最 接近 爱丽丝 的 生日	哪个 学生 的 开始 日期 最 接近 爱丽丝 的 生日	哪个 学生 的 开始 日期 最 接近 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 的 就业 时间 最长	哪个 雇员 的 工作 时间 最长	哪个 雇员 的 工作 时间 最长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 与 alice 相同 的 员工	结束 日期 与 Alice 相同 的 员工	员工 的 离职 日期 与 alice 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
有 朋友 在 2004 年 或 之后 离职 的 人	有 朋友 在 2004 年 或 之后 离职 的 人	有 朋友 在 2004 年 或 之后 离职 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 没有 毕业 的 学生 的 朋友	与 2004 年 未 毕业 的 学生 交朋友 的 人	2004 年 未 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 最近 在 2004 年 辞职 的 人 的 朋友	找到 最迟在 2004 年 辞职 的 人 的 朋友	找 那些 最迟 2004 年 就 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 180 厘米 高 ， 正在 学习 计算机科学	他 身高 180 厘米 ， 正在 学习 计算机科学	谁 身高 180 厘米 ， 正在 学习 计算机科学	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
在 爱丽丝 开始 之前 出生 的 人	爱丽丝 出生日期 前 出生 的 人	alice 开始 日期 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
什么 员工 与 alice 的 结束 日期 相同	哪个 员工 的 结束 日期 与 爱丽丝 相同	哪位 员工 的 离职 日期 和 爱丽丝 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最后 一天 在 2010 年 之前 的 员工	查找 最后 一天 在 2010 年 之前 的 员工	找到 2010 年 之前 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 小于 2004 年 的 人	结束 日期 比 2004 年 还 短	谁 有 比 2004 年 更 短 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 比较 小 的 学生 的 性别	2004 年时 约会 对象 较 小 的 学生 性别	2004 年 学生 的 性别 是 一个 较 小 的 日期	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 alice 同日 开始 的 员工	与 Alice 在 同一天 开始 工作 的 员工	和 alice 同一天 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 的 朋友 登录 了	谁 是 Alice 的 朋友 ？ 登录	登录 的 alice 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
2004 年 ， 谁 拥有 学生 和 结束 日期 的 朋友	谁 的 朋友 是 学生 ， 谁 的 结束 日期 是 2004 年	谁 的 朋友 是 学生 ， 谁 的 毕业 日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 在 爱丽丝 开始 时 完成	学生 在 爱丽丝 开始 时 完成	学生 们 在 爱丽丝 开始 的 时候 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 不到 两个 出生地 的 人	找 我 所有 出生地 少于 两个 的 人	找到 所有 少于 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string < ) ( number 2 ) ) )
什么 员工 在 爱丽丝 的 同一天 开始 工作	哪个 雇员 和 爱丽丝 在 同一天 开始 工作	哪位 雇员 和 爱丽丝 是 同一天 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 公司 不是 麦肯锡 的 工人	公司 不是 麦肯锡 的 工人	他 的 公司 不是 麦肯锡	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停止 上学 后 停止 工作 的 人	爱丽丝 辍学 后 停止 工作 的 人	那些 在 爱丽丝 辍学 后 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不 在 学生 爱丽丝 结束 日期 之前 的 学生	结束 日期 不早 于 学生 alice 结束 日期 的 学生	学生 的 结束 日期 不是 在 学生 alice 的 结束 日期 之前	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 人 出生 在 纽约	在 纽约 出生 的 人	哪些 人 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 开始 日期 少于 2004 年 的 学生	查找 开始 日期 小于 2004 年 的 学生	查找 开始 日期 少于 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
将 爱丽丝 送到 最后 一天 的 学生 将 辞去 工作	爱丽丝 辞职 前 最后 一天 的 学生	学生 们 将 在 爱丽丝 离职 前 的 最后 一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 至少 和 爱丽丝 一样 高 的 人	找到 至少 和 爱丽丝 一样 高 的 人	找到 至少 和 爱丽丝 一样 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
谁 开始 与 爱丽丝	从 爱丽丝 开始	从 爱丽丝 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 工作人员 不 适合 麦肯锡 出生	不 为 麦肯锡 工作 的 工人 在 哪里 出生	不 为 麦肯锡 工作 的 劳动 人口 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 alice 之前 的 最后 一天 找到 学生	找到 爱丽丝 的 前一天 的 学生	找出 在 爱丽丝 之前 的 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 一个 朋友 出 生于 2004 年 的 人	有 朋友 2004 年 出生 的 人	有 朋友 出 生于 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
员工 的 开始 日期 是 学生 爱丽丝 的 结束 日期	开始 日期 晚于 学生 alice 结束 日期 的 员工	开始 日期 在 学生 alice 结束 日期 之后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 没有 失业 的 人 的 朋友	找些 2004 年 没有 失业 的 朋友	寻找 那些 在 2004 年 没有 失业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 非 软件 工程师 的 诞生 之 城	所有 非 软件 工程师 的 出生 城市	所有 非 软件 工程师 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
这座 城市 的 数量 是 多少 ？	这个 城市 的 号码 是 多少	这个 城市 的 号码 是 多少	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ) )
在 2004 年 或 2010 年 之前 开始 的 学生	2004 年 或 2010 年 以前 入学 的 学生	2004 年 或 2010 年 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 开始 日期 晚于 2004 年 ， 他们 是 谁 的 朋友	哪些 员工 的 开始 日期 晚于 2004 年 ， 他们 与 哪些 人 是 朋友	哪些 员工 的 入职 日期 晚于 2004 年 ? 他们 和 谁 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找 一个 不迟于 2004 年 开始 的 学生	找 一个 不迟于 2004 年 开始 的 学生	找 一个 不迟于 2004 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
加入 爱丽丝 后 加入 的 员工	爱丽丝 加入 后 加入 的 员工	爱丽丝 之后 加入 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 爱丽丝 有 不同 关系 的 人	和 爱丽丝 有 不同 关系 的 人	谁 与 爱丽丝 的 关系 地位 不同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
在 爱丽丝 之后 完成 的 学生	学 爱丽丝 的 学生	排 在 爱丽丝 后面 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
一个 在 爱丽丝 之前 结束 的 学生	在 爱丽丝 面前 结束 的 学生	在 爱丽丝 之前 结束 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 拥有 最少 的 朋友	谁 的 朋友 最少	谁 的 朋友 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 与 结束 日期 不是 2004 年 的 员工 成为 朋友 的 人	查找 与 结束 日期 不是 2004 年 的 员工 交朋友 的 人	找 一些 员工 的 朋友 ， 他们 的 离职 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 alice 拥有 相同 职位 的 员工	与 爱丽丝 有 相同 职称 的 雇员	与 alice 工作 头衔 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
具有 相同 身份 的 两个 人 的 关系 状态 是 什么	两个 地位 相同 的 人 的 关系 状况 如何	相同 地位 的 两个 人 的 关系 状况 如何	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
离开 爱丽丝 的 学生 们 开始 了	在 爱丽丝 开始 之前 离开 的 学生	在 爱丽丝 开始 之前 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出 生于 2004 年 或 更 早 的 人	2004 年 或 更 早 出生 的 人	2004 年 或 更 早 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
谁 是 2004 年 没有 停止 工作 的 人 的 朋友	他 和 2004 年 没有 停止 工作 的 人 是 朋友	谁 是 2004 年 没有 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 多 雇主 的 雇员	雇主 最多 的 雇员	拥有 最 多 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 毕业 于 爱丽丝 生日 的 学生	给 我 找 那个 在 爱丽丝 生日 那天 毕业 的 学生	帮 我 找 那个 在 爱丽丝 生日 那天 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 后 结束 日期 的 员工	查找 结束 日期 在 2004 年 之后 的 员工	寻找 2004 年 以后 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 最后 开始	什么 学生 最后 开始	学生 最后 开始 做 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 性别	爱丽丝 的 性别 是 什么	爱丽丝 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) )
说出 爱丽丝 是 朋友 的 人	说出 爱丽丝 和 谁 是 朋友	说出 一个 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
2004 年 未 完成 的 员工 关系 状况	2004 年 未 结束 的 员工 关系 状况	2004 年 未 完成 的 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 不上 计算机科学 的 学生	不 学 计算机 的 学生	一个 不 学 计算机科学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 2004 年 没 上学 的 学生 的 性别	找 我 2004 年 没有 开始 上学 的 学生 的 性别	找出 2004 年 没有 入学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那个 学生 开始 的 那天 alice 退出 了	爱丽丝 辞职 那天 是 哪个 学生 开始 的	是 什么 学生 开始 了 爱丽丝 退学 的 一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 开始 的 员工 的 关系 状况	2004 年 未入 职 员工 的 关系 状况	2004 年 未 开始 工作 的 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 出生 的 任何 一年 开始 工作 的 人 在 哪里 ？	除了 2004 年 以外 ， 其他 年份 开始 工作 的 人 在 哪里 出生	除了 2004 年 出生 的 人 ， 其他 年份 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 员工 的 起点	2004 年 后 开始 工作 的 员工	员工 们 在 2004 年 后 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在线 的 人 是 爱丽丝 的 朋友	上网 的 人 是 爱丽丝 的 朋友	那个 上网 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string logged_in ) ) )
哪家 公司员工 是 180 厘米 高 的 人	哪个 公司 雇员 身高 180 厘米	哪个 公司 的 员工 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 2004 年 或 更 早 开始 的 员工 性别	2004 年 或 更 早 开始 工作 的 员工 性别	2004 年 或 更 早入 职 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 人 的 朋友	单身 朋友	一个 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
谁 是 180 厘米 高 ， 与 艾丽斯 有 相同 的 出生日期	他 有 180 厘米 高 ， 和 爱丽丝 的 生日 一样	谁 身高 180 厘米 ， 和 爱丽丝 的 生日 一样	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
在 爱丽丝 的 生日 之前 退出 的 员工	在 爱丽丝 生日 前 辞职 的 员工	在 alice 生日 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 在 纽约 的 男性	在 纽约 出生 的 男性	出生 在 纽约 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string gender ) ( string = ) en.gender.male ) )
结束 日期 在 2004 年 之后 的 员工 的 关系 状态	结束 日期 在 2004 年 之后 的 员工 的 关系 状态	2004 年 以后 离职 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不到 两所 大学 的 学生	少于 两所 大学 的 学生	少于 两所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 和 bob 的 关系 状态 是 什么	爱丽丝 和 鲍勃 的 关系 状况 如何	爱丽斯 和 鲍勃 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
爱丽丝 在 布朗 大学 学习 了 什么	爱丽丝 在 布朗 大学 学习 什么	爱丽丝 在 布朗 大学 学了 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string field_of_study ) ) )
人们 身高 180 厘米 ， 出生日期 为 2004 年	哪些 人 身高 180 厘米 生日 是 2004 年	哪些 人 身高 180 厘米 ， 出生日期 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 是 一个 没有 在 2004 年 停止 工作 的 人 的 朋友	他 和 一个 在 2004 年 没有 停止 工作 的 人 是 朋友	谁 是 2004 年 没有 停止 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪里 出生 的 人 身高 180 厘米	身高 180 厘米 的 人 出生 在 哪里	身高 180 厘米 的 人 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
查找 结束 日期 早于 2004 年 的 员工 的 关系 状态	查找 结束 日期 早于 2004 年 的 员工 的 关系 状态	查找 结束 日期 早于 2004 年 的 雇员 的 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 性别	什么 是 性别	什么 性别	( call SW.listValue ( call SW.concat en.gender.male en.gender.female ) )
与 alice 或 bob 成为 朋友 的 人	和 爱丽丝 或 鲍勃 是 朋友 的 人	和 爱丽丝 或 鲍勃 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
不是 软件 工程师 的 员工 性别	非 软件 工程师 员工 的 性别	非 软件 工程师 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 爱丽丝 的 单身 朋友	找 爱丽丝 的 单身 朋友	寻找 爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
学生 的 开学 日期 不 超过 员工 爱丽丝	哪些 学生 的 起始 日期 不 超过 雇员 alice	什么 学生 有 一个 开始 的 日期 不 大于 雇员 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 性别 是 什么 ， 其 最后 一天 不迟于 2004 年	最后 一天 不迟于 2004 年 的 员工 的 性别 是 什么	最后 一天 不迟于 2004 年 的 雇员 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
职位 最少 的 员工	职称 最少 的 员工	工作 头衔 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最短 的 人	最矮 的 人	最短 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
人短于 200 厘米	200 厘米 以下 的 人	身高 低于 200 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
在 不到 3 个 关系 中 的 人	三次 以下 恋爱 的 人	恋爱 少于 3 次 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string <= ) ( number 2 ) ) )
在 2004 年 的 最后 一天 找到 180 厘米 高 的 人	找到 2004 年 最后 一天 身高 180 厘米 的 人	在 2004 年 的 最后 一天 ， 找出 180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
爱丽丝 去 了 棕色 大学	爱丽丝 要 上 布朗 大学 吗	爱丽丝 要 去 布朗 大学 吗	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string university ) ) )
谁 是 爱丽丝 的 一些 朋友 关系	谁 是 爱丽丝 的 一些 朋友	谁 是 爱丽丝 的 一些 朋友 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
单身 的 人	单身 的 人	单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
2004 年 之前 出生 的 学生 的 出生地	2004 年 以前 出生 的 学生 出生地	2004 年 以前 出生 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 城市 是 不到 两个 人 的 出生地	不到 两个 人 的 出生地 是 哪个 城市	哪个 城市 是 不到 两个 人 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
180 厘米 高 的 人 的 职称 是 什么 ？	身高 180 厘米 的 人 的 职称 是 什么	身高 180 厘米 的 人 的 职称 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ( call SW.reverse ( string job_title ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 出生日期 不是 在 2004 年 的 人	找 出生日期 不 在 2004 年 的 人	找到 出生日期 不 在 2004 年 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string ! = ) ( date 2004 -1 -1 ) ) )
哪些 学生 的 结束 日期 比 爱丽丝 更大	哪个 学生 的 结束 日期 比 爱丽丝 大	哪些 学生 的 期末考试 日期 比 爱丽丝 长	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 是 2004 年 之前 开始 日期 的 员工 的 朋友	哪些 人 是 2004 年 之前 开始 工作 的 员工 的 朋友	那些 在 2004 年 之前 就 开始 工作 的 员工 的 朋友 们	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 的 人 并 登录	查找 身高 180 厘米 并 已 登录 的 用户	找到 180 厘米 高 的 人 登录	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
在 爱丽丝 的 最后 一天 之前 开始 的 学生	在 爱丽丝 最后 一天 之前 开始 的 学生	学生 们 在 alice 的 最后 一天 之前 开始 上课	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 劳动 人民 的 职称 不足 两个	哪些 工作人员 的 职称 少于 两个	哪些 在职人员 的 职称 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 有 两种 性别 的 人	找出 所有 有 两种 性别 的 人	找出 所有 有 两种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( number 2 ) ) )
人们 的 生日 与 高度 为 180 厘米 的 生日 相同	什么 人 和 身高 180 厘米 的 人 有 相同 的 生日	什么 人 的 生日 和 身高 180 厘米 的 人 的 生日 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
2005 年 之前 加入 的 员工 的 出生地	2005 年 以前 加入 的 员工 的 出生地	2005 年 以前 加入 公司 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 180 厘米 高 的 人 都 在 2004 年 辞职	所有 在 2004 年 辞职 的 180 厘米 高 的 人	所有 身高 180 厘米 的 人 都 在 2004 年 戒烟 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
2004 年 开始 的 学生 是 什么 性别	2004 年 入学 的 学生 是 什么 性别	2004 年 入学 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 爱丽丝 离开 了 哪个 日期	学生 爱丽丝 离开 哪一天	学生 爱丽丝 是 哪天 离开 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) )
一个 朋友 ， 而 不是 计算机科学 专业 的 人	一个 朋友 不是 计算机专业 的 人	一个 朋友 不是 计算机专业 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 两个 或 两个 以上 出生地 的 人	有 两个 或 两个 以上 出生地 的 人	有 两个 或 两个 以上 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
查找 结束 日期 与 学生 alice 开始 日期 相同 的 员工	查找 结束 日期 与 学生 alice 的 开始 日期 相同 的 员工	查找 结束 日期 与 学生 alice 的 开始 日期 相同 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 学生 关系 状态 谁 没有 在 2004 年 开始	2004 年 没有 开始 的 学生 关系 状况 如何 ？	2004 年 没有 开始 的 学生 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 上学 的 日期 或 之后 停学 的 人	在 爱丽丝 上学 当天 或 之后 停学 的 人	那些 在 爱丽丝 开始 上学 那天 或 之后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 结束 时 或 之前 开始 的 员工	在 爱丽丝 结束 时 或 之前 开始 工作 的 雇员	在 alice 结束 时 或 之前 开始 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 有 一个 关于 爱丽丝 出生日期 的 开始 日期	哪个 雇员 的 起始 日期 是 爱丽丝 的 生日	哪位 员工 的 生日 是 爱丽斯 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 当前 在线 的 所有人	查找 当前 联机 的 所有人	查找 所有 当前 在线 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string logged_in ) ) )
什么 员工 至少 在 爱丽丝 的 出生日期 结束 了	哪个 雇员 至少 在 爱丽丝 的 生日 那天 去世 了	哪位 雇员 在 爱丽丝 生日 那天 就 结束 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
和 爱丽丝 一样 去 大学 的 学生	和 爱丽丝 上 同一 所 大学 的 学生	和 爱丽丝 上 同一 所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开学 日期 不迟于 员工 爱丽丝 的 结束 日期	哪些 学生 的 开始 日期 不迟于 员工 alice 的 结束 日期	什么 学生 有 一个 开始 日期 不迟于 雇员 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 不 超过 两个 人 的 关系 状态	不 超过 两个 人 的 关系 状况 是 什么	不 超过 两个 人 的 关系 状况 如何	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 学生 结束 日期 等于 爱丽丝 的 生日	找出 结束 日期 等于 爱丽丝 生日 的 学生	找出 学生 谁 的 结束 日期 等于 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 出生 之前 停止 工作 的 人们 在 哪里 ？	2004 年 出生 前 停止 工作 的 人 在 哪里	在 2004 年 出生 之前 停止 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 是非 软件 工程师 的 朋友	什么 人 和 不是 软件 工程师 的 员工 是 朋友	什么 人 与 不是 软件 工程师 的 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 爱丽丝 的 开始 日期 或 之前 开始 的	在 爱丽丝 的 开始 日期 当天 或 之前 开始 工作 的 员工	员工 在 alice 的 开始 日期 之前 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 所有 与 2004 年 出生 的 人 交朋友 的 人	找出 所有 与 2004 年 出生 的 人 交朋友 的 人	找出 所有 和 2004 年 出生 的 人 做 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
爱丽丝 何时 出生	爱丽丝 什么 时候 出生 的	爱丽丝 什么 时候 出生 的 ?	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthdate ) ) )
员工 有 两个 或 两个 以下 的 职称	哪些 员工 有 两个 或 更 少 的 职称	什么 雇员 有 两个 或 更 少 的 工作 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
关于 2004 年 以后 辞职 的 员工 的 关系 状况	2004 年 后 离职 员工 的 关系 状况	2004 年 后 离职 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 在 2004 年 之后 开始 工作	2004 年 后 开始 工作 的 员工	2004 年 后 员工 开始 工作 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
将 登录 后 身高 180 厘米 的 人 命名 为	说出 登入 的 身高 180 厘米 的 人 的 名字	请说出 一个 身高 180 厘米 的 人 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 员工 称为 180 厘米 高 的 软件 工程师	找到 180 厘米 高 的 软件 工程师	寻找 身高 180 厘米 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
结束 日期 不是 2004 年 以后 的 学生 朋友	结束 日期 不 在 2004 年 之后 的 学生 的 朋友	学生 的 朋友 ， 其 截止 日期 不 超过 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
单身 人士 的 性别 是 什么 ？	单身汉 的 性别 是 什么	单身 人士 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
谁 在 2004 年 之前 毕业	2004 年 以前 毕业 的	2004 年 以前 毕业 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 停止 上学 后 开始 上学 的 人	爱丽丝 辍学 后 开始 上学 的 人	爱丽丝 停学 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 两个 人 以上 的 关系 状态 的 人	找到 一个 关系 状态 超过 两个 人 的 人	找 那些 有 超过 两个 人 关系 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
除 软件 工程师 以外 的 员工 的 出生地	非 软件 工程师 的 出生地	软件 工程师 以外 的 雇员 的 出生地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 两个 或 更少 朋友 的 人	有 两个 或 更少 朋友 的 人	有 两个 或 更少 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 是 不 学习 计算机科学 的 学生 的 性别	不 学 计算机 的 学生 的 性别 是 什么	不 学习 计算机科学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 不是 180 厘米 高	身高 不到 180 厘米	谁 不是 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 180 en.cm ) ) )
从 2004 年 或 之后 开始 的 员工 的 关系 状况 如何	2004 年 及 以后 员工 的 关系 状况 如何	2004 年 或 以后 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
目前 登录 的 人 的 关系 状态 是 单身	当前 登录 的 关系 状态 为 “ 单身 ” 的 人	目前 登录 的 人 的 关系 状态 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
爱丽丝 何时 辞职 ， 为 麦肯锡 工作	爱丽丝 什么 时候 辞去 麦肯锡 的 工作 的 ？	爱丽丝 什么 时候 从 麦肯锡 辞职 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
将 单身 朋友 命名 为	说出 单身 朋友 的 名字	说出 单身 人士 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
找到 男性 的 出生地	寻找 男性 出生地	寻找 男性 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
谁 去 棕色 大学 或 ucla	谁 上 布朗 大学 或 加州大学洛杉矶分校	谁 去 了 布朗 大学 还是 加州大学洛杉矶分校	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 加入 之前 完成学业 的 人	在 爱丽丝 加入 之前 完成学业 的 人	在 alice 加入 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 结束 日期 不迟于 2004 年	哪些 学生 的 截止 日期 不迟于 2004 年	什么 学生 有 一个 结束 日期 不迟于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不 超过 两个 人 的 朋友	找 不 超过 两个 人 的 朋友	找 那些 不 超过 两个 人 的 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 像 艾丽斯 一样 高 180 厘米 的 朋友	找 像 爱丽丝 一样 身高 180 厘米 的 朋友	找 一些 像 爱丽丝 一样 高 180 厘米 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
告诉 我 所有 员工 在 爱丽丝 的 最后 一天 之前 离开	让 我 看看 所有 员工 在 爱丽丝 最后 一天 之前 离开	在 爱丽丝 的 最后 一天 之前 ， 让 我 看看 所有 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最 不 常见 的 性别 的 人	最 不 普通 的 人	最 不 常见 性别 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 有 两个 或 更少 出生地 的 人	找 一个 有 两个 或 两个 以下 出生地 的 人	找 一个 有 两个 或 两个 以下 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string <= ) ( number 2 ) ) )
有 朋友 的 人 在 2004 年 没有 开始 工作	有 朋友 但 2004 年 没有 开始 工作 的 人	有 朋友 在 2004 年 没有 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 结束 日期 不早 于 爱丽丝 的 开始 日期	哪些 学生 的 结束 日期 不早 于 爱丽丝 的 开始 日期	什么 学生 有 一个 结束 日期 不早 于 爱丽丝 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之前 或 期间 开始 的 学生 的 出生地	2004 年 以前 或 期间 开始 的 学生 的 出生地	在 2004 年 以前 或 期间 入学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
说出 一个 与 爱丽丝 成为 朋友 的 男性	说出 一个 和 爱丽丝 是 朋友 的 男人 的 名字	说出 一个 和 爱丽丝 是 朋友 的 男性 的 名字	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
有 两个 或 两个 以上 朋友 的 人	有 两个 或 更 多 朋友 的 人	有 两个 或 两个 以上 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 或 之前 或 2010 年 或 之前 开始 工作 的 人	2004 年 或 之前 或 2010 年 或 之前 开始 工作 的 人	在 2004 年 或 之前 、 2010 年 或 之前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 或 之前 开始 的 员工	查找 2004 年 或 之前 开始 工作 的 员工	寻找 2004 年 或 之前 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 2004 年 没有 开始 的 学生 的 诞生 城市	一个 2004 年 没 毕业 的 学生 的 出生 城市 是 什么 ？	一个 2004 年 还 没 上学 的 学生 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 不迟于 2004 年 开始 日期 的 学生 的 出生 城市	为 开始 日期 不迟于 2004 年 的 学生 寻找 出生 城市	寻找 出生 城市 的 学生 谁 有 一个 开始 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
说出 180 厘米 高 的 人 的 朋友	说出 一个 180 厘米 高 的 人 的 朋友	说出 一个 180 厘米 高 的 人 的 朋友 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 结束 日期 不晚 于 员工 爱丽丝 开始 日期 的 员工	查找 结束 日期 不晚 于 员工 alice 的 开始 日期 的 员工	查找 结束 日期 不晚 于 雇员 alice 的 开始 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 后 加入 的 学生	2004 年 后 加入 的 学生	2004 年 后 加入 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 在 爱丽丝 之前 辞职	哪个 雇员 在 爱丽丝 之前 辞职	哪个 员工 比 爱丽丝 先 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 之前 开始 的 员工	爱丽丝 出生 前 的 雇员	爱丽丝 出生 前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 纽约 或 北京	谁 出生 在 纽约 或 北京	谁 出生 在 纽约 还是 北京	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
什么 是 参加 任何 大学 但 棕色 的 人 的 性别	除了 布朗 ， 上 大学 的 人 的 性别 是 什么	除了 布朗 大学 以外 ， 其他 大学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 最后 一天 与 爱丽丝 的 毕业典礼 当天 同一天	哪位 员工 的 最后 一天 和 爱丽丝 的 毕业 日 是 同一天	哪位 员工 的 离职 日 和 爱丽丝 的 毕业 日 是 同一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 有 两种 不同 的 关系 状态	有 两种 不同 的 关系 状态	谁 有 两种 不同 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
2004 年 或 之前 出生 的 人 在 哪里 出生	在 2004 年 或 之前 开始 上学 的 人 在 哪里 出生	2004 年 或 之前 入学 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 她 辞职 时 做 爱丽丝 的 工作	艾丽斯 2004 年 辞职 时为 谁 工作	艾丽丝 2004 年 辞职 时为 谁 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
超过 两个 人 声称 什么样 的 关系 状态	两个 以上 的 人 声称 什么样 的 关系 状态	两个 人 以上 的 关系 状态 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
至少 和 爱丽丝 一样 高 的 人	至少 和 爱丽丝 一样 高 的 人	至少 和 爱丽丝 一样 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
这 两个 人 的 关系 状况 如何 ？	那 两个 人 的 关系 状况 如何	这 两个 人 的 关系 如何	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 出生日期 与 爱丽丝 就业 结束 日期 相同 的 人	查找 出生日期 与 Alice 的 工作 结束 日期 相同 的 人	找到 出生日期 与 就业 结束 日期 相同 的 人 爱丽丝	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
找到 2004 年 以后 辞职 的 人 的 朋友	找 2004 年 后 辞职 的 朋友	寻找 2004 年 后 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 后 开始 的 学生	从 爱丽丝 开始 的 学生	在 爱丽丝 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
非 计算机科学 专业 的 朋友	一个 非 计算机 理科 学生 的 朋友	一个 非 计算机专业 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 有 180 厘米 高 的 朋友	有 180 厘米 高 的 朋友	谁 有 180 厘米 高 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 学生 从 2004 年 开始 和 之后 的 关系 状况	2004 年 及 以后 学生 的 人际关系 状况 如何	从 2004 年 开始 和 之后 ， 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 所有 180 厘米 高 的 人 和 艾丽斯 出生 在 同一个 地方 的 人	找 我 所有 身高 180 厘米 ， 和 爱丽丝 出生 在 同一个 地方 的 人	找到 所有 身高 180 厘米 ， 和 爱丽丝 出生 在 同一个 地方 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
哪个 城市 是 爱丽丝 出生 的 朋友	爱丽丝 的 朋友 出生 在 哪个 城市	爱丽斯 的 朋友 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
谁 是 结束 日期 为 2004 的 学生 的 朋友	谁 是 2004 年 毕业 的 学生 的 朋友	谁 是 2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 没有 出生 在 哪里	爱丽丝 不是 在 哪里 出生 的	爱丽丝 不是 在 哪里 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string ! = ) en.person.alice ) )
哪个 学生 在 2004 年 之后 开始	哪个 学生 在 2004 年 以后 开始 学习	哪个 学生 在 2004 年 后 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 在 爱丽丝 之后 或 同时 开始 学习 的 内容	在 爱丽丝 之后 或 同时 开始 的 学生	学生 们 在 爱丽丝 之后 或 同时 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 的 结束 日期 大于 2010 年	哪些 学生 的 截止 日期 大于 2010 年	哪些 学生 的 结业 日期 大于 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 离开 了 爱丽丝 开始 的 那 一天	雇员 在 爱丽丝 开始 工作 的 那天 离开 了	员工 离开 的 那天 ， 爱丽丝 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 朋友 出生 在 纽约	爱丽丝 的 朋友 出生 在 纽约	爱丽丝 的 朋友 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
学生 从 2004 年 到 2010 年 开始 学习 什么	从 2004 年 到 2010 年 的 学生 开始	从 2004 年 到 2010 年 学生 们 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 在线	什么 人 在线	什么 人 上网	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string logged_in ) ) )
哪位 学生 先 离开 了	哪个 学生 先 离开	哪个 学生 先 走 的 ?	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 之前 开始 工作 的 人 在 哪里 出生	在 2004 年 出生 之前 就 开始 工作 的 人 在 哪里	2004 年 以前 开始 工作 的 人 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 或 之后 开始 上学 的 人 是 什么 性别	2004 年 或 之后 开始 上学 的 人 是 什么 性别	2004 年 或 以后 入学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 开始 的 员工 的 关系 状况 如何 ？	2004 年 开始 工作 的 员工 的 关系 状况 如何	2004 年入 职 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人有 两个 朋友	什么 人有 两个 朋友	什么 人有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 或 之后 开始 的 学生 朋友	2004 年 或 以后 开始 的 学生 朋友	2004 年 或 以后 入学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
不 在 布朗 大学 学习 的 学生 的 出生地	不 在 布朗 大学 学习 的 学生 的 出生地	非 布朗 大学 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 爱丽丝 和 男性 成为 朋友 的 人	和 爱丽丝 和 男朋友 的 人	是 爱丽丝 和 男人 们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
大多数 人 出生 的 城市	大多数 人 出生 在 哪个 城市	大多数 人 出生 在 哪个 城市	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
与 alice 职位 相同 的 员工	与 爱丽丝 有 相同 职称 的 雇员	与 alice 工作 头衔 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
职称 不是 软件 工程师 的 员工	职位 不是 软件 工程师 的 雇员	职位 不是 软件 工程师 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 为 麦肯锡 工作 期间 ， 爱丽丝 的 职称 是 什么 ？	爱丽丝 在 麦肯锡 工作 时 的 职称 是 什么 ？	爱丽丝 在 麦肯锡 工作 时 的 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
找到 最后 一天 与 爱丽丝 相同 或 晚于 的 人	找出 最后 一天 与 爱丽丝 相同 或 晚于 爱丽丝 的 学生	找 一些 学生 ， 他们 的 最后 一天 和 爱丽丝 的 一样 ， 或者 比 爱丽丝 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 终止 日期	艾丽斯 的 终止 日期 是 什么	爱丽斯 的 终止 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) )
什么 城市 不到 两个 人 出生	哪个 城市 出生 的 人 不到 两个	哪个 城市 出生 的 人 还 不到 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
爱丽丝 在 2004 年 做 了 什么 工作	艾丽斯 2004 年 辞去 了 什么 工作	2004 年 爱丽丝 离开 了 什么 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
具有 180 厘米 高度 的 同一 生日 的 人	出生日期 相同 的 人 ， 身高 180 厘米 的 人	出生日期 相同 ， 身高 180 公分 者	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 不 在 计算机科学 领域 的 朋友	找 不 懂 计算机 的 朋友	找 一些 不 从事 计算机科学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 与 学生 的 朋友 ， 他们 的 开始 日期 不迟于 2004 年	什么样 的 人 和 不 迟于 2004 年 开始 约会 的 学生 是 朋友 ？	什么 人 是 朋友 的 学生 谁 有 一个 开始 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 身高 或 高度	人 爱丽丝 的 身高 或 更 高	人 爱丽丝 的 身高 或 更 高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
那个 工人 在 学生 爱丽丝 开始 的 那天 或 之前 离开 了	哪个 工人 在 学生 爱丽丝 开始 上学 当天 或 之前 离开 了	哪个 工人 在 爱丽丝 上学 的 那天 或 之前 离开 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 员工 爱丽丝 开始 日期 或 之后 出生 的 人	谁 在 雇员 爱丽丝 的 开始 日期 或 之后 出生	谁 是 在 雇员 alice 的 入职 日期 后 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
出生 城市 不 超过 两人	出生 城市 不 超过 两人	出生 城市 不 超过 两个 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 所有 关系 状态 与 180 厘米 高 的 人 相同 的 人	找到 所有 关系 状态 与 身高 180 厘米 的 人 相同 的 人	找到 所有 和 180 厘米 高 的 人 有 相同 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 爱丽丝 开始 时 完成 的 员工	爱丽丝 开始 工作 时 完成 的 员工	员工 在 alice 开始 工作 时 完成 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一名 学生 与 员工 爱丽丝 同一天 开始	一个 学生 和 雇员 爱丽丝 在 同一天 上班	一名 学生 和 爱丽丝 是 同一天 入职 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 180 厘米 高 ， 目前 在线 的 人	找 我 所有 身高 180 厘米 ， 目前 在线 的 人	找到 我 所有 的 人 谁 是 180 厘米 高 ， 目前 在 网上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string logged_in ) ) )
谁 是 员工 的 朋友 ， 其 开始 日期 至少 是 2005 年	谁 是 开始 日期 至少 为 2005 年 的 员工 的 朋友	谁 是 开始 日期 至少 为 2005 年 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 员工 关系 状态 谁 没有 在 2004 年 结束	2004 年 未 结束 的 员工 关系 状况 如何	2004 年 没有 结束 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
mckinsey 没有 聘用 哪些 员工	哪些 员工 不是 麦肯锡 的 雇员	哪些 员工 没有 被 麦肯锡 聘用	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
无论是 2004 年 还是 2010 年	2004 年 或 2010 年	2004 年 或 2010 年	( call SW.listValue ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) )
找到 拥有 最 多 雇主 的 员工	找到 拥有 最 多 雇主 的 员工	找到 拥有 最 多 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
朋友 少于 两个 的 人	朋友 少于 两个 的 人	朋友 少于 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 之前 或 之前 完成学业 的 人	与 爱丽丝 一起 或 在 爱丽丝 之前 完成学业 的 人	在 alice 之前 完成 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
说出 不迟于 2004 年 开始 工作 的 员工 的 朋友	说出 不迟于 2004 年 开始 工作 的 员工 的 朋友	说出 一位 2004 年 以前 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 出生 后 开始	哪个 学生 在 爱丽丝 出生 后 就 开始 了	爱丽丝 出生 后 ， 哪个 学生 开始 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 最新 开始 日期 的 学生	查找 最新 开始 日期 的 学生	找到 学生 与 最近 的 开始 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年出 生于 纽约 的 人	2004 年出 生于 纽约 的 人	2004 年 生于 纽约 者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 是 一个 180 厘米 的 软件 工程师	他 是 一个 180 厘米 的 软件 工程师	谁 是 身高 180 厘米 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
不是 爱丽丝 的 朋友	不是 爱丽丝 朋友 的 人	那些 不是 爱丽丝 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
在 爱丽丝 出生 前 毕业 的 学生	爱丽丝 出生 前 毕业 的 学生	爱丽丝 出生 前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 学生 爱丽丝 做 之前 ， 学生 开始 了 什么	学生 在 爱丽丝 之前 开始 的	在 学生 爱丽丝 之前 学生 开始 做 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 一个 员工 朋友 ， 到 2004 年 开始 工作 的 人	在 2004 年前 开始 工作 的 员工 朋友	有 一个 员工 朋友 在 2004 年 开始 工作 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不是 2004 年 的 员工 是 什么 性别	结束 日期 不是 2004 年 的 员工 是 什么 性别	不是 2004 年 的 员工 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
自 2004 年 以来 一直 在 工作 的 员工 的 关系 状况 如何	自 2004 年 起 工作 的 员工 的 关系 状况 如何	从 2004 年 开始 工作 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 180 厘米 高 的 爱丽丝 朋友	谁 是 爱丽丝 的 朋友 谁 是 180 厘米 高	爱丽丝 和 谁 是 180 厘米 高 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
2003 年 以后 完成学业 的 人 的 朋友	2003 年 后 完成学业 的 朋友	2003 年 后 完成学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 和 爱丽丝 离开 当天 开始 的 学生	给 我 找 一个 在 艾丽斯 离开 的 同一天 开始 的 学生	帮 我 找 那个 和 爱丽丝 出发 的 同一天 出发 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生人数 最多 的 城市	出生 人口 最多 的 城市	那个 城市 出生 的 人 最 多	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学习 领域 不是 计算机科学 的 学生	研究 领域 不是 计算机科学 的 学生	非 计算机科学 专业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 所有 出生 在 纽约 的 人 ， 目前 在线	帮 我 找到 所有 在 纽约 出生 的 人	给 我 找到 所有 在 纽约 出生 的 人 ， 他们 现在 都 在 网上	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string logged_in ) ) )
2004 年 之后 开始 工作 的 人 的 关系 状况 如何 ？	2004 年 以后 开始 工作 的 人 的 关系 状况 如何	2004 年 后 开始 工作 的 人 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 学习 计算机科学 或 历史 的 学生	学习 计算机科学 或 历史 的 学生 是 谁	学习 计算机科学 或 历史 的 学生 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 开始 工作 之前 毕业 的 学生	爱丽丝 开始 工作 前 毕业 的 学生	爱丽丝 开始 工作 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找 一个 朋友 少于 两个 的 人	找 一个 朋友 少于 两个 的 人	找 一个 朋友 少于 两个 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
那里 有 多少 家 公司	有 多少 家 公司	有 多少 家 公司	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ) )
谁 是 2004 年 之前 退出 的 员工	2004 年 以前 辞职 的 员工 是 谁 ？	2004 年 以前 离职 的 员工 有 哪些	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
关于 没有 学习 计算机科学 的 学生 的 关系 状况	非 计算机专业 学生 的 人际关系 状况	没有 学习 计算机科学 的 学生 ， 他们 之间 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 鲍勃 或 爱丽丝 的 朋友	鲍勃 或 爱丽丝 的 朋友	鲍勃 或 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
当 爱丽丝 出生 时 或 之前 停止 上学 的 人	爱丽丝 出生 时 或 以前 辍学 的 人	爱丽丝 出生 或 出生 之前 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学习 计算机科学 以外 的 人 的 性别 是 什么	学习 计算机科学 以外 的 东西 的 人 的 性别 是 什么	学习 计算机科学 以外 的 专业 的 人 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 最后 一天 是 2004 年 或 2010 年	上 一天 是 2004 年 还是 2010 年	哪些 员工 离职 的 最后 一天 是 在 2004 年 还是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 出生地 未 在 2004 年 完成	2004 年 未 完成 的 员工 出生地	2004 年 未 完成 的 员工 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
当 爱丽丝 停止 上学 或 之后 停止 工作 的 人	当 爱丽丝 辍学 或 辍学 后 停止 工作 的 人	当 爱丽丝 停学 或 停学 后 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 纽约 出生 的 人 的 关系 状态 是 什么 ？	在 纽约 出生 的 人 的 关系 状况 如何	在 纽约 出生 的 人 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
在 爱丽丝 之前 完成 的 学生	在 爱丽丝 之前 完成 的 学生	比 爱丽丝 先 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 与 员工 开始 日期 晚于 2004 年 的 朋友	查找 与 开始 日期 晚于 2004 年 的 员工 交朋友 的 人	找 一些 员工 的 朋友 ， 他们 的 入职 日期 要 晚于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	她 是 爱丽丝 的 朋友 ， 身高 180 厘米	谁 是 爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
开学 日期 与 2004 年 不同 的 学生 的 性别 是 什么	开始 日期 与 2004 年 不同 的 学生 的 性别 是 什么	开始 日期 与 2004 年 不同 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 一个 雇主 的 雇员	找 一个 雇主 的 雇员	找到 只有 一个 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 研究 领域 是 计算机科学 在 什么 日期 结束	爱丽丝 的 研究 领域 是 计算机科学 ， 她 在 哪一天 结束	爱丽丝 的 研究 领域 是 计算机科学 ， 她 是 哪天 毕业 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
在 2004 年 或 之前 结束 的 雇员 的 性别	2004 年 期间 或 之前 结束 的 雇员 的 性别	在 2004 年 或 之前 离职 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 除了 软件 工程师 之外 还有 什么 职位	什么样 的 员工 有 软件 工程师 以外 的 职称	除了 软件 工程师 ， 员工 还有 什么 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 结束 日期 与 alice 相同 的 员工	查找 与 Alice 有 相同 结束 日期 的 员工	找到 和 alice 一样 有 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
至少 两个 人 的 关系 状况	至少 两个 人 的 关系 状态	至少 两个 人 的 关系 状况	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 就业 的 最后 一天 出生 的 人 是 谁	爱丽丝 工作 的 最后 一天 出生 的 人 是 谁	谁 是 爱丽丝 工作 的 最后 一天 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) )
2004 年 或 之后 开始 的 雇员 的 出生地	2004 年 或 之后 开始 工作 的 员工 的 出生地	2004 年 或 以后 入职 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 爱丽丝 之前 开始 工作 的 人	在 爱丽丝 之前 就 开始 工作 的 人	在 爱丽丝 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 以后 毕业 的 学生 的 性别 是 什么 ？	2004 年 以后 毕业 的 学生 的 性别 是 什么	2004 年 后 毕业 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 同时 退出 或 在 爱丽丝 之后 退出	同时 辞职 或 在 爱丽丝 辞职 后 辞职 的 人	谁 在 爱丽丝 辞职 的 时候 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 是 什么 性别	爱丽丝 朋友 的 性别 是 什么	爱丽丝 的 朋友 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
找到 在 纽约 或 北京 出生 的 人	找 出生 在 纽约 或 北京 的 人	寻找 在 纽约 或 北京 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
结束 日期 在 2004 年 之前 的 学生 的 关系 状态	2004 年 以前 学生 关系 状况	2004 年 以前 学生 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
大学 将 在 2004 年 完成 什么	艾丽斯 2004 年 将 上 哪 所 大学	2004 年 爱丽丝 将 上 哪 所 大学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string university ) ) )
爱丽丝 的 朋友 身高 180 厘米	爱丽丝 的 朋友 身高 180 厘米	爱丽丝 的 朋友 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
在 爱丽丝 辞职 之前 开始 工作 的 人	爱丽丝 辞职 前 就 开始 工作 的 人	在 alice 辞职 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 第一个 工作日 毕业 的 学生	爱丽丝 第一个 工作日 后 毕业 的 学生	爱丽丝 第一天 工作 后 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除 2004 年 以外 的 学生 的 关系 状态 是 什么	2004 年 以外 结束 日期 学生 的 关系 状况 如何	除 2004 年外 ， 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 城市 的 员工 ， 其 开始 日期 是 2004 年 之后	起始 日期 在 2004 年 之后 的 员工 的 出生 城市	2004 年 以后 入职 日期 的 员工 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
开始 日期 不 在 员工 爱丽丝 开始 日期 之后 的 学生	开始 日期 不 在 雇员 alice 开始 日期 之后 的 学生	开始 日期 未 超过 雇员 alice 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 学生 有 最早 的 开始 日期	哪个 学生 最早 开始 上课	什么 学生 有 最早 的 上课 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 计算机科学 以外 的 领域 学习 的 人 的 出生地	在 计算机科学 以外 的 领域 学习 的 人 的 出生地	研究 计算机科学 以外 领域 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 结束 日期 少于 2004 年 的 学生 诞生 城市	截止 日期 不到 2004 年 的 学生 出生 城市 是 什么	哪些 城市 的 学生 出生日期 少于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 没有 进入 布朗 大学 的 学生 的 生日	寻找 没有 上 布朗 大学 的 学生 的 出生地	查找 未 就读 布朗 大学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
出生 在 同一天 的 人 艾 莉斯 开始 了 她 的 工作	爱丽丝 开始 工作 那天 出生 的 人	出生 在 同一天 的 人 爱丽丝 开始 了 她 的 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )
2004 年 之后 离职 的 员工 的 出生地 是 什么 ？	2004 年 后 离职 的 员工 的 出生地 是 什么 ？	2004 年 后 离职 的 员工 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
只有 两个 朋友 的 人	只有 两个 朋友 的 人	只有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 在 爱丽丝 的 生日 那天 毕业 的 学生	找到 爱丽丝 生日 那天 毕业 的 学生	找到 爱丽丝 生日 那天 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
任何 出生 在 纽约 的 人 的 朋友	任何 在 纽约 出生 的 朋友	任何 出生 在 纽约 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
什么 时候 爱丽丝 开始 为 麦肯锡 工作	爱丽丝 什么 时候 开始 为 麦肯锡 工作 的 ？	爱丽丝 什么 时候 开始 在 麦肯锡 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_start_date ) ) )
不去 布朗 大学 的 学生 的 关系 状况	不上 布朗 大学 学生 的 人际关系 状况	不上 布朗 大学 的 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
有 多少 员工 分享 爱丽丝 的 职位	有 多少 雇员 与 爱丽丝 共用 一个 职位	有 多少 员工 和 爱丽斯 的 头衔 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出 生于 爱丽丝 的 第一天 上学	她 出生 在 爱丽丝 上学 的 第一天	谁 是 爱丽丝 上学 的 第一天 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) )
找到 2004 年 以外 开学 日期 的 学生 朋友	寻找 开始 日期 不是 2004 年 的 学生 的 朋友	寻找 开始 日期 不是 2004 年 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 登录 的 人 是 谁 的 朋友	什么 人 和 登录 的 人 是 朋友	什么 人 与 登录 的 人 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
什么 人 不是 在 纽约 出生 的	什么 人 不是 在 纽约 出生 的	什么 人 不是 在 纽约 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string ! = ) en.city.new_york ) )
找到 每个 人 都 是 单身 或 已婚 的 人	找到 所有 单身 或 已婚 的 人	找到 每 一个 单身 或 已婚 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.concat en.relationship_status.single en.relationship_status.married ) ) )
找到 有 纽约 出生地 和 他们 的 朋友 的 人	找到 有 纽约 出生地 的 人 和 他们 的 朋友	找到 那些 在 纽约 出生 的 人 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
谁 是 爱丽丝 的 男性 朋友	谁 是 爱丽丝 的 男朋友	爱丽丝 的 男性 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
工作 历史 最小 的 员工	工作 经历 最少 的 员工	工作 经历 最少 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最多 2 个 职位 的 员工	最多 有 两个 职称 的 员工	拥有 最 多 两个 职位 头衔 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 辞职 的 员工 的 关系 状况 如何 ？	2004 年 以前 离职 员工 的 关系 状况 如何	2004 年 以前 离职 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
当 爱丽丝 停止 工作 或 之后 停止 上学 的 人	当 爱丽丝 停止 工作 或 之后 停止 上学 的 人	当 爱丽丝 停止 工作 后 ， 人们 就 会 停止 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
雇员 的 雇主 是 麦肯锡 还是 谷歌	哪个 雇员 的 雇主 不是 麦肯锡 就是 谷歌	哪个 雇员 的 雇主 不是 麦肯锡 就是 谷歌	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.concat en.company.mckinsey en.company.google ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 最后 一天 不是 2004 年	上 一天 哪些 员工 不是 2004 年 的	哪些 员工 的 最后 一天 不是 n2004	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 在 纽约 出生 的 爱丽丝 朋友	谁 是 爱丽丝 的 朋友 ， 出生 在 纽约	在 纽约 出生 的 爱丽丝 · 弗兰德 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string birthplace ) ( string = ) en.city.new_york ) )
爱丽丝 辞掉 工作 后 加入 学业 的 人	爱丽丝 辞职 后 参加 学习 的 人	爱丽丝 辞职 后 加入 他们 学校 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 最早 开始	哪个 学生 最早 开始	哪个 学生 开始 得 最早 ?	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 厘米 ， 于 2004 年 离职 的 人	身高 180 厘米 ， 2004 年 离职 的 人	身高 180 厘米 的 人于 2004 年 离职	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
学生 的 开始 日期 不 在 学生 爱丽丝 的 开始 日期 之前	开始 日期 不早 于 学生 爱丽丝 开始 日期 的 学生	开始 日期 不是 在 alice 开始 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 不上 棕色 大学	哪个 学生 没有 上 布朗 大学	哪个 学生 没有 上 布朗 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 员工 的 结局 不 超过 爱丽丝	哪个 员工 的 离职 人数 不 超过 爱丽丝	哪位 雇员 的 结尾 不 大于 爱丽丝 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 出生 前 结束 的 员工	艾丽斯 出生 前 的 雇员	爱丽丝 出生 前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 是 200 厘米 或 更 短	什么 人 200 厘米 或 更 短	什么 人 200 厘米 或 更 矮	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
找到 开始 日期 等于 学生 爱丽丝 结束 日期 的 学生	找出 开始 日期 等于 学生 爱丽丝 结束 日期 的 学生	找到 学生 的 开始 日期 等于 学生 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
无论是 多少 场	字段 的 任意 数目	任一 字 段数	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ) )
在 2004 年 之前 开始 的 学生 的 出生地	2004 年 以前 开始 学习 的 学生 的 出生地	2004 年 以前 入学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
所有 从 2004 年 开始 的 学生 的 诞生 城市	2004 年 以前 入学 的 所有 学生 的 出生 城市	2004 年 以前 入学 的 所有 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
作为 软件 工程师 或 项目经理 的 员工	软件 工程师 或 项目经理	软件 工程师 或 程序 经理 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停止 工作 后 开始 上学 的 人	爱丽丝 停止 工作 后 开始 上学 的 人	那些 在 爱丽丝 停止 工作 后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 是 软件 工程师 的 人	谁 雇佣 爱丽丝 做 软件 工程师	谁 雇用 爱丽丝 做 软件 工程师	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employer ) ) )
找到 有 最新 开课日期 的 学生	查找 具有 最新 开始 日期 的 学生	找到 有 最新 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 开始 日期 与 员工 爱丽丝 相同 的 学生	寻找 与 员工 alice 有 相同 开始 日期 的 学生	找到 和 员工 alice 有 相同 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 朋友 的 关系 状况	爱丽丝 朋友 的 关系 状况	爱丽丝 朋友 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
那天 结束 上学 的 学生 爱丽丝 开始 工作 了	爱丽丝 开始 工作 那天 放学 的 学生	爱丽丝 开始 工作 的 那天 ， 学生 们 放学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 2004 年 以后 开始 的 员工 的 朋友	谁 是 2004 年 以后 开始 工作 的 员工 的 朋友 ？	谁 是 2004 年 以后 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 开始 日期 晚于 爱丽丝 的 结束 日期	哪个 员工 的 开始 日期 晚于 alice 的 结束 日期	什么 员工 的 开始 日期 比 alice 的 结束 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 不 参加 布朗 大学 的 学生 成为 朋友 的 人	和 没有 上 布朗 大学 的 学生 交朋友 的 人	与 未 就读 布朗 大学 的 学生 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人们 的 出生地 在 2004 年 之前 加入 了 研究	2004 年 以前 参加 研究 的 人 的 出生地	人们 的 出生地 在 2004 年 之前 就 加入 了 研究	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 在 爱丽丝 的 出生日期 或 之后 开始 做 什么	爱丽丝 生日 当天 或 之后 开始 工作 的 员工	哪位 员工 在 爱丽斯 生日 当天 或 之后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 在 爱丽丝 之后 开始	哪个 雇员 在 爱丽丝 之后 开始 工作	哪个 员工 是 在 爱丽丝 之后 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 何时 开始 工作	爱丽丝 什么 时候 开始 工作 的	爱丽斯 什么 时候 开始 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) )
哪些 人 是 员工 的 朋友 ， 他们 的 最后 一天 是 在 2004 年 之前	哪位 员工 的 最后 一天 是 2004 年 之前 的 ？	哪些 人 和 2004 年 以前 离职 的 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 生日 的 朋友 ， 是 2004 年	谁 是 生日 是 2004 的 朋友	谁 是 2004 年 生日 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
学生 用 爱丽丝 完成	学生 与 爱丽丝 完成	学生 完成 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 从 2004 年 或 之后 开始	2004 年 或 之后 开始 工作 的 员工	2004 年 或 以后 入职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 大学 是 棕色 大学 或 ucla 的 学生	找到 布朗 大学 或 加州大学洛杉矶分校 的 学生	寻找 布朗 大学 或 加州大学洛杉矶分校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 与 180 厘米 的 人 性别 相同	他 和 180 厘米 的 人 是 同一 性别	谁 和 身高 180 厘米 的 人 是 同一 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
员工 从 爱丽丝 的 生日 开始	从 爱丽丝 生日 开始 的 员工	员工 从 爱丽斯 的 生日 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
无论是 纽约 还是 北京	不是 纽约 就是 北京	不是 纽约 就是 北京	( call SW.listValue ( call SW.concat en.city.new_york en.city.bejing ) )
找到 结束 日期 早 于 员工 爱丽丝 开始 日期 的 员工	查找 结束 日期 早 于 员工 alice 的 开始 日期 的 员工	找到 比 员工 alice 的 开始 日期 更 早 结束 日期 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
将 一个 180 厘米 高 的 人 命名 为 与 爱丽丝 相同 的 高度	举出 一个 180 厘米 高 和 爱丽丝 一样 高 的 人	说出 一个 180 厘米 高 的 人 和 爱丽丝 一样 高 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string height ) ) ( string = ) en.person.alice ) )
谁 是 雇员	谁 是 雇员	雇员 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 爱丽丝 的 职称	爱丽丝 的 职称 是 什么	爱丽斯 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
当 爱丽丝 停止 工作 或 之后 开始 工作 的 人	当 爱丽丝 停止 工作 或 之后 开始 工作 的 人	在 爱丽丝 停止 工作 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 没有 出生 的 城市	爱丽丝 出生 的 城市	爱丽丝 没有 出生 的 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string ! = ) en.person.alice ) )
当 爱丽丝 开始 时 员工 离开 了 什么	爱丽丝 开始 工作 时 ， 员工 们 留下 了 什么 ？	当 爱丽丝 开始 工作 时 ， 员工 们 留下 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 出生 在 180 厘米 高 的 人 的 同一个 地方	他 和 那个 180 厘米 高 的 人 出生 在 同一个 地方	谁 和 那个 180 厘米 高 的 人 出生 在 同一个 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 开始 的 日期 大于 学生 爱丽丝 的 结束 日期	哪些 学生 的 开始 日期 大于 学生 alice 的 结束 日期	什么 学生 的 开始 日期 比 学生 alice 的 结束 日期 大	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
来自 不 在 麦肯锡 工作 的 朋友 的 联系	来自 不 在 麦肯锡 工作 的 朋友 的 联系	来自 不 在 麦肯锡 工作 的 朋友 的 联系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 去 了 学校 ， 但 没有 在 2004 年 开始	在 2004 年 没有 开始 上学	谁 在 2004 年 没 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2005 年 之前 加入 的 员工 的 性别	2005 年前 入职 员工 性别	2005 年 以前 入职 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
他们 的 关系 状态 不是 唯一 的	其 关系 状态 不是 唯一 的	谁 的 感情 状况 不是 独一无二 的	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
有 多少 关系 状态 选项	有 多少 关系 状态 选项	有 多少 关系 状态 选项	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ) )
180 厘米 高 的 人 在 麦肯锡 工作	180 厘米 高 的 人 在 麦肯锡 工作	身高 180 厘米 的 人 在 麦肯锡 工作	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
什么 是 为 麦肯锡 工作 的 爱丽丝 的 职称	为 麦肯锡 工作 的 爱丽丝 的 职称 是 什么 ？	在 麦肯锡 工作 的 爱丽丝 的 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
找到 在 纽约 出生 的 人 的 朋友	寻找 在 纽约 出生 的 人 的 朋友	寻找 在 纽约 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
学生 在 2004 年 之前 或 期间 结束	在 2004 年 之前 或 期间 结束 的 学生	在 2004 年 之前 或 期间 结束 学业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 从 2004 年 或 2010 年 开始	2004 年 或 2010 年 开始 的 学生	2004 年 或 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 2004 年 没有 开始 的 员工 的 出生地	2004 年 没有 开始 工作 的 员工 的 出生地 是 什么 ？	没有 在 2004 年 开始 工作 的 员工 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
180 厘米 高 的 人 的 朋友	身高 180 厘米 的 朋友	180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 2004 年 及 之后 的 员工 发源地	2004 年 及 以后 员工 的 出生地 是 什么	从 2004 年 开始 和 之后 雇员 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 雇主 的 数量 最少	哪些 雇员 拥有 最少 的 雇主	什么 雇员 的 雇主 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
麦肯 西 没有 雇用 的 人 的 出生地	不是 麦肯锡 雇员 的 出生地	一个 没有 被 麦肯锡 雇佣 的 人 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
性别 最多 的 人	性别 最多 的 人	性别 最多 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 爱丽丝 辞职 之前 加入 的 员工	爱丽丝 辞职 前 加入 的 雇员	在 alice 辞职 之前 加入 公司 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 有 朋友 ， 结束 日期 是 在 2004 年 之前	谁 有 朋友 谁 的 结束 日期 在 2004 年 之前	谁 有 朋友 的 截止 日期 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 在 爱丽丝 的 最后 一天 之前 就 开始 了	哪些 员工 在 爱丽丝 的 最后 一天 之前 开始 工作	哪些 员工 是 在 alice 离职 前 开始 工作 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
高度 为 180cm 的 软件 工程师	身高 180cm 的 软件 工程师	软件 工程师 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
找到 180 厘米 高 的 人 的 性别	找到 180 厘米 高 的 人 的 性别	找出 身高 180 厘米 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
高度 为 180 厘米 或 以上 的 人	身高 在 180 厘米 或 以上 的 人	身高 180 厘米 或 以上 的 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
2004 年 或 更 早 开始 工作 的 员工 的 出生地	2004 年 或 更 早 开始 工作 的 员工 的 出生地	2004 年 或 更 早 开始 工作 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
我 的 哪些 朋友 联系 现在 在线	我 的 哪些 朋友 现在 在线	我 的 哪些 朋友 现在 在线	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
找到 所有 有 爱丽丝 作为 共同 朋友 的 人	找到 所有 和 爱丽丝 有 共同 朋友 的 人	找到 所有 爱丽丝 的 共同 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
2004 年 之前 开始 的 员工 性别	2004 年 以前 开始 的 雇员 性别	2004 年 以前 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
将 与 员工 成为 朋友 的 人 命名 为 不 迟于 2004 年 开始 的 员工	说出 一个 与 2004 年 之前 开始 工作 的 员工 交朋友 的 人	说出 一个 人 的 朋友 是 在 2004 年 之前 开始 工作 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 在 学生 爱丽丝 开始 日期 之后 的 员工	结束 日期 在 学生 爱丽丝 的 开始 日期 之后 的 员工	结束 日期 在 学生 alice 开始 日期 之后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 关系 状态 至少 由 两个 人 声称	哪 种 关系 状态 至少 有 两个 人 声称	哪 一种 关系 状态 至少 被 两个 人 声明	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪位 员工 在 2004 年 至 2010 年间 结束	哪个 员工 在 2004 年 至 2010 年间 离职	哪位 员工 在 2004 年 至 2010 年间 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 员工 不 超过 两个 雇主	哪个 雇员 只有 两个 雇主	哪个 雇员 有 两个 以上 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 做 的 时候 开始 上学 的 人	爱丽丝 上学时 开始 上学 的 人	和 爱丽丝 一样 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 性别 没有 从 2004 年 开始	2004 年 未 开始 工作 的 员工 性别	2004 年 起 不再 执行 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
与 爱丽丝 同时 开始 上学 的 学生	和 爱丽丝 同时 上学 的 学生	和 爱丽丝 同时 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 员工 爱丽丝 的 同时 开始	哪个 学生 和 雇员 爱丽丝 同时 开始	哪些 学生 和 雇员 爱丽丝 同时 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
我 的 社交 网络 中 出生 的 男性 是 哪些 城市	我 的 社交 网络 中 的 男性 出 生于 哪个 城市	我 的 社交 网络 中 的 男性 出生 在 哪些 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
在 爱丽丝 加入 她 的 学习 之后 加入 他们 工作 的 人	爱丽丝 加入 学习班 后 加入 工作 的 人	在 alice 加入 她 的 研究 后 加入 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 2004 年 之前 毕业 的 人 的 朋友	谁 是 2004 年 以前 毕业 的 人 的 朋友	谁 是 2004 年 以前 毕业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
两个 人 出生 在 哪个 城市	两个 人 出生 在 哪个 城市	两个 人 出生 在 哪个 城市	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 是 纽约 的 单身 人士	从 纽约 来 的 单身汉	谁 是 来自 纽约 的 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 比 爱丽丝 年轻	谁 比 爱丽丝 年轻	谁 比 爱丽丝 年轻	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
在 爱丽丝 工作 的 第一天 或 之后 出生 的 人	爱丽丝 上班 第一天 或 之后 出生 的 人	出生 在 爱丽丝 工作 第一天 或 之后 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
找到 与 员工 有 朋友 的 人 ， 他们 的 最后 一天 不 在 2004 年	找到 那些 与 最后 一天 不 在 2004 年 的 员工 交朋友 的 人	找 一些 员工 的 朋友 ， 他们 的 最后 一天 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
只有 一所 大学 的 学生	只有 一所 大学 的 学生	只有 一所 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 她 2004 年 辞职 的 工作	艾丽斯 什么 时候 开始 做 她 2004 年 辞职 的 工作 的 ？	艾丽丝 2004 年 辞掉 的 工作 是 什么 时候 开始 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
当 爱丽丝 开始 上学 或 之后 停止 工作 的 人	爱丽丝 上学 或 毕业 后 停止 工作 的 人	那些 在 爱丽丝 开始 上学 后 就 不 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
结束 日期 不 在 员工 爱丽丝 开始 日期 之后 的 学生	结束 日期 不 在 雇员 alice 开始 日期 之后 的 学生	结束 日期 未 超过 雇员 alice 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 毕业 后 开始 的 员工	爱丽丝 毕业 后 开始 工作 的 员工	爱丽丝 毕业 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 在 2004 年 之后 开始 的 员工 性别	找出 2004 年 后 开始 工作 的 员工 的 性别	给 我 找出 2004 年 以后 开始 工作 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 单身 朋友 的 人	有 单身 朋友 的 人	有 单身 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
其中 学生 的 学习 领域 是 计算机 科学史	哪个 学生 的 研究 领域 是 计算机 历史 科学	哪些 学生 的 研究 领域 是 计算机 历史 科学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
两个 人 分享 什么样 的 关系 状态	两个 人有 什么 关系	两个 人 的 关系 状况 如何	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
2004 年 开始 工作 的 工人 的 性别	2004 年 没有 开始 工作 的 工人 的 性别	一个 2004 年 才 开始 工作 的 工人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之后 的 最后 一天 学生 的 性别 是 什么	2004 年 或 以后 最后 一天 的 学生 性别	2004 年 最后 一天 或 以后 的 学生 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 的 人 和 麦肯锡 作为 他们 的 雇主	找 身高 180 厘米 的 人 ， 麦肯锡 做 他们 的 雇主	找 一个 身高 180 厘米 的 人 ， 麦肯锡 为 他们 的 雇主	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
出生 城市 的 员工 ， 其 开始 日期 最多为 2004 年	起始 日期 不 超过 2004 年 的 员工 出生 城市	员工 出生 城市 ， 其 起始 日期 最多为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 以后 开始 的 学生 的 关系 状况 如何 ？	2004 年 以后 入学 的 学生 的 关系 状况 如何	2004 年 后 入学 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 出生 在 当天 或 之后 爱丽丝 的 人 辞掉 了 工作	爱丽丝 辞职 当天 或 之后 出生 的 人	出生 在 爱丽丝 离职 当天 或 之后 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) )
一名 工人 于 2004 年 或 之前 开始	2004 年 或 以前 开始 工作 的 工人	2004 年 或 以前 开始 工作 的 工人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
人们 有 多于 两种 关系 的 地位	什么 人有 两种 以上 的 关系 状态	什么 人有 两个 以上 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string > ) ( number 2 ) ) )
爱丽丝 停止 工作 后 停止 上学 的 人	爱丽丝 停止 工作 后 停止 上学 的 人	那些 在 爱丽丝 停止 工作 后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪所 大学 做过 爱尔兰 学习 计算机科学	爱丽丝 在 哪 所 大学 学习 计算机科学	爱丽丝 在 哪 所 大学 学习 计算机科学	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string university ) ) )
那些 在 爱丽丝 之前 或 之前 完成学业 的 人	在 爱丽丝 上学 的 同时 或 之前 完成学业 的 人	和 爱丽丝 同时 或 在 她 之前 完成学业 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	爱丽丝 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) )
与 alice 高度 相同 或 更 短 的 人	和 爱丽丝 一样 高 或 比 爱丽丝 矮 的 人	和 爱丽丝 一样 高 或 比 她 矮 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
那些 在 爱丽丝 完成 时 完成 的 学生	爱丽丝 完成 时 完成 的 学生	爱丽丝 完成 的 时候 学生 们 已经 完成 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开始 日期 是 2004 年 之后	2004 年 以后 入学 的 学生	2004 年 以后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 开始 的 学生 的 出生 城市 是 什么	2004 年 以前 开始 的 学生 的 出生 城市 是 什么	哪些 是 2004 年 以前 入学 的 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找 我 一个 项目经理 或 软件 工程师	给 我 找个 项目经理 或 软件 工程师	给 我 找 一个 程序 经理 或 软件 工程师	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
找到 只有 一个 性别 的 人	找到 只有 一个 性别 的 人	找到 那些 只有 一种 性别 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string gender ) ) )
一个 至少 在 2004 年 开始 的 学生 的 朋友	一个 至少 从 2004 年 开始 的 学生 的 朋友	一个 学生 的 朋友 ， 他 至少 开始 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 一个 学习 领域 的 学生	找到 一个 学习 领域 的 学生	找 一个 只学 一个 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 出生 的 所有人 的 朋友	2004 年 出生 的 所有人 的 朋友	所有 2004 年 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ) )
什么 人 是 一个 不为 mckinsey 工作 的 员工 的 朋友	什么 人 是 不 为 麦肯锡 工作 的 员工 的 朋友 ？	什么 人会 和 不 在 麦肯锡 工作 的 员工 成为 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 出 生于 2004 年	2004 年 出生 的 人	2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
到 2004 年 完成学业 的 学生	2004 年 毕业 的 学生	2004 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 以前 的 职位 少于 两个	哪个 雇员 以前 的 职称 少于 两个	什么 员工 以前 的 工作 头衔 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 alice 具有 相同 关系 身份 的 人	和 爱丽丝 有 同样 关系 的 人	和 爱丽丝 有 同样 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
与 2004 年 结束 日期 的 员工 有 什么样 的 朋友	哪些 人 与 2004 年 以后 结束 工作 的 员工 是 朋友 ？	那些 员工 的 离职 日期 晚于 2004 年 的 人 是 多么 了不起 的 朋友 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 出生日期 或 之后 开始 的 员工	在 爱丽丝 生日 当天 或 之后 开始 工作 的 员工	在 爱丽丝 生日 当天 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 身高 180 厘米 的 人 的 关系 状况	身高 180 厘米 的 人 的 关系 状况 如何	一个 身高 180 厘米 的 人 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 2004 年 或 2010 年 开始 的 学生	寻找 2004 年 或 2010 年 入学 的 学生	查找 2004 年 或 2010 年 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 出 生于 2004 年 的 人	2004 年 出生 的 人	2004 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 我 在 爱丽丝 开始 约会 后 不再 受雇 的 员工	帮 我 找 那些 在 爱丽丝 开始 工作 后 就 不再 工作 的 员工	给 我 找 一些 alice 开始 工作 后 就 失业 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
告诉 我 2004 年 之前 或 之后 的 人们 出生 在 哪个 城市	告诉 我 2004 年 之前 或 之后 出生 的 人 是 在 哪个 城市 出生 的	告诉 我 哪些 城市 的 人 在 2004 年 出生 之前 或 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 开始 学生 的 朋友	他 是 一个 学生 的 朋友	谁 是 一个 开始 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 出生地 不是 从 2004 年 开始 的	2004 年 未 开学 学生 出生地	生源 地 不 在 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
给 棕色 大学 的 学生 起名	说出 布朗 大学 学生 的 名字	说出 布朗 大学 学生 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.concat en.university.brown en.university.ucla ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 与 alice 共享 同一 生日 的 人 ， 身高 180 厘米	找 和 爱丽丝 同一个 生日 ， 身高 180 厘米 的 人	找到 和 爱丽丝 同一天 生日 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
什么 学生 的 结束 日期 晚于 爱丽丝 的 出生日期	哪个 学生 的 结束 日期 比 爱丽丝 的 生日 晚	哪个 学生 的 结业 日期 比 爱丽丝 的 生日 还 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 之前 开始 工作 的 人	2004 年 以前 开始 工作 的 人	2004 年 以前 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 开始 工作 后 停止 上学 的 人	爱丽丝 开始 工作 后 停止 上学 的 人	那些 在 爱丽丝 开始 工作 后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 不 等于 2004 的 学生 的 性别	查找 结束 日期 不 等于 2004 年 的 学生 的 性别	找到 一个 截止 日期 不 等于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 员工 的 职称 少于 两个	哪个 员工 的 职称 少于 两个	什么 员工 拥有 少于 两个 职位 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
雇佣 爱丽丝 之前 辞职 的 员工	在 爱丽丝 被 雇佣 前 辞职 的 雇员	在 alice 被 雇佣 之前 就 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 没有 在 麦肯锡 工作 的 员工 朋友	找 不 在 麦肯锡 工作 的 员工 朋友	找 一些 不 在 麦肯锡 工作 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 和 艾丽斯 学生 一起 去 同一 所 大学	什么 学生 和 爱丽丝 上 同一 所 大学	学生 们 和 学生 爱丽丝 上 的 是 同一 所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 人 拥有 最多 的 关系 状态	什么 人 拥有 最多 的 关系 状态	什么 人 拥有 最多 的 感情 状态	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( string relationship_status ) ) )
哪个 城市 是 至少 在 2004 年 结束 的 学生 出生地	学生 出生地 是 哪个 城市 ， 至少 在 2004 年 结束	2004 年 结束 的 学生 的 出生地 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
查找 开始 日期 不是 2004 的 员工	查找 开始 日期 不是 2004 年 的 员工	寻找 那些 工作 开始 日期 不是 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 员工 在 爱丽丝 出生 后 开始	爱丽丝 出生 后 的 雇员	爱丽丝 出生 后 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
同一天 辞职 的 员工 爱丽丝 开始 了 她 的 工作	在 爱丽丝 开始 工作 的 同一天 辞职 的 员工	在 alice 开始 工作 的 同一天 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 不是 软件 工程师	哪个 雇员 不是 软件 工程师	哪个 雇员 不是 软件 工程师	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 之前 开始 的 朋友	2004 年 以前 开始 工作 的 朋友	一个 2004 年 以前 开始 创业 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 开始 结束 的 学生 是 什么 性别	从 2004 年 起 毕业 的 学生 是 什么 性别	2004 年 毕业 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 停学 的 时候 开始 工作 的 人	爱丽丝 辍学 时 开始 工作 的 人	爱丽丝 辍学 后 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 的 起始 日期 与 alice 相同	哪个 雇员 的 开始 日期 和 爱丽丝 一样	哪个 员工 的 开始 日期 和 alice 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 在 2004 年 之前 的 员工 的 关系 状态	2004 年前 入职 员工 关系 状况	2004 年 以前 入职 员工 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 多 朋友 的 人	朋友 最多 的 人	拥有 最 多 朋友 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
在 2004 年 或 之前 完成学业 的 人 是 什么 性别	2004 年 或 之前 完成学业 的 人 是 什么 性别	2004 年 或 以前 毕业 的 人 是 什么 性别 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 什么 时候 从 棕色 大学毕业	爱丽丝 什么 时候 从 布朗 大学毕业 的	爱丽丝 什么 时候 从 布朗 大学毕业 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
2004 年 开始 的 学生 的 出生地 是 什么 ？	这名 2004 年 入学 的 学生 的 出生地 是 什么 ？	2004 年 入学 的 学生 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 低于 爱丽丝 生日 的 员工	找到 结束 日期 小于 爱丽丝 生日 的 员工	查找 结束 日期 小于 alice 生日 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
拥有 最 多 职称 的 人	职称 最多 的 人	拥有 最 多 头衔 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 员工 爱丽丝 开始 日期 之前 开始 的 员工	在 雇员 alice 的 开始 日期 之前 开始 工作 的 雇员	在 雇员 alice 的 开始 日期 之前 开始 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 在 纽约 出生 的 人 的 朋友	找到 在 纽约 出生 的 人 的 朋友	寻找 在 纽约 出生 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找到 超过 两个 人 分享 的 性别	找出 两个 人 以上 共同 拥有 的 性别	找出 两个 人 以上 的 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
学生 的 开学 日期 不早 于 爱丽丝 的 结束 日期	什么 学生 的 开始 日期 不早 于 爱丽丝 的 结束 日期	什么 学生 的 开始 日期 不早 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 开始 了 爱丽丝 的 出生日期	哪个 学生 是从 爱丽丝 的 生日 开始 的	哪些 学生 是 在 爱丽丝 生日 那天 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 爱丽丝 之前 开始	哪个 学生 在 爱丽丝 之前 就 开始 了	哪些 学生 比 爱丽丝 先 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 的 开始 日期 不早 于 爱丽丝 的 出生日期	哪个 雇员 的 开始 日期 不早 于 爱丽丝 的 生日	什么 员工 的 入职 日期 不早 于 爱丽斯 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 后 学生 的 关系 状况	2004 年 后 结业 学生 关系 状况 分析	2004 年 以后 结束 恋爱 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
结束 日期 为 2004 年 或 以后 的 学生 的 性别 是 什么	结束 日期 是 2004 年 或 更 晚 的 学生 是 什么 性别	2004 年 或 以后 毕业 的 学生 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 2004 年 之前 开始 工作 的 人 的 朋友	谁 是 2004 年 以前 开始 工作 的 人 的 朋友 ？	谁 是 2004 年 以前 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
任何人 都 有 类似 的 关系 ， 任何人 登录	任何人 与 任何 登录 的 人 都 有 类似 的 关系	任何人 都 有 与 登录 者 相似 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
谁 在 学习 不到 两件事	学习 不到 两件事 的 人	谁 学习 不到 两件事	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 开始 做 员工	爱丽丝 什么 时候 开始 当 雇员 的	爱丽斯 什么 时候 开始 受雇 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
哪些 人有 两个 以上 的 性别	两个 以上 的 性别	哪些 人有 多于 两种 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
说出 一个 身高 180 厘米 的 人 ， 他 是 爱丽丝 的 朋友	说出 一个 180 厘米 的 人 和 爱丽丝 是 朋友	说出 一个 180 厘米 高 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
哪些 学生 不早 于 爱丽丝 的 最后 一天 工作	哪个 学生 不早 于 爱丽丝 最后 一天 上班	哪些 学生 在 爱丽丝 最后 一天 上班 之前 就 开始 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学习 领域 是 计算机科学 或 历史 的 学生	学习 计算机科学 或 历史 的 学生	主修 计算机科学 或 历史 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 完成学业 的 人 的 关系 状况 如何 ？	2004 年 以后 毕业 的 人 的 关系 状况 如何	2004 年 以后 毕业 的 人 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 学生 爱丽丝 开始 的 那天 或 之前 离开 的 员工	在 学生 爱丽丝 开始 上学 当天 或 之前 离开 的 雇员	在 爱丽丝 上学 的 那天 或 之前 离开 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
alice 没有 声称 什么 关系 状态	艾丽斯 没有 声明 什么 关系 状态	爱丽斯 没有 声明 什么 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
2004 年 出生 的 人 身高 180 厘米	2004 年 出生 ， 身高 180 厘米 的 人	出 生于 2004 年 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 在 爱丽丝 结束 后 结束	员工 在 Alice 结束 后 结束	员工 在 alice 结束 后 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 我 爱丽丝 的 男性 朋友 之一	给 我 找个 爱丽丝 的 男朋友	帮 我 找 一个 爱丽斯 的 男性 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string friend ) ( string = ) en.person.alice ) )
谁 是 至少 2004 年 的 雇员 的 朋友	他 和 一个 至少 2004 年 的 员工 是 朋友	谁 与 至少 2004 年 的 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 没有 上 过 棕色 大学 的 学生 的 关系	没有 上 布朗 大学 的 学生 的 关系 是 什么	没有 上 布朗 大学 的 学生 是 什么 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 那些 没有 受雇 于 麦肯锡 的 人 的 朋友	那些 不是 麦肯锡 雇员 的 朋友	那些 没有 被 麦肯锡 雇佣 的 人 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
很 高兴 我 的 朋友 们 在 2003 年 之后 加入 了 他们 的 工作	感谢 2003 年 后 加入 工作 的 朋友 们	那些 在 2003 年 以后 才 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 或 之前 开始 的 雇员 出生地	2004 年 及 以前 员工 出生地	2004 年 或 之前 入职 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 的 性别 ， 其 开始 日期 至少 为 2004 年	开始 日期 至少 为 2004 年 的 员工 性别	入职 日期 不少 于 2004 年 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 做 了 爱丽丝 在 2004 年 辞职	艾丽斯 在 2004 年 辞掉 了 谁 的 工作	2004 年 爱丽丝 为 谁 辞职	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employer ) ) )
在 爱丽丝 的 第一天 前 找到 最后 几天 的 学生	找到 爱丽丝 第一天 之前 最后 几天 的 学生	找出 爱丽丝 开学 前 最后 几天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 有着 相同 关系 的 人	她 和 爱丽丝 有 同样 的 关系	谁 拥有 和 爱丽丝 一样 的 感情 地位	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.getProperty en.person.alice ( string relationship_status ) ) ) )
身高 180 厘米 ， 结束 日期 为 2004 年	他 有 180 厘米 高 ， 截止 日期 是 2004 年	谁 的 身高 是 180 厘米 ， 最后 期限 是 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
职称 不是 软件 工程师 的 员工 的 性别	非 软件 工程师 的 性别	非 软件 工程师 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 所有 与 爱丽丝 没有 关系 的 人	找 我 所有 和 爱丽丝 没有 关系 的 人	给 我 找 所有 和 爱丽丝 没有 恋爱 关系 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string ! = ) en.person.alice ) )
有 一个 朋友 在 2004 年 以外 的 一年 开始 上学 的 人	有 朋友 在 2004 年 以外 的 一年 里 开始 上学 的 人	有 朋友 在 2004 年 以外 的 一年 开始 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 在 纽约 出生 的 180 厘米 的 人	找到 每个 出生 在 纽约 的 人 谁 是 180 厘米	找到 每个 在 纽约 出生 的 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 最 接近 alice 雇用 日期 的 员工	找到 最 接近 爱丽丝 被 雇佣 日期 的 雇员	找出 最 接近 alice 被 雇用 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 或 之后 开始 的 员工 朋友	寻找 2004 年 或 之后 开始 工作 的 员工 的 朋友	找 一些 2004 年 或 之后 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪些 学生 和 爱丽丝 一样 去 大学	哪些 学生 和 爱丽丝 上 同一 所 大学	哪些 学生 和 爱丽丝 上 同一 所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 以后 开始 的 员工	2004 年 后 开始 工作 的 员工	2004 年 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学习 计算机科学 的 人 身高 180 厘米	学习 计算机科学 的 人 有 180 厘米 高	谁 学习 计算机科学 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
谁 是 不 主修 计算机科学 的 学生 的 出生地	谁 是非 计算机专业 学生 的 出生地	非 计算机科学 专业 学生 的 出生地 是 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
软件 工程师 或 项目经理	软件 工程师 或 项目经理	软件 工程师 或 项目经理	( call SW.listValue ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) )
谁 是 2004 年 以后 停止 工作 的 人 的 朋友	谁 是 2004 年 后 停止 工作 的 人 的 朋友 ？	谁 是 2004 年 后 失业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 后 停止 上学 的 人	爱丽丝 出生 后 辍学 的 人	爱丽丝 出生 后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 2004 年 之后 或 2010 年 之后 辞职	哪些 员工 在 2004 年 或 2010 年 后 辞职	哪些 员工 在 2004 年 后 辞职 ， 哪些 在 2010 年 后 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 更 早 开始 的 学生 的 性别 是 什么	2004 年 或 更 早 入学 的 学生 的 性别	2004 年 或 更 早 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 爱丽丝 出生 前 加入 学业 的 人	找到 爱丽丝 出生 前 加入 他们 学习 的 人	找出 爱丽丝 出生 前 参加 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 最早 开始 上学	哪个 学生 最早 开始 上学	哪个 学生 最早 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
命名 在 学生 名为 alice 之前 开始 的 员工	说出 一个 在 学生 叫 爱丽丝 之前 就 开始 工作 的 雇员 的 名字	说出 一个 在 叫 爱丽丝 的 学生 之前 开始 工作 的 雇员 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 在 2004 年 之前 结束	2004 年 以前 毕业 的 学生	一名 学生 在 2004 年 之前 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
不是 男性 的 人	不是 男性 的 人	不是 男性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string ! = ) en.gender.male ) )
什么 人比 爱丽丝 更 年轻	哪个 人比 爱丽丝 年轻	谁 比 爱丽丝 年轻	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) )
开始 约会 比 艾丽斯 小 的 学生	一个 比 爱丽丝 小 的 学生	比 爱丽丝 小 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开学 日期 最长 的 学生	开始 日期 最大 的 学生	开始 日期 最大 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
至少 在 爱丽丝 完成 之前 开始 的 学生	至少 在 爱丽丝 完成 之前 开始 的 学生	至少 在 爱丽丝 完成 之前 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开始 日期 不 在 员工 爱丽丝 的 开始 日期 之前	开始 日期 不早 于 雇员 alice 开始 日期 的 学生	开始 日期 未 早于 雇员 爱丽丝 开始 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 爱丽丝 开始 学习 计算机科学 的 日期	找出 爱丽丝 开始 学习 计算机科学 的 日期	找出 爱丽丝 开始 学习 计算机科学 的 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
研究 计算机科学 以外 领域 的 人 的 朋友	研究 计算机科学 以外 领域 的 人 的 朋友	研究 计算机科学 以外 领域 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 出 生于 2004 年 ， 是 爱丽丝 的 朋友	她 出 生于 2004 年 ， 是 爱丽丝 的 朋友	谁 出 生于 2004 年 ， 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string friend ) ( string = ) en.person.alice ) )
员工 的 开始 日期 与 学生 爱丽丝 的 开始 日期 相同	开始 日期 与 学生 爱丽丝 相同 的 员工	雇员 的 入职 日期 与 学生 alice 的 入职 日期 相同	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 身高 180 厘米 ， 是 爱丽丝 的 朋友	哪个 人 180 厘米 高 ， 是 爱丽丝 的 朋友	什么 人 180 厘米 高 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 没有 软件 工程师 头衔 的 员工 朋友	找 没有 软件 工程师 头衔 的 员工 的 朋友	寻找 没有 软件 工程师 头衔 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
人们 的 生日 是 2004 年 ， 身高 是 180 厘米	什么 人 的 生日 是 2004 年 ， 身高 是 180 厘米	什么 人 的 生日 是 2004 年 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
谁 有 一个 2004 年 以后 开始 的 关系	2004 年 后 开始 交往 的 人	谁 的 恋情 始于 2004 年 之后	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
那些 在 2004 年 或 2010 年 停止 工作 的 人	2004 年 或 2010 年 停止 工作 的 人	在 2004 年 或 2010 年 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之前 辞职 的 人 的 朋友	2004 年前 辞职 的 朋友	2004 年 以前 辞职 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 2004 年 之前 完成学业 的 人 的 朋友	2004 年 以前 完成学业 的 朋友	在 2004 年 之前 完成学业 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 在 2004 年 到 2010 年 之间 有 一个 生日	什么 人 的 生日 在 2004 年 到 2010 年 之间	什么 人 的 生日 是 在 2004 年 到 2010 年 之间	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
找到 身高 180 或 200 厘米 的 人	找到 身高 180 或 200 厘米 的 人	找到 身高 180 或 200 厘米 的 人	( call SW.listValue ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) )
那些 没有 在 2004 年 开始 工作 的 人	2004 年 没有 开始 工作 的 人	劳动 人民 在 2004 年 没有 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 2004 年 之后 或 2010 年 之后 停止 上学 的 人	2004 年 或 2010 年 后 辍学 的 人	在 2004 年 或 2010 年 之后 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 计算机科学 的 学生 的 关系 状况 是 什么	非 计算机专业 学生 的 关系 状况	非 计算机专业 学生 的 人际关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
人短于 180 厘米	180 厘米 以下 的 人	身高 低于 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
在 一段 感情 中 找到 我 2 个人	给 我 找 两个 人 谈恋爱	给 我 找 两个 人 谈恋爱	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( number 2 ) ) )
生日 的 人 是 爱丽丝 毕业生	爱丽丝 毕业 前 生日 的 人	在 爱丽丝 毕业 前 过生日 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
当 爱丽丝 辞掉 工作 时 开始 上学 的 学生	爱丽丝 辞职 时 开始 上学 的 学生	爱丽丝 辞职 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
没有 进入 3 种 关系 的 人	没有 经历 过 三次 恋爱 的 人	没有 谈过 三次 恋爱 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string < ) ( number 2 ) ) )
找到 与 登录 人员 性别 相同 的 人	查找 与 登录 者 性别 相同 的 人	找到 与 登录 者 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
与 爱丽丝 单身 和 朋友 的 人	单身 的 人 和 爱丽丝 的 朋友	单身 人士 和 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string friend ) ( string = ) en.person.alice ) )
谁 是 我 网络 中 最 老 的 人	谁 是 我 网络 中 年龄 最大 的 人	谁 是 我 社交 网络 中 最 年长 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
人们 有 一个 纽约 的 出生地 和 180 厘米 的 高度	什么 人 的 出生地 是 纽约 ， 身高 180 厘米	什么 人 的 出生地 是 纽约 ， 身高 是 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 在 爱丽丝 之后 或 同时 完成	在 爱丽丝 之前 或 之后 完成 的 学生	学生 完成 同时代 或 之后 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 后 学生 的 朋友 们 完成 了	2004 年 后 结业 的 学生 之友	学生 之友 2004 年 后 毕业	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 180 厘米 高 的 人 出生 在 纽约	找到 在 纽约 出生 的 180 厘米 高 的 人	找出 出生 在 纽约 的 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
学习 领域 最少 的 学生	学习 领域 最少 的 学生	学习 领域 最少 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
alice 的 哪个 朋友 在线	爱丽丝 的 哪个 朋友 在 网上	爱丽丝 的 哪个 朋友 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string logged_in ) ) )
学习 领域 最小 的 学生	学习 领域 最小 的 学生	学习 领域 最小 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那天 结束 学校 的 学生 爱丽丝 出生 了	爱丽丝 出生 那天 放学 的 学生	学生 们 在 爱丽丝 出生 的 那天 就 放学 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 单身 的 爱丽丝 的 朋友	找 爱丽丝 的 单身 朋友	寻找 爱丽丝 的 单身 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪个 员工 在 爱丽丝 出生 前 就 辞职 了	哪个 雇员 在 爱丽丝 出生 前 就 辞职 了	爱丽斯 出生 前 哪个 员工 辞职 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
一个 学生 没有 在 2004 年 结束	2004 年 还 没 毕业 的 学生	一个 2004 年 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 我 在 2004 年 之前 离开 的 学生 的 朋友	给 我 找 2004 年前 离开 的 学生 的 朋友	给 我 找 一个 2004 年 以前 要 离开 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
任何 爱丽丝 的 朋友	任何 爱丽丝 的 朋友	任何 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 2004 年 以后 开始 日期 的 员工	查找 2004 年 以后 开始 工作 的 员工	寻找 2004 年 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停下来 开始 上学 的 人	当 爱丽丝 停下 来时 开始 上学 的 人	当 爱丽丝 停学 时 ， 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 的 人 在 纽约 出生	有 在 纽约 出生 的 朋友 的 人	有 朋友 在 纽约 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
爱丽丝 什么 时候 辞去 了 麦肯锡 的 工作	爱丽丝 什么 时候 辞去 麦肯锡 的 工作	爱丽丝 什么 时候 从 麦肯锡 辞职 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string employment_end_date ) ) )
爱丽丝 的 出生地	爱丽丝 的 出生地	爱丽丝 的 出生地	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )
找到 所有 不是 软件 工程师 的 朋友	找到 所有 不是 软件 工程师 的 朋友	找到 所有 不是 软件 工程师 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
alice 的 职称 是 什么 ？	爱丽丝 的 职称 是 什么	爱丽斯 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
2004 年 没有 开始 的 员工 的 性别 是 什么	2004 年 没有 开始 工作 的 员工 的 性别 是 什么 ？	2004 年 没有 开始 工作 的 员工 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找 不 上 棕色 大学 的 学生 的 朋友	找 不 上 布朗 大学 的 学生 的 朋友	寻找 没有 上 布朗 大学 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 上学 之前 出生 的 人	爱丽丝 上学 前 出生 的 人	出生 在 爱丽丝 上学 之前 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
查找 开始 日期 早 于 员工 alice 结束 日期 的 员工	查找 开始 日期 早 于 员工 alice 结束 日期 的 员工	查找 雇员 的 开始 日期 早 于 雇员 alice 的 结束 日期 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
说出 一个 180 厘米 高 的 人 是 爱丽丝 的 朋友	说出 一个 180 厘米 高 的 人 是 爱丽丝 的 朋友	说出 一个 180 厘米 高 的 人 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
结束 日期 早于 2004 年 的 员工 的 性别 是 什么	截止 日期 早于 2004 年 的 员工 的 性别	如果 雇员 的 离职 日期 早于 2004 年 ， 他 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
拥有 最 多 研究 领域 的 学生	研究 领域 最多 的 学生	拥有 最 多 研究 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string field_of_study ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
至少 有 两种 关系 状态 的 人	至少 有 两种 关系 状态 的 人	至少 有 两种 关系 状态 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
说出 一个 身高 180 厘米 ， 于 2004 年 退出 的 人	说出 一个 在 2004 年 辞职 的 180 厘米 高 的 人 的 名字	说出 一个 身高 180 厘米 的 人 在 2004 年 辞职	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
什么 是 开始 日期 不是 2004 年 的 员工 的 关系 状态	开始 日期 不是 2004 年 的 员工 的 关系 状况 如何	开始 日期 不是 2004 年 的 员工 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 两个 出生地 的 人	有 两个 出生地 的 人	有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( number 2 ) ) )
哪个 学生 结束 日期 与 爱丽丝 同时 发生	哪个 学生 的 结束 日期 和 爱丽丝 同时 发生	哪些 学生 结束 约会 的 时间 和 爱丽丝 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 单身 的 男性	找到 单身 男性	寻找 单身 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
什么 员工 不 超过 两个 职称	哪个 雇员 的 职称 不 超过 两个	什么 员工 有 两个 以上 的 工作 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 员工 的 职称 不 超过 2 个	哪些 员工 的 职称 不 超过 2 个	哪些 员工 拥有 不 超过 两个 职位 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string job_title ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 与 单身 人士 成为 朋友 的 人	与 单身 人士 交朋友 的 人	与 单身 人士 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
2004 年 以后 开始 的 员工 的 关系 状况 如何	2004 年 以后 开始 工作 的 员工 的 关系 状况 如何	2004 年 后 入职 的 员工 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
单身 性别 的 人	单身汉	单性 别的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string < ) ( number 2 ) ) )
爱丽丝 出生 在 哪里	爱丽丝 出生 在 哪里	爱丽丝 出生 在 什么 地方 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
找到 与 alice 或 bob 具有 相同 性别 的 人	找 和 爱丽丝 或 鲍勃 性别 相同 的 人	找到 和 alice 或 bob 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
找到 学习 领域 不是 计算机科学 的 学生 的 性别	找出 非 计算机专业 学生 的 性别	找出 非 计算机科学 专业 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 我 所有 alice 的 朋友 ， 他们 目前 在线	帮 我 找到 爱丽丝 所有 的 朋友	帮 我 找到 alice 所有 在线 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string friend ) ( string = ) en.person.alice ) )
有 朋友 在 2004 年 或 之后 开始 上学 的 人	有 朋友 在 2004 年 或 之后 开始 上学 的 人	有 朋友 在 2004 年 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2003 年 或 之前 退出 的 员工	2003 年 或 更 早 离职 的 员工	2003 年 或 更 早 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 是 在线 人 的 朋友	什么 人 是 网上 人 的 朋友	什么 人 是 网友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
开始 爱丽丝 生日 的 学生	从 爱丽丝 生日 开始 的 学生	学生 们 从 爱丽丝 的 生日 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 身高 180 厘米 的 人 的 出生地	身高 180 厘米 的 人 的 出生地 是 哪里	身高 180 厘米 的 人 出生 在 什么 地方	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
不迟于 2004 年 开始 的 员工 的 性别 是 什么	不迟于 2004 年 开始 工作 的 员工 的 性别 是 什么	不迟于 2004 年入 职 的 雇员 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 身高 不 超过 爱丽丝 的 人	找 身高 不 超过 爱丽丝 的 人	找 一些 身高 不比 爱丽丝 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
爱丽丝 朋友 的 朋友	爱丽丝 朋友 的 朋友	爱丽丝 朋友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
给 没有 在 布朗 大学 学习 的 学生 的 朋友 说出 一个 名字	说出 一个 没有 在 布朗 大学 读书 的 学生 的 朋友 的 名字	说出 一个 没有 在 布朗 大学 学习 的 学生 的 朋友 的 名字	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 拥有 最少 的 关系 状态	关系 状态 最少 的 人	谁 的 关系 状态 最少	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( string relationship_status ) ) )
员工 的 开始 日期 最短 为 2004 年	开始 日期 至少 为 2004 年 的 员工	2004 年 或 以上 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开学 日期 不 等于 2004 年 的 学生 的 关系 状态 是 什么	开始 日期 不 等于 2004 年 的 学生 的 关系 状况 如何	开始 日期 不 等于 2004 年 的 学生 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 或 之前 完成 同期 学业 的 学生 的 出生地	2004 年 以前 完成学业 的 学生 出生地	2004 年 以前 完成学业 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 至少 是 2004 年 或 2010 年	哪个 学生 的 截止 日期 至少 是 2004 年 或 2010 年	哪个 学生 的 毕业 日期 至少 是 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没 毕业 的 学生 的 关系 状况 如何 ？	2004 年 未 毕业 学生 的 恋爱 状况	2004 年 未 毕业 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 出生 在 哪里	爱丽丝 出生 在 哪里	爱丽丝 出生 在 什么 地方 ?	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) en.person.alice ) )
那些 与 2004 年 后 停止 上学 的 人 成为 朋友 的 人	与 2004 年 后 辍学 的 人 交朋友 的 人	与 2004 年 后 辍学 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 之后 开始 的 学生	从 爱丽丝 开始 的 学生	跟 在 爱丽丝 后面 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
出生 城市 的 学生 ， 其 开学 日期 是 2004 年 之后	2004 年 以后 学生 出生 城市	2004 年 以后 入学 的 学生 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 就读 过 最少 的 大学	哪个 学生 上 过 最少 的 大学	哪个 学生 上 的 大学 最少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
身高 180 厘米 的 人 的 关系 状况	180cm 高者 的 人际关系 状况	身高 180 厘米 的 人 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 最短 的 人	找到 最矮 的 人	找到 最矮 的 人	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.ensureNumericProperty ( string height ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 员工 的 朋友	在 2004 年 或 之前 的 最后 一天 找到 员工 的 朋友	找到 2004 年 或 之前 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 与 员工 结交 的 朋友 ， 他们 的 结束 日期 不晚 于 2004 年	找 那些 与 不 迟于 2004 年 结束 日期 的 员工 交朋友 的 人	找 一些 员工 的 朋友 ， 他们 的 离职 日期 不晚 于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
出 生于 2004 年 并 在 纽约 出生 的 人	2004 年 出生 在 纽约 的 人	2004 年 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 在 2004 年 或 2010 年 之前 辞职 的 员工	寻找 2004 年 或 2010 年前 辞职 的 员工	寻找 在 2004 年 或 2010 年 之前 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
180 厘米 高 的 人 的 性别	身高 180 厘米 者 性别	身高 180 公分 者 之 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
学生 的 结束 日期 名称 是 2004 年 还是 2010 年	哪些 学生 的 截止 日期 是 2004 年 或 2010 年	哪些 学生 的 截止 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 和 爱丽丝 同一天 开始	哪个 雇员 和 爱丽丝 是 同一天 开始 工作 的	哪位 雇员 和 爱丽丝 是 同一天 上班 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
从 2004 年 或 之前 开始 ， 学生 的 关系 状况 如何	2004 年 前后 学生 的 恋爱 状况	2004 年 或 以前 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人 的 生日 最多 与 爱丽丝 的 生日 相同	哪个 人 的 生日 最多 是 爱丽丝 的 生日	什么 人 的 生日 最多 和 爱丽丝 的 生日 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) )
找到 为 大多数 雇主 工作 的 员工	找到 为 大多数 雇主 工作 的 员工	找到 为 大多数 雇主 工作 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string employer ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
与 爱丽丝 同一天 退出 的 员工	与 爱丽丝 同一天 辞职 的 员工	和 alice 同一天 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 单身 ， 出 生于 2004 年	2004 年 出生 的 单身汉	谁 是 2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 2004 年 以外 开课日期 的 学生	查找 起始 日期 不是 2004 年 的 学生	查找 开始 日期 不是 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 出生 后 开始 上学 的 人	爱丽丝 出生 后 开始 上学 的 人	爱丽丝 出生 后 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
任何 一个 男性 的 朋友	任何 男人 的 朋友	任何 男性 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
哪些 学生 不早 于 2004 年 开学	哪些 学生 不早 于 2004 年 开始	哪些 学生 不早 于 2004 年 入学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 2004 年 或 之后 开始 的 员工 成为 朋友 的 人	与 2004 年 或 之后 开始 工作 的 员工 成为 朋友 的 人	与 2004 年 或 之后 入职 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 是 alice 的 职位 ， 雇主 是 麦肯锡	艾丽斯 的 雇主 是 麦肯锡 ， 她 的 职称 是 什么 ？	爱丽丝 的 雇主 是 麦肯锡 ， 她 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ( string = ) en.company.mckinsey ) ( string job_title ) ) )
找到 在 纽约 出生 的 人 的 性别	找出 在 纽约 出生 的 人 的 性别	找出 在 纽约 出生 的 人 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ) )
找到 我 登录 的 朋友	帮 我 找 登录 的 人 的 朋友	为 我 找到 登录 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
目前 在线 的 人 的 朋友	当前 在线 的 好友	当前 在线 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
是 什么 大学 做 爱丽丝 参加	爱丽丝 上 什么 大学	爱丽丝 上 的 是 哪 所 大学	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ) )
哪些 人 是 2004 年 之前 开始 的 员工 的 朋友	哪些 人 与 2004 年 以前 开始 工作 的 员工 是 朋友 ？	哪些 人 和 2004 年 以前 的 员工 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 没有 180 厘米 的 高度	什么 人 身高 不到 180 厘米	什么 人 没有 180 厘米 的 身高	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string ! = ) ( number 180 en.cm ) ) )
谁 是 2004 年 或 之后 开始 的 员工 的 朋友	与 2004 年 或 以后 开始 工作 的 员工 的 朋友	谁 是 2004 年 或 之后 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 至少 有 两个 出生地 的 人	找到 至少 有 两个 出生地 的 人	找到 至少 有 两个 出生地 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string >= ) ( number 2 ) ) )
开始 日期 最长 的 员工	开始 日期 最大 的 员工	开始 日期 最长 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 比 爱丽丝 更 高 或 更 矮 的 人	找 一个 比 爱丽丝 高 或 矮 的 人	找 一个 和 爱丽丝 一样 高 或 一样 矮 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
与 爱丽丝 身高 相同 的 人	和 爱丽丝 一样 高 的 人	和 爱丽丝 一样 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.getProperty en.person.alice ( string height ) ) ) )
找到 我 最少 朋友 的 人	给 我 找 一个 朋友 最少 的 人	给 我 找个 朋友 最少 的 人	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string min ) ( call SW.reverse ( string friend ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
谁 出生 在 纽约 和 爱丽丝 的 朋友	她 出生 在 纽约 ， 和 爱丽丝 是 朋友	谁 出生 在 纽约 ， 和 爱丽丝 是 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 员工 在 alice 之前 或 同一天 开始	寻找 与 爱丽丝 在 同一天 或 之前 开始 工作 的 员工	找到 在 alice 之前 或 同一天 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人有 两性	什么 人有 两种 性别	什么 人有 两种 性别	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string <= ) ( number 2 ) ) )
学生 的 开始 日期 在 学生 爱丽丝 的 开始 日期 之前	开始 日期 早 于 学生 爱丽丝 开始 日期 的 学生	开始 日期 在 学生 alice 开始 日期 之前 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 员工 的 开始 日期 早于 或 晚于 爱丽丝	哪个 雇员 的 开始 日期 早于 或 迟于 爱丽丝	哪位 员工 的 上班 日期 早于 或 晚于 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 最后 一天 之前 开始 的 员工	在 爱丽丝 最后 一天 之前 开始 工作 的 员工	在 爱丽丝 的 最后 一天 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
180 厘米 高 的 人 的 关系 状况 是 什么	身高 180 厘米 的 人 的 关系 状况 如何	身高 180 厘米 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
与 员工 成为 朋友 的 人 将 在 2004 年前 离职	与 将 于 2004 年 离职 的 员工 成为 朋友 的 人	与 该 员工 是 朋友 的 人 将 在 2004 年 离职	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 的 出生日期 之前 停止 上学 的 人	在 爱丽丝 出生 前 就 辍学 的 人	那些 在 爱丽丝 出生 前 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 2004 年 或 2010 年 开始 的 员工	2004 年 或 2010 年 开始 工作 的 员工	2004 年 或 2010 年入 职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 出生 的 男性	寻找 2004 年 出生 的 男性	找出 2004 年 出生 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string gender ) ( string = ) en.gender.male ) )
谁 是 员工 的 朋友 ， 其 结束 日期 大于 2004 年	谁 是 员工 的 朋友 ， 截止 日期 大于 2004 年	谁 是 员工 的 朋友 谁 的 结束 日期 大于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 开始 日期 不是 2004 年 之前	开始 日期 不早 于 2004 年 的 学生	开学 日期 未 超过 2004 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 员工 alice 结束 日期 之前 的 员工	结束 日期 早 于 员工 alice 结束 日期 的 员工	结束 日期 在 雇员 alice 结束 日期 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 最早 结束 日期 的 学生	找到 最早 结束 日期 的 学生	找到 有 最早 截止 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 员工 在 2004 年 或 2010 年 之前 就 开始 了	哪些 员工 在 2004 年 或 2010 年 才 开始 工作	哪些 员工 是 在 2004 年 或 2010 年 之前 入职 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪名 员工 早于 2004 年 开始	哪个 员工 在 2004 年 之前 开始 工作	哪位 员工 的 入职 时间 早于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 与 alice 或 bob 成为 朋友 的 人	找 一些 和 爱丽丝 或 鲍勃 是 朋友 的 人	找 一些 和 爱丽丝 或 鲍勃 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
开始 日期 在 2004 年 之后 的 学生 的 关系 状态	2004 年 以后 学生 关系 状况	开始 日期 在 2004 年 以后 的 学生 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 开始 的 所有 学生 的 关系 状况	2004 年 以后 入学 学生 的 人际关系 状况	2004 年 后 入学 的 所有 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 的 朋友 身高 180 厘米	爱丽丝 的 朋友 有 180 厘米 高	爱丽丝 的 朋友 们 有 180 厘米 高	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 爱丽丝 之后 出生 的 人 开始 工作	爱丽丝 开始 工作 后 出生 的 人	在 爱丽丝 开始 工作 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
哪些 员工 在 爱丽丝 之前 开始 就业	在 爱丽丝 之前 哪些 雇员 开始 工作	哪些 员工 在 alice 之前 就 开始 工作 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 开始 日期 不是 2004 年 的 学生 的 关系 状态	开始 日期 不 在 2004 年 的 学生 的 关系 状况 如何	如果 一个 学生 的 恋爱 日期 不是 在 2004 年 ， 那 他 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 2004 年 之前 身高 180 厘米 的 人	2004 年 以前 身高 180 厘米 的 人	2004 年 以前 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) )
最近 出生 的 人	最近 出生 的	谁 是 最近 出生 的	( call SW.listValue ( call SW.superlative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string max ) ( call SW.ensureNumericProperty ( string birthdate ) ) ) )
在 爱丽丝 开始 上学 之前 开始 的 员工	爱丽丝 上学 前 就 开始 工作 的 员工	在 alice 上学 之前 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出生 在 纽约 或 北京 的 人	在 纽约 或 北京 出生 的 人	出生 在 纽约 或 北京 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.concat en.city.new_york en.city.bejing ) ) )
在 爱丽丝 出生 前 就 开始 上学 的 人	爱丽丝 出生 前 就 开始 上学 的 人	在 爱丽丝 出生 之前 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 找到 员工 朋友 的 开始 日期	查找 2004 年 以后 开始 日期 为 的 员工 朋友	寻找 2004 年 以后 开始 工作 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
不是 软件 工程师 的 劳动 人民	不是 软件 工程师 的 工作人员	不是 软件 工程师 的 工作人员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 在 爱丽丝 开始 的 同时 完成 了	哪个 员工 在 爱丽丝 开始 工作 的 同时 完成 了 工作	哪位 员工 在 alice 开始 工作 的 同时 完成 了 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 不迟于 2004 年 的 结束 日期 的 员工 朋友	查找 结束 日期 不迟于 2004 年 的 员工 的 朋友	找到 工作 结束 日期 不晚 于 2004 年 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 所有 的 在线 单曲	帮 我 找到 所有 的 单身汉	帮 我 找到 所有 的 网络 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
那些 在 2004 年 或 之前 停止 工作 的 人 的 朋友	与 2004 年 或 之前 停止 工作 的 人 交朋友 的 人	与 在 2004 年 或 之前 停止 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 在 学生 爱丽丝 的 第一天 之后 的 员工	找到 最后 一天 在 学生 爱丽丝 第一天 之后 的 员工	找 一个 员工 的 最后 一天 正好 是 学生 alice 的 第一天 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 在 2004 年 结束 的 关系 形象	2004 年 结束 的 学生 关系 状况	一名 学生 的 恋爱 关系 在 2004 年 结束	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 之前 离开 学校 的 学生 的 出生地 在 哪里	2004 年 以前 离校 的 学生 的 出生地 在 哪里	2004 年 以前 离校 的 学生 的 出生地 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 以后 开始 的 学生 朋友	2004 年 后 开始 的 学生 之友	2004 年 后 开始 的 学生 之友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
从 2004 年 开始 的 学生 的 性别	2004 年 以前 入学 的 学生 性别	2004 年 以前 入学 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
当天 或 之前 出生 的 人 爱丽丝 开始 上学	爱丽丝 上学 当天 或 之前 出生 的 人	在 爱丽丝 上学 那天 或 之前 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
不 学习 计算机科学 的 人	不 学习 计算机科学 的 人	不 学习 计算机科学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 晚于 2004 年 的 学生 的 性别 是 什么	结束 日期 晚于 2004 年 的 学生 的 性别 是 什么	毕业 日期 晚于 2004 年 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
从 2004 年 以前 开始 与 新 员工 成为 朋友 的 人	在 2004 年 之前 与 新 员工 成为 朋友 的 人	与 新 员工 成为 朋友 的 人 在 2004 年 以前 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 爱丽丝 停止 上学 后 开始	爱丽丝 停止 上学 后 哪个 学生 开始 上学	哪个 学生 在 爱丽丝 停止 上学 后 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 或 之前 开始 工作 的 雇员 的 关系 状况	2004 年 及 以前 开始 工作 的 员工 关系 状况	2004 年 或 之前 开始 工作 的 雇员 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 结束 日期 早 于 员工 爱丽丝 的 学生	查找 结束 日期 早 于 员工 alice 的 学生	查找 比 雇员 alice 的 结束 日期 更 早 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 什么 时候 离开 2004 年	艾丽斯 2004 年 什么 时候 离开 的	2004 年 爱丽丝 什么 时候 离开 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
找到 2004 年 退出 的 所有 员工 的 出生 城市	为 2004 年 辞职 的 所有 员工 找到 出生 城市	找出 所有 在 2004 年 辞职 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
艾 莉斯 于 2004 年 开始 工作 ， 当时 她 离开 了	爱丽丝 2004 年 开始 工作 ， 她 什么 时候 离开 的	艾丽丝 2004 年 开始 工作 ， 什么 时候 离职 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_end_date ) ) )
在 2004 年 之前 开始 的 出生地 城市 的 学生	2004 年 以前 开始 的 学生 出生地 城市	2004 年 以前 入学 的 学生 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 180 厘米 ， 于 2004 年 出生 的 人	身高 180 厘米 ， 2004 年 出生	身高 180 厘米 ， 2004 年 出生	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
同一天 开始 上学 的 学生 开始 工作	在 爱丽丝 开始 工作 的 同一天 开始 上学 的 学生	同一天 开学 的 学生 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 至少 有 两个 朋友 的 人	找 至少 有 两个 朋友 的 人	找到 至少 有 两个 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
那些 不 单身 的 人	不是 单身 的 人	不是 单身 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string ! = ) en.relationship_status.single ) )
将 两个 以上 的 人 作为 他们 的 出生地 共享 时 命名 城市	以 两人 以上 的 城市 为 出生地	两个 以上 的 人 一起 居住 时 ， 说出 他们 的 出生地	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
员工 的 职位 与 员工 爱丽丝 的 职位 相同	哪些 员工 的 职称 与 员工 爱丽丝 相同	什么 雇员 的 头衔 和 雇员 爱丽丝 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 性别 是 爱丽丝 的 朋友	爱丽丝 的 朋友 是 什么 性别 的	爱丽丝 的 朋友 是 什么 性别 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
与 那些 不 为 麦肯锡 工作 的 人 交朋友 的 人	与 不 为 麦肯锡 工作 的 人 交朋友 的 人	与 不 在 麦肯锡 工作 的 人 交朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 我 在 纽约 出生 的 每个 人 都 是 单身	找 我 所有 在 纽约 出生 的 单身汉	帮 我 找到 所有 在 纽约 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
退出 爱丽丝 生日 的 员工	在 爱丽丝 生日 那天 辞职 的 雇员	在 alice 生日 那天 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 学生 在 爱丽丝 的 生日 之前 有 一个 开始 日期	哪个 学生 在 爱丽丝 生日 前有 一个 开始 的 日期	什么 学生 在 爱丽丝 的 生日 之前 就 有 开学 日期 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
生日 的 人 与 爱丽丝 的 开始 日期 最 多 相同	什么 人 的 生日 最多 和 爱丽丝 的 生日 一样	什么 人 的 生日 最多 和 爱丽丝 的 起始 日期 一样	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) )
什么 是 在 麦肯锡 不 工作 的 员工 的 关系 状态	不 在 麦肯锡 工作 的 员工 的 关系 状况 如何 ？	不 在 麦肯锡 工作 的 员工 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 城市 是 员工 的 出生地 ， 其 结束 日期 不迟于 2004 年	什么 城市 是 员工 的 出生地 ， 他们 的 结束 日期 不迟于 2004 年	哪个 城市 是 员工 的 诞生地 ? 他们 的 离职 日期 不迟于 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 180 厘米 高 的 男性	找到 180 厘米 高 的 雄性	寻找 身高 180 厘米 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string gender ) ( string = ) en.gender.male ) )
哪些 人 是 与 2004 年 没有 开始 的 员工 的 朋友	哪些 人 是 2004 年 没有 开始 工作 的 员工 的 朋友 ？	哪些 人 是 2004 年 没有 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 2004 年 或 之前 结束 的 学生 朋友	寻找 在 2004 年 或 之前 结束 的 学生 朋友	找 一些 2004 年 或 更 早 毕业 的 学生 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 员工 拥有 最多 的 职称	哪些 员工 的 职称 最 多	哪些 员工 拥有 最多 的 头衔	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string max ) ( string job_title ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 停止 工作 时 开始 上学 的 人	爱丽丝 停止 工作 时 开始 上学 的 人	当 爱丽丝 停止 工作 的 时候 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 是 我 的 朋友 谁 没有 在 2004 年 开始	我 和 哪些 2004 年 没 开始 的 学生 是 朋友	我 和 哪些 2004 年 没有 开始 的 学生 是 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
任何 已 登录 的 男性	任何 已 登录 的 男性	任何 登录 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string gender ) ( string = ) en.gender.male ) )
找到 职称 不是 软件 工程师 的 员工	寻找 职称 不是 软件 工程师 的 员工	寻找 有 职位 头衔 的 员工 ， 而 不是 软件 工程师	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 及 之后 开始 的 所有 学生	找出 2004 年 及 以后 的 所有 学生	找出 2004 年 及 之后 的 所有 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 的 开始 日期 在 爱丽丝 之前	开始 日期 早 于 爱丽丝 的 学生	在 alice 之前 开始 上课 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 不迟于 爱丽丝 的 第一天 工作	哪个 学生 不迟于 爱丽丝 上班 的 第一天 毕业	哪些 学生 不迟于 爱丽丝 第一天 上班 就 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪所 大学 做 了 180 厘米 高 的 人 参加	180 厘米 高 的 人 上 哪 所 大学	身高 180 厘米 的 人 上 的 是 哪 所 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.university ) ( string ! type ) ) ( call SW.reverse ( string university ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
180 厘米 高 的 人 的 朋友	一个 180 厘米 高 的 朋友	一个 180 厘米 高 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 alice 开始 她 的 软件 工程师 工作 的 日期	找出 爱丽丝 开始 从事 软件 工程师 工作 的 日期	找出 alice 开始 她 的 软件 工程师 工作 的 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_start_date ) ) )
2004 年 后 辞职 的 员工	2004 年 后 离职 的 员工	2004 年 后 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 工作 之前 毕业 的 学生	爱丽丝 开始 工作 前 毕业 的 学生	在 alice 开始 工作 之前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 2004 年 或 2010 年 结束	2004 年 或 2010 年 结束 的 雇员	2004 年 或 2010 年 离职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 雇员 的 朋友 ， 雇佣 结束 日期 至少 是 2004 年	谁 是 雇员 的 朋友 ， 雇佣 结束 日期 至少 是 2004 年	雇佣 截止 日期 至少 为 2004 年 的 员工 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 结束 日期 不是 2004 年 的 学生 的 所有 朋友	查找 与 结束 日期 不是 2004 年 的 学生 的 所有 朋友	找到 所有 与 学生 的 朋友 ， 截止 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 有 多 高	爱丽丝 有 多 高	爱丽丝 有 多 高	( call SW.listValue ( call SW.getProperty en.person.alice ( string height ) ) )
员工 日期 小于 2004 年 和 2010 年	日期 小于 2004 年 和 2010 年 的 员工	日期 比 2004 年 和 2010 年 短 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
当 爱丽丝 开始 上学时 开始 工作 的 人	爱丽丝 上学时 就 开始 工作 的 人	当 爱丽丝 开始 上学时 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 爱丽丝 辞去 工作 之前 雇用 的 员工	找到 爱丽丝 辞职 前 雇佣 的 员工	找出 alice 辞职 前 雇佣 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
朋友 在 2004 年 或 之前 开始 的 人	朋友 在 2004 年 或 之前 开始 交往 的 人	朋友 开始 于 2004 年 或 之前 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 的 最后 一天 工作 之后 开始 的 学生	在 爱丽丝 最后 一天 上班 后 开始 学习 的 学生	爱丽丝 工作 的 最后 一天 后 开始 工作 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 麦肯锡 工作 的 人 身高 180 厘米	他 身高 180 厘米 在 麦肯锡 工作	谁 身高 180 厘米 ， 在 麦肯锡 工作	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
身高 180 厘米 ， 以 计算机科学 为 研究 对象 的 人	以 计算机科学 为 研究 领域 的 180 厘米 高 的 人	身高 180 厘米 ， 主修 计算机科学 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
2004 年 或 之后 停学 的 人 的 性别 是 什么 ？	2004 年 或 之后 辍学 的 人 的 性别 是 什么	在 2004 年 或 之后 辍学 的 人 是 什么 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪个 学生 在 爱丽丝 毕业 后 毕业	爱丽丝 毕业 后 哪个 学生 毕业 了	爱丽丝 毕业 后 ， 哪个 学生 也 毕业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2010 年 之前 开始 的 学生	2010 年前 开始 寻找 学生	寻找 2010 年 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 之前 开始 的 员工 的 生日	查找 2004 年 以前 开始 工作 的 员工 的 出生地	查找 2004 年 以前 开始 工作 的 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 开始 工作 或 之后 开始 上学 的 人	当 爱丽丝 开始 工作 或 之后 开始 上学 的 人	那些 在 爱丽丝 开始 工作 后 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 之前 开始 工作 的 人 的 关系 状况 如何 ？	2004 年 以前 开始 工作 的 人 的 关系 状况 如何	2004 年 以前 开始 工作 的 人 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 员工 爱丽丝 做 之后 ， 员工 开始 了 什么	在 员工 alice 做 了 之后 ， 员工 开始 干什么	雇员 爱丽丝 做 了 一个 又 一个 雇员 ， 又 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
mckinsey 的 哪位 员工 身高 180 厘米	麦肯锡 哪位 员工 身高 180 厘米	麦肯锡 哪个 员工 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
2004 年 或 之后 完成 的 学生 性别	2004 年 及 以后 完成学业 的 学生 性别	2004 年 或 以后 毕业 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 是 爱丽丝 作为 软件 工程师 的 第一天	爱丽丝 做 软件 工程师 的 第一天 是 什么 时候	爱丽丝 当 软件 工程师 的 第一天 是 什么 时候	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) ( string employment_start_date ) ) )
在 爱丽丝 离开 后 开始 的 员工	爱丽丝 离开 后 开始 工作 的 员工	在 爱丽丝 离职 后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找 一个 身高 超过 180 厘米 的 人	找 一个 身高 超过 180 厘米 的 人	找 一个 身高 超过 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
谁 至少 有 两个 朋友	至少 有 两个 朋友	谁 至少 有 两个 朋友	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string >= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
正在 和 alice 一样 学习 同一 领域 的 学生	和 爱丽丝 在 同一个 领域 学习 的 学生	和 爱丽丝 研究 同一 领域 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 不 属于 布朗 大学 的 学生	寻找 不 属于 布朗 大学 的 学生	寻找 不 属于 布朗 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
查找 没有 结束 日期 为 2004 年 的 员工 的 关系 状态	查找 没有 2004 年 结束 日期 的 员工 的 关系 状态	为 没有 2004 年 结束 日期 的 员工 查找 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
查找 结束 日期 不是 2004 的 员工 的 性别	查找 结束 日期 不是 2004 年 的 员工 的 性别	找出 有 非 2004 年 截止 日期 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
当 爱丽丝 开始 工作 时 停止 工作 的 人	爱丽丝 开始 工作 时 停止 工作 的 人	当 爱丽丝 开始 工作 时 ， 人们 就 停止 工作 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 大于 或 等于 学生 爱丽丝 的 学生	查找 开始 日期 大于 或 等于 学生 alice 的 学生	查找 起始 日期 大于 或 等于 学生 alice 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 等于 或 大于 爱丽丝 出生日期 的 学生	查找 结束 日期 等于 或 大于 爱丽丝 生日 的 学生	查找 结束 日期 等于 或 大于 alice 的 生日 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 有 两个 以上 性别 的 人	找到 两个 以上 性别 的 人	寻找 拥有 两种 以上 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
哪个 学生 结束 日期 早于 2004 年	哪个 学生 的 毕业 日期 早于 2004 年	哪个 学生 的 毕业 日期 早于 2004 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 2004 年 没有 开始 的 工人 的 诞生 城市	一个 2004 年 没有 开始 工作 的 工人 的 出生 城市 是 什么 ？	一个 2004 年 才 开始 工作 的 工人 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 时 就 开始 上学 的 人	爱丽丝 出生 时 开始 上学 的 人	爱丽丝 出生 时 就 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 朋友 在 2004 年 没有 开始 工作 的 人	2004 年 没有 开始 工作 的 朋友	有 朋友 的 人 在 2004 年 没有 开始 工作	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
那些 在 2004 年 或 之前 停止 工作 的 人	2004 年 或 以前 停止 工作 的 人	在 2004 年 或 之前 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 爱丽丝 出生 的 朋友	爱丽丝 的 朋友 出生 在 哪个 城市	爱丽斯 的 朋友 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
找到 所有 单身 且 当前 在线 的 人	查找 所有 单身 且 当前 在线 的 人	找到 所有 的 单身 人士 ， 目前 在线	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
在 爱丽丝 的 生日 前 完成 的 学生	在 爱丽丝 生日 前 完成学业 的 学生	学生 们 在 爱丽丝 的 生日 之前 完成	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 城市 是 爱丽丝 或 鲍勃 出生 的	爱丽丝 和 鲍勃 出生 在 哪个 城市	爱丽丝 或 鲍勃 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
与 2004 年 以后 开始 的 员工 成为 朋友 的 人	与 2004 年 以后 开始 工作 的 员工 交朋友 的 人	与 2004 年 以后 入职 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
所有 出生 的 员工 在 哪里 都 没有 受雇 于 麦肯锡	所有 不是 麦肯锡 雇佣 的 员工 出生 在 哪里 ？	所有 未 被 麦肯锡 聘用 的 雇员 出生 在 哪里	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 出生 时 或 之后 停止 上学 的 人	爱丽丝 出生 时 或 之后 辍学 的 人	爱丽丝 出生 后 就 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 出生日期	爱丽丝 的 生日 是 几号	爱丽丝 的 生日 是 什么 时候	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthdate ) ) )
2004 年 出生 的 单身 人士	2004 年 出生 的 单身 人士	2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
在 2004 年 没有 开始 的 员工 朋友	2004 年 没有 开始 工作 的 员工 的 朋友	2004 年 还 没有 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
结束 日期 不 在 学生 爱丽丝 结束 日期 之后 的 学生	结束 日期 不 在 学生 alice 结束 日期 之后 的 学生	结束 日期 未 超过 学生 alice 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 的 最后 一天 或 之前 找到 员工	在 Alice 的 最后 一天 或 之前 找到 员工	寻找 在 alice 的 最后 一天 或 之前 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 计算机科学 专业 的 学生 身高 180 厘米	哪个 计算机系 的 学生 身高 180 厘米	哪些 计算机科学 专业 的 学生 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) )
谁 在 学习 计算机科学 以外 的 东西	他 在 学习 计算机科学 以外 的 东西	谁 在 学习 计算机科学 以外 的 东西	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 多少 男性 或 女性	有 多少 男 或 女	有 多少 男性 或 女性	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ) )
谁 是 员工 的 朋友 ， 其 结束 日期 是 2004 年 之前	谁 是 结束 日期 在 2004 年 之前 的 员工 的 朋友	在 2004 年 之前 离职 的 员工 的 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 登录 并 出生 在 纽约	什么 人 登录 并 出生 在 纽约	什么 人 登录 并 出生 在 纽约	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 是 在线 人 的 朋友	谁 是 网上 人 的 朋友	谁 是 网友 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
爱丽丝 从 2004 年 开始 做 了 什么 工作	艾丽斯 2004 年 开始 做 什么 工作	爱丽丝 2004 年 开始 做 什么 工作	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string job_title ) ) )
找到 员工 从 2004 年 开始	从 2004 年前 开始 寻找 员工	寻找 2004 年 以前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 员工 的 朋友 ， 他们 的 结束 日期 不是 2004 年	与 结束 日期 不是 2004 年 的 员工 交朋友 的 人	哪些 员工 的 离职 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
男性 朋友	男性 朋友	男性 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ) )
一个 或 两个 人 的 性别 是 什么	一两个 人 的 性别 是 什么	一个 或 两个 个体 的 性别 是 什么	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 最 接近 当天 雇用 的 员工 alice 辞掉 了 工作	找到 离 爱丽丝 辞职 那天 最近 的 雇员	找出 爱丽丝 离职 当天 最近 被 雇佣 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 开始 日期 早于 2004 年 的 学生 的 性别	找出 开始 日期 早于 2004 年 的 学生 的 性别	找出 开始 上课 日期 早于 2004 年 的 学生 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 结束 日期 不是 2004 年 的 学生 朋友	找 一些 和 学生 交朋友 的 人 ， 他们 的 截止 日期 不是 2004 年	找 一些 学生 的 朋友 ， 他们 的 结业 日期 不是 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 身高 180 厘米 的 人 的 关系 状态	找到 身高 180 厘米 的 人 的 关系 状态	寻找 身高 180 厘米 的 人 的 恋爱 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
在 2004 年 之后 的 最后 一天 找到 学生	找到 2004 年 后 最后 一天 的 学生	寻找 2004 年 后 的 最后 一天 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之后 ， 哪些 性别 的 员工 开始 了	2004 年 以后 哪个 性别 的 员工 开始 工作	2004 年 后 ， 哪个 性别 的 员工 开始 增多	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
计算机科学 学生 什么 时候 完成	计算机科学 的 学生 爱丽丝 什么 时候 毕业 的	学 计算机科学 的 学生 爱丽丝 什么 时候 毕业 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_end_date ) ) )
学生 的 结束 日期 与 学生 爱丽丝 相同	什么 学生 的 结束 日期 比 学生 爱丽丝 晚	什么 学生 有 一个 结束 日期 ， 是 相同 的 晚于 学生 爱丽丝	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 单身 男性	谁 是 单身 男性	谁 是 单身 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
哪些 员工 不迟于 爱丽丝 开始 上学 的 那天 开始	哪位 员工 最迟在 爱丽丝 上学 那天 就 开始 了	哪些 员工 上班 不晚 于 爱丽丝 上学 的 那天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 的 第一天 或 之后 找到 员工	寻找 在 爱丽丝 第一天 或 之后 开始 工作 的 员工	寻找 在 alice 的 第一天 或 之后 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
那些 在 爱丽丝 同时 或 之前 停止 上学 的 人	在 同一时间 或 爱丽丝 之前 停学 的 人	与 爱丽丝 同时 或 在 她 之前 辍学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
人比 阿 丽斯 短	比 爱丽丝 矮 的 人	比 爱丽丝 矮 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
在 学生 爱丽丝 开始 的 那天 或 之前 开始 的 工人	在 学生 爱丽丝 开始 上学 当天 或 之前 开始 工作 的 工人	在 爱丽丝 上学 那天 或 之前 开始 工作 的 工人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 人 和 爱丽丝 有 同样 的 性别	什么 人 和 爱丽丝 有 相同 的 性别	什么 人 与 爱丽丝 的 性别 相同	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.getProperty en.person.alice ( string gender ) ) ) )
学生 的 结束 日期 是 员工 alice 或 更 晚 的 开始 日期	哪些 学生 的 结束 日期 是 员工 alice 或 更 晚 的 开始 日期	什么 学生 有 一个 结束 日期 ， 这是 开始 日期 的 员工 爱丽丝 或 更 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 麦肯锡 工作 ， 身高 180 厘米	他 在 麦肯锡 工作 ， 身高 180 厘米	谁 在 麦肯锡 工作 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string employer ) ( string = ) en.company.mckinsey ) )
哪个 学生 不迟于 爱丽丝 的 开始 日期 结束	哪个 学生 不迟于 爱丽丝 的 开始 日期 结束	哪个 学生 不迟于 爱丽丝 的 开始 日期 结束	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 爱丽丝 一起 或 之后 加入 学习 的 人	跟 爱丽丝 一起 或 跟 爱丽丝 一起 学习 的 人	跟 爱丽丝 一起 或 跟 爱丽丝 一起 参加 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 不是 在 布朗 学习	不 在 布朗 学习 的 学生	不 在 布朗 大学 学习 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪些 学生 在 2004 年 之前 开始	2004 年 以前 开始 的 学生	哪些 学生 在 2004 年 以前 入学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 的 朋友 关系 状态	爱丽丝 的 朋友 关系 状况	爱丽丝 的 朋友 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ) )
爱丽丝 出生 后 开始 工作 的 人	爱丽丝 出生 后 就 开始 工作 的 人	爱丽丝 出生 后 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
开始 日期 早于 2004 年 的 员工 的 关系 状态 是 什么	开始 日期 早于 2004 年 的 员工 的 关系 状况	开始 日期 早于 2004 年 的 雇员 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 学生 在 爱丽丝 开始 前 结束	在 爱丽丝 开始 之前 结束 的 学生	一个 学生 在 爱丽丝 开始 之前 结束 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 们 的 最后 一天 是 爱丽丝 最后 一天 的 同一天	哪位 学生 的 最后 一天 和 爱丽丝 的 最后 一天 差不多 是 同一天	哪些 学生 的 最后 一天 和 爱丽丝 的 最后 一天 是 同一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 在 爱丽丝 的 生日 那天 开始 了	员工 们 在 爱丽丝 生日 那天 的 开始	员工 们 在 爱丽丝 的 生日 那天 开始 了 什么	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 或 之后 开始 的 员工 朋友	2004 年 或 之后 开始 工作 的 员工 的 朋友	2004 年 或 以后 开始 工作 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 2004 年 没有 辞职 的 员工 的 朋友	他们 是 2004 年 没有 辞职 的 员工 的 朋友	谁 是 2004 年 没有 辞职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 城市 是 2004 年 之前 结束 工作 的 员工 的 出生地	在 2004 年 以前 结束 工作 的 雇员 的 出生地 是 哪个 城市	2004 年 以前 离职 的 员工 的 出生地 是 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 开始 研究 爱丽丝 的 出生日期	她 开始 研究 爱丽丝 的 生日	谁 开始 研究 爱丽丝 的 生日	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 爱丽丝 开始 上学 之前 ， 哪些 员工 有 结束 日期	艾丽斯 开学 前 哪些 员工 有 结束 日期 ？	哪些 员工 在 alice 上学 之前 就 有 了 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
性别 与 爱丽丝 相同 的 人	和 爱丽丝 性别 相同 的 人	和 爱丽丝 性别 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) en.person.alice ) ) )
爱丽丝 出生 后 的 人 开始 上学	爱丽丝 上学 后 出生 的 人	爱丽丝 上学 后 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) )
结束 日期 在 2004 年 之前 的 学生 的 关系 状况	2004 年 以前 结业 学生 的 人际关系 状况	二 、 2004 年 以前 学生 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 登录 的 是 什么 人 并且 有 生日	什么 人 登录 并 在 2004 年 有 生日	什么 人 在 2004 年 登录 并 有 生日	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string logged_in ) ) )
找到 最后 一天 是 爱丽丝 第一天 之前 或 同一天 的 学生	找到 最后 一天 在 爱丽丝 第一天 之前 或 同一天 的 学生	找 一个 学生 ， 他 的 最后 一天 和 爱丽丝 的 第一天 是 同一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 之后 开始 的 员工	从 爱丽丝 开始 的 员工	从 alice 开始 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 城市 是 180 厘米 高 的 人出 生于	哪个 城市 出生 的 人 身高 180 厘米	身高 180 厘米 的 人 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 最后 一天 的 学生 是 在 爱丽丝 的 最后 一天 或 之后	找到 最后 一天 在 爱丽丝 最后 一天 或 之后 的 学生	找到 学生 与 最后 一天 是 在 爱丽丝 的 最后 一天 或 之后	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 朋友 在 2004 年 之前 完成	2004 年前 完成 的 员工 之友	员工 之友 在 2004 年 以前 完成	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
目前 在线 的 人 是 单身 人士	目前 在线 的 单身 人士	目前 在线 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
找 我 一个 2004 年 出生 在 纽约 的 人	给 我 找 一个 2004 年 出生 在 纽约 的 人	给 我 找 一个 2004 年 出生 在 纽约 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string birthplace ) ( string = ) en.city.new_york ) )
谁 出 生于 爱丽丝 的 开始 日期	她 出生 在 爱丽丝 的 生日	谁 是 在 爱丽丝 出生 的 那 一天 出生 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) )
在 2004 年 或 之前 的 最后 一天 找到 员工	查找 最后 一天 在 2004 年 或 之前 的 员工	查找 2004 年 或 以前 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 同一天 开始 工作 的 员工 爱丽丝 诞生 了	爱丽丝 出生 当天 就 开始 工作 的 员工	爱丽丝 出生 当天 就 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
比 2004 年 晚 开始 的 学生	2004 年 以后 入学 的 学生	2004 年 以后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 2004 年 之前 或 2010 年 之前 开始 上学 的 人	2004 年 或 2010 年 以前 开始 上学 的 人	在 2004 年 或 2010 年 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 身高 180 厘米 的 人 的 出生日期	身高 180 厘米 的 人 的 生日 是 几号	身高 180 厘米 的 人 的 出生日期 是 什么	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 在 爱丽丝 结束 时 或 之后 开始	员工 在 Alice 完成 后 开始 工作	员工 在 alice 完成 工作 后 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 共同 朋友	爱丽丝 的 共同 朋友	爱丽丝 的 共同 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
在 2004 年 或 之前 出生 的 人	2004 年 或 之前 出生 的 人	2004 年 或 以前 出生 的 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
谁 的 朋友 的 结束 日期 是 在 2004 年 之前	他 有 朋友 的 截止 日期 在 2004 年 之前	谁 有 朋友 的 分手 日期 是 在 2004 年 之前	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
有 两个 或 两个 以下 朋友 的 人	有 两个 或 更少 朋友 的 人	有 两个 或 更少 朋友 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string <= ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
第一次 加入 他 的 学习 的 人	第一次 参加 学习 的 人	第一个 加入 他 的 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 不是 2004 年 的 出生 城市 学生	结束 日期 不是 2004 年 的 学生 出生 城市	2004 年 未 毕业 学生 的 出生 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
没有 受雇 于 麦肯锡 的 员工 的 出生 城市 是 什么 ？	非 麦肯锡 雇员 的 出生 城市 是 什么 ？	未 被 麦肯锡 雇佣 的 雇员 出生 在 哪些 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 或 之后 辞职 的 人 的 关系 状况 如何 ？	2004 年 或 之后 辞职 的 人 的 关系 状况 如何	在 2004 年 或 之后 辞职 的 人 的 感情 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 完成学业 的 日期 或 之后 注册 的 人	在 爱丽丝 完成学业 之日 或 之后 注册 的 人	在 爱丽丝 完成学业 当日 或 之后 登记 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 之前 退出 的 雇员 的 出生地	2004 年 及 以前 离职 员工 出生地	2004 年 或 以前 离职 员工 的 出生地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 2004 年 后 结束	哪个 学生 在 2004 年 后 毕业	哪个 学生 在 2004 年 后 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
历史 或 计算机科学	历史 或 计算机科学	历史 或 计算机科学	( call SW.listValue ( call SW.concat en.field.computer_science en.field.history ) )
员工 在 2004 年 或 之后 同时 完成	2004 年 以前 或 之后 完成 同期 工作 的 员工	2004 年 或 以后 完成 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 的 朋友 ， 那 就是 单身	谁 是 爱丽丝 的 朋友 ？ 单身	爱丽丝 的 单身 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
目前 在线 的 人 的 性别	当前 在线 用户 的 性别	当前 在线 用户 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string logged_in ) ) ) )
2004 年 未 完成 学生 的 关系 状况	2004 年 未 完成学业 学生 的 人际关系 状况	2004 年 未 结业 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
身高 180 厘米 且 与 爱丽丝 有 关系 的 人	180 厘米 高 的 人 和 爱丽丝 有 关系	身高 180 厘米 ， 和 爱丽丝 在 一起 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) en.person.alice ) )
出生 在 纽约 的 单身 人士	在 纽约 出生 的 单身 人士	在 纽约 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthplace ) ( string = ) en.city.new_york ) )
找到 与 爱丽丝 成为 朋友 的 人	找 一些 和 爱丽丝 是 朋友 的 人	找 一些 和 爱丽丝 是 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
在 爱丽丝 完成 之前 加入 他们 研究 的 人	在 爱丽丝 完成学业 之前 参加 学习 的 人	在 alice 完成 之前 加入 他们 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
哪个 学生 开始 爱丽丝 的 生日	哪个 学生 在 爱丽丝 生日 那天 开始 的	哪个 学生 是 在 爱丽丝 生日 那天 开始 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 或 之后 出生 的 学生 是 哪些 城市	2004 年 出生 的 学生 在 哪些 城市 出生	哪些 城市 的 学生 在 2004 年 以前 或 2004 年 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
爱丽丝 上学 或 之前 开始 工作 的 人	爱丽丝 上学 或 以前 开始 工作 的 人	那些 在 alice 上学 之前 就 开始 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
最 受欢迎 的 出生地	最 受欢迎 的 出生地	最 受欢迎 的 诞生地	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string birthplace ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 2004 年 结束 日期 或 之后 的 员工 朋友	查找 2004 年 结束 日期 或 更 高 日期 的 员工 的 朋友	查找 2004 年 或 以后 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 所有 不 超过 两份 工作 的 员工	找到 所有 不 超过 两份 工作 的 员工	找出 所有 工作 不 超过 两份 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
员工 在 这里 的 时间 少于 爱丽丝	什么 员工 来 这里 的 时间 比 爱丽丝 少	什么 员工 来 这里 的 时间 比 爱丽丝 还少	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 员工 和 爱丽丝 有 同样 的 老板	哪个 雇员 的 老板 和 爱丽丝 一样	哪个 雇员 的 老板 和 爱丽斯 一样	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employer ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪些 学生 的 专业 不足 2 个	哪个 学生 的 专业 少于 2 个	哪些 学生 的 专业 少于 两个	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 停止 工作 的 那天 或 之前 开始 上学 的 人	爱丽丝 停止 工作 当天 或 之前 开始 上学 的 人	在 爱丽丝 停止 工作 当天 或 之前 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 后 完成 教育 的 人 的 出生地	2004 年 后 完成 教育 的 出生地	2004 年 以后 完成 教育 的 出生地点	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
什么 人有 一个 朋友 谁 是 棕色 大学 以外 的 大学 的 学生	谁 的 朋友 是 布朗 大学 以外 的 一所 大学 的 学生	除了 布朗 大学 ， 谁 还 会 有 在 其他 大学 上学 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 性别 是 爱丽丝 和 鲍勃	哪个 性别 是 爱丽丝 和 鲍勃	爱丽丝 和 鲍勃 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
查找 开始 日期 早于 2004 年 的 员工	查找 开始 日期 早于 2004 年 的 员工	寻找 那些 工作 开始 日期 早于 2004 年 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 生日 那些 身高 180 厘米 的 人	找个 有 爱丽丝 生日 的 人 ， 身高 180 厘米	找 一个 180 厘米 高 的 和 爱丽丝 生日 相同 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( call SW.reverse ( string birthdate ) ) ( string = ) en.person.alice ) )
与 新 员工 成为 朋友 的 人 将 在 2004 年 之前 或 之后 开始	在 2004 年 之前 或 之后 与 新 员工 成为 朋友 的 人	在 2004 年 之前 或 之后 与 新 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 开始 工作 的 同一天 ， 员工 离开 公司 的 是 什么	哪个 雇员 在 爱丽丝 开始 工作 的 同一天 离开 公司	哪位 员工 在 爱丽斯 开始 工作 的 同一天 离开 公司	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
学生 的 开始 日期 是 学生 爱丽丝 的 结束 日期	开始 日期 为 学生 alice 结束 日期 的 学生	学生 的 开始 日期 是 学生 alice 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 的 结束 日期 是 2004 年 还是 2010 年	哪些 员工 的 结束 日期 是 2004 年 或 2010 年	什么 员工 的 离职 日期 不是 2004 年 就是 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 哪个 城市 是 180 厘米 高 的 人 出生	这个 180 厘米 高 的 人 是 在 哪个 城市 出生 的	这个 身高 180 厘米 的 人 出生 在 哪个 城市	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
持有 的 工作岗位 数量	任职 人数	持有 职位 数目	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.job_title ) ( string ! type ) ) ) )
开学 日期 小于 2004 年 和 2010 年 的 学生	开始 日期 小于 2004 年 和 2010 年 的 学生	入学 日期 少于 2004 年 及 2010 年 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 出生 的 地方	爱丽丝 出生 的 地方	爱丽丝 出生 的 地方	( call SW.listValue ( call SW.getProperty en.person.alice ( string birthplace ) ) )
找到 我 每个 人 至少 和 爱丽丝 一样 高	给 我 找个 至少 和 爱丽丝 一样 高 的 人	给 我 找个 至少 和 爱丽丝 一样 高 的	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string height ) ) ) ) )
员工 爱丽丝 的 结束 日期 是 什么 时候	雇员 爱丽丝 的 结束 日期 是 什么 时候	员工 alice 的 离职 日期 是 什么 时候	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
当 爱丽丝 开始 时 ， 哪些 学生 完成 了 学业	爱丽丝 开学 时 ， 哪些 学生 完成 了 学业	爱丽丝 开始 上学时 ， 哪些 学生 已经 完成学业 了	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
开始 日期 小于 员工 爱丽丝 结束 日期 的 学生	开始 日期 小于 员工 alice 结束 日期 的 学生	开始 日期 小于 雇员 alice 结束 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
这个 人 是 男性 还是 女性	这个 人 是 男 的 还是 女 的	这个 人 是 男性 还是 女性	( call SW.listValue ( call SW.concat en.gender.male en.gender.female ) )
在 2004 年 或 之前 开始 的 学生	2004 年 或 之前 开始 学习 的 学生	2004 年 或 以前 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 在 大多数 大学 学习	至少 在 多所 大学 学习	谁 至少 上 过 几所 大学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
从 爱丽丝 的 最后 一天 开始 的 员工	在 爱丽丝 的 最后 一天 开始 工作 的 员工	从 alice 的 最后 一天 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出 生于 2004 年 的 人 ， 身高 180 厘米	2004 年 出生 ， 身高 180 厘米	2004 年 出生 的 人 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 是 软件 工程师 还是 项目经理	什么样 的 员工 不是 软件 工程师 就是 项目经理	什么 雇员 不是 软件 工程师 就是 程序 经理	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.concat en.job_title.software_engineer en.job_title.program_manager ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
查找 结束 日期 不是 2004 的 学生 的 关系 状态	查找 结束 日期 不是 2004 年 的 学生 的 关系 状态	为 那些 结束 日期 不是 2004 年 的 学生 查找 关系 状态	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
在 爱丽丝 的 生日 之后 离开 的 学生	爱丽丝 生日 后 离开 的 学生	爱丽丝 生日 后 离开 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
爱丽丝 在 2004 年 的 哪一天 开始 工作	艾丽斯 2004 年 什么 时候 开始 工作 的	2004 年 爱丽丝 是 哪一天 开始 工作 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string employment_start_date ) ) )
哪个 学生 最近 开始 上学	哪些 学生 最近 开始 上学	哪些 学生 最 晚 开学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 爱丽丝 是 朋友 的 男性 性别 的 人	找 一个 和 爱丽丝 交朋友 的 男朋友	找 一些 爱丽丝 的 朋友 ， 他们 的 性别 是 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string = ) en.gender.male ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
除了 计算机科学 以外 ， 研究 任何人 的 关系 状况 如何 ？	除了 计算机科学 以外 ， 人们 学习 其他 学科 的 关系 状况 如何 ？	学习 计算机科学 以外 的 任何 学科 的 人 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
只有 一个 人 的 关系 状态	一人 关系 状态	只有 一个 人 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
与 那些 在 2004 年 之前 完成学业 的 人 成为 朋友 的 人	与 2004 年 以前 完成学业 的 人 交朋友 的 人	与 在 2004 年 以前 完成学业 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
棕色 大学 或 ucla	布朗 大学 或 加州大学洛杉矶分校	不是 布朗 大学 就是 加州大学洛杉矶分校	( call SW.listValue ( call SW.concat en.university.brown en.university.ucla ) )
找到 180 厘米 高 的 人 ， 是 一名 软件 工程师	找 一个 180 厘米 高 的 软件 工程师	找 一个 身高 180 厘米 的 软件 工程师	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string job_title ) ( string = ) en.job_title.software_engineer ) )
在 爱丽丝 之后 开始 的 学生	从 爱丽丝 开始 的 学生	在 爱丽丝 之后 开始 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 朋友 但 有 工作 但 没有 软件 工程师 的 人	有 工作 但 没有 软件 工程师 的 朋友 的 人	有 工作 的 朋友 但 不是 软件 工程师 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
员工 最后 一天 不早 于 爱丽丝 的 第一天	哪位 员工 上 一天 不早 于 爱丽丝 的 第一天	哪些 员工 的 离职 日期 不早 于 爱丽斯 入职 的 第一天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 短于 181 厘米	身高 不足 181 厘米	谁 比 181 厘米 矮	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 单身 人士 的 性别	找出 单身 者 的 性别	找出 单身 人士 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ) )
命名 一名 学生 ， 不迟于 爱丽丝 毕业	说出 一个 不迟于 艾丽斯 毕业 的 学生 的 名字	说出 一个 不迟于 爱丽丝 毕业 的 学生 的 名字	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 拥有 最少 大学 的 学生	找到 大学 最少 的 学生	寻找 拥有 最少 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countSuperlative ( var s ) ( string min ) ( string university ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
人们 在 2004 年 到 2010 年 之间 的 生日	什么 人 在 2004 年 到 2010 年间 有 生日 ？	在 2004 年 到 2010 年 之间 有 多少 人 的 生日 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
将 2004 年 出生 的 人 称为 180 厘米 高	说出 2004 年 出生 的 180 厘米 高 的 人 的 名字	说出 一个 出生 在 2004 年 ， 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
员工 的 开始 日期 不迟于 学生 爱丽丝 的 开始 日期	什么样 的 员工 不迟于 学生 爱丽丝 的 开始 日期	什么 员工 的 上班 日期 不晚 于 学生 爱丽丝 的 上班 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
什么 是 最 常见 的 关系 状态	什么 是 最 常见 的 关系 状态	最 常见 的 感情 状态 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string relationship_status ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
从 2004 年 以前 开始 的 员工 性别	2004 年 以前 开始 的 雇员 性别	2004 年 以前 入职 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 哪个 朋友 单身	爱丽丝 的 哪个 朋友 是 单身	爱丽丝 的 哪个 朋友 是 单身	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
那些 在 2004 年 之后 开始 工作 的 人 的 朋友	与 2004 年 后 开始 工作 的 人 交朋友 的 人	与 2004 年 后 开始 工作 的 人 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
2004 年 之前 开始 的 员工 的 出生地	2004 年 以前 开始 工作 的 员工 的 出生地	2004 年 以前 入职 员工 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
一个 员工 在 爱丽丝 结束 后 开始	爱丽丝 死后 开始 工作 的 雇员	一个 雇员 在 alice 结束 后 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 身高 180 厘米 的 人 和 他们 的 朋友	找到 身高 180 厘米 的 人 和 他们 的 朋友	找到 身高 180 厘米 的 人 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
找到 开始 日期 晚于 2004 年 的 学生 和 他们 的 朋友	寻找 2004 年 以后 开始 约会 的 学生 和 他们 的 朋友	找 那些 开学 日期 晚于 2004 年 的 学生 和 他们 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 在 历史 计算机科学 领域 有 哪些 学科	学生 在 计算机 历史 科学 方面 的 研究 领域 是 什么	学生 们 在 历史 的 计算机科学 中有 他们 的 研究 领域	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string = ) ( call SW.concat en.field.computer_science en.field.history ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
那些 在 爱丽丝 开始 之前 或 同时 完成 的 学生	在 爱丽丝 开始 之前 或 同时 完成 的 学生	在 爱丽丝 开始 之前 或 同时 完成 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 一名 工人 ， 在 员工 爱丽丝 离开 之前 或 之前 离开	谁 是 雇员 爱丽丝 离开 当天 或 之前 离开 的 工人	在 爱丽丝 离职 当天 或 之前 离职 的 员工 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 一个 出生地 与 高度 为 180 厘米 的 人 相同 的 人	找 出生地 和 身高 180 厘米 的 人 一样 的 人	找 一个 出生地 和 身高 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
谁 是 爱丽丝 的 单身 朋友	谁 是 爱丽丝 的 单身 朋友	爱丽丝 的 单身 朋友 是 谁	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string relationship_status ) ( string = ) en.relationship_status.single ) )
谁 有 两个 或 更 多 的 关系 状态	有 两个 或 多个 关系 状态 的 人	谁 有 两个 或 两个 以上 的 关系 状态	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string >= ) ( number 2 ) ) )
什么 是 2004 年 以后 开始 的 学生 的 性别	2004 年 以后 开始 的 学生 的 性别 是 什么	2004 年 后 入学 的 学生 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
雇用 至少 两名 雇员 的 雇主	至少 有 两名 雇员 的 雇主	至少 有 两名 雇员 的 雇主	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 学生 和 学生 爱丽丝 同一天 开始	哪个 学生 和 学生 爱丽丝 在 同一天 开始	哪个 学生 和 爱丽丝 是 同一天 开学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 爱丽丝 的 研究 领域	爱丽丝 的 研究 领域 是 什么	爱丽丝 的 研究 领域 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ) )
哪个 学生 的 开始 日期 最早	哪个 学生 的 起始 日期 最早	哪个 学生 的 开学 日期 最早	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string min ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 mckinsey 未 聘用 的 员工 的 关系 状态	了解 非 麦肯锡 雇员 的 关系 状况	了解 未 被 麦肯锡 雇佣 的 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
哪个 学生 在 员工 爱丽丝 的 同时 辞职	哪个 学生 同时 辞职	哪个 学生 和 爱丽丝 同时 辞职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 2004 年 之前 加入 学业 的 人 的 朋友	找到 2004 年 以前 参加 研究 的 人 的 朋友	找到 那些 在 2004 年 之前 加入 他们 研究 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 少于 两人 的 雇员	少于 两个 雇主 的 雇员	少于 两个 雇主 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string employer ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
2004 年 在 纽约 出生 的 人	2004 年 在 纽约 出生 的 人	二 00 四年 在 纽约 出生 者	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
找到 起始 日期 不 等于 2004 年 的 雇员 的 出生地 城市	查找 开始 日期 不 等于 2004 年 的 员工 的 出生地 城市	找出 出生日期 不 等于 2004 年 的 雇员 的 出生地	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
这个 领域 有 多少 学生	这个 领域 有 多少 学生	这个 领域 有 多少 学生	( call SW.listValue ( call .size ( call SW.getProperty ( call SW.singleton en.field ) ( string ! type ) ) ) )
雇佣 爱丽丝 后 ， 该 员工 开始 了	哪个 雇员 是 在 爱丽丝 被 雇佣 后 开始 工作 的	爱丽斯 被 聘用 后 ， 哪个 雇员 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
不 学习 计算机科学 的 人 的 朋友	不 学 计算机 的 朋友	不 学习 计算机科学 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 和 爱丽丝 有 同样 的 工作	她 和 爱丽丝 有 同样 的 工作	谁 和 爱丽丝 做 同样 的 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 的 研究 领域 于 2004 年 结束	艾丽斯 的 研究 领域 于 2004 年 结束	爱丽丝 的 研究 领域 于 2004 年 结束	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ( string = ) ( date 2004 -1 -1 ) ) ( string field_of_study ) ) )
那个 计算机科学 专业 学生 的 日期 开始 了	计算机科学 系 的 学生 爱丽丝 从 哪一天 开始 的	计算机科学 专业 的 学生 爱丽丝 是 哪天 开始 上课 的	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string field_of_study ) ( string = ) en.field.computer_science ) ( string education_start_date ) ) )
不是 软件 工程师 的 员工	不是 软件 工程师 的 雇员	不是 软件 工程师 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
超过 两个 人 的 性别 是 什么	两个 以上 的 人 要求 什么 性别	什么 性别 被 两个 人 以上 要求	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string > ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
哪些 人 是 2004 年 没有 入学 的 学生 的 朋友	哪些 人 和 2004 年 没有 开始 的 学生 是 朋友 ？	哪些 人 是 2004 年 毕业 的 学生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
找到 不是 男性 的 人	找到 不是 男性 的 人	寻找 非 男性 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string ! = ) en.gender.male ) )
公司 雇用 的 人员 身高 180 厘米	什么 公司 雇用 身高 180 厘米 的 人	什么 公司 会 雇佣 身高 180 厘米 的 人 啊	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.company ) ( string ! type ) ) ( call SW.reverse ( string employer ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
单身 并于 2004 年 出生 的 人	2004 年 出生 的 单身 人士	2004 年 出生 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) )
谁 登录 以及 登录	登录 者 和 登录 者	谁 登录 和 谁 登录 了	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string logged_in ) ) )
谁 是 2004 年 没有 开始 工作 的 人 的 朋友	谁 是 2004 年 没 开始 工作 的 人 的 朋友 ？	谁 是 2004 年 没有 开始 工作 的 人 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 从 2004 年 或 之后 开始	2004 年 或 之后 入学 的 学生	2004 年 或 以后 入学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 性别 低于 两人 的 人	找到 性别 少于 两个 人 的 人	找 一个 性别 少于 两个 人 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
180 厘米 高 的 人	身高 180 厘米 的 人	180 厘米 高 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
最后 加入 这项 研究 的 人	上次 参加 研究 的 人	最后 加入 研究 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.superlative ( var s ) ( string max ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 身高 180 厘米 且 关系 状态 为 单身 的 人	找 一个 身高 180 厘米 ， 单身 的 人	找 一个 身高 180 厘米 的 单身 人士	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
学生 的 出生地 不是 棕色 的	非 布朗 大学 学生 的 出生地	出生地 不 在 布朗 大学	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
找到 单身 的 男性	寻找 单身 男性	寻找 单身 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string gender ) ( string = ) en.gender.male ) )
结束 日期 不 在 员工 爱丽丝 结束 日期 之后 的 学生	结束 日期 不 在 雇员 alice 结束 日期 之后 的 学生	终止 日期 未 超过 雇员 爱丽丝 的 终止 日期 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 爱丽丝 的 朋友	她 是 爱丽丝 唯一 的 朋友	谁 是 爱丽丝 唯一 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string friend ) ( string = ) en.person.alice ) )
在 爱丽丝 的 出生日期 或 之后 开始 上学 的 人	在 爱丽丝 生日 当天 或 之后 开始 上学 的 人	在 爱丽丝 生日 当天 或 之后 开始 上学 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2005 年 或 之后 辞职 的 员工	2005 年 或 以后 离职 的 员工	2005 年 或 以后 辞职 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
任何 出生 在 纽约 的 男性	任何 出生 在 纽约 的 男性	任何 出生 在 纽约 的 男性	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( string gender ) ( string = ) en.gender.male ) )
哪个 员工 在 2004 年 或 之后 结束	哪个 员工 在 2004 年 或 更 晚些时候 离职	哪位 员工 在 2004 年 或 之后 离职	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 大学 不是 棕色 大学 的 学生 的 关系 状况	了解 非 布朗 大学 学生 的 人际关系 状况	了解 非 布朗 大学 学生 的 恋爱 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string university ) ( string ! = ) en.university.brown ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
2004 年 没有 开始 的 员工 的 关系 状况	2004 年 未入 职 员工 的 关系 状况	2004 年 未 开始 工作 的 员工 的 关系 状况	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
在 爱丽丝 开始 工作 之前 停止 工作 的 人	在 爱丽丝 开始 工作 之前 停止 工作 的 人	在 爱丽丝 开始 工作 之前 就 停止 工作 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 180 厘米 高 的 爱丽丝 的 朋友	找个 180 厘米 高 的 爱丽丝 的 朋友	找 一个 180 厘米 高 的 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
找到 一个 员工 ， 其 结束 日期 晚于 学生 爱丽丝 的 结束 日期	给 我 找 一个 结束 日期 晚于 学生 爱丽丝 的 结束 日期 的 雇员	给 我 找 一个 员工 ， 他 的 离职 日期 比 学生 alice 的 离职 日期 晚	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 alice 在 纽约 出生 的 朋友	找到 爱丽丝 在 纽约 出生 的 朋友	找到 爱丽丝 在 纽约 出生 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthplace ) ( string = ) en.city.new_york ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
哪些 学生 在 2004 年 以外 开学	哪些 学生 在 2004 年 以外 的 年份 开始 学习	哪些 学生 是 在 2004 年 以外 的 年份 入学 的	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 或 之后 停止 工作 的 人 的 关系 状况 如何 ？	2004 年 或 以后 停止 工作 的 人 的 关系 状况 如何	在 2004 年 或 以后 停止 工作 的 人 的 关系 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
爱丽丝 的 朋友 ， 出 生于 2004 年	2004 年 出生 的 爱丽丝 的 朋友 们	爱丽丝 的 朋友 们 出 生于 2004 年	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( date 2004 -1 -1 ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
谁 是 180 厘米 或 更 高	身高 180 厘米 或 以上	谁 身高 180 厘米 或 以上	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string >= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
什么 是 爱丽丝 的 职称	爱丽丝 的 职称 是 什么	爱丽斯 的 工作 头衔 是 什么	( call SW.listValue ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) )
找到 第一天 在 爱丽丝 生日 之后 的 学生	找到 第一天 在 爱丽丝 生日 之后 的 学生	找 那些 第一天 是 在 爱丽丝 生日 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty en.person.alice ( string birthdate ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
谁 是 学生 同时 开始 或 在 爱丽丝 开始 之前	谁 是 在 同一时间 或 爱丽丝 开始 之前 开始 的 学生	和 爱丽丝 同时 开始 上课 或 在 爱丽丝 开始 上课 之前 开始 上课 的 学生 是 谁	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 从 2010 年 或 更 早 开始 的 员工	查找 2010 年 或 更 早 版本 的 员工	寻找 2010 年 或 更 早 开始 工作 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
哪个 人 不到 两个 朋友	有 不到 两个 朋友 的 人	哪些 人 的 朋友 少于 两个	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string < ) ( number 2 ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
找到 与 alice 相同 职位 的 员工	找 一个 和 爱丽丝 的 职位 相同 的 雇员	找 一个 和 alice 的 职位 相同 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string job_title ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
出 生于 2004 年 或 2010 年 的 人	2004 年 或 2010 年 出生 的 人	2004 年 或 2010 年 出生 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) )
2003 年 或 更 早 结束 学业 的 学生	2003 年 或 更 早 毕业 的 学生	2003 年 或 更 早 离校 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
有 两所 或 更少 大学 的 学生	有 两所 或 两 所以 下 大学 的 学生	拥有 两所 或 两 所以 下 大学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string university ) ( string <= ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 结束 日期 大于 2004 年 或 2010 年 的 学生	查找 结束 日期 大于 2004 或 2010 的 学生	查找 学生 的 结业 日期 大于 2004 年 或 2010 年	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
什么 是 最 常见 的 性别	什么 是 最 常见 的 性别	最 常见 的 性别 是 什么	( call SW.listValue ( call SW.countSuperlative ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( string max ) ( call SW.reverse ( string gender ) ) ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ) )
什么 是 2004 年 出生 的 学生 的 关系 状况	2004 年 出生 最多 的 学生 的 关系 状况	最多 2004 年 出生 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
哪些 人 是 爱丽丝 不是 朋友	哪些 人 不是 爱丽丝 的 朋友	哪些 人 不是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string ! = ) en.person.alice ) )
找到 我 在 布朗 大学 学习 的 所有 名叫 alice 的 员工 的 所有 结束 日期	帮 我 找到 所有 在 布朗 大学 学习 的 叫 爱丽丝 的 员工 的 所有 结束 日期	给 我 找出 所有 在 布朗 大学 学习 过 的 名叫 爱丽丝 的 员工 的 离职 日期	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
找到 身高 在 180cm200cm 之间 的 人	找到 身高 在 180cm200cm 之间 的 人	找到 身高 在 180 厘米 到 200 厘米 之间 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( number 180 en.cm ) ( number 200 en.cm ) ) ) ) )
发现 开始 约会 的 员工 性别 不迟于 2004 年	查找 开始 日期 不晚 于 2004 年 的 员工 的 性别	查找 开始 日期 不晚 于 2004 年 的 员工 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
什么 人 身高 最多 180 厘米	谁 的 身高 最多 180 厘米	什么 人 的 身高 不 超过 180 厘米	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
找到 学生 在 爱丽丝 的 最后 一天 之后 开始	找到 爱丽丝 最后 一天 之后 的 学生	找 学生 在 爱丽丝 的 最后 一天 之后 开始	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
与 180 厘米 高 的 人 有着 相同 的 关系	和 那个 180 厘米 高 的 人 有 同样 的 关系	谁 和 180 厘米 高 的 人 有 同样 的 关系	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 学生 只有 一个 学习 领域	什么 学生 只有 一个 学习 领域	什么 学生 只有 一个 领域 的 研究	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.countComparative ( var s ) ( string field_of_study ) ( string < ) ( number 2 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 2004 年 之前 出生 的 人	2004 年 以前 出生 的 人	2004 年 以前 出生 人士	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) )
谁 是 爱丽丝 或 鲍勃 的 朋友	谁 是 爱丽丝 或 鲍勃 的 朋友	谁 是 爱丽丝 或 鲍勃 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.concat en.person.alice en.person.bob ) ) )
谁 出 生于 2004 年 或 2010 年	2004 年 或 2010 年 出生 的	谁 出 生于 2004 年 或 2010 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string birthdate ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) )
人们 是 爱丽丝 朋友 的 朋友	是 爱丽丝 朋友 的 朋友	那些 是 爱丽丝 的 朋友 的 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ) )
与 180 厘米 高 的 人生 日 相同 的 人	和 180 厘米 高 的 人 有 同样 的 生日	谁 和 180 厘米 高 的 人 同一天 生日	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string birthdate ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
爱丽丝 开始 时 停止 上学 的 人	当 爱丽丝 开始 上学时 停止 上学 的 人	当 爱丽丝 开始 上学 的 时候 ， 人们 就 停止 了 上学	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
员工 结束 日期 早 于 爱丽丝 的 开始 日期	哪个 员工 的 结束 日期 早 于 爱丽丝 的 开始 日期	哪些 员工 的 离职 日期 早 于 爱丽斯 的 入职 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
所有 180 厘米 高 的 单打	所有 180 厘米 高 的 单打	所有 180 厘米 高 的 单打	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string relationship_status ) ( string = ) en.relationship_status.single ) ( string height ) ( string = ) ( number 180 en.cm ) ) )
出生 城市 的 学生 ， 其 结束 日期 至少 是 2004 年	结束 日期 至少 为 2004 年 的 学生 出生 城市	学生 出生 城市 ， 截止 日期 至少 为 2004 年	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
与 2004 年 没有 开始 的 员工 成为 朋友 的 人	与 2004 年 未 开始 工作 的 员工 交朋友 的 人	与 2004 年 开始 工作 的 员工 成为 朋友 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
找到 最后 一天 与 员工 在 学校 的 第一天 相匹配 的 员工	找到 最后 一天 和 爱丽丝 在 学校 的 第一天 相匹配 的 员工	找到 和 alice 第一天 上学 时间 相匹配 的 员工	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employment_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
身高 180 厘米 或 以下 的 人	身高 不 超过 180 厘米 的 人	身高 不 超过 180 厘米 的 人	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.ensureNumericProperty ( string height ) ) ( string <= ) ( call SW.ensureNumericEntity ( number 180 en.cm ) ) ) )
雇主 不是 麦肯锡 的 雇员 的 性别	雇主 不是 麦肯锡 的 员工 性别	雇主 不是 麦肯锡 的 雇员 的 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string employer ) ( string ! = ) en.company.mckinsey ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 2004 年 之前 开始 的 员工 的 朋友	谁 是 2004 年 以前 开始 工作 的 员工 的 朋友 ？	谁 是 2004 年 以前 入职 的 员工 的 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
谁 是 身高 180 厘米 的 人 ， 那 就是 爱丽丝 的 朋友	他 身高 180 厘米 ， 是 爱丽丝 的 朋友	谁 的 身高 是 180 厘米 ， 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string friend ) ( string = ) en.person.alice ) )
哪些 学生 在 2004 年 或 2010 年 毕业	哪些 学生 在 2004 年 或 2010 年 毕业	哪些 学生 在 2004 年 或 2010 年 毕业	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.concat ( date 2004 -1 -1 ) ( date 2010 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
同一天 毕业 的 学生 爱丽丝 开始 了 她 的 新 工作	爱丽丝 开始 新 工作 当天 毕业 的 学生	同一天 毕业 的 学生 爱丽丝 开始 了 她 的 新 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string = ) ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
学生 不 学习 计算机科学	不 学 计算机 的 学生	不 学习 计算机科学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string field_of_study ) ( string ! = ) en.field.computer_science ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
找到 棕色 大学 的 学生	寻找 布朗 大学 的 学生	寻找 布朗 大学 的 学生	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string university ) ) )
在 爱丽丝 辞职 后 开始 上学 的 学生	爱丽丝 辞职 后 开始 上学 的 学生	爱丽丝 辞职 后 开始 上学 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
除 软件 工程师 以外 的 员工 的 性别	软件 工程师 以外 的 员工 性别	软件 工程师 以外 的 员工 性别	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string job_title ) ( string ! = ) en.job_title.software_engineer ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
学生 的 开始 日期 是 学生 爱丽丝 的 结束 日期	开始 日期 在 学生 alice 结束 日期 之后 的 学生	开始 日期 在 学生 alice 结束 日期 之后 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string > ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 完成 的 学生 在 哪里 出生	2004 年 没有 毕业 的 学生 在 哪里 出生	2004 年 没有 完成学业 的 学生 在 哪里 出生	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.city ) ( string ! type ) ) ( call SW.reverse ( string birthplace ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_end_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
180 厘米 高 的 人 的 关系 是 什么 状态	180 厘米 高 的 人 的 关系 是 什么 状况	180 公分 高 的 人 之间 的 关系 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ) )
什么 是 不 早于 开始 的 学生 的 关系 状态	不早 于	不早 于 开学 的 学生 的 恋爱 状况 如何	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.relationship_status ) ( string ! type ) ) ( call SW.reverse ( string relationship_status ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
员工 的 开始 日期 与 学生 alice 或 更 高级别 相同	哪些 员工 的 开始 日期 与 学生 Alice 或 更 高 版本 相同	什么 员工 有 一个 开始 的 日期 是 相同 的 学生 爱丽丝 或 更 大	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
他于 2004 年 加入 ， 身高 180 厘米	2004 年 加入 ， 身高 180 厘米	谁 是 2004 年 加入 的 ， 身高 180 厘米	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string height ) ( string = ) ( number 180 en.cm ) ) ( string education_start_date ) ( string = ) ( date 2004 -1 -1 ) ) )
员工 与 爱丽丝 同时 开始 的 是 什么	什么 员工 和 爱丽丝 同时 开始	员工 们 和 爱丽丝 同时 开始 工作	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	谁 是 爱丽丝 的 朋友	( call SW.listValue ( call SW.filter ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) ( call SW.reverse ( string friend ) ) ( string = ) en.person.alice ) )
找到 有 三种 性别 的 人	找到 有 三种 性别 的 人	找到 有 三种 性别 的 人	( call SW.listValue ( call SW.countComparative ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string gender ) ( string > ) ( number 2 ) ) )
哪些 学生 开始 的 时间 不早 于 爱丽丝 开始 上学 的 那天	哪个 学生 在 爱丽丝 开学 前 就 开始 了	哪些 学生上课 的 时间 不早 于 爱丽丝 上学 的 那天	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_start_date ) ) ( string >= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
2004 年 没有 开始 的 学生 的 性别 是 什么	2004 年 未 入学 的 学生 的 性别 是 什么 ？	2004 年 没有 入学 的 学生 的 性别 是 什么	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.gender ) ( string ! type ) ) ( call SW.reverse ( string gender ) ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( string education_start_date ) ( string ! = ) ( date 2004 -1 -1 ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) ) )
学生 的 结束 日期 不迟于 爱丽丝 的 结束 日期	哪个 学生 的 结束 日期 不迟于 爱丽丝 的 结束 日期	哪个 学生 的 结束 日期 不晚 于 爱丽丝 的 结束 日期	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
在 爱丽丝 辞职 之前 毕业 的 学生	爱丽丝 辞职 前 毕业 的 学生	爱丽丝 辞职 前 毕业 的 学生	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string education_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_end_date ) ) ) ) ) ( call SW.domain ( string student ) ) ) ( string student ) ) )
结束 日期 在 员工 爱丽丝 开始 日期 之前 的 员工	结束 日期 早 于 员工 alice 开始 日期 的 员工	结束 日期 在 雇员 alice 开始 日期 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string employee ) ) ) ( string employment_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
爱丽丝 何时 停止 参加 布朗 大学	爱丽丝 什么 时候 停止 上 布朗 大学 了	爱丽丝 什么 时候 不再 上 布朗 大学 了	( call SW.listValue ( call SW.getProperty ( call SW.filter ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string university ) ( string = ) en.university.brown ) ( string education_end_date ) ) )
那些 在 2004 年 之后 辞职 的 人	2004 年 后 辞职 的 人	2004 年 后 辞职 的 人	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string > ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
在 alice 或 之前 找到 有 开始 日期 的 员工	查找 开始 日期 在 或 早于 Alice 的 员工	查找 在 alice 的 起始 日期 之前 或 之前 的 雇员	( call SW.listValue ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_start_date ) ) ( string <= ) ( call SW.ensureNumericEntity ( call SW.getProperty ( call SW.getProperty en.person.alice ( call SW.reverse ( string student ) ) ) ( string education_start_date ) ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) )
找到 2004 年 之前 工作 日期 的 员工 朋友	找到 2004 年 以前 最后 工作 日期 的 员工 朋友	寻找 2004 年 以前 最后 工作 日期 的 员工 朋友	( call SW.listValue ( call SW.filter ( call SW.getProperty ( call SW.singleton en.person ) ( string ! type ) ) ( string friend ) ( string = ) ( call SW.getProperty ( ( lambda s ( call SW.filter ( var s ) ( call SW.ensureNumericProperty ( string employment_end_date ) ) ( string < ) ( call SW.ensureNumericEntity ( date 2004 -1 -1 ) ) ) ) ( call SW.domain ( string employee ) ) ) ( string employee ) ) ) )
